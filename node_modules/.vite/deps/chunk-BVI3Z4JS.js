import {
  A,
  C,
  E,
  IEvents,
  concat,
  detect,
  esm_exports,
  f,
  formatJsonRpcError,
  formatJsonRpcRequest,
  formatJsonRpcResult,
  fromString,
  getBigIntRpcId,
  h,
  i,
  import_pino,
  isJsonRpcError,
  isJsonRpcRequest,
  isJsonRpcResponse,
  isJsonRpcResult,
  isLocalhostUrl,
  isWsUrl,
  k,
  o,
  parseConnectionError,
  payloadId,
  r,
  require_browser,
  require_cjs,
  require_cjs2,
  require_cjs3,
  require_elliptic,
  require_hash,
  require_lodash,
  safeJsonParse,
  safeJsonStringify,
  toString,
  y
} from "./chunk-BCOTOJN4.js";
import {
  require_bn,
  require_buffer
} from "./chunk-MBAHVU6N.js";
import {
  require_events
} from "./chunk-2YULO2GZ.js";
import {
  require_browser as require_browser2
} from "./chunk-OIYDSCA7.js";
import {
  __commonJS,
  __toESM
} from "./chunk-MMN2DTB3.js";

// node_modules/dayjs/dayjs.min.js
var require_dayjs_min = __commonJS({
  "node_modules/dayjs/dayjs.min.js"(exports, module) {
    !function(t2, e2) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e2() : "function" == typeof define && define.amd ? define(e2) : (t2 = "undefined" != typeof globalThis ? globalThis : t2 || self).dayjs = e2();
    }(exports, function() {
      "use strict";
      var t2 = 1e3, e2 = 6e4, n2 = 36e5, r2 = "millisecond", i4 = "second", s2 = "minute", u3 = "hour", a2 = "day", o2 = "week", c3 = "month", f5 = "quarter", h6 = "year", d4 = "date", l3 = "Invalid Date", $3 = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y5 = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M7 = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(t3) {
        var e3 = ["th", "st", "nd", "rd"], n3 = t3 % 100;
        return "[" + t3 + (e3[(n3 - 20) % 10] || e3[n3] || e3[0]) + "]";
      } }, m = function(t3, e3, n3) {
        var r3 = String(t3);
        return !r3 || r3.length >= e3 ? t3 : "" + Array(e3 + 1 - r3.length).join(n3) + t3;
      }, v6 = { s: m, z: function(t3) {
        var e3 = -t3.utcOffset(), n3 = Math.abs(e3), r3 = Math.floor(n3 / 60), i5 = n3 % 60;
        return (e3 <= 0 ? "+" : "-") + m(r3, 2, "0") + ":" + m(i5, 2, "0");
      }, m: function t3(e3, n3) {
        if (e3.date() < n3.date()) return -t3(n3, e3);
        var r3 = 12 * (n3.year() - e3.year()) + (n3.month() - e3.month()), i5 = e3.clone().add(r3, c3), s3 = n3 - i5 < 0, u4 = e3.clone().add(r3 + (s3 ? -1 : 1), c3);
        return +(-(r3 + (n3 - i5) / (s3 ? i5 - u4 : u4 - i5)) || 0);
      }, a: function(t3) {
        return t3 < 0 ? Math.ceil(t3) || 0 : Math.floor(t3);
      }, p: function(t3) {
        return { M: c3, y: h6, w: o2, d: a2, D: d4, h: u3, m: s2, s: i4, ms: r2, Q: f5 }[t3] || String(t3 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t3) {
        return void 0 === t3;
      } }, g3 = "en", D3 = {};
      D3[g3] = M7;
      var p3 = "$isDayjsObject", S3 = function(t3) {
        return t3 instanceof _3 || !(!t3 || !t3[p3]);
      }, w3 = function t3(e3, n3, r3) {
        var i5;
        if (!e3) return g3;
        if ("string" == typeof e3) {
          var s3 = e3.toLowerCase();
          D3[s3] && (i5 = s3), n3 && (D3[s3] = n3, i5 = s3);
          var u4 = e3.split("-");
          if (!i5 && u4.length > 1) return t3(u4[0]);
        } else {
          var a3 = e3.name;
          D3[a3] = e3, i5 = a3;
        }
        return !r3 && i5 && (g3 = i5), i5 || !r3 && g3;
      }, O2 = function(t3, e3) {
        if (S3(t3)) return t3.clone();
        var n3 = "object" == typeof e3 ? e3 : {};
        return n3.date = t3, n3.args = arguments, new _3(n3);
      }, b3 = v6;
      b3.l = w3, b3.i = S3, b3.w = function(t3, e3) {
        return O2(t3, { locale: e3.$L, utc: e3.$u, x: e3.$x, $offset: e3.$offset });
      };
      var _3 = function() {
        function M8(t3) {
          this.$L = w3(t3.locale, null, true), this.parse(t3), this.$x = this.$x || t3.x || {}, this[p3] = true;
        }
        var m2 = M8.prototype;
        return m2.parse = function(t3) {
          this.$d = function(t4) {
            var e3 = t4.date, n3 = t4.utc;
            if (null === e3) return /* @__PURE__ */ new Date(NaN);
            if (b3.u(e3)) return /* @__PURE__ */ new Date();
            if (e3 instanceof Date) return new Date(e3);
            if ("string" == typeof e3 && !/Z$/i.test(e3)) {
              var r3 = e3.match($3);
              if (r3) {
                var i5 = r3[2] - 1 || 0, s3 = (r3[7] || "0").substring(0, 3);
                return n3 ? new Date(Date.UTC(r3[1], i5, r3[3] || 1, r3[4] || 0, r3[5] || 0, r3[6] || 0, s3)) : new Date(r3[1], i5, r3[3] || 1, r3[4] || 0, r3[5] || 0, r3[6] || 0, s3);
              }
            }
            return new Date(e3);
          }(t3), this.init();
        }, m2.init = function() {
          var t3 = this.$d;
          this.$y = t3.getFullYear(), this.$M = t3.getMonth(), this.$D = t3.getDate(), this.$W = t3.getDay(), this.$H = t3.getHours(), this.$m = t3.getMinutes(), this.$s = t3.getSeconds(), this.$ms = t3.getMilliseconds();
        }, m2.$utils = function() {
          return b3;
        }, m2.isValid = function() {
          return !(this.$d.toString() === l3);
        }, m2.isSame = function(t3, e3) {
          var n3 = O2(t3);
          return this.startOf(e3) <= n3 && n3 <= this.endOf(e3);
        }, m2.isAfter = function(t3, e3) {
          return O2(t3) < this.startOf(e3);
        }, m2.isBefore = function(t3, e3) {
          return this.endOf(e3) < O2(t3);
        }, m2.$g = function(t3, e3, n3) {
          return b3.u(t3) ? this[e3] : this.set(n3, t3);
        }, m2.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m2.valueOf = function() {
          return this.$d.getTime();
        }, m2.startOf = function(t3, e3) {
          var n3 = this, r3 = !!b3.u(e3) || e3, f6 = b3.p(t3), l4 = function(t4, e4) {
            var i5 = b3.w(n3.$u ? Date.UTC(n3.$y, e4, t4) : new Date(n3.$y, e4, t4), n3);
            return r3 ? i5 : i5.endOf(a2);
          }, $4 = function(t4, e4) {
            return b3.w(n3.toDate()[t4].apply(n3.toDate("s"), (r3 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e4)), n3);
          }, y6 = this.$W, M9 = this.$M, m3 = this.$D, v7 = "set" + (this.$u ? "UTC" : "");
          switch (f6) {
            case h6:
              return r3 ? l4(1, 0) : l4(31, 11);
            case c3:
              return r3 ? l4(1, M9) : l4(0, M9 + 1);
            case o2:
              var g4 = this.$locale().weekStart || 0, D4 = (y6 < g4 ? y6 + 7 : y6) - g4;
              return l4(r3 ? m3 - D4 : m3 + (6 - D4), M9);
            case a2:
            case d4:
              return $4(v7 + "Hours", 0);
            case u3:
              return $4(v7 + "Minutes", 1);
            case s2:
              return $4(v7 + "Seconds", 2);
            case i4:
              return $4(v7 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m2.endOf = function(t3) {
          return this.startOf(t3, false);
        }, m2.$set = function(t3, e3) {
          var n3, o3 = b3.p(t3), f6 = "set" + (this.$u ? "UTC" : ""), l4 = (n3 = {}, n3[a2] = f6 + "Date", n3[d4] = f6 + "Date", n3[c3] = f6 + "Month", n3[h6] = f6 + "FullYear", n3[u3] = f6 + "Hours", n3[s2] = f6 + "Minutes", n3[i4] = f6 + "Seconds", n3[r2] = f6 + "Milliseconds", n3)[o3], $4 = o3 === a2 ? this.$D + (e3 - this.$W) : e3;
          if (o3 === c3 || o3 === h6) {
            var y6 = this.clone().set(d4, 1);
            y6.$d[l4]($4), y6.init(), this.$d = y6.set(d4, Math.min(this.$D, y6.daysInMonth())).$d;
          } else l4 && this.$d[l4]($4);
          return this.init(), this;
        }, m2.set = function(t3, e3) {
          return this.clone().$set(t3, e3);
        }, m2.get = function(t3) {
          return this[b3.p(t3)]();
        }, m2.add = function(r3, f6) {
          var d5, l4 = this;
          r3 = Number(r3);
          var $4 = b3.p(f6), y6 = function(t3) {
            var e3 = O2(l4);
            return b3.w(e3.date(e3.date() + Math.round(t3 * r3)), l4);
          };
          if ($4 === c3) return this.set(c3, this.$M + r3);
          if ($4 === h6) return this.set(h6, this.$y + r3);
          if ($4 === a2) return y6(1);
          if ($4 === o2) return y6(7);
          var M9 = (d5 = {}, d5[s2] = e2, d5[u3] = n2, d5[i4] = t2, d5)[$4] || 1, m3 = this.$d.getTime() + r3 * M9;
          return b3.w(m3, this);
        }, m2.subtract = function(t3, e3) {
          return this.add(-1 * t3, e3);
        }, m2.format = function(t3) {
          var e3 = this, n3 = this.$locale();
          if (!this.isValid()) return n3.invalidDate || l3;
          var r3 = t3 || "YYYY-MM-DDTHH:mm:ssZ", i5 = b3.z(this), s3 = this.$H, u4 = this.$m, a3 = this.$M, o3 = n3.weekdays, c4 = n3.months, f6 = n3.meridiem, h7 = function(t4, n4, i6, s4) {
            return t4 && (t4[n4] || t4(e3, r3)) || i6[n4].slice(0, s4);
          }, d5 = function(t4) {
            return b3.s(s3 % 12 || 12, t4, "0");
          }, $4 = f6 || function(t4, e4, n4) {
            var r4 = t4 < 12 ? "AM" : "PM";
            return n4 ? r4.toLowerCase() : r4;
          };
          return r3.replace(y5, function(t4, r4) {
            return r4 || function(t5) {
              switch (t5) {
                case "YY":
                  return String(e3.$y).slice(-2);
                case "YYYY":
                  return b3.s(e3.$y, 4, "0");
                case "M":
                  return a3 + 1;
                case "MM":
                  return b3.s(a3 + 1, 2, "0");
                case "MMM":
                  return h7(n3.monthsShort, a3, c4, 3);
                case "MMMM":
                  return h7(c4, a3);
                case "D":
                  return e3.$D;
                case "DD":
                  return b3.s(e3.$D, 2, "0");
                case "d":
                  return String(e3.$W);
                case "dd":
                  return h7(n3.weekdaysMin, e3.$W, o3, 2);
                case "ddd":
                  return h7(n3.weekdaysShort, e3.$W, o3, 3);
                case "dddd":
                  return o3[e3.$W];
                case "H":
                  return String(s3);
                case "HH":
                  return b3.s(s3, 2, "0");
                case "h":
                  return d5(1);
                case "hh":
                  return d5(2);
                case "a":
                  return $4(s3, u4, true);
                case "A":
                  return $4(s3, u4, false);
                case "m":
                  return String(u4);
                case "mm":
                  return b3.s(u4, 2, "0");
                case "s":
                  return String(e3.$s);
                case "ss":
                  return b3.s(e3.$s, 2, "0");
                case "SSS":
                  return b3.s(e3.$ms, 3, "0");
                case "Z":
                  return i5;
              }
              return null;
            }(t4) || i5.replace(":", "");
          });
        }, m2.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m2.diff = function(r3, d5, l4) {
          var $4, y6 = this, M9 = b3.p(d5), m3 = O2(r3), v7 = (m3.utcOffset() - this.utcOffset()) * e2, g4 = this - m3, D4 = function() {
            return b3.m(y6, m3);
          };
          switch (M9) {
            case h6:
              $4 = D4() / 12;
              break;
            case c3:
              $4 = D4();
              break;
            case f5:
              $4 = D4() / 3;
              break;
            case o2:
              $4 = (g4 - v7) / 6048e5;
              break;
            case a2:
              $4 = (g4 - v7) / 864e5;
              break;
            case u3:
              $4 = g4 / n2;
              break;
            case s2:
              $4 = g4 / e2;
              break;
            case i4:
              $4 = g4 / t2;
              break;
            default:
              $4 = g4;
          }
          return l4 ? $4 : b3.a($4);
        }, m2.daysInMonth = function() {
          return this.endOf(c3).$D;
        }, m2.$locale = function() {
          return D3[this.$L];
        }, m2.locale = function(t3, e3) {
          if (!t3) return this.$L;
          var n3 = this.clone(), r3 = w3(t3, e3, true);
          return r3 && (n3.$L = r3), n3;
        }, m2.clone = function() {
          return b3.w(this.$d, this);
        }, m2.toDate = function() {
          return new Date(this.valueOf());
        }, m2.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m2.toISOString = function() {
          return this.$d.toISOString();
        }, m2.toString = function() {
          return this.$d.toUTCString();
        }, M8;
      }(), k6 = _3.prototype;
      return O2.prototype = k6, [["$ms", r2], ["$s", i4], ["$m", s2], ["$H", u3], ["$W", a2], ["$M", c3], ["$y", h6], ["$D", d4]].forEach(function(t3) {
        k6[t3[1]] = function(e3) {
          return this.$g(e3, t3[0], t3[1]);
        };
      }), O2.extend = function(t3, e3) {
        return t3.$i || (t3(e3, _3, O2), t3.$i = true), O2;
      }, O2.locale = w3, O2.isDayjs = S3, O2.unix = function(t3) {
        return O2(1e3 * t3);
      }, O2.en = D3[g3], O2.Ls = D3, O2.p = {}, O2;
    });
  }
});

// node_modules/dayjs/locale/en.js
var require_en = __commonJS({
  "node_modules/dayjs/locale/en.js"(exports, module) {
    !function(e2, n2) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = n2() : "function" == typeof define && define.amd ? define(n2) : (e2 = "undefined" != typeof globalThis ? globalThis : e2 || self).dayjs_locale_en = n2();
    }(exports, function() {
      "use strict";
      return { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(e2) {
        var n2 = ["th", "st", "nd", "rd"], t2 = e2 % 100;
        return "[" + e2 + (n2[(t2 - 20) % 10] || n2[t2] || n2[0]) + "]";
      } };
    });
  }
});

// node_modules/dayjs/plugin/relativeTime.js
var require_relativeTime = __commonJS({
  "node_modules/dayjs/plugin/relativeTime.js"(exports, module) {
    !function(r2, e2) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e2() : "function" == typeof define && define.amd ? define(e2) : (r2 = "undefined" != typeof globalThis ? globalThis : r2 || self).dayjs_plugin_relativeTime = e2();
    }(exports, function() {
      "use strict";
      return function(r2, e2, t2) {
        r2 = r2 || {};
        var n2 = e2.prototype, o2 = { future: "in %s", past: "%s ago", s: "a few seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", M: "a month", MM: "%d months", y: "a year", yy: "%d years" };
        function i4(r3, e3, t3, o3) {
          return n2.fromToBase(r3, e3, t3, o3);
        }
        t2.en.relativeTime = o2, n2.fromToBase = function(e3, n3, i5, d5, u3) {
          for (var f5, a2, s2, l3 = i5.$locale().relativeTime || o2, h6 = r2.thresholds || [{ l: "s", r: 44, d: "second" }, { l: "m", r: 89 }, { l: "mm", r: 44, d: "minute" }, { l: "h", r: 89 }, { l: "hh", r: 21, d: "hour" }, { l: "d", r: 35 }, { l: "dd", r: 25, d: "day" }, { l: "M", r: 45 }, { l: "MM", r: 10, d: "month" }, { l: "y", r: 17 }, { l: "yy", d: "year" }], m = h6.length, c3 = 0; c3 < m; c3 += 1) {
            var y5 = h6[c3];
            y5.d && (f5 = d5 ? t2(e3).diff(i5, y5.d, true) : i5.diff(e3, y5.d, true));
            var p3 = (r2.rounding || Math.round)(Math.abs(f5));
            if (s2 = f5 > 0, p3 <= y5.r || !y5.r) {
              p3 <= 1 && c3 > 0 && (y5 = h6[c3 - 1]);
              var v6 = l3[y5.l];
              u3 && (p3 = u3("" + p3)), a2 = "string" == typeof v6 ? v6.replace("%d", p3) : v6(p3, n3, y5.l, s2);
              break;
            }
          }
          if (n3) return a2;
          var M7 = s2 ? l3.future : l3.past;
          return "function" == typeof M7 ? M7(a2) : M7.replace("%s", a2);
        }, n2.to = function(r3, e3) {
          return i4(r3, e3, this, true);
        }, n2.from = function(r3, e3) {
          return i4(r3, e3, this);
        };
        var d4 = function(r3) {
          return r3.$u ? t2.utc() : t2();
        };
        n2.toNow = function(r3) {
          return this.to(d4(this), r3);
        }, n2.fromNow = function(r3) {
          return this.from(d4(this), r3);
        };
      };
    });
  }
});

// node_modules/dayjs/plugin/updateLocale.js
var require_updateLocale = __commonJS({
  "node_modules/dayjs/plugin/updateLocale.js"(exports, module) {
    !function(e2, n2) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = n2() : "function" == typeof define && define.amd ? define(n2) : (e2 = "undefined" != typeof globalThis ? globalThis : e2 || self).dayjs_plugin_updateLocale = n2();
    }(exports, function() {
      "use strict";
      return function(e2, n2, t2) {
        t2.updateLocale = function(e3, n3) {
          var o2 = t2.Ls[e3];
          if (o2) return (n3 ? Object.keys(n3) : []).forEach(function(e4) {
            o2[e4] = n3[e4];
          }), o2;
        };
      };
    });
  }
});

// node_modules/js-sha3/src/sha3.js
var require_sha3 = __commonJS({
  "node_modules/js-sha3/src/sha3.js"(exports, module) {
    (function() {
      "use strict";
      var INPUT_ERROR = "input is invalid type";
      var FINALIZE_ERROR = "finalize already called";
      var WINDOW = typeof window === "object";
      var root = WINDOW ? window : {};
      if (root.JS_SHA3_NO_WINDOW) {
        WINDOW = false;
      }
      var WEB_WORKER = !WINDOW && typeof self === "object";
      var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === "object" && process.versions && process.versions.node;
      if (NODE_JS) {
        root = global;
      } else if (WEB_WORKER) {
        root = self;
      }
      var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === "object" && module.exports;
      var AMD = typeof define === "function" && define.amd;
      var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== "undefined";
      var HEX_CHARS = "0123456789abcdef".split("");
      var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
      var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
      var KECCAK_PADDING = [1, 256, 65536, 16777216];
      var PADDING = [6, 1536, 393216, 100663296];
      var SHIFT = [0, 8, 16, 24];
      var RC = [
        1,
        0,
        32898,
        0,
        32906,
        2147483648,
        2147516416,
        2147483648,
        32907,
        0,
        2147483649,
        0,
        2147516545,
        2147483648,
        32777,
        2147483648,
        138,
        0,
        136,
        0,
        2147516425,
        0,
        2147483658,
        0,
        2147516555,
        0,
        139,
        2147483648,
        32905,
        2147483648,
        32771,
        2147483648,
        32770,
        2147483648,
        128,
        2147483648,
        32778,
        0,
        2147483658,
        2147483648,
        2147516545,
        2147483648,
        32896,
        2147483648,
        2147483649,
        0,
        2147516424,
        2147483648
      ];
      var BITS = [224, 256, 384, 512];
      var SHAKE_BITS = [128, 256];
      var OUTPUT_TYPES = ["hex", "buffer", "arrayBuffer", "array", "digest"];
      var CSHAKE_BYTEPAD = {
        "128": 168,
        "256": 136
      };
      if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
        Array.isArray = function(obj) {
          return Object.prototype.toString.call(obj) === "[object Array]";
        };
      }
      if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
        ArrayBuffer.isView = function(obj) {
          return typeof obj === "object" && obj.buffer && obj.buffer.constructor === ArrayBuffer;
        };
      }
      var createOutputMethod = function(bits2, padding, outputType) {
        return function(message) {
          return new Keccak(bits2, padding, bits2).update(message)[outputType]();
        };
      };
      var createShakeOutputMethod = function(bits2, padding, outputType) {
        return function(message, outputBits) {
          return new Keccak(bits2, padding, outputBits).update(message)[outputType]();
        };
      };
      var createCshakeOutputMethod = function(bits2, padding, outputType) {
        return function(message, outputBits, n2, s2) {
          return methods["cshake" + bits2].update(message, outputBits, n2, s2)[outputType]();
        };
      };
      var createKmacOutputMethod = function(bits2, padding, outputType) {
        return function(key2, message, outputBits, s2) {
          return methods["kmac" + bits2].update(key2, message, outputBits, s2)[outputType]();
        };
      };
      var createOutputMethods = function(method, createMethod2, bits2, padding) {
        for (var i5 = 0; i5 < OUTPUT_TYPES.length; ++i5) {
          var type = OUTPUT_TYPES[i5];
          method[type] = createMethod2(bits2, padding, type);
        }
        return method;
      };
      var createMethod = function(bits2, padding) {
        var method = createOutputMethod(bits2, padding, "hex");
        method.create = function() {
          return new Keccak(bits2, padding, bits2);
        };
        method.update = function(message) {
          return method.create().update(message);
        };
        return createOutputMethods(method, createOutputMethod, bits2, padding);
      };
      var createShakeMethod = function(bits2, padding) {
        var method = createShakeOutputMethod(bits2, padding, "hex");
        method.create = function(outputBits) {
          return new Keccak(bits2, padding, outputBits);
        };
        method.update = function(message, outputBits) {
          return method.create(outputBits).update(message);
        };
        return createOutputMethods(method, createShakeOutputMethod, bits2, padding);
      };
      var createCshakeMethod = function(bits2, padding) {
        var w3 = CSHAKE_BYTEPAD[bits2];
        var method = createCshakeOutputMethod(bits2, padding, "hex");
        method.create = function(outputBits, n2, s2) {
          if (!n2 && !s2) {
            return methods["shake" + bits2].create(outputBits);
          } else {
            return new Keccak(bits2, padding, outputBits).bytepad([n2, s2], w3);
          }
        };
        method.update = function(message, outputBits, n2, s2) {
          return method.create(outputBits, n2, s2).update(message);
        };
        return createOutputMethods(method, createCshakeOutputMethod, bits2, padding);
      };
      var createKmacMethod = function(bits2, padding) {
        var w3 = CSHAKE_BYTEPAD[bits2];
        var method = createKmacOutputMethod(bits2, padding, "hex");
        method.create = function(key2, outputBits, s2) {
          return new Kmac(bits2, padding, outputBits).bytepad(["KMAC", s2], w3).bytepad([key2], w3);
        };
        method.update = function(key2, message, outputBits, s2) {
          return method.create(key2, outputBits, s2).update(message);
        };
        return createOutputMethods(method, createKmacOutputMethod, bits2, padding);
      };
      var algorithms = [
        { name: "keccak", padding: KECCAK_PADDING, bits: BITS, createMethod },
        { name: "sha3", padding: PADDING, bits: BITS, createMethod },
        { name: "shake", padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
        { name: "cshake", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
        { name: "kmac", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
      ];
      var methods = {}, methodNames = [];
      for (var i4 = 0; i4 < algorithms.length; ++i4) {
        var algorithm = algorithms[i4];
        var bits = algorithm.bits;
        for (var j5 = 0; j5 < bits.length; ++j5) {
          var methodName = algorithm.name + "_" + bits[j5];
          methodNames.push(methodName);
          methods[methodName] = algorithm.createMethod(bits[j5], algorithm.padding);
          if (algorithm.name !== "sha3") {
            var newMethodName = algorithm.name + bits[j5];
            methodNames.push(newMethodName);
            methods[newMethodName] = methods[methodName];
          }
        }
      }
      function Keccak(bits2, padding, outputBits) {
        this.blocks = [];
        this.s = [];
        this.padding = padding;
        this.outputBits = outputBits;
        this.reset = true;
        this.finalized = false;
        this.block = 0;
        this.start = 0;
        this.blockCount = 1600 - (bits2 << 1) >> 5;
        this.byteCount = this.blockCount << 2;
        this.outputBlocks = outputBits >> 5;
        this.extraBytes = (outputBits & 31) >> 3;
        for (var i5 = 0; i5 < 50; ++i5) {
          this.s[i5] = 0;
        }
      }
      Keccak.prototype.update = function(message) {
        if (this.finalized) {
          throw new Error(FINALIZE_ERROR);
        }
        var notString, type = typeof message;
        if (type !== "string") {
          if (type === "object") {
            if (message === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
              message = new Uint8Array(message);
            } else if (!Array.isArray(message)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index = 0, s2 = this.s, i5, code;
        while (index < length) {
          if (this.reset) {
            this.reset = false;
            blocks[0] = this.block;
            for (i5 = 1; i5 < blockCount + 1; ++i5) {
              blocks[i5] = 0;
            }
          }
          if (notString) {
            for (i5 = this.start; index < length && i5 < byteCount; ++index) {
              blocks[i5 >> 2] |= message[index] << SHIFT[i5++ & 3];
            }
          } else {
            for (i5 = this.start; index < length && i5 < byteCount; ++index) {
              code = message.charCodeAt(index);
              if (code < 128) {
                blocks[i5 >> 2] |= code << SHIFT[i5++ & 3];
              } else if (code < 2048) {
                blocks[i5 >> 2] |= (192 | code >> 6) << SHIFT[i5++ & 3];
                blocks[i5 >> 2] |= (128 | code & 63) << SHIFT[i5++ & 3];
              } else if (code < 55296 || code >= 57344) {
                blocks[i5 >> 2] |= (224 | code >> 12) << SHIFT[i5++ & 3];
                blocks[i5 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i5++ & 3];
                blocks[i5 >> 2] |= (128 | code & 63) << SHIFT[i5++ & 3];
              } else {
                code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index) & 1023);
                blocks[i5 >> 2] |= (240 | code >> 18) << SHIFT[i5++ & 3];
                blocks[i5 >> 2] |= (128 | code >> 12 & 63) << SHIFT[i5++ & 3];
                blocks[i5 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i5++ & 3];
                blocks[i5 >> 2] |= (128 | code & 63) << SHIFT[i5++ & 3];
              }
            }
          }
          this.lastByteIndex = i5;
          if (i5 >= byteCount) {
            this.start = i5 - byteCount;
            this.block = blocks[blockCount];
            for (i5 = 0; i5 < blockCount; ++i5) {
              s2[i5] ^= blocks[i5];
            }
            f5(s2);
            this.reset = true;
          } else {
            this.start = i5;
          }
        }
        return this;
      };
      Keccak.prototype.encode = function(x7, right) {
        var o2 = x7 & 255, n2 = 1;
        var bytes = [o2];
        x7 = x7 >> 8;
        o2 = x7 & 255;
        while (o2 > 0) {
          bytes.unshift(o2);
          x7 = x7 >> 8;
          o2 = x7 & 255;
          ++n2;
        }
        if (right) {
          bytes.push(n2);
        } else {
          bytes.unshift(n2);
        }
        this.update(bytes);
        return bytes.length;
      };
      Keccak.prototype.encodeString = function(str) {
        var notString, type = typeof str;
        if (type !== "string") {
          if (type === "object") {
            if (str === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
              str = new Uint8Array(str);
            } else if (!Array.isArray(str)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var bytes = 0, length = str.length;
        if (notString) {
          bytes = length;
        } else {
          for (var i5 = 0; i5 < str.length; ++i5) {
            var code = str.charCodeAt(i5);
            if (code < 128) {
              bytes += 1;
            } else if (code < 2048) {
              bytes += 2;
            } else if (code < 55296 || code >= 57344) {
              bytes += 3;
            } else {
              code = 65536 + ((code & 1023) << 10 | str.charCodeAt(++i5) & 1023);
              bytes += 4;
            }
          }
        }
        bytes += this.encode(bytes * 8);
        this.update(str);
        return bytes;
      };
      Keccak.prototype.bytepad = function(strs, w3) {
        var bytes = this.encode(w3);
        for (var i5 = 0; i5 < strs.length; ++i5) {
          bytes += this.encodeString(strs[i5]);
        }
        var paddingBytes = w3 - bytes % w3;
        var zeros2 = [];
        zeros2.length = paddingBytes;
        this.update(zeros2);
        return this;
      };
      Keccak.prototype.finalize = function() {
        if (this.finalized) {
          return;
        }
        this.finalized = true;
        var blocks = this.blocks, i5 = this.lastByteIndex, blockCount = this.blockCount, s2 = this.s;
        blocks[i5 >> 2] |= this.padding[i5 & 3];
        if (this.lastByteIndex === this.byteCount) {
          blocks[0] = blocks[blockCount];
          for (i5 = 1; i5 < blockCount + 1; ++i5) {
            blocks[i5] = 0;
          }
        }
        blocks[blockCount - 1] |= 2147483648;
        for (i5 = 0; i5 < blockCount; ++i5) {
          s2[i5] ^= blocks[i5];
        }
        f5(s2);
      };
      Keccak.prototype.toString = Keccak.prototype.hex = function() {
        this.finalize();
        var blockCount = this.blockCount, s2 = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i5 = 0, j6 = 0;
        var hex = "", block;
        while (j6 < outputBlocks) {
          for (i5 = 0; i5 < blockCount && j6 < outputBlocks; ++i5, ++j6) {
            block = s2[i5];
            hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];
          }
          if (j6 % blockCount === 0) {
            f5(s2);
            i5 = 0;
          }
        }
        if (extraBytes) {
          block = s2[i5];
          hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15];
          if (extraBytes > 1) {
            hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15];
          }
          if (extraBytes > 2) {
            hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15];
          }
        }
        return hex;
      };
      Keccak.prototype.arrayBuffer = function() {
        this.finalize();
        var blockCount = this.blockCount, s2 = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i5 = 0, j6 = 0;
        var bytes = this.outputBits >> 3;
        var buffer;
        if (extraBytes) {
          buffer = new ArrayBuffer(outputBlocks + 1 << 2);
        } else {
          buffer = new ArrayBuffer(bytes);
        }
        var array = new Uint32Array(buffer);
        while (j6 < outputBlocks) {
          for (i5 = 0; i5 < blockCount && j6 < outputBlocks; ++i5, ++j6) {
            array[j6] = s2[i5];
          }
          if (j6 % blockCount === 0) {
            f5(s2);
          }
        }
        if (extraBytes) {
          array[i5] = s2[i5];
          buffer = buffer.slice(0, bytes);
        }
        return buffer;
      };
      Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
      Keccak.prototype.digest = Keccak.prototype.array = function() {
        this.finalize();
        var blockCount = this.blockCount, s2 = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i5 = 0, j6 = 0;
        var array = [], offset, block;
        while (j6 < outputBlocks) {
          for (i5 = 0; i5 < blockCount && j6 < outputBlocks; ++i5, ++j6) {
            offset = j6 << 2;
            block = s2[i5];
            array[offset] = block & 255;
            array[offset + 1] = block >> 8 & 255;
            array[offset + 2] = block >> 16 & 255;
            array[offset + 3] = block >> 24 & 255;
          }
          if (j6 % blockCount === 0) {
            f5(s2);
          }
        }
        if (extraBytes) {
          offset = j6 << 2;
          block = s2[i5];
          array[offset] = block & 255;
          if (extraBytes > 1) {
            array[offset + 1] = block >> 8 & 255;
          }
          if (extraBytes > 2) {
            array[offset + 2] = block >> 16 & 255;
          }
        }
        return array;
      };
      function Kmac(bits2, padding, outputBits) {
        Keccak.call(this, bits2, padding, outputBits);
      }
      Kmac.prototype = new Keccak();
      Kmac.prototype.finalize = function() {
        this.encode(this.outputBits, true);
        return Keccak.prototype.finalize.call(this);
      };
      var f5 = function(s2) {
        var h6, l3, n2, c0, c1, c22, c3, c4, c5, c6, c7, c8, c9, b0, b1, b22, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b222, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
        for (n2 = 0; n2 < 48; n2 += 2) {
          c0 = s2[0] ^ s2[10] ^ s2[20] ^ s2[30] ^ s2[40];
          c1 = s2[1] ^ s2[11] ^ s2[21] ^ s2[31] ^ s2[41];
          c22 = s2[2] ^ s2[12] ^ s2[22] ^ s2[32] ^ s2[42];
          c3 = s2[3] ^ s2[13] ^ s2[23] ^ s2[33] ^ s2[43];
          c4 = s2[4] ^ s2[14] ^ s2[24] ^ s2[34] ^ s2[44];
          c5 = s2[5] ^ s2[15] ^ s2[25] ^ s2[35] ^ s2[45];
          c6 = s2[6] ^ s2[16] ^ s2[26] ^ s2[36] ^ s2[46];
          c7 = s2[7] ^ s2[17] ^ s2[27] ^ s2[37] ^ s2[47];
          c8 = s2[8] ^ s2[18] ^ s2[28] ^ s2[38] ^ s2[48];
          c9 = s2[9] ^ s2[19] ^ s2[29] ^ s2[39] ^ s2[49];
          h6 = c8 ^ (c22 << 1 | c3 >>> 31);
          l3 = c9 ^ (c3 << 1 | c22 >>> 31);
          s2[0] ^= h6;
          s2[1] ^= l3;
          s2[10] ^= h6;
          s2[11] ^= l3;
          s2[20] ^= h6;
          s2[21] ^= l3;
          s2[30] ^= h6;
          s2[31] ^= l3;
          s2[40] ^= h6;
          s2[41] ^= l3;
          h6 = c0 ^ (c4 << 1 | c5 >>> 31);
          l3 = c1 ^ (c5 << 1 | c4 >>> 31);
          s2[2] ^= h6;
          s2[3] ^= l3;
          s2[12] ^= h6;
          s2[13] ^= l3;
          s2[22] ^= h6;
          s2[23] ^= l3;
          s2[32] ^= h6;
          s2[33] ^= l3;
          s2[42] ^= h6;
          s2[43] ^= l3;
          h6 = c22 ^ (c6 << 1 | c7 >>> 31);
          l3 = c3 ^ (c7 << 1 | c6 >>> 31);
          s2[4] ^= h6;
          s2[5] ^= l3;
          s2[14] ^= h6;
          s2[15] ^= l3;
          s2[24] ^= h6;
          s2[25] ^= l3;
          s2[34] ^= h6;
          s2[35] ^= l3;
          s2[44] ^= h6;
          s2[45] ^= l3;
          h6 = c4 ^ (c8 << 1 | c9 >>> 31);
          l3 = c5 ^ (c9 << 1 | c8 >>> 31);
          s2[6] ^= h6;
          s2[7] ^= l3;
          s2[16] ^= h6;
          s2[17] ^= l3;
          s2[26] ^= h6;
          s2[27] ^= l3;
          s2[36] ^= h6;
          s2[37] ^= l3;
          s2[46] ^= h6;
          s2[47] ^= l3;
          h6 = c6 ^ (c0 << 1 | c1 >>> 31);
          l3 = c7 ^ (c1 << 1 | c0 >>> 31);
          s2[8] ^= h6;
          s2[9] ^= l3;
          s2[18] ^= h6;
          s2[19] ^= l3;
          s2[28] ^= h6;
          s2[29] ^= l3;
          s2[38] ^= h6;
          s2[39] ^= l3;
          s2[48] ^= h6;
          s2[49] ^= l3;
          b0 = s2[0];
          b1 = s2[1];
          b32 = s2[11] << 4 | s2[10] >>> 28;
          b33 = s2[10] << 4 | s2[11] >>> 28;
          b14 = s2[20] << 3 | s2[21] >>> 29;
          b15 = s2[21] << 3 | s2[20] >>> 29;
          b46 = s2[31] << 9 | s2[30] >>> 23;
          b47 = s2[30] << 9 | s2[31] >>> 23;
          b28 = s2[40] << 18 | s2[41] >>> 14;
          b29 = s2[41] << 18 | s2[40] >>> 14;
          b20 = s2[2] << 1 | s2[3] >>> 31;
          b21 = s2[3] << 1 | s2[2] >>> 31;
          b22 = s2[13] << 12 | s2[12] >>> 20;
          b3 = s2[12] << 12 | s2[13] >>> 20;
          b34 = s2[22] << 10 | s2[23] >>> 22;
          b35 = s2[23] << 10 | s2[22] >>> 22;
          b16 = s2[33] << 13 | s2[32] >>> 19;
          b17 = s2[32] << 13 | s2[33] >>> 19;
          b48 = s2[42] << 2 | s2[43] >>> 30;
          b49 = s2[43] << 2 | s2[42] >>> 30;
          b40 = s2[5] << 30 | s2[4] >>> 2;
          b41 = s2[4] << 30 | s2[5] >>> 2;
          b222 = s2[14] << 6 | s2[15] >>> 26;
          b23 = s2[15] << 6 | s2[14] >>> 26;
          b4 = s2[25] << 11 | s2[24] >>> 21;
          b5 = s2[24] << 11 | s2[25] >>> 21;
          b36 = s2[34] << 15 | s2[35] >>> 17;
          b37 = s2[35] << 15 | s2[34] >>> 17;
          b18 = s2[45] << 29 | s2[44] >>> 3;
          b19 = s2[44] << 29 | s2[45] >>> 3;
          b10 = s2[6] << 28 | s2[7] >>> 4;
          b11 = s2[7] << 28 | s2[6] >>> 4;
          b42 = s2[17] << 23 | s2[16] >>> 9;
          b43 = s2[16] << 23 | s2[17] >>> 9;
          b24 = s2[26] << 25 | s2[27] >>> 7;
          b25 = s2[27] << 25 | s2[26] >>> 7;
          b6 = s2[36] << 21 | s2[37] >>> 11;
          b7 = s2[37] << 21 | s2[36] >>> 11;
          b38 = s2[47] << 24 | s2[46] >>> 8;
          b39 = s2[46] << 24 | s2[47] >>> 8;
          b30 = s2[8] << 27 | s2[9] >>> 5;
          b31 = s2[9] << 27 | s2[8] >>> 5;
          b12 = s2[18] << 20 | s2[19] >>> 12;
          b13 = s2[19] << 20 | s2[18] >>> 12;
          b44 = s2[29] << 7 | s2[28] >>> 25;
          b45 = s2[28] << 7 | s2[29] >>> 25;
          b26 = s2[38] << 8 | s2[39] >>> 24;
          b27 = s2[39] << 8 | s2[38] >>> 24;
          b8 = s2[48] << 14 | s2[49] >>> 18;
          b9 = s2[49] << 14 | s2[48] >>> 18;
          s2[0] = b0 ^ ~b22 & b4;
          s2[1] = b1 ^ ~b3 & b5;
          s2[10] = b10 ^ ~b12 & b14;
          s2[11] = b11 ^ ~b13 & b15;
          s2[20] = b20 ^ ~b222 & b24;
          s2[21] = b21 ^ ~b23 & b25;
          s2[30] = b30 ^ ~b32 & b34;
          s2[31] = b31 ^ ~b33 & b35;
          s2[40] = b40 ^ ~b42 & b44;
          s2[41] = b41 ^ ~b43 & b45;
          s2[2] = b22 ^ ~b4 & b6;
          s2[3] = b3 ^ ~b5 & b7;
          s2[12] = b12 ^ ~b14 & b16;
          s2[13] = b13 ^ ~b15 & b17;
          s2[22] = b222 ^ ~b24 & b26;
          s2[23] = b23 ^ ~b25 & b27;
          s2[32] = b32 ^ ~b34 & b36;
          s2[33] = b33 ^ ~b35 & b37;
          s2[42] = b42 ^ ~b44 & b46;
          s2[43] = b43 ^ ~b45 & b47;
          s2[4] = b4 ^ ~b6 & b8;
          s2[5] = b5 ^ ~b7 & b9;
          s2[14] = b14 ^ ~b16 & b18;
          s2[15] = b15 ^ ~b17 & b19;
          s2[24] = b24 ^ ~b26 & b28;
          s2[25] = b25 ^ ~b27 & b29;
          s2[34] = b34 ^ ~b36 & b38;
          s2[35] = b35 ^ ~b37 & b39;
          s2[44] = b44 ^ ~b46 & b48;
          s2[45] = b45 ^ ~b47 & b49;
          s2[6] = b6 ^ ~b8 & b0;
          s2[7] = b7 ^ ~b9 & b1;
          s2[16] = b16 ^ ~b18 & b10;
          s2[17] = b17 ^ ~b19 & b11;
          s2[26] = b26 ^ ~b28 & b20;
          s2[27] = b27 ^ ~b29 & b21;
          s2[36] = b36 ^ ~b38 & b30;
          s2[37] = b37 ^ ~b39 & b31;
          s2[46] = b46 ^ ~b48 & b40;
          s2[47] = b47 ^ ~b49 & b41;
          s2[8] = b8 ^ ~b0 & b22;
          s2[9] = b9 ^ ~b1 & b3;
          s2[18] = b18 ^ ~b10 & b12;
          s2[19] = b19 ^ ~b11 & b13;
          s2[28] = b28 ^ ~b20 & b222;
          s2[29] = b29 ^ ~b21 & b23;
          s2[38] = b38 ^ ~b30 & b32;
          s2[39] = b39 ^ ~b31 & b33;
          s2[48] = b48 ^ ~b40 & b42;
          s2[49] = b49 ^ ~b41 & b43;
          s2[0] ^= RC[n2];
          s2[1] ^= RC[n2 + 1];
        }
      };
      if (COMMON_JS) {
        module.exports = methods;
      } else {
        for (i4 = 0; i4 < methodNames.length; ++i4) {
          root[methodNames[i4]] = methods[methodNames[i4]];
        }
        if (AMD) {
          define(function() {
            return methods;
          });
        }
      }
    })();
  }
});

// node_modules/@lit/reactive-element/development/css-tag.js
var NODE_MODE = false;
var global2 = globalThis;
var supportsAdoptingStyleSheets = global2.ShadowRoot && (global2.ShadyCSS === void 0 || global2.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype;
var constructionToken = Symbol();
var cssTagCache = /* @__PURE__ */ new WeakMap();
var CSSResult = class {
  constructor(cssText, strings, safeToken) {
    this["_$cssResult$"] = true;
    if (safeToken !== constructionToken) {
      throw new Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
    }
    this.cssText = cssText;
    this._strings = strings;
  }
  // This is a getter so that it's lazy. In practice, this means stylesheets
  // are not created until the first element instance is made.
  get styleSheet() {
    let styleSheet = this._styleSheet;
    const strings = this._strings;
    if (supportsAdoptingStyleSheets && styleSheet === void 0) {
      const cacheable = strings !== void 0 && strings.length === 1;
      if (cacheable) {
        styleSheet = cssTagCache.get(strings);
      }
      if (styleSheet === void 0) {
        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(this.cssText);
        if (cacheable) {
          cssTagCache.set(strings, styleSheet);
        }
      }
    }
    return styleSheet;
  }
  toString() {
    return this.cssText;
  }
};
var textFromCSSResult = (value) => {
  if (value["_$cssResult$"] === true) {
    return value.cssText;
  } else if (typeof value === "number") {
    return value;
  } else {
    throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.`);
  }
};
var unsafeCSS = (value) => new CSSResult(typeof value === "string" ? value : String(value), void 0, constructionToken);
var css = (strings, ...values) => {
  const cssText = strings.length === 1 ? strings[0] : values.reduce((acc, v6, idx) => acc + textFromCSSResult(v6) + strings[idx + 1], strings[0]);
  return new CSSResult(cssText, strings, constructionToken);
};
var adoptStyles = (renderRoot, styles) => {
  if (supportsAdoptingStyleSheets) {
    renderRoot.adoptedStyleSheets = styles.map((s2) => s2 instanceof CSSStyleSheet ? s2 : s2.styleSheet);
  } else {
    for (const s2 of styles) {
      const style = document.createElement("style");
      const nonce = global2["litNonce"];
      if (nonce !== void 0) {
        style.setAttribute("nonce", nonce);
      }
      style.textContent = s2.cssText;
      renderRoot.appendChild(style);
    }
  }
};
var cssResultFromStyleSheet = (sheet) => {
  let cssText = "";
  for (const rule of sheet.cssRules) {
    cssText += rule.cssText;
  }
  return unsafeCSS(cssText);
};
var getCompatibleStyle = supportsAdoptingStyleSheets || NODE_MODE && global2.CSSStyleSheet === void 0 ? (s2) => s2 : (s2) => s2 instanceof CSSStyleSheet ? cssResultFromStyleSheet(s2) : s2;

// node_modules/@lit/reactive-element/development/reactive-element.js
var { is, defineProperty, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, getPrototypeOf } = Object;
var NODE_MODE2 = false;
var global3 = globalThis;
if (NODE_MODE2) {
  global3.customElements ?? (global3.customElements = customElements);
}
var DEV_MODE = true;
var issueWarning;
var trustedTypes = global3.trustedTypes;
var emptyStringForBooleanAttribute = trustedTypes ? trustedTypes.emptyScript : "";
var polyfillSupport = DEV_MODE ? global3.reactiveElementPolyfillSupportDevMode : global3.reactiveElementPolyfillSupport;
var _a;
if (DEV_MODE) {
  const issuedWarnings = global3.litIssuedWarnings ?? (global3.litIssuedWarnings = /* @__PURE__ */ new Set());
  issueWarning = (code, warning) => {
    warning += ` See https://lit.dev/msg/${code} for more information.`;
    if (!issuedWarnings.has(warning)) {
      console.warn(warning);
      issuedWarnings.add(warning);
    }
  };
  issueWarning("dev-mode", `Lit is in dev mode. Not recommended for production!`);
  if (((_a = global3.ShadyDOM) == null ? void 0 : _a.inUse) && polyfillSupport === void 0) {
    issueWarning("polyfill-support-missing", `Shadow DOM is being polyfilled via \`ShadyDOM\` but the \`polyfill-support\` module has not been loaded.`);
  }
}
var debugLogEvent = DEV_MODE ? (event) => {
  const shouldEmit = global3.emitLitDebugLogEvents;
  if (!shouldEmit) {
    return;
  }
  global3.dispatchEvent(new CustomEvent("lit-debug", {
    detail: event
  }));
} : void 0;
var JSCompiler_renameProperty = (prop, _obj) => prop;
var defaultConverter = {
  toAttribute(value, type) {
    switch (type) {
      case Boolean:
        value = value ? emptyStringForBooleanAttribute : null;
        break;
      case Object:
      case Array:
        value = value == null ? value : JSON.stringify(value);
        break;
    }
    return value;
  },
  fromAttribute(value, type) {
    let fromValue = value;
    switch (type) {
      case Boolean:
        fromValue = value !== null;
        break;
      case Number:
        fromValue = value === null ? null : Number(value);
        break;
      case Object:
      case Array:
        try {
          fromValue = JSON.parse(value);
        } catch (e2) {
          fromValue = null;
        }
        break;
    }
    return fromValue;
  }
};
var notEqual = (value, old) => !is(value, old);
var defaultPropertyDeclaration = {
  attribute: true,
  type: String,
  converter: defaultConverter,
  reflect: false,
  hasChanged: notEqual
};
Symbol.metadata ?? (Symbol.metadata = Symbol("metadata"));
global3.litPropertyMetadata ?? (global3.litPropertyMetadata = /* @__PURE__ */ new WeakMap());
var ReactiveElement = class extends HTMLElement {
  /**
   * Adds an initializer function to the class that is called during instance
   * construction.
   *
   * This is useful for code that runs against a `ReactiveElement`
   * subclass, such as a decorator, that needs to do work for each
   * instance, such as setting up a `ReactiveController`.
   *
   * ```ts
   * const myDecorator = (target: typeof ReactiveElement, key: string) => {
   *   target.addInitializer((instance: ReactiveElement) => {
   *     // This is run during construction of the element
   *     new MyController(instance);
   *   });
   * }
   * ```
   *
   * Decorating a field will then cause each instance to run an initializer
   * that adds a controller:
   *
   * ```ts
   * class MyElement extends LitElement {
   *   @myDecorator foo;
   * }
   * ```
   *
   * Initializers are stored per-constructor. Adding an initializer to a
   * subclass does not add it to a superclass. Since initializers are run in
   * constructors, initializers will run in order of the class hierarchy,
   * starting with superclasses and progressing to the instance's class.
   *
   * @nocollapse
   */
  static addInitializer(initializer) {
    this.__prepare();
    (this._initializers ?? (this._initializers = [])).push(initializer);
  }
  /**
   * Returns a list of attributes corresponding to the registered properties.
   * @nocollapse
   * @category attributes
   */
  static get observedAttributes() {
    this.finalize();
    return this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()];
  }
  /**
   * Creates a property accessor on the element prototype if one does not exist
   * and stores a {@linkcode PropertyDeclaration} for the property with the
   * given options. The property setter calls the property's `hasChanged`
   * property option or uses a strict identity check to determine whether or not
   * to request an update.
   *
   * This method may be overridden to customize properties; however,
   * when doing so, it's important to call `super.createProperty` to ensure
   * the property is setup correctly. This method calls
   * `getPropertyDescriptor` internally to get a descriptor to install.
   * To customize what properties do when they are get or set, override
   * `getPropertyDescriptor`. To customize the options for a property,
   * implement `createProperty` like this:
   *
   * ```ts
   * static createProperty(name, options) {
   *   options = Object.assign(options, {myOption: true});
   *   super.createProperty(name, options);
   * }
   * ```
   *
   * @nocollapse
   * @category properties
   */
  static createProperty(name, options = defaultPropertyDeclaration) {
    if (options.state) {
      options.attribute = false;
    }
    this.__prepare();
    this.elementProperties.set(name, options);
    if (!options.noAccessor) {
      const key2 = DEV_MODE ? (
        // Use Symbol.for in dev mode to make it easier to maintain state
        // when doing HMR.
        Symbol.for(`${String(name)} (@property() cache)`)
      ) : Symbol();
      const descriptor = this.getPropertyDescriptor(name, key2, options);
      if (descriptor !== void 0) {
        defineProperty(this.prototype, name, descriptor);
      }
    }
  }
  /**
   * Returns a property descriptor to be defined on the given named property.
   * If no descriptor is returned, the property will not become an accessor.
   * For example,
   *
   * ```ts
   * class MyElement extends LitElement {
   *   static getPropertyDescriptor(name, key, options) {
   *     const defaultDescriptor =
   *         super.getPropertyDescriptor(name, key, options);
   *     const setter = defaultDescriptor.set;
   *     return {
   *       get: defaultDescriptor.get,
   *       set(value) {
   *         setter.call(this, value);
   *         // custom action.
   *       },
   *       configurable: true,
   *       enumerable: true
   *     }
   *   }
   * }
   * ```
   *
   * @nocollapse
   * @category properties
   */
  static getPropertyDescriptor(name, key2, options) {
    const { get, set } = getOwnPropertyDescriptor(this.prototype, name) ?? {
      get() {
        return this[key2];
      },
      set(v6) {
        this[key2] = v6;
      }
    };
    if (DEV_MODE && get == null) {
      if ("value" in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {
        throw new Error(`Field ${JSON.stringify(String(name))} on ${this.name} was declared as a reactive property but it's actually declared as a value on the prototype. Usually this is due to using @property or @state on a method.`);
      }
      issueWarning("reactive-property-without-getter", `Field ${JSON.stringify(String(name))} on ${this.name} was declared as a reactive property but it does not have a getter. This will be an error in a future version of Lit.`);
    }
    return {
      get() {
        return get == null ? void 0 : get.call(this);
      },
      set(value) {
        const oldValue = get == null ? void 0 : get.call(this);
        set.call(this, value);
        this.requestUpdate(name, oldValue, options);
      },
      configurable: true,
      enumerable: true
    };
  }
  /**
   * Returns the property options associated with the given property.
   * These options are defined with a `PropertyDeclaration` via the `properties`
   * object or the `@property` decorator and are registered in
   * `createProperty(...)`.
   *
   * Note, this method should be considered "final" and not overridden. To
   * customize the options for a given property, override
   * {@linkcode createProperty}.
   *
   * @nocollapse
   * @final
   * @category properties
   */
  static getPropertyOptions(name) {
    return this.elementProperties.get(name) ?? defaultPropertyDeclaration;
  }
  /**
   * Initializes static own properties of the class used in bookkeeping
   * for element properties, initializers, etc.
   *
   * Can be called multiple times by code that needs to ensure these
   * properties exist before using them.
   *
   * This method ensures the superclass is finalized so that inherited
   * property metadata can be copied down.
   * @nocollapse
   */
  static __prepare() {
    if (this.hasOwnProperty(JSCompiler_renameProperty("elementProperties", this))) {
      return;
    }
    const superCtor = getPrototypeOf(this);
    superCtor.finalize();
    if (superCtor._initializers !== void 0) {
      this._initializers = [...superCtor._initializers];
    }
    this.elementProperties = new Map(superCtor.elementProperties);
  }
  /**
   * Finishes setting up the class so that it's ready to be registered
   * as a custom element and instantiated.
   *
   * This method is called by the ReactiveElement.observedAttributes getter.
   * If you override the observedAttributes getter, you must either call
   * super.observedAttributes to trigger finalization, or call finalize()
   * yourself.
   *
   * @nocollapse
   */
  static finalize() {
    if (this.hasOwnProperty(JSCompiler_renameProperty("finalized", this))) {
      return;
    }
    this.finalized = true;
    this.__prepare();
    if (this.hasOwnProperty(JSCompiler_renameProperty("properties", this))) {
      const props = this.properties;
      const propKeys = [
        ...getOwnPropertyNames(props),
        ...getOwnPropertySymbols(props)
      ];
      for (const p3 of propKeys) {
        this.createProperty(p3, props[p3]);
      }
    }
    const metadata = this[Symbol.metadata];
    if (metadata !== null) {
      const properties = litPropertyMetadata.get(metadata);
      if (properties !== void 0) {
        for (const [p3, options] of properties) {
          this.elementProperties.set(p3, options);
        }
      }
    }
    this.__attributeToPropertyMap = /* @__PURE__ */ new Map();
    for (const [p3, options] of this.elementProperties) {
      const attr = this.__attributeNameForProperty(p3, options);
      if (attr !== void 0) {
        this.__attributeToPropertyMap.set(attr, p3);
      }
    }
    this.elementStyles = this.finalizeStyles(this.styles);
    if (DEV_MODE) {
      if (this.hasOwnProperty("createProperty")) {
        issueWarning("no-override-create-property", "Overriding ReactiveElement.createProperty() is deprecated. The override will not be called with standard decorators");
      }
      if (this.hasOwnProperty("getPropertyDescriptor")) {
        issueWarning("no-override-get-property-descriptor", "Overriding ReactiveElement.getPropertyDescriptor() is deprecated. The override will not be called with standard decorators");
      }
    }
  }
  /**
   * Takes the styles the user supplied via the `static styles` property and
   * returns the array of styles to apply to the element.
   * Override this method to integrate into a style management system.
   *
   * Styles are deduplicated preserving the _last_ instance in the list. This
   * is a performance optimization to avoid duplicated styles that can occur
   * especially when composing via subclassing. The last item is kept to try
   * to preserve the cascade order with the assumption that it's most important
   * that last added styles override previous styles.
   *
   * @nocollapse
   * @category styles
   */
  static finalizeStyles(styles) {
    const elementStyles2 = [];
    if (Array.isArray(styles)) {
      const set = new Set(styles.flat(Infinity).reverse());
      for (const s2 of set) {
        elementStyles2.unshift(getCompatibleStyle(s2));
      }
    } else if (styles !== void 0) {
      elementStyles2.push(getCompatibleStyle(styles));
    }
    return elementStyles2;
  }
  /**
   * Returns the property name for the given attribute `name`.
   * @nocollapse
   */
  static __attributeNameForProperty(name, options) {
    const attribute = options.attribute;
    return attribute === false ? void 0 : typeof attribute === "string" ? attribute : typeof name === "string" ? name.toLowerCase() : void 0;
  }
  constructor() {
    super();
    this.__instanceProperties = void 0;
    this.isUpdatePending = false;
    this.hasUpdated = false;
    this.__reflectingProperty = null;
    this.__initialize();
  }
  /**
   * Internal only override point for customizing work done when elements
   * are constructed.
   */
  __initialize() {
    var _a7;
    this.__updatePromise = new Promise((res) => this.enableUpdating = res);
    this._$changedProperties = /* @__PURE__ */ new Map();
    this.__saveInstanceProperties();
    this.requestUpdate();
    (_a7 = this.constructor._initializers) == null ? void 0 : _a7.forEach((i4) => i4(this));
  }
  /**
   * Registers a `ReactiveController` to participate in the element's reactive
   * update cycle. The element automatically calls into any registered
   * controllers during its lifecycle callbacks.
   *
   * If the element is connected when `addController()` is called, the
   * controller's `hostConnected()` callback will be immediately called.
   * @category controllers
   */
  addController(controller) {
    var _a7;
    (this.__controllers ?? (this.__controllers = /* @__PURE__ */ new Set())).add(controller);
    if (this.renderRoot !== void 0 && this.isConnected) {
      (_a7 = controller.hostConnected) == null ? void 0 : _a7.call(controller);
    }
  }
  /**
   * Removes a `ReactiveController` from the element.
   * @category controllers
   */
  removeController(controller) {
    var _a7;
    (_a7 = this.__controllers) == null ? void 0 : _a7.delete(controller);
  }
  /**
   * Fixes any properties set on the instance before upgrade time.
   * Otherwise these would shadow the accessor and break these properties.
   * The properties are stored in a Map which is played back after the
   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome
   * (<=41), properties created for native platform properties like (`id` or
   * `name`) may not have default values set in the element constructor. On
   * these browsers native properties appear on instances and therefore their
   * default value will overwrite any element default (e.g. if the element sets
   * this.id = 'id' in the constructor, the 'id' will become '' since this is
   * the native platform default).
   */
  __saveInstanceProperties() {
    const instanceProperties = /* @__PURE__ */ new Map();
    const elementProperties = this.constructor.elementProperties;
    for (const p3 of elementProperties.keys()) {
      if (this.hasOwnProperty(p3)) {
        instanceProperties.set(p3, this[p3]);
        delete this[p3];
      }
    }
    if (instanceProperties.size > 0) {
      this.__instanceProperties = instanceProperties;
    }
  }
  /**
   * Returns the node into which the element should render and by default
   * creates and returns an open shadowRoot. Implement to customize where the
   * element's DOM is rendered. For example, to render into the element's
   * childNodes, return `this`.
   *
   * @return Returns a node into which to render.
   * @category rendering
   */
  createRenderRoot() {
    const renderRoot = this.shadowRoot ?? this.attachShadow(this.constructor.shadowRootOptions);
    adoptStyles(renderRoot, this.constructor.elementStyles);
    return renderRoot;
  }
  /**
   * On first connection, creates the element's renderRoot, sets up
   * element styling, and enables updating.
   * @category lifecycle
   */
  connectedCallback() {
    var _a7;
    this.renderRoot ?? (this.renderRoot = this.createRenderRoot());
    this.enableUpdating(true);
    (_a7 = this.__controllers) == null ? void 0 : _a7.forEach((c3) => {
      var _a8;
      return (_a8 = c3.hostConnected) == null ? void 0 : _a8.call(c3);
    });
  }
  /**
   * Note, this method should be considered final and not overridden. It is
   * overridden on the element instance with a function that triggers the first
   * update.
   * @category updates
   */
  enableUpdating(_requestedUpdate) {
  }
  /**
   * Allows for `super.disconnectedCallback()` in extensions while
   * reserving the possibility of making non-breaking feature additions
   * when disconnecting at some point in the future.
   * @category lifecycle
   */
  disconnectedCallback() {
    var _a7;
    (_a7 = this.__controllers) == null ? void 0 : _a7.forEach((c3) => {
      var _a8;
      return (_a8 = c3.hostDisconnected) == null ? void 0 : _a8.call(c3);
    });
  }
  /**
   * Synchronizes property values when attributes change.
   *
   * Specifically, when an attribute is set, the corresponding property is set.
   * You should rarely need to implement this callback. If this method is
   * overridden, `super.attributeChangedCallback(name, _old, value)` must be
   * called.
   *
   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)
   * on MDN for more information about the `attributeChangedCallback`.
   * @category attributes
   */
  attributeChangedCallback(name, _old, value) {
    this._$attributeToProperty(name, value);
  }
  __propertyToAttribute(name, value) {
    var _a7;
    const elemProperties = this.constructor.elementProperties;
    const options = elemProperties.get(name);
    const attr = this.constructor.__attributeNameForProperty(name, options);
    if (attr !== void 0 && options.reflect === true) {
      const converter = ((_a7 = options.converter) == null ? void 0 : _a7.toAttribute) !== void 0 ? options.converter : defaultConverter;
      const attrValue = converter.toAttribute(value, options.type);
      if (DEV_MODE && this.constructor.enabledWarnings.includes("migration") && attrValue === void 0) {
        issueWarning("undefined-attribute-value", `The attribute value for the ${name} property is undefined on element ${this.localName}. The attribute will be removed, but in the previous version of \`ReactiveElement\`, the attribute would not have changed.`);
      }
      this.__reflectingProperty = name;
      if (attrValue == null) {
        this.removeAttribute(attr);
      } else {
        this.setAttribute(attr, attrValue);
      }
      this.__reflectingProperty = null;
    }
  }
  /** @internal */
  _$attributeToProperty(name, value) {
    var _a7;
    const ctor = this.constructor;
    const propName = ctor.__attributeToPropertyMap.get(name);
    if (propName !== void 0 && this.__reflectingProperty !== propName) {
      const options = ctor.getPropertyOptions(propName);
      const converter = typeof options.converter === "function" ? { fromAttribute: options.converter } : ((_a7 = options.converter) == null ? void 0 : _a7.fromAttribute) !== void 0 ? options.converter : defaultConverter;
      this.__reflectingProperty = propName;
      this[propName] = converter.fromAttribute(
        value,
        options.type
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
      );
      this.__reflectingProperty = null;
    }
  }
  /**
   * Requests an update which is processed asynchronously. This should be called
   * when an element should update based on some state not triggered by setting
   * a reactive property. In this case, pass no arguments. It should also be
   * called when manually implementing a property setter. In this case, pass the
   * property `name` and `oldValue` to ensure that any configured property
   * options are honored.
   *
   * @param name name of requesting property
   * @param oldValue old value of requesting property
   * @param options property options to use instead of the previously
   *     configured options
   * @category updates
   */
  requestUpdate(name, oldValue, options) {
    if (name !== void 0) {
      if (DEV_MODE && name instanceof Event) {
        issueWarning(``, `The requestUpdate() method was called with an Event as the property name. This is probably a mistake caused by binding this.requestUpdate as an event listener. Instead bind a function that will call it with no arguments: () => this.requestUpdate()`);
      }
      options ?? (options = this.constructor.getPropertyOptions(name));
      const hasChanged = options.hasChanged ?? notEqual;
      const newValue = this[name];
      if (hasChanged(newValue, oldValue)) {
        this._$changeProperty(name, oldValue, options);
      } else {
        return;
      }
    }
    if (this.isUpdatePending === false) {
      this.__updatePromise = this.__enqueueUpdate();
    }
  }
  /**
   * @internal
   */
  _$changeProperty(name, oldValue, options) {
    if (!this._$changedProperties.has(name)) {
      this._$changedProperties.set(name, oldValue);
    }
    if (options.reflect === true && this.__reflectingProperty !== name) {
      (this.__reflectingProperties ?? (this.__reflectingProperties = /* @__PURE__ */ new Set())).add(name);
    }
  }
  /**
   * Sets up the element to asynchronously update.
   */
  async __enqueueUpdate() {
    this.isUpdatePending = true;
    try {
      await this.__updatePromise;
    } catch (e2) {
      Promise.reject(e2);
    }
    const result = this.scheduleUpdate();
    if (result != null) {
      await result;
    }
    return !this.isUpdatePending;
  }
  /**
   * Schedules an element update. You can override this method to change the
   * timing of updates by returning a Promise. The update will await the
   * returned Promise, and you should resolve the Promise to allow the update
   * to proceed. If this method is overridden, `super.scheduleUpdate()`
   * must be called.
   *
   * For instance, to schedule updates to occur just before the next frame:
   *
   * ```ts
   * override protected async scheduleUpdate(): Promise<unknown> {
   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));
   *   super.scheduleUpdate();
   * }
   * ```
   * @category updates
   */
  scheduleUpdate() {
    const result = this.performUpdate();
    if (DEV_MODE && this.constructor.enabledWarnings.includes("async-perform-update") && typeof (result == null ? void 0 : result.then) === "function") {
      issueWarning("async-perform-update", `Element ${this.localName} returned a Promise from performUpdate(). This behavior is deprecated and will be removed in a future version of ReactiveElement.`);
    }
    return result;
  }
  /**
   * Performs an element update. Note, if an exception is thrown during the
   * update, `firstUpdated` and `updated` will not be called.
   *
   * Call `performUpdate()` to immediately process a pending update. This should
   * generally not be needed, but it can be done in rare cases when you need to
   * update synchronously.
   *
   * @category updates
   */
  performUpdate() {
    var _a7;
    if (!this.isUpdatePending) {
      return;
    }
    debugLogEvent == null ? void 0 : debugLogEvent({ kind: "update" });
    if (!this.hasUpdated) {
      this.renderRoot ?? (this.renderRoot = this.createRenderRoot());
      if (DEV_MODE) {
        const ctor = this.constructor;
        const shadowedProperties = [...ctor.elementProperties.keys()].filter((p3) => this.hasOwnProperty(p3) && p3 in getPrototypeOf(this));
        if (shadowedProperties.length) {
          throw new Error(`The following properties on element ${this.localName} will not trigger updates as expected because they are set using class fields: ${shadowedProperties.join(", ")}. Native class fields and some compiled output will overwrite accessors used for detecting changes. See https://lit.dev/msg/class-field-shadowing for more information.`);
        }
      }
      if (this.__instanceProperties) {
        for (const [p3, value] of this.__instanceProperties) {
          this[p3] = value;
        }
        this.__instanceProperties = void 0;
      }
      const elementProperties = this.constructor.elementProperties;
      if (elementProperties.size > 0) {
        for (const [p3, options] of elementProperties) {
          if (options.wrapped === true && !this._$changedProperties.has(p3) && this[p3] !== void 0) {
            this._$changeProperty(p3, this[p3], options);
          }
        }
      }
    }
    let shouldUpdate = false;
    const changedProperties = this._$changedProperties;
    try {
      shouldUpdate = this.shouldUpdate(changedProperties);
      if (shouldUpdate) {
        this.willUpdate(changedProperties);
        (_a7 = this.__controllers) == null ? void 0 : _a7.forEach((c3) => {
          var _a8;
          return (_a8 = c3.hostUpdate) == null ? void 0 : _a8.call(c3);
        });
        this.update(changedProperties);
      } else {
        this.__markUpdated();
      }
    } catch (e2) {
      shouldUpdate = false;
      this.__markUpdated();
      throw e2;
    }
    if (shouldUpdate) {
      this._$didUpdate(changedProperties);
    }
  }
  /**
   * Invoked before `update()` to compute values needed during the update.
   *
   * Implement `willUpdate` to compute property values that depend on other
   * properties and are used in the rest of the update process.
   *
   * ```ts
   * willUpdate(changedProperties) {
   *   // only need to check changed properties for an expensive computation.
   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {
   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);
   *   }
   * }
   *
   * render() {
   *   return html`SHA: ${this.sha}`;
   * }
   * ```
   *
   * @category updates
   */
  willUpdate(_changedProperties) {
  }
  // Note, this is an override point for polyfill-support.
  // @internal
  _$didUpdate(changedProperties) {
    var _a7;
    (_a7 = this.__controllers) == null ? void 0 : _a7.forEach((c3) => {
      var _a8;
      return (_a8 = c3.hostUpdated) == null ? void 0 : _a8.call(c3);
    });
    if (!this.hasUpdated) {
      this.hasUpdated = true;
      this.firstUpdated(changedProperties);
    }
    this.updated(changedProperties);
    if (DEV_MODE && this.isUpdatePending && this.constructor.enabledWarnings.includes("change-in-update")) {
      issueWarning("change-in-update", `Element ${this.localName} scheduled an update (generally because a property was set) after an update completed, causing a new update to be scheduled. This is inefficient and should be avoided unless the next update can only be scheduled as a side effect of the previous update.`);
    }
  }
  __markUpdated() {
    this._$changedProperties = /* @__PURE__ */ new Map();
    this.isUpdatePending = false;
  }
  /**
   * Returns a Promise that resolves when the element has completed updating.
   * The Promise value is a boolean that is `true` if the element completed the
   * update without triggering another update. The Promise result is `false` if
   * a property was set inside `updated()`. If the Promise is rejected, an
   * exception was thrown during the update.
   *
   * To await additional asynchronous work, override the `getUpdateComplete`
   * method. For example, it is sometimes useful to await a rendered element
   * before fulfilling this Promise. To do this, first await
   * `super.getUpdateComplete()`, then any subsequent state.
   *
   * @return A promise of a boolean that resolves to true if the update completed
   *     without triggering another update.
   * @category updates
   */
  get updateComplete() {
    return this.getUpdateComplete();
  }
  /**
   * Override point for the `updateComplete` promise.
   *
   * It is not safe to override the `updateComplete` getter directly due to a
   * limitation in TypeScript which means it is not possible to call a
   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target
   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).
   * This method should be overridden instead. For example:
   *
   * ```ts
   * class MyElement extends LitElement {
   *   override async getUpdateComplete() {
   *     const result = await super.getUpdateComplete();
   *     await this._myChild.updateComplete;
   *     return result;
   *   }
   * }
   * ```
   *
   * @return A promise of a boolean that resolves to true if the update completed
   *     without triggering another update.
   * @category updates
   */
  getUpdateComplete() {
    return this.__updatePromise;
  }
  /**
   * Controls whether or not `update()` should be called when the element requests
   * an update. By default, this method always returns `true`, but this can be
   * customized to control when to update.
   *
   * @param _changedProperties Map of changed properties with old values
   * @category updates
   */
  shouldUpdate(_changedProperties) {
    return true;
  }
  /**
   * Updates the element. This method reflects property values to attributes.
   * It can be overridden to render and keep updated element DOM.
   * Setting properties inside this method will *not* trigger
   * another update.
   *
   * @param _changedProperties Map of changed properties with old values
   * @category updates
   */
  update(_changedProperties) {
    this.__reflectingProperties && (this.__reflectingProperties = this.__reflectingProperties.forEach((p3) => this.__propertyToAttribute(p3, this[p3])));
    this.__markUpdated();
  }
  /**
   * Invoked whenever the element is updated. Implement to perform
   * post-updating tasks via DOM APIs, for example, focusing an element.
   *
   * Setting properties inside this method will trigger the element to update
   * again after this update cycle completes.
   *
   * @param _changedProperties Map of changed properties with old values
   * @category updates
   */
  updated(_changedProperties) {
  }
  /**
   * Invoked when the element is first updated. Implement to perform one time
   * work on the element after update.
   *
   * ```ts
   * firstUpdated() {
   *   this.renderRoot.getElementById('my-text-area').focus();
   * }
   * ```
   *
   * Setting properties inside this method will trigger the element to update
   * again after this update cycle completes.
   *
   * @param _changedProperties Map of changed properties with old values
   * @category updates
   */
  firstUpdated(_changedProperties) {
  }
};
ReactiveElement.elementStyles = [];
ReactiveElement.shadowRootOptions = { mode: "open" };
ReactiveElement[JSCompiler_renameProperty("elementProperties", ReactiveElement)] = /* @__PURE__ */ new Map();
ReactiveElement[JSCompiler_renameProperty("finalized", ReactiveElement)] = /* @__PURE__ */ new Map();
polyfillSupport == null ? void 0 : polyfillSupport({ ReactiveElement });
if (DEV_MODE) {
  ReactiveElement.enabledWarnings = [
    "change-in-update",
    "async-perform-update"
  ];
  const ensureOwnWarnings = function(ctor) {
    if (!ctor.hasOwnProperty(JSCompiler_renameProperty("enabledWarnings", ctor))) {
      ctor.enabledWarnings = ctor.enabledWarnings.slice();
    }
  };
  ReactiveElement.enableWarning = function(warning) {
    ensureOwnWarnings(this);
    if (!this.enabledWarnings.includes(warning)) {
      this.enabledWarnings.push(warning);
    }
  };
  ReactiveElement.disableWarning = function(warning) {
    ensureOwnWarnings(this);
    const i4 = this.enabledWarnings.indexOf(warning);
    if (i4 >= 0) {
      this.enabledWarnings.splice(i4, 1);
    }
  };
}
(global3.reactiveElementVersions ?? (global3.reactiveElementVersions = [])).push("2.0.4");
if (DEV_MODE && global3.reactiveElementVersions.length > 1) {
  issueWarning("multiple-versions", `Multiple versions of Lit loaded. Loading multiple versions is not recommended.`);
}

// node_modules/lit-html/development/lit-html.js
var DEV_MODE2 = true;
var ENABLE_EXTRA_SECURITY_HOOKS = true;
var ENABLE_SHADYDOM_NOPATCH = true;
var NODE_MODE3 = false;
var global4 = globalThis;
var debugLogEvent2 = DEV_MODE2 ? (event) => {
  const shouldEmit = global4.emitLitDebugLogEvents;
  if (!shouldEmit) {
    return;
  }
  global4.dispatchEvent(new CustomEvent("lit-debug", {
    detail: event
  }));
} : void 0;
var debugLogRenderId = 0;
var issueWarning2;
if (DEV_MODE2) {
  global4.litIssuedWarnings ?? (global4.litIssuedWarnings = /* @__PURE__ */ new Set());
  issueWarning2 = (code, warning) => {
    warning += code ? ` See https://lit.dev/msg/${code} for more information.` : "";
    if (!global4.litIssuedWarnings.has(warning)) {
      console.warn(warning);
      global4.litIssuedWarnings.add(warning);
    }
  };
  issueWarning2("dev-mode", `Lit is in dev mode. Not recommended for production!`);
}
var _a2, _b;
var wrap = ENABLE_SHADYDOM_NOPATCH && ((_a2 = global4.ShadyDOM) == null ? void 0 : _a2.inUse) && ((_b = global4.ShadyDOM) == null ? void 0 : _b.noPatch) === true ? global4.ShadyDOM.wrap : (node) => node;
var trustedTypes2 = global4.trustedTypes;
var policy = trustedTypes2 ? trustedTypes2.createPolicy("lit-html", {
  createHTML: (s2) => s2
}) : void 0;
var identityFunction = (value) => value;
var noopSanitizer = (_node, _name, _type) => identityFunction;
var setSanitizer = (newSanitizer) => {
  if (!ENABLE_EXTRA_SECURITY_HOOKS) {
    return;
  }
  if (sanitizerFactoryInternal !== noopSanitizer) {
    throw new Error(`Attempted to overwrite existing lit-html security policy. setSanitizeDOMValueFactory should be called at most once.`);
  }
  sanitizerFactoryInternal = newSanitizer;
};
var _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {
  sanitizerFactoryInternal = noopSanitizer;
};
var createSanitizer = (node, name, type) => {
  return sanitizerFactoryInternal(node, name, type);
};
var boundAttributeSuffix = "$lit$";
var marker = `lit$${Math.random().toFixed(9).slice(2)}$`;
var markerMatch = "?" + marker;
var nodeMarker = `<${markerMatch}>`;
var d = NODE_MODE3 && global4.document === void 0 ? {
  createTreeWalker() {
    return {};
  }
} : document;
var createMarker = () => d.createComment("");
var isPrimitive = (value) => value === null || typeof value != "object" && typeof value != "function";
var isArray = Array.isArray;
var isIterable = (value) => isArray(value) || // eslint-disable-next-line @typescript-eslint/no-explicit-any
typeof (value == null ? void 0 : value[Symbol.iterator]) === "function";
var SPACE_CHAR = `[ 	
\f\r]`;
var ATTR_VALUE_CHAR = `[^ 	
\f\r"'\`<>=]`;
var NAME_CHAR = `[^\\s"'>=/]`;
var textEndRegex = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g;
var COMMENT_START = 1;
var TAG_NAME = 2;
var DYNAMIC_TAG_NAME = 3;
var commentEndRegex = /-->/g;
var comment2EndRegex = />/g;
var tagEndRegex = new RegExp(`>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|("|')|))|$)`, "g");
var ENTIRE_MATCH = 0;
var ATTRIBUTE_NAME = 1;
var SPACES_AND_EQUALS = 2;
var QUOTE_CHAR = 3;
var singleQuoteAttrEndRegex = /'/g;
var doubleQuoteAttrEndRegex = /"/g;
var rawTextElement = /^(?:script|style|textarea|title)$/i;
var HTML_RESULT = 1;
var SVG_RESULT = 2;
var MATHML_RESULT = 3;
var ATTRIBUTE_PART = 1;
var CHILD_PART = 2;
var PROPERTY_PART = 3;
var BOOLEAN_ATTRIBUTE_PART = 4;
var EVENT_PART = 5;
var ELEMENT_PART = 6;
var COMMENT_PART = 7;
var tag = (type) => (strings, ...values) => {
  if (DEV_MODE2 && strings.some((s2) => s2 === void 0)) {
    console.warn("Some template strings are undefined.\nThis is probably caused by illegal octal escape sequences.");
  }
  if (DEV_MODE2) {
    if (values.some((val) => val == null ? void 0 : val["_$litStatic$"])) {
      issueWarning2("", `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.
Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`);
    }
  }
  return {
    // This property needs to remain unminified.
    ["_$litType$"]: type,
    strings,
    values
  };
};
var html = tag(HTML_RESULT);
var svg = tag(SVG_RESULT);
var mathml = tag(MATHML_RESULT);
var noChange = Symbol.for("lit-noChange");
var nothing = Symbol.for("lit-nothing");
var templateCache = /* @__PURE__ */ new WeakMap();
var walker = d.createTreeWalker(
  d,
  129
  /* NodeFilter.SHOW_{ELEMENT|COMMENT} */
);
var sanitizerFactoryInternal = noopSanitizer;
function trustFromTemplateString(tsa, stringFromTSA) {
  if (!isArray(tsa) || !tsa.hasOwnProperty("raw")) {
    let message = "invalid template strings array";
    if (DEV_MODE2) {
      message = `
          Internal Error: expected template strings to be an array
          with a 'raw' field. Faking a template strings array by
          calling html or svg like an ordinary function is effectively
          the same as calling unsafeHtml and can lead to major security
          issues, e.g. opening your code up to XSS attacks.
          If you're using the html or svg tagged template functions normally
          and still seeing this error, please file a bug at
          https://github.com/lit/lit/issues/new?template=bug_report.md
          and include information about your build tooling, if any.
        `.trim().replace(/\n */g, "\n");
    }
    throw new Error(message);
  }
  return policy !== void 0 ? policy.createHTML(stringFromTSA) : stringFromTSA;
}
var getTemplateHtml = (strings, type) => {
  const l3 = strings.length - 1;
  const attrNames = [];
  let html2 = type === SVG_RESULT ? "<svg>" : type === MATHML_RESULT ? "<math>" : "";
  let rawTextEndRegex;
  let regex = textEndRegex;
  for (let i4 = 0; i4 < l3; i4++) {
    const s2 = strings[i4];
    let attrNameEndIndex = -1;
    let attrName;
    let lastIndex = 0;
    let match;
    while (lastIndex < s2.length) {
      regex.lastIndex = lastIndex;
      match = regex.exec(s2);
      if (match === null) {
        break;
      }
      lastIndex = regex.lastIndex;
      if (regex === textEndRegex) {
        if (match[COMMENT_START] === "!--") {
          regex = commentEndRegex;
        } else if (match[COMMENT_START] !== void 0) {
          regex = comment2EndRegex;
        } else if (match[TAG_NAME] !== void 0) {
          if (rawTextElement.test(match[TAG_NAME])) {
            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, "g");
          }
          regex = tagEndRegex;
        } else if (match[DYNAMIC_TAG_NAME] !== void 0) {
          if (DEV_MODE2) {
            throw new Error("Bindings in tag names are not supported. Please use static templates instead. See https://lit.dev/docs/templates/expressions/#static-expressions");
          }
          regex = tagEndRegex;
        }
      } else if (regex === tagEndRegex) {
        if (match[ENTIRE_MATCH] === ">") {
          regex = rawTextEndRegex ?? textEndRegex;
          attrNameEndIndex = -1;
        } else if (match[ATTRIBUTE_NAME] === void 0) {
          attrNameEndIndex = -2;
        } else {
          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;
          attrName = match[ATTRIBUTE_NAME];
          regex = match[QUOTE_CHAR] === void 0 ? tagEndRegex : match[QUOTE_CHAR] === '"' ? doubleQuoteAttrEndRegex : singleQuoteAttrEndRegex;
        }
      } else if (regex === doubleQuoteAttrEndRegex || regex === singleQuoteAttrEndRegex) {
        regex = tagEndRegex;
      } else if (regex === commentEndRegex || regex === comment2EndRegex) {
        regex = textEndRegex;
      } else {
        regex = tagEndRegex;
        rawTextEndRegex = void 0;
      }
    }
    if (DEV_MODE2) {
      console.assert(attrNameEndIndex === -1 || regex === tagEndRegex || regex === singleQuoteAttrEndRegex || regex === doubleQuoteAttrEndRegex, "unexpected parse state B");
    }
    const end = regex === tagEndRegex && strings[i4 + 1].startsWith("/>") ? " " : "";
    html2 += regex === textEndRegex ? s2 + nodeMarker : attrNameEndIndex >= 0 ? (attrNames.push(attrName), s2.slice(0, attrNameEndIndex) + boundAttributeSuffix + s2.slice(attrNameEndIndex)) + marker + end : s2 + marker + (attrNameEndIndex === -2 ? i4 : end);
  }
  const htmlResult = html2 + (strings[l3] || "<?>") + (type === SVG_RESULT ? "</svg>" : type === MATHML_RESULT ? "</math>" : "");
  return [trustFromTemplateString(strings, htmlResult), attrNames];
};
var Template = class _Template {
  constructor({ strings, ["_$litType$"]: type }, options) {
    this.parts = [];
    let node;
    let nodeIndex = 0;
    let attrNameIndex = 0;
    const partCount = strings.length - 1;
    const parts = this.parts;
    const [html2, attrNames] = getTemplateHtml(strings, type);
    this.el = _Template.createElement(html2, options);
    walker.currentNode = this.el.content;
    if (type === SVG_RESULT || type === MATHML_RESULT) {
      const wrapper = this.el.content.firstChild;
      wrapper.replaceWith(...wrapper.childNodes);
    }
    while ((node = walker.nextNode()) !== null && parts.length < partCount) {
      if (node.nodeType === 1) {
        if (DEV_MODE2) {
          const tag2 = node.localName;
          if (/^(?:textarea|template)$/i.test(tag2) && node.innerHTML.includes(marker)) {
            const m = `Expressions are not supported inside \`${tag2}\` elements. See https://lit.dev/msg/expression-in-${tag2} for more information.`;
            if (tag2 === "template") {
              throw new Error(m);
            } else
              issueWarning2("", m);
          }
        }
        if (node.hasAttributes()) {
          for (const name of node.getAttributeNames()) {
            if (name.endsWith(boundAttributeSuffix)) {
              const realName = attrNames[attrNameIndex++];
              const value = node.getAttribute(name);
              const statics = value.split(marker);
              const m = /([.?@])?(.*)/.exec(realName);
              parts.push({
                type: ATTRIBUTE_PART,
                index: nodeIndex,
                name: m[2],
                strings: statics,
                ctor: m[1] === "." ? PropertyPart : m[1] === "?" ? BooleanAttributePart : m[1] === "@" ? EventPart : AttributePart
              });
              node.removeAttribute(name);
            } else if (name.startsWith(marker)) {
              parts.push({
                type: ELEMENT_PART,
                index: nodeIndex
              });
              node.removeAttribute(name);
            }
          }
        }
        if (rawTextElement.test(node.tagName)) {
          const strings2 = node.textContent.split(marker);
          const lastIndex = strings2.length - 1;
          if (lastIndex > 0) {
            node.textContent = trustedTypes2 ? trustedTypes2.emptyScript : "";
            for (let i4 = 0; i4 < lastIndex; i4++) {
              node.append(strings2[i4], createMarker());
              walker.nextNode();
              parts.push({ type: CHILD_PART, index: ++nodeIndex });
            }
            node.append(strings2[lastIndex], createMarker());
          }
        }
      } else if (node.nodeType === 8) {
        const data = node.data;
        if (data === markerMatch) {
          parts.push({ type: CHILD_PART, index: nodeIndex });
        } else {
          let i4 = -1;
          while ((i4 = node.data.indexOf(marker, i4 + 1)) !== -1) {
            parts.push({ type: COMMENT_PART, index: nodeIndex });
            i4 += marker.length - 1;
          }
        }
      }
      nodeIndex++;
    }
    if (DEV_MODE2) {
      if (attrNames.length !== attrNameIndex) {
        throw new Error(`Detected duplicate attribute bindings. This occurs if your template has duplicate attributes on an element tag. For example "<input ?disabled=\${true} ?disabled=\${false}>" contains a duplicate "disabled" attribute. The error was detected in the following template: 
\`` + strings.join("${...}") + "`");
      }
    }
    debugLogEvent2 && debugLogEvent2({
      kind: "template prep",
      template: this,
      clonableTemplate: this.el,
      parts: this.parts,
      strings
    });
  }
  // Overridden via `litHtmlPolyfillSupport` to provide platform support.
  /** @nocollapse */
  static createElement(html2, _options) {
    const el = d.createElement("template");
    el.innerHTML = html2;
    return el;
  }
};
function resolveDirective(part, value, parent2 = part, attributeIndex) {
  var _a7, _b3;
  if (value === noChange) {
    return value;
  }
  let currentDirective = attributeIndex !== void 0 ? (_a7 = parent2.__directives) == null ? void 0 : _a7[attributeIndex] : parent2.__directive;
  const nextDirectiveConstructor = isPrimitive(value) ? void 0 : (
    // This property needs to remain unminified.
    value["_$litDirective$"]
  );
  if ((currentDirective == null ? void 0 : currentDirective.constructor) !== nextDirectiveConstructor) {
    (_b3 = currentDirective == null ? void 0 : currentDirective["_$notifyDirectiveConnectionChanged"]) == null ? void 0 : _b3.call(currentDirective, false);
    if (nextDirectiveConstructor === void 0) {
      currentDirective = void 0;
    } else {
      currentDirective = new nextDirectiveConstructor(part);
      currentDirective._$initialize(part, parent2, attributeIndex);
    }
    if (attributeIndex !== void 0) {
      (parent2.__directives ?? (parent2.__directives = []))[attributeIndex] = currentDirective;
    } else {
      parent2.__directive = currentDirective;
    }
  }
  if (currentDirective !== void 0) {
    value = resolveDirective(part, currentDirective._$resolve(part, value.values), currentDirective, attributeIndex);
  }
  return value;
}
var TemplateInstance = class {
  constructor(template, parent2) {
    this._$parts = [];
    this._$disconnectableChildren = void 0;
    this._$template = template;
    this._$parent = parent2;
  }
  // Called by ChildPart parentNode getter
  get parentNode() {
    return this._$parent.parentNode;
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  // This method is separate from the constructor because we need to return a
  // DocumentFragment and we don't want to hold onto it with an instance field.
  _clone(options) {
    const { el: { content }, parts } = this._$template;
    const fragment = ((options == null ? void 0 : options.creationScope) ?? d).importNode(content, true);
    walker.currentNode = fragment;
    let node = walker.nextNode();
    let nodeIndex = 0;
    let partIndex = 0;
    let templatePart = parts[0];
    while (templatePart !== void 0) {
      if (nodeIndex === templatePart.index) {
        let part;
        if (templatePart.type === CHILD_PART) {
          part = new ChildPart(node, node.nextSibling, this, options);
        } else if (templatePart.type === ATTRIBUTE_PART) {
          part = new templatePart.ctor(node, templatePart.name, templatePart.strings, this, options);
        } else if (templatePart.type === ELEMENT_PART) {
          part = new ElementPart(node, this, options);
        }
        this._$parts.push(part);
        templatePart = parts[++partIndex];
      }
      if (nodeIndex !== (templatePart == null ? void 0 : templatePart.index)) {
        node = walker.nextNode();
        nodeIndex++;
      }
    }
    walker.currentNode = d;
    return fragment;
  }
  _update(values) {
    let i4 = 0;
    for (const part of this._$parts) {
      if (part !== void 0) {
        debugLogEvent2 && debugLogEvent2({
          kind: "set part",
          part,
          value: values[i4],
          valueIndex: i4,
          values,
          templateInstance: this
        });
        if (part.strings !== void 0) {
          part._$setValue(values, part, i4);
          i4 += part.strings.length - 2;
        } else {
          part._$setValue(values[i4]);
        }
      }
      i4++;
    }
  }
};
var ChildPart = class _ChildPart {
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    var _a7;
    return ((_a7 = this._$parent) == null ? void 0 : _a7._$isConnected) ?? this.__isConnected;
  }
  constructor(startNode, endNode, parent2, options) {
    this.type = CHILD_PART;
    this._$committedValue = nothing;
    this._$disconnectableChildren = void 0;
    this._$startNode = startNode;
    this._$endNode = endNode;
    this._$parent = parent2;
    this.options = options;
    this.__isConnected = (options == null ? void 0 : options.isConnected) ?? true;
    if (ENABLE_EXTRA_SECURITY_HOOKS) {
      this._textSanitizer = void 0;
    }
  }
  /**
   * The parent node into which the part renders its content.
   *
   * A ChildPart's content consists of a range of adjacent child nodes of
   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and
   * `.endNode`).
   *
   * - If both `.startNode` and `.endNode` are non-null, then the part's content
   * consists of all siblings between `.startNode` and `.endNode`, exclusively.
   *
   * - If `.startNode` is non-null but `.endNode` is null, then the part's
   * content consists of all siblings following `.startNode`, up to and
   * including the last child of `.parentNode`. If `.endNode` is non-null, then
   * `.startNode` will always be non-null.
   *
   * - If both `.endNode` and `.startNode` are null, then the part's content
   * consists of all child nodes of `.parentNode`.
   */
  get parentNode() {
    let parentNode = wrap(this._$startNode).parentNode;
    const parent2 = this._$parent;
    if (parent2 !== void 0 && (parentNode == null ? void 0 : parentNode.nodeType) === 11) {
      parentNode = parent2.parentNode;
    }
    return parentNode;
  }
  /**
   * The part's leading marker node, if any. See `.parentNode` for more
   * information.
   */
  get startNode() {
    return this._$startNode;
  }
  /**
   * The part's trailing marker node, if any. See `.parentNode` for more
   * information.
   */
  get endNode() {
    return this._$endNode;
  }
  _$setValue(value, directiveParent = this) {
    var _a7;
    if (DEV_MODE2 && this.parentNode === null) {
      throw new Error(`This \`ChildPart\` has no \`parentNode\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \`innerHTML\` or \`textContent\` can do this.`);
    }
    value = resolveDirective(this, value, directiveParent);
    if (isPrimitive(value)) {
      if (value === nothing || value == null || value === "") {
        if (this._$committedValue !== nothing) {
          debugLogEvent2 && debugLogEvent2({
            kind: "commit nothing to child",
            start: this._$startNode,
            end: this._$endNode,
            parent: this._$parent,
            options: this.options
          });
          this._$clear();
        }
        this._$committedValue = nothing;
      } else if (value !== this._$committedValue && value !== noChange) {
        this._commitText(value);
      }
    } else if (value["_$litType$"] !== void 0) {
      this._commitTemplateResult(value);
    } else if (value.nodeType !== void 0) {
      if (DEV_MODE2 && ((_a7 = this.options) == null ? void 0 : _a7.host) === value) {
        this._commitText(`[probable mistake: rendered a template's host in itself (commonly caused by writing \${this} in a template]`);
        console.warn(`Attempted to render the template host`, value, `inside itself. This is almost always a mistake, and in dev mode `, `we render some warning text. In production however, we'll `, `render it, which will usually result in an error, and sometimes `, `in the element disappearing from the DOM.`);
        return;
      }
      this._commitNode(value);
    } else if (isIterable(value)) {
      this._commitIterable(value);
    } else {
      this._commitText(value);
    }
  }
  _insert(node) {
    return wrap(wrap(this._$startNode).parentNode).insertBefore(node, this._$endNode);
  }
  _commitNode(value) {
    var _a7;
    if (this._$committedValue !== value) {
      this._$clear();
      if (ENABLE_EXTRA_SECURITY_HOOKS && sanitizerFactoryInternal !== noopSanitizer) {
        const parentNodeName = (_a7 = this._$startNode.parentNode) == null ? void 0 : _a7.nodeName;
        if (parentNodeName === "STYLE" || parentNodeName === "SCRIPT") {
          let message = "Forbidden";
          if (DEV_MODE2) {
            if (parentNodeName === "STYLE") {
              message = `Lit does not support binding inside style nodes. This is a security risk, as style injection attacks can exfiltrate data and spoof UIs. Consider instead using css\`...\` literals to compose styles, and do dynamic styling with css custom properties, ::parts, <slot>s, and by mutating the DOM rather than stylesheets.`;
            } else {
              message = `Lit does not support binding inside script nodes. This is a security risk, as it could allow arbitrary code execution.`;
            }
          }
          throw new Error(message);
        }
      }
      debugLogEvent2 && debugLogEvent2({
        kind: "commit node",
        start: this._$startNode,
        parent: this._$parent,
        value,
        options: this.options
      });
      this._$committedValue = this._insert(value);
    }
  }
  _commitText(value) {
    if (this._$committedValue !== nothing && isPrimitive(this._$committedValue)) {
      const node = wrap(this._$startNode).nextSibling;
      if (ENABLE_EXTRA_SECURITY_HOOKS) {
        if (this._textSanitizer === void 0) {
          this._textSanitizer = createSanitizer(node, "data", "property");
        }
        value = this._textSanitizer(value);
      }
      debugLogEvent2 && debugLogEvent2({
        kind: "commit text",
        node,
        value,
        options: this.options
      });
      node.data = value;
    } else {
      if (ENABLE_EXTRA_SECURITY_HOOKS) {
        const textNode = d.createTextNode("");
        this._commitNode(textNode);
        if (this._textSanitizer === void 0) {
          this._textSanitizer = createSanitizer(textNode, "data", "property");
        }
        value = this._textSanitizer(value);
        debugLogEvent2 && debugLogEvent2({
          kind: "commit text",
          node: textNode,
          value,
          options: this.options
        });
        textNode.data = value;
      } else {
        this._commitNode(d.createTextNode(value));
        debugLogEvent2 && debugLogEvent2({
          kind: "commit text",
          node: wrap(this._$startNode).nextSibling,
          value,
          options: this.options
        });
      }
    }
    this._$committedValue = value;
  }
  _commitTemplateResult(result) {
    var _a7;
    const { values, ["_$litType$"]: type } = result;
    const template = typeof type === "number" ? this._$getTemplate(result) : (type.el === void 0 && (type.el = Template.createElement(trustFromTemplateString(type.h, type.h[0]), this.options)), type);
    if (((_a7 = this._$committedValue) == null ? void 0 : _a7._$template) === template) {
      debugLogEvent2 && debugLogEvent2({
        kind: "template updating",
        template,
        instance: this._$committedValue,
        parts: this._$committedValue._$parts,
        options: this.options,
        values
      });
      this._$committedValue._update(values);
    } else {
      const instance = new TemplateInstance(template, this);
      const fragment = instance._clone(this.options);
      debugLogEvent2 && debugLogEvent2({
        kind: "template instantiated",
        template,
        instance,
        parts: instance._$parts,
        options: this.options,
        fragment,
        values
      });
      instance._update(values);
      debugLogEvent2 && debugLogEvent2({
        kind: "template instantiated and updated",
        template,
        instance,
        parts: instance._$parts,
        options: this.options,
        fragment,
        values
      });
      this._commitNode(fragment);
      this._$committedValue = instance;
    }
  }
  // Overridden via `litHtmlPolyfillSupport` to provide platform support.
  /** @internal */
  _$getTemplate(result) {
    let template = templateCache.get(result.strings);
    if (template === void 0) {
      templateCache.set(result.strings, template = new Template(result));
    }
    return template;
  }
  _commitIterable(value) {
    if (!isArray(this._$committedValue)) {
      this._$committedValue = [];
      this._$clear();
    }
    const itemParts = this._$committedValue;
    let partIndex = 0;
    let itemPart;
    for (const item of value) {
      if (partIndex === itemParts.length) {
        itemParts.push(itemPart = new _ChildPart(this._insert(createMarker()), this._insert(createMarker()), this, this.options));
      } else {
        itemPart = itemParts[partIndex];
      }
      itemPart._$setValue(item);
      partIndex++;
    }
    if (partIndex < itemParts.length) {
      this._$clear(itemPart && wrap(itemPart._$endNode).nextSibling, partIndex);
      itemParts.length = partIndex;
    }
  }
  /**
   * Removes the nodes contained within this Part from the DOM.
   *
   * @param start Start node to clear from, for clearing a subset of the part's
   *     DOM (used when truncating iterables)
   * @param from  When `start` is specified, the index within the iterable from
   *     which ChildParts are being removed, used for disconnecting directives in
   *     those Parts.
   *
   * @internal
   */
  _$clear(start = wrap(this._$startNode).nextSibling, from) {
    var _a7;
    (_a7 = this._$notifyConnectionChanged) == null ? void 0 : _a7.call(this, false, true, from);
    while (start && start !== this._$endNode) {
      const n2 = wrap(start).nextSibling;
      wrap(start).remove();
      start = n2;
    }
  }
  /**
   * Implementation of RootPart's `isConnected`. Note that this method
   * should only be called on `RootPart`s (the `ChildPart` returned from a
   * top-level `render()` call). It has no effect on non-root ChildParts.
   * @param isConnected Whether to set
   * @internal
   */
  setConnected(isConnected) {
    var _a7;
    if (this._$parent === void 0) {
      this.__isConnected = isConnected;
      (_a7 = this._$notifyConnectionChanged) == null ? void 0 : _a7.call(this, isConnected);
    } else if (DEV_MODE2) {
      throw new Error("part.setConnected() may only be called on a RootPart returned from render().");
    }
  }
};
var AttributePart = class {
  get tagName() {
    return this.element.tagName;
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  constructor(element, name, strings, parent2, options) {
    this.type = ATTRIBUTE_PART;
    this._$committedValue = nothing;
    this._$disconnectableChildren = void 0;
    this.element = element;
    this.name = name;
    this._$parent = parent2;
    this.options = options;
    if (strings.length > 2 || strings[0] !== "" || strings[1] !== "") {
      this._$committedValue = new Array(strings.length - 1).fill(new String());
      this.strings = strings;
    } else {
      this._$committedValue = nothing;
    }
    if (ENABLE_EXTRA_SECURITY_HOOKS) {
      this._sanitizer = void 0;
    }
  }
  /**
   * Sets the value of this part by resolving the value from possibly multiple
   * values and static strings and committing it to the DOM.
   * If this part is single-valued, `this._strings` will be undefined, and the
   * method will be called with a single value argument. If this part is
   * multi-value, `this._strings` will be defined, and the method is called
   * with the value array of the part's owning TemplateInstance, and an offset
   * into the value array from which the values should be read.
   * This method is overloaded this way to eliminate short-lived array slices
   * of the template instance values, and allow a fast-path for single-valued
   * parts.
   *
   * @param value The part value, or an array of values for multi-valued parts
   * @param valueIndex the index to start reading values from. `undefined` for
   *   single-valued parts
   * @param noCommit causes the part to not commit its value to the DOM. Used
   *   in hydration to prime attribute parts with their first-rendered value,
   *   but not set the attribute, and in SSR to no-op the DOM operation and
   *   capture the value for serialization.
   *
   * @internal
   */
  _$setValue(value, directiveParent = this, valueIndex, noCommit) {
    const strings = this.strings;
    let change = false;
    if (strings === void 0) {
      value = resolveDirective(this, value, directiveParent, 0);
      change = !isPrimitive(value) || value !== this._$committedValue && value !== noChange;
      if (change) {
        this._$committedValue = value;
      }
    } else {
      const values = value;
      value = strings[0];
      let i4, v6;
      for (i4 = 0; i4 < strings.length - 1; i4++) {
        v6 = resolveDirective(this, values[valueIndex + i4], directiveParent, i4);
        if (v6 === noChange) {
          v6 = this._$committedValue[i4];
        }
        change || (change = !isPrimitive(v6) || v6 !== this._$committedValue[i4]);
        if (v6 === nothing) {
          value = nothing;
        } else if (value !== nothing) {
          value += (v6 ?? "") + strings[i4 + 1];
        }
        this._$committedValue[i4] = v6;
      }
    }
    if (change && !noCommit) {
      this._commitValue(value);
    }
  }
  /** @internal */
  _commitValue(value) {
    if (value === nothing) {
      wrap(this.element).removeAttribute(this.name);
    } else {
      if (ENABLE_EXTRA_SECURITY_HOOKS) {
        if (this._sanitizer === void 0) {
          this._sanitizer = sanitizerFactoryInternal(this.element, this.name, "attribute");
        }
        value = this._sanitizer(value ?? "");
      }
      debugLogEvent2 && debugLogEvent2({
        kind: "commit attribute",
        element: this.element,
        name: this.name,
        value,
        options: this.options
      });
      wrap(this.element).setAttribute(this.name, value ?? "");
    }
  }
};
var PropertyPart = class extends AttributePart {
  constructor() {
    super(...arguments);
    this.type = PROPERTY_PART;
  }
  /** @internal */
  _commitValue(value) {
    if (ENABLE_EXTRA_SECURITY_HOOKS) {
      if (this._sanitizer === void 0) {
        this._sanitizer = sanitizerFactoryInternal(this.element, this.name, "property");
      }
      value = this._sanitizer(value);
    }
    debugLogEvent2 && debugLogEvent2({
      kind: "commit property",
      element: this.element,
      name: this.name,
      value,
      options: this.options
    });
    this.element[this.name] = value === nothing ? void 0 : value;
  }
};
var BooleanAttributePart = class extends AttributePart {
  constructor() {
    super(...arguments);
    this.type = BOOLEAN_ATTRIBUTE_PART;
  }
  /** @internal */
  _commitValue(value) {
    debugLogEvent2 && debugLogEvent2({
      kind: "commit boolean attribute",
      element: this.element,
      name: this.name,
      value: !!(value && value !== nothing),
      options: this.options
    });
    wrap(this.element).toggleAttribute(this.name, !!value && value !== nothing);
  }
};
var EventPart = class extends AttributePart {
  constructor(element, name, strings, parent2, options) {
    super(element, name, strings, parent2, options);
    this.type = EVENT_PART;
    if (DEV_MODE2 && this.strings !== void 0) {
      throw new Error(`A \`<${element.localName}>\` has a \`@${name}=...\` listener with invalid content. Event listeners in templates must have exactly one expression and no surrounding text.`);
    }
  }
  // EventPart does not use the base _$setValue/_resolveValue implementation
  // since the dirty checking is more complex
  /** @internal */
  _$setValue(newListener, directiveParent = this) {
    newListener = resolveDirective(this, newListener, directiveParent, 0) ?? nothing;
    if (newListener === noChange) {
      return;
    }
    const oldListener = this._$committedValue;
    const shouldRemoveListener = newListener === nothing && oldListener !== nothing || newListener.capture !== oldListener.capture || newListener.once !== oldListener.once || newListener.passive !== oldListener.passive;
    const shouldAddListener = newListener !== nothing && (oldListener === nothing || shouldRemoveListener);
    debugLogEvent2 && debugLogEvent2({
      kind: "commit event listener",
      element: this.element,
      name: this.name,
      value: newListener,
      options: this.options,
      removeListener: shouldRemoveListener,
      addListener: shouldAddListener,
      oldListener
    });
    if (shouldRemoveListener) {
      this.element.removeEventListener(this.name, this, oldListener);
    }
    if (shouldAddListener) {
      this.element.addEventListener(this.name, this, newListener);
    }
    this._$committedValue = newListener;
  }
  handleEvent(event) {
    var _a7;
    if (typeof this._$committedValue === "function") {
      this._$committedValue.call(((_a7 = this.options) == null ? void 0 : _a7.host) ?? this.element, event);
    } else {
      this._$committedValue.handleEvent(event);
    }
  }
};
var ElementPart = class {
  constructor(element, parent2, options) {
    this.element = element;
    this.type = ELEMENT_PART;
    this._$disconnectableChildren = void 0;
    this._$parent = parent2;
    this.options = options;
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  _$setValue(value) {
    debugLogEvent2 && debugLogEvent2({
      kind: "commit to element binding",
      element: this.element,
      value,
      options: this.options
    });
    resolveDirective(this, value);
  }
};
var _$LH = {
  // Used in lit-ssr
  _boundAttributeSuffix: boundAttributeSuffix,
  _marker: marker,
  _markerMatch: markerMatch,
  _HTML_RESULT: HTML_RESULT,
  _getTemplateHtml: getTemplateHtml,
  // Used in tests and private-ssr-support
  _TemplateInstance: TemplateInstance,
  _isIterable: isIterable,
  _resolveDirective: resolveDirective,
  _ChildPart: ChildPart,
  _AttributePart: AttributePart,
  _BooleanAttributePart: BooleanAttributePart,
  _EventPart: EventPart,
  _PropertyPart: PropertyPart,
  _ElementPart: ElementPart
};
var polyfillSupport2 = DEV_MODE2 ? global4.litHtmlPolyfillSupportDevMode : global4.litHtmlPolyfillSupport;
polyfillSupport2 == null ? void 0 : polyfillSupport2(Template, ChildPart);
(global4.litHtmlVersions ?? (global4.litHtmlVersions = [])).push("3.2.1");
if (DEV_MODE2 && global4.litHtmlVersions.length > 1) {
  issueWarning2("multiple-versions", `Multiple versions of Lit loaded. Loading multiple versions is not recommended.`);
}
var render = (value, container, options) => {
  if (DEV_MODE2 && container == null) {
    throw new TypeError(`The container to render into may not be ${container}`);
  }
  const renderId = DEV_MODE2 ? debugLogRenderId++ : 0;
  const partOwnerNode = (options == null ? void 0 : options.renderBefore) ?? container;
  let part = partOwnerNode["_$litPart$"];
  debugLogEvent2 && debugLogEvent2({
    kind: "begin render",
    id: renderId,
    value,
    container,
    options,
    part
  });
  if (part === void 0) {
    const endNode = (options == null ? void 0 : options.renderBefore) ?? null;
    partOwnerNode["_$litPart$"] = part = new ChildPart(container.insertBefore(createMarker(), endNode), endNode, void 0, options ?? {});
  }
  part._$setValue(value);
  debugLogEvent2 && debugLogEvent2({
    kind: "end render",
    id: renderId,
    value,
    container,
    options,
    part
  });
  return part;
};
if (ENABLE_EXTRA_SECURITY_HOOKS) {
  render.setSanitizer = setSanitizer;
  render.createSanitizer = createSanitizer;
  if (DEV_MODE2) {
    render._testOnlyClearSanitizerFactoryDoNotCallOrElse = _testOnlyClearSanitizerFactoryDoNotCallOrElse;
  }
}

// node_modules/lit-element/development/lit-element.js
var JSCompiler_renameProperty2 = (prop, _obj) => prop;
var DEV_MODE3 = true;
var issueWarning3;
if (DEV_MODE3) {
  const issuedWarnings = globalThis.litIssuedWarnings ?? (globalThis.litIssuedWarnings = /* @__PURE__ */ new Set());
  issueWarning3 = (code, warning) => {
    warning += ` See https://lit.dev/msg/${code} for more information.`;
    if (!issuedWarnings.has(warning)) {
      console.warn(warning);
      issuedWarnings.add(warning);
    }
  };
}
var LitElement = class extends ReactiveElement {
  constructor() {
    super(...arguments);
    this.renderOptions = { host: this };
    this.__childPart = void 0;
  }
  /**
   * @category rendering
   */
  createRenderRoot() {
    var _a7;
    const renderRoot = super.createRenderRoot();
    (_a7 = this.renderOptions).renderBefore ?? (_a7.renderBefore = renderRoot.firstChild);
    return renderRoot;
  }
  /**
   * Updates the element. This method reflects property values to attributes
   * and calls `render` to render DOM via lit-html. Setting properties inside
   * this method will *not* trigger another update.
   * @param changedProperties Map of changed properties with old values
   * @category updates
   */
  update(changedProperties) {
    const value = this.render();
    if (!this.hasUpdated) {
      this.renderOptions.isConnected = this.isConnected;
    }
    super.update(changedProperties);
    this.__childPart = render(value, this.renderRoot, this.renderOptions);
  }
  /**
   * Invoked when the component is added to the document's DOM.
   *
   * In `connectedCallback()` you should setup tasks that should only occur when
   * the element is connected to the document. The most common of these is
   * adding event listeners to nodes external to the element, like a keydown
   * event handler added to the window.
   *
   * ```ts
   * connectedCallback() {
   *   super.connectedCallback();
   *   addEventListener('keydown', this._handleKeydown);
   * }
   * ```
   *
   * Typically, anything done in `connectedCallback()` should be undone when the
   * element is disconnected, in `disconnectedCallback()`.
   *
   * @category lifecycle
   */
  connectedCallback() {
    var _a7;
    super.connectedCallback();
    (_a7 = this.__childPart) == null ? void 0 : _a7.setConnected(true);
  }
  /**
   * Invoked when the component is removed from the document's DOM.
   *
   * This callback is the main signal to the element that it may no longer be
   * used. `disconnectedCallback()` should ensure that nothing is holding a
   * reference to the element (such as event listeners added to nodes external
   * to the element), so that it is free to be garbage collected.
   *
   * ```ts
   * disconnectedCallback() {
   *   super.disconnectedCallback();
   *   window.removeEventListener('keydown', this._handleKeydown);
   * }
   * ```
   *
   * An element may be re-connected after being disconnected.
   *
   * @category lifecycle
   */
  disconnectedCallback() {
    var _a7;
    super.disconnectedCallback();
    (_a7 = this.__childPart) == null ? void 0 : _a7.setConnected(false);
  }
  /**
   * Invoked on each update to perform rendering tasks. This method may return
   * any value renderable by lit-html's `ChildPart` - typically a
   * `TemplateResult`. Setting properties inside this method will *not* trigger
   * the element to update.
   * @category rendering
   */
  render() {
    return noChange;
  }
};
LitElement["_$litElement$"] = true;
LitElement[JSCompiler_renameProperty2("finalized", LitElement)] = true;
var _a3;
(_a3 = globalThis.litElementHydrateSupport) == null ? void 0 : _a3.call(globalThis, { LitElement });
var polyfillSupport3 = DEV_MODE3 ? globalThis.litElementPolyfillSupportDevMode : globalThis.litElementPolyfillSupport;
polyfillSupport3 == null ? void 0 : polyfillSupport3({ LitElement });
(globalThis.litElementVersions ?? (globalThis.litElementVersions = [])).push("4.1.1");
if (DEV_MODE3 && globalThis.litElementVersions.length > 1) {
  issueWarning3("multiple-versions", `Multiple versions of Lit loaded. Loading multiple versions is not recommended.`);
}

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/swap-input-mask-bottom.js
var swapInputMaskBottomSvg = svg`<svg class="input_mask" width="328" height="100" viewBox="0 0 328 100" fill="none">
  <mask id="path-1-inside-1_18299_4189">
    <path
      class="input_mask__border"
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M138.008 0H40C21.1438 0 11.7157 0 5.85786 5.85786C0 11.7157 0 21.1438 0 40V60C0 78.8562 0 88.2843 5.85786 94.1421C11.7157 100 21.1438 100 40 100H288C306.856 100 316.284 100 322.142 94.1421C328 88.2843 328 78.8562 328 60V40C328 21.1438 328 11.7157 322.142 5.85786C316.284 0 306.856 0 288 0H189.992C189.958 4.89122 189.786 7.76279 188.914 10.1564C187.095 15.1562 183.156 19.0947 178.156 20.9145C175.174 22 171.449 22 164 22C156.551 22 152.826 22 149.844 20.9145C144.844 19.0947 140.905 15.1562 139.086 10.1564C138.214 7.76279 138.042 4.89122 138.008 0Z"
    />
  </mask>
  <path
    class="input_mask__background"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M138.008 0H40C21.1438 0 11.7157 0 5.85786 5.85786C0 11.7157 0 21.1438 0 40V60C0 78.8562 0 88.2843 5.85786 94.1421C11.7157 100 21.1438 100 40 100H288C306.856 100 316.284 100 322.142 94.1421C328 88.2843 328 78.8562 328 60V40C328 21.1438 328 11.7157 322.142 5.85786C316.284 0 306.856 0 288 0H189.992C189.958 4.89122 189.786 7.76279 188.914 10.1564C187.095 15.1562 183.156 19.0947 178.156 20.9145C175.174 22 171.449 22 164 22C156.551 22 152.826 22 149.844 20.9145C144.844 19.0947 140.905 15.1562 139.086 10.1564C138.214 7.76279 138.042 4.89122 138.008 0Z"
  />
  <path
    class="input_mask__border"
    d="M138.008 0L139.008 -0.00694413L139.001 -1H138.008V0ZM322.142 94.1421L322.849 94.8492H322.849L322.142 94.1421ZM322.142 5.85786L322.849 5.15076L322.849 5.15076L322.142 5.85786ZM189.992 0V-1H188.999L188.992 -0.00694413L189.992 0ZM188.914 10.1564L189.854 10.4984V10.4984L188.914 10.1564ZM178.156 20.9145L177.814 19.9748V19.9748L178.156 20.9145ZM149.844 20.9145L150.186 19.9748V19.9748L149.844 20.9145ZM139.086 10.1564L138.146 10.4984V10.4984L139.086 10.1564ZM40 1H138.008V-1H40V1ZM6.56497 6.56497C9.27713 3.85281 12.8524 2.44064 18.1878 1.72332C23.552 1.00212 30.5436 1 40 1V-1C30.6002 -1 23.4497 -1.00212 17.9213 -0.25885C12.3641 0.488292 8.29646 2.00506 5.15076 5.15076L6.56497 6.56497ZM1 40C1 30.5436 1.00212 23.552 1.72332 18.1878C2.44064 12.8524 3.85281 9.27713 6.56497 6.56497L5.15076 5.15076C2.00506 8.29646 0.488292 12.3641 -0.25885 17.9213C-1.00212 23.4497 -1 30.6002 -1 40H1ZM1 60V40H-1V60H1ZM6.56497 93.435C3.85281 90.7229 2.44064 87.1476 1.72332 81.8122C1.00212 76.448 1 69.4564 1 60H-1C-1 69.3998 -1.00212 76.5503 -0.25885 82.0787C0.488292 87.6358 2.00506 91.7035 5.15076 94.8492L6.56497 93.435ZM40 99C30.5436 99 23.552 98.9979 18.1878 98.2767C12.8524 97.5594 9.27713 96.1472 6.56497 93.435L5.15076 94.8492C8.29646 97.9949 12.3641 99.5117 17.9213 100.259C23.4497 101.002 30.6002 101 40 101V99ZM288 99H40V101H288V99ZM321.435 93.435C318.723 96.1472 315.148 97.5594 309.812 98.2767C304.448 98.9979 297.456 99 288 99V101C297.4 101 304.55 101.002 310.079 100.259C315.636 99.5117 319.704 97.9949 322.849 94.8492L321.435 93.435ZM327 60C327 69.4564 326.998 76.448 326.277 81.8122C325.559 87.1476 324.147 90.7229 321.435 93.435L322.849 94.8492C325.995 91.7035 327.512 87.6358 328.259 82.0787C329.002 76.5503 329 69.3998 329 60H327ZM327 40V60H329V40H327ZM321.435 6.56497C324.147 9.27713 325.559 12.8524 326.277 18.1878C326.998 23.552 327 30.5436 327 40H329C329 30.6002 329.002 23.4497 328.259 17.9213C327.512 12.3642 325.995 8.29646 322.849 5.15076L321.435 6.56497ZM288 1C297.456 1 304.448 1.00212 309.812 1.72332C315.148 2.44064 318.723 3.85281 321.435 6.56497L322.849 5.15076C319.704 2.00506 315.636 0.488292 310.079 -0.25885C304.55 -1.00212 297.4 -1 288 -1V1ZM189.992 1H288V-1H189.992V1ZM188.992 -0.00694413C188.958 4.90792 188.778 7.60788 187.975 9.81434L189.854 10.4984C190.793 7.9177 190.958 4.87452 190.992 0.00694413L188.992 -0.00694413ZM187.975 9.81434C186.256 14.5364 182.536 18.2561 177.814 19.9748L178.498 21.8542C183.776 19.9333 187.933 15.7759 189.854 10.4984L187.975 9.81434ZM177.814 19.9748C175.039 20.9848 171.536 21 164 21V23C171.362 23 175.308 23.0152 178.498 21.8542L177.814 19.9748ZM164 21C156.464 21 152.961 20.9848 150.186 19.9748L149.502 21.8542C152.692 23.0152 156.638 23 164 23V21ZM150.186 19.9748C145.464 18.2561 141.744 14.5364 140.025 9.81434L138.146 10.4984C140.067 15.7759 144.224 19.9333 149.502 21.8542L150.186 19.9748ZM140.025 9.81434C139.222 7.60788 139.042 4.90792 139.008 -0.00694413L137.008 0.00694413C137.042 4.87452 137.207 7.9177 138.146 10.4984L140.025 9.81434Z"
    mask="url(#path-1-inside-1_18299_4189)"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/swap-input-mask-top.js
var swapInputMaskTopSvg = svg`<svg class="input_mask" width="328" height="100" viewBox="0 0 328 100" fill="none">
  <mask id="path-1-inside-1_18299_4168">
    <path
      class="input_mask__border"
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M5.85786 5.85786C0 11.7157 0 21.1438 0 40V60C0 78.8562 0 88.2843 5.85786 94.1421C11.7157 100 21.1438 100 40 100H138.008C138.042 95.1088 138.214 92.2372 139.086 89.8436C140.905 84.8438 144.844 80.9053 149.844 79.0855C152.826 78 156.551 78 164 78C171.449 78 175.174 78 178.156 79.0855C183.156 80.9053 187.095 84.8438 188.914 89.8436C189.786 92.2372 189.958 95.1088 189.992 100H288C306.856 100 316.284 100 322.142 94.1421C328 88.2843 328 78.8562 328 60V40C328 21.1438 328 11.7157 322.142 5.85786C316.284 0 306.856 0 288 0H40C21.1438 0 11.7157 0 5.85786 5.85786Z"
    />
  </mask>
  <path
    class="input_mask__background"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M5.85786 5.85786C0 11.7157 0 21.1438 0 40V60C0 78.8562 0 88.2843 5.85786 94.1421C11.7157 100 21.1438 100 40 100H138.008C138.042 95.1088 138.214 92.2372 139.086 89.8436C140.905 84.8438 144.844 80.9053 149.844 79.0855C152.826 78 156.551 78 164 78C171.449 78 175.174 78 178.156 79.0855C183.156 80.9053 187.095 84.8438 188.914 89.8436C189.786 92.2372 189.958 95.1088 189.992 100H288C306.856 100 316.284 100 322.142 94.1421C328 88.2843 328 78.8562 328 60V40C328 21.1438 328 11.7157 322.142 5.85786C316.284 0 306.856 0 288 0H40C21.1438 0 11.7157 0 5.85786 5.85786Z"
  />
  <path
    class="input_mask__border"
    d="M138.008 100V101H139.001L139.008 100.007L138.008 100ZM139.086 89.8436L138.146 89.5016L139.086 89.8436ZM149.844 79.0855L150.186 80.0252L149.844 79.0855ZM178.156 79.0855L177.814 80.0252L178.156 79.0855ZM188.914 89.8436L189.854 89.5016L188.914 89.8436ZM189.992 100L188.992 100.007L188.999 101H189.992V100ZM322.142 94.1421L322.849 94.8492H322.849L322.142 94.1421ZM322.142 5.85786L322.849 5.15076L322.849 5.15076L322.142 5.85786ZM1 40C1 30.5436 1.00212 23.552 1.72332 18.1878C2.44064 12.8524 3.85281 9.27713 6.56497 6.56497L5.15076 5.15076C2.00506 8.29646 0.488292 12.3641 -0.25885 17.9213C-1.00212 23.4497 -1 30.6002 -1 40H1ZM1 60V40H-1V60H1ZM6.56497 93.435C3.85281 90.7229 2.44064 87.1476 1.72332 81.8122C1.00212 76.448 1 69.4564 1 60H-1C-1 69.3998 -1.00212 76.5503 -0.25885 82.0787C0.488292 87.6358 2.00506 91.7035 5.15076 94.8492L6.56497 93.435ZM40 99C30.5436 99 23.552 98.9979 18.1878 98.2767C12.8524 97.5594 9.27713 96.1472 6.56497 93.435L5.15076 94.8492C8.29646 97.9949 12.3641 99.5117 17.9213 100.259C23.4497 101.002 30.6002 101 40 101V99ZM138.008 99H40V101H138.008V99ZM139.008 100.007C139.042 95.0921 139.222 92.3921 140.025 90.1857L138.146 89.5016C137.207 92.0823 137.042 95.1255 137.008 99.9931L139.008 100.007ZM140.025 90.1857C141.744 85.4636 145.464 81.7439 150.186 80.0252L149.502 78.1458C144.224 80.0667 140.067 84.2241 138.146 89.5016L140.025 90.1857ZM150.186 80.0252C152.961 79.0152 156.464 79 164 79V77C156.638 77 152.692 76.9848 149.502 78.1458L150.186 80.0252ZM164 79C171.536 79 175.039 79.0152 177.814 80.0252L178.498 78.1458C175.308 76.9848 171.362 77 164 77V79ZM177.814 80.0252C182.536 81.7439 186.256 85.4636 187.975 90.1857L189.854 89.5016C187.933 84.2241 183.776 80.0667 178.498 78.1458L177.814 80.0252ZM187.975 90.1857C188.778 92.3921 188.958 95.0921 188.992 100.007L190.992 99.9931C190.958 95.1255 190.793 92.0823 189.854 89.5016L187.975 90.1857ZM288 99H189.992V101H288V99ZM321.435 93.435C318.723 96.1472 315.148 97.5594 309.812 98.2767C304.448 98.9979 297.456 99 288 99V101C297.4 101 304.55 101.002 310.079 100.259C315.636 99.5117 319.704 97.9949 322.849 94.8492L321.435 93.435ZM327 60C327 69.4564 326.998 76.448 326.277 81.8122C325.559 87.1476 324.147 90.7229 321.435 93.435L322.849 94.8492C325.995 91.7035 327.512 87.6358 328.259 82.0787C329.002 76.5503 329 69.3998 329 60H327ZM327 40V60H329V40H327ZM321.435 6.56497C324.147 9.27713 325.559 12.8524 326.277 18.1878C326.998 23.552 327 30.5436 327 40H329C329 30.6002 329.002 23.4497 328.259 17.9213C327.512 12.3642 325.995 8.29646 322.849 5.15076L321.435 6.56497ZM288 1C297.456 1 304.448 1.00212 309.812 1.72332C315.148 2.44064 318.723 3.85281 321.435 6.56497L322.849 5.15076C319.704 2.00506 315.636 0.488292 310.079 -0.25885C304.55 -1.00212 297.4 -1 288 -1V1ZM40 1H288V-1H40V1ZM6.56497 6.56497C9.27713 3.85281 12.8524 2.44064 18.1878 1.72332C23.552 1.00212 30.5436 1 40 1V-1C30.6002 -1 23.4497 -1.00212 17.9213 -0.25885C12.3641 0.488292 8.29646 2.00506 5.15076 5.15076L6.56497 6.56497Z"
    mask="url(#path-1-inside-1_18299_4168)"
  />
</svg>`;

// node_modules/@reown/appkit-common/dist/esm/src/utils/DateUtil.js
var import_dayjs = __toESM(require_dayjs_min(), 1);
var import_en = __toESM(require_en(), 1);
var import_relativeTime = __toESM(require_relativeTime(), 1);
var import_updateLocale = __toESM(require_updateLocale(), 1);
import_dayjs.default.extend(import_relativeTime.default);
import_dayjs.default.extend(import_updateLocale.default);
var localeObject = {
  ...import_en.default,
  name: "en-web3-modal",
  relativeTime: {
    future: "in %s",
    past: "%s ago",
    s: "%d sec",
    m: "1 min",
    mm: "%d min",
    h: "1 hr",
    hh: "%d hrs",
    d: "1 d",
    dd: "%d d",
    M: "1 mo",
    MM: "%d mo",
    y: "1 yr",
    yy: "%d yr"
  }
};
var MONTH_NAMES = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December"
];
import_dayjs.default.locale("en-web3-modal", localeObject);
var DateUtil = {
  getMonthNameByIndex(monthIndex) {
    return MONTH_NAMES[monthIndex];
  },
  getYear(date = (/* @__PURE__ */ new Date()).toISOString()) {
    return (0, import_dayjs.default)(date).year();
  },
  getRelativeDateFromNow(date) {
    return (0, import_dayjs.default)(date).locale("en-web3-modal").fromNow(true);
  },
  formatDate(date, format = "DD MMM") {
    return (0, import_dayjs.default)(date).format(format);
  }
};

// node_modules/@reown/appkit-common/dist/esm/src/utils/NetworkUtil.js
var NetworkUtil = {
  caipNetworkIdToNumber(caipnetworkId) {
    return caipnetworkId ? Number(caipnetworkId.split(":")[1]) : void 0;
  },
  parseEvmChainId(chainId) {
    return typeof chainId === "string" ? this.caipNetworkIdToNumber(chainId) : chainId;
  },
  getNetworksByNamespace(networks, namespace) {
    return (networks == null ? void 0 : networks.filter((network) => network.chainNamespace === namespace)) || [];
  },
  getFirstNetworkByNamespace(networks, namespace) {
    return this.getNetworksByNamespace(networks, namespace)[0];
  }
};

// node_modules/big.js/big.mjs
var DP = 20;
var RM = 1;
var MAX_DP = 1e6;
var MAX_POWER = 1e6;
var NE = -7;
var PE = 21;
var STRICT = false;
var NAME = "[big.js] ";
var INVALID = NAME + "Invalid ";
var INVALID_DP = INVALID + "decimal places";
var INVALID_RM = INVALID + "rounding mode";
var DIV_BY_ZERO = NAME + "Division by zero";
var P = {};
var UNDEFINED = void 0;
var NUMERIC = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
function _Big_() {
  function Big2(n2) {
    var x7 = this;
    if (!(x7 instanceof Big2)) return n2 === UNDEFINED ? _Big_() : new Big2(n2);
    if (n2 instanceof Big2) {
      x7.s = n2.s;
      x7.e = n2.e;
      x7.c = n2.c.slice();
    } else {
      if (typeof n2 !== "string") {
        if (Big2.strict === true && typeof n2 !== "bigint") {
          throw TypeError(INVALID + "value");
        }
        n2 = n2 === 0 && 1 / n2 < 0 ? "-0" : String(n2);
      }
      parse(x7, n2);
    }
    x7.constructor = Big2;
  }
  Big2.prototype = P;
  Big2.DP = DP;
  Big2.RM = RM;
  Big2.NE = NE;
  Big2.PE = PE;
  Big2.strict = STRICT;
  Big2.roundDown = 0;
  Big2.roundHalfUp = 1;
  Big2.roundHalfEven = 2;
  Big2.roundUp = 3;
  return Big2;
}
function parse(x7, n2) {
  var e2, i4, nl;
  if (!NUMERIC.test(n2)) {
    throw Error(INVALID + "number");
  }
  x7.s = n2.charAt(0) == "-" ? (n2 = n2.slice(1), -1) : 1;
  if ((e2 = n2.indexOf(".")) > -1) n2 = n2.replace(".", "");
  if ((i4 = n2.search(/e/i)) > 0) {
    if (e2 < 0) e2 = i4;
    e2 += +n2.slice(i4 + 1);
    n2 = n2.substring(0, i4);
  } else if (e2 < 0) {
    e2 = n2.length;
  }
  nl = n2.length;
  for (i4 = 0; i4 < nl && n2.charAt(i4) == "0"; ) ++i4;
  if (i4 == nl) {
    x7.c = [x7.e = 0];
  } else {
    for (; nl > 0 && n2.charAt(--nl) == "0"; ) ;
    x7.e = e2 - i4 - 1;
    x7.c = [];
    for (e2 = 0; i4 <= nl; ) x7.c[e2++] = +n2.charAt(i4++);
  }
  return x7;
}
function round(x7, sd, rm, more) {
  var xc = x7.c;
  if (rm === UNDEFINED) rm = x7.constructor.RM;
  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {
    throw Error(INVALID_RM);
  }
  if (sd < 1) {
    more = rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 || rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));
    xc.length = 1;
    if (more) {
      x7.e = x7.e - sd + 1;
      xc[0] = 1;
    } else {
      xc[0] = x7.e = 0;
    }
  } else if (sd < xc.length) {
    more = rm === 1 && xc[sd] >= 5 || rm === 2 && (xc[sd] > 5 || xc[sd] === 5 && (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) || rm === 3 && (more || !!xc[0]);
    xc.length = sd;
    if (more) {
      for (; ++xc[--sd] > 9; ) {
        xc[sd] = 0;
        if (sd === 0) {
          ++x7.e;
          xc.unshift(1);
          break;
        }
      }
    }
    for (sd = xc.length; !xc[--sd]; ) xc.pop();
  }
  return x7;
}
function stringify(x7, doExponential, isNonzero) {
  var e2 = x7.e, s2 = x7.c.join(""), n2 = s2.length;
  if (doExponential) {
    s2 = s2.charAt(0) + (n2 > 1 ? "." + s2.slice(1) : "") + (e2 < 0 ? "e" : "e+") + e2;
  } else if (e2 < 0) {
    for (; ++e2; ) s2 = "0" + s2;
    s2 = "0." + s2;
  } else if (e2 > 0) {
    if (++e2 > n2) {
      for (e2 -= n2; e2--; ) s2 += "0";
    } else if (e2 < n2) {
      s2 = s2.slice(0, e2) + "." + s2.slice(e2);
    }
  } else if (n2 > 1) {
    s2 = s2.charAt(0) + "." + s2.slice(1);
  }
  return x7.s < 0 && isNonzero ? "-" + s2 : s2;
}
P.abs = function() {
  var x7 = new this.constructor(this);
  x7.s = 1;
  return x7;
};
P.cmp = function(y5) {
  var isneg, x7 = this, xc = x7.c, yc2 = (y5 = new x7.constructor(y5)).c, i4 = x7.s, j5 = y5.s, k6 = x7.e, l3 = y5.e;
  if (!xc[0] || !yc2[0]) return !xc[0] ? !yc2[0] ? 0 : -j5 : i4;
  if (i4 != j5) return i4;
  isneg = i4 < 0;
  if (k6 != l3) return k6 > l3 ^ isneg ? 1 : -1;
  j5 = (k6 = xc.length) < (l3 = yc2.length) ? k6 : l3;
  for (i4 = -1; ++i4 < j5; ) {
    if (xc[i4] != yc2[i4]) return xc[i4] > yc2[i4] ^ isneg ? 1 : -1;
  }
  return k6 == l3 ? 0 : k6 > l3 ^ isneg ? 1 : -1;
};
P.div = function(y5) {
  var x7 = this, Big2 = x7.constructor, a2 = x7.c, b3 = (y5 = new Big2(y5)).c, k6 = x7.s == y5.s ? 1 : -1, dp = Big2.DP;
  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
    throw Error(INVALID_DP);
  }
  if (!b3[0]) {
    throw Error(DIV_BY_ZERO);
  }
  if (!a2[0]) {
    y5.s = k6;
    y5.c = [y5.e = 0];
    return y5;
  }
  var bl, bt5, n2, cmp, ri4, bz = b3.slice(), ai4 = bl = b3.length, al = a2.length, r2 = a2.slice(0, bl), rl = r2.length, q3 = y5, qc = q3.c = [], qi3 = 0, p3 = dp + (q3.e = x7.e - y5.e) + 1;
  q3.s = k6;
  k6 = p3 < 0 ? 0 : p3;
  bz.unshift(0);
  for (; rl++ < bl; ) r2.push(0);
  do {
    for (n2 = 0; n2 < 10; n2++) {
      if (bl != (rl = r2.length)) {
        cmp = bl > rl ? 1 : -1;
      } else {
        for (ri4 = -1, cmp = 0; ++ri4 < bl; ) {
          if (b3[ri4] != r2[ri4]) {
            cmp = b3[ri4] > r2[ri4] ? 1 : -1;
            break;
          }
        }
      }
      if (cmp < 0) {
        for (bt5 = rl == bl ? b3 : bz; rl; ) {
          if (r2[--rl] < bt5[rl]) {
            ri4 = rl;
            for (; ri4 && !r2[--ri4]; ) r2[ri4] = 9;
            --r2[ri4];
            r2[rl] += 10;
          }
          r2[rl] -= bt5[rl];
        }
        for (; !r2[0]; ) r2.shift();
      } else {
        break;
      }
    }
    qc[qi3++] = cmp ? n2 : ++n2;
    if (r2[0] && cmp) r2[rl] = a2[ai4] || 0;
    else r2 = [a2[ai4]];
  } while ((ai4++ < al || r2[0] !== UNDEFINED) && k6--);
  if (!qc[0] && qi3 != 1) {
    qc.shift();
    q3.e--;
    p3--;
  }
  if (qi3 > p3) round(q3, p3, Big2.RM, r2[0] !== UNDEFINED);
  return q3;
};
P.eq = function(y5) {
  return this.cmp(y5) === 0;
};
P.gt = function(y5) {
  return this.cmp(y5) > 0;
};
P.gte = function(y5) {
  return this.cmp(y5) > -1;
};
P.lt = function(y5) {
  return this.cmp(y5) < 0;
};
P.lte = function(y5) {
  return this.cmp(y5) < 1;
};
P.minus = P.sub = function(y5) {
  var i4, j5, t2, xlty, x7 = this, Big2 = x7.constructor, a2 = x7.s, b3 = (y5 = new Big2(y5)).s;
  if (a2 != b3) {
    y5.s = -b3;
    return x7.plus(y5);
  }
  var xc = x7.c.slice(), xe6 = x7.e, yc2 = y5.c, ye6 = y5.e;
  if (!xc[0] || !yc2[0]) {
    if (yc2[0]) {
      y5.s = -b3;
    } else if (xc[0]) {
      y5 = new Big2(x7);
    } else {
      y5.s = 1;
    }
    return y5;
  }
  if (a2 = xe6 - ye6) {
    if (xlty = a2 < 0) {
      a2 = -a2;
      t2 = xc;
    } else {
      ye6 = xe6;
      t2 = yc2;
    }
    t2.reverse();
    for (b3 = a2; b3--; ) t2.push(0);
    t2.reverse();
  } else {
    j5 = ((xlty = xc.length < yc2.length) ? xc : yc2).length;
    for (a2 = b3 = 0; b3 < j5; b3++) {
      if (xc[b3] != yc2[b3]) {
        xlty = xc[b3] < yc2[b3];
        break;
      }
    }
  }
  if (xlty) {
    t2 = xc;
    xc = yc2;
    yc2 = t2;
    y5.s = -y5.s;
  }
  if ((b3 = (j5 = yc2.length) - (i4 = xc.length)) > 0) for (; b3--; ) xc[i4++] = 0;
  for (b3 = i4; j5 > a2; ) {
    if (xc[--j5] < yc2[j5]) {
      for (i4 = j5; i4 && !xc[--i4]; ) xc[i4] = 9;
      --xc[i4];
      xc[j5] += 10;
    }
    xc[j5] -= yc2[j5];
  }
  for (; xc[--b3] === 0; ) xc.pop();
  for (; xc[0] === 0; ) {
    xc.shift();
    --ye6;
  }
  if (!xc[0]) {
    y5.s = 1;
    xc = [ye6 = 0];
  }
  y5.c = xc;
  y5.e = ye6;
  return y5;
};
P.mod = function(y5) {
  var ygtx, x7 = this, Big2 = x7.constructor, a2 = x7.s, b3 = (y5 = new Big2(y5)).s;
  if (!y5.c[0]) {
    throw Error(DIV_BY_ZERO);
  }
  x7.s = y5.s = 1;
  ygtx = y5.cmp(x7) == 1;
  x7.s = a2;
  y5.s = b3;
  if (ygtx) return new Big2(x7);
  a2 = Big2.DP;
  b3 = Big2.RM;
  Big2.DP = Big2.RM = 0;
  x7 = x7.div(y5);
  Big2.DP = a2;
  Big2.RM = b3;
  return this.minus(x7.times(y5));
};
P.neg = function() {
  var x7 = new this.constructor(this);
  x7.s = -x7.s;
  return x7;
};
P.plus = P.add = function(y5) {
  var e2, k6, t2, x7 = this, Big2 = x7.constructor;
  y5 = new Big2(y5);
  if (x7.s != y5.s) {
    y5.s = -y5.s;
    return x7.minus(y5);
  }
  var xe6 = x7.e, xc = x7.c, ye6 = y5.e, yc2 = y5.c;
  if (!xc[0] || !yc2[0]) {
    if (!yc2[0]) {
      if (xc[0]) {
        y5 = new Big2(x7);
      } else {
        y5.s = x7.s;
      }
    }
    return y5;
  }
  xc = xc.slice();
  if (e2 = xe6 - ye6) {
    if (e2 > 0) {
      ye6 = xe6;
      t2 = yc2;
    } else {
      e2 = -e2;
      t2 = xc;
    }
    t2.reverse();
    for (; e2--; ) t2.push(0);
    t2.reverse();
  }
  if (xc.length - yc2.length < 0) {
    t2 = yc2;
    yc2 = xc;
    xc = t2;
  }
  e2 = yc2.length;
  for (k6 = 0; e2; xc[e2] %= 10) k6 = (xc[--e2] = xc[e2] + yc2[e2] + k6) / 10 | 0;
  if (k6) {
    xc.unshift(k6);
    ++ye6;
  }
  for (e2 = xc.length; xc[--e2] === 0; ) xc.pop();
  y5.c = xc;
  y5.e = ye6;
  return y5;
};
P.pow = function(n2) {
  var x7 = this, one = new x7.constructor("1"), y5 = one, isneg = n2 < 0;
  if (n2 !== ~~n2 || n2 < -MAX_POWER || n2 > MAX_POWER) {
    throw Error(INVALID + "exponent");
  }
  if (isneg) n2 = -n2;
  for (; ; ) {
    if (n2 & 1) y5 = y5.times(x7);
    n2 >>= 1;
    if (!n2) break;
    x7 = x7.times(x7);
  }
  return isneg ? one.div(y5) : y5;
};
P.prec = function(sd, rm) {
  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {
    throw Error(INVALID + "precision");
  }
  return round(new this.constructor(this), sd, rm);
};
P.round = function(dp, rm) {
  if (dp === UNDEFINED) dp = 0;
  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {
    throw Error(INVALID_DP);
  }
  return round(new this.constructor(this), dp + this.e + 1, rm);
};
P.sqrt = function() {
  var r2, c3, t2, x7 = this, Big2 = x7.constructor, s2 = x7.s, e2 = x7.e, half = new Big2("0.5");
  if (!x7.c[0]) return new Big2(x7);
  if (s2 < 0) {
    throw Error(NAME + "No square root");
  }
  s2 = Math.sqrt(+stringify(x7, true, true));
  if (s2 === 0 || s2 === 1 / 0) {
    c3 = x7.c.join("");
    if (!(c3.length + e2 & 1)) c3 += "0";
    s2 = Math.sqrt(c3);
    e2 = ((e2 + 1) / 2 | 0) - (e2 < 0 || e2 & 1);
    r2 = new Big2((s2 == 1 / 0 ? "5e" : (s2 = s2.toExponential()).slice(0, s2.indexOf("e") + 1)) + e2);
  } else {
    r2 = new Big2(s2 + "");
  }
  e2 = r2.e + (Big2.DP += 4);
  do {
    t2 = r2;
    r2 = half.times(t2.plus(x7.div(t2)));
  } while (t2.c.slice(0, e2).join("") !== r2.c.slice(0, e2).join(""));
  return round(r2, (Big2.DP -= 4) + r2.e + 1, Big2.RM);
};
P.times = P.mul = function(y5) {
  var c3, x7 = this, Big2 = x7.constructor, xc = x7.c, yc2 = (y5 = new Big2(y5)).c, a2 = xc.length, b3 = yc2.length, i4 = x7.e, j5 = y5.e;
  y5.s = x7.s == y5.s ? 1 : -1;
  if (!xc[0] || !yc2[0]) {
    y5.c = [y5.e = 0];
    return y5;
  }
  y5.e = i4 + j5;
  if (a2 < b3) {
    c3 = xc;
    xc = yc2;
    yc2 = c3;
    j5 = a2;
    a2 = b3;
    b3 = j5;
  }
  for (c3 = new Array(j5 = a2 + b3); j5--; ) c3[j5] = 0;
  for (i4 = b3; i4--; ) {
    b3 = 0;
    for (j5 = a2 + i4; j5 > i4; ) {
      b3 = c3[j5] + yc2[i4] * xc[j5 - i4 - 1] + b3;
      c3[j5--] = b3 % 10;
      b3 = b3 / 10 | 0;
    }
    c3[j5] = b3;
  }
  if (b3) ++y5.e;
  else c3.shift();
  for (i4 = c3.length; !c3[--i4]; ) c3.pop();
  y5.c = c3;
  return y5;
};
P.toExponential = function(dp, rm) {
  var x7 = this, n2 = x7.c[0];
  if (dp !== UNDEFINED) {
    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
      throw Error(INVALID_DP);
    }
    x7 = round(new x7.constructor(x7), ++dp, rm);
    for (; x7.c.length < dp; ) x7.c.push(0);
  }
  return stringify(x7, true, !!n2);
};
P.toFixed = function(dp, rm) {
  var x7 = this, n2 = x7.c[0];
  if (dp !== UNDEFINED) {
    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
      throw Error(INVALID_DP);
    }
    x7 = round(new x7.constructor(x7), dp + x7.e + 1, rm);
    for (dp = dp + x7.e + 1; x7.c.length < dp; ) x7.c.push(0);
  }
  return stringify(x7, false, !!n2);
};
P[Symbol.for("nodejs.util.inspect.custom")] = P.toJSON = P.toString = function() {
  var x7 = this, Big2 = x7.constructor;
  return stringify(x7, x7.e <= Big2.NE || x7.e >= Big2.PE, !!x7.c[0]);
};
P.toNumber = function() {
  var n2 = +stringify(this, true, true);
  if (this.constructor.strict === true && !this.eq(n2.toString())) {
    throw Error(NAME + "Imprecise conversion");
  }
  return n2;
};
P.toPrecision = function(sd, rm) {
  var x7 = this, Big2 = x7.constructor, n2 = x7.c[0];
  if (sd !== UNDEFINED) {
    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {
      throw Error(INVALID + "precision");
    }
    x7 = round(new Big2(x7), sd, rm);
    for (; x7.c.length < sd; ) x7.c.push(0);
  }
  return stringify(x7, sd <= x7.e || x7.e <= Big2.NE || x7.e >= Big2.PE, !!n2);
};
P.valueOf = function() {
  var x7 = this, Big2 = x7.constructor;
  if (Big2.strict === true) {
    throw Error(NAME + "valueOf disallowed");
  }
  return stringify(x7, x7.e <= Big2.NE || x7.e >= Big2.PE, true);
};
var Big = _Big_();
var big_default = Big;

// node_modules/@reown/appkit-common/dist/esm/src/utils/NumberUtil.js
var NumberUtil = {
  bigNumber(value) {
    if (!value) {
      return new big_default(0);
    }
    return new big_default(value);
  },
  multiply(a2, b3) {
    if (a2 === void 0 || b3 === void 0) {
      return new big_default(0);
    }
    const aBigNumber = new big_default(a2);
    const bBigNumber = new big_default(b3);
    return aBigNumber.times(bBigNumber);
  },
  formatNumberToLocalString(value, decimals = 2) {
    if (value === void 0) {
      return "0.00";
    }
    if (typeof value === "number") {
      return value.toLocaleString("en-US", {
        maximumFractionDigits: decimals,
        minimumFractionDigits: decimals
      });
    }
    return parseFloat(value).toLocaleString("en-US", {
      maximumFractionDigits: decimals,
      minimumFractionDigits: decimals
    });
  },
  parseLocalStringToNumber(value) {
    if (value === void 0) {
      return 0;
    }
    return parseFloat(value.replace(/,/gu, ""));
  }
};

// node_modules/@reown/appkit-common/dist/esm/src/utils/InputUtil.js
var InputUtil = {
  numericInputKeyDown(event, currentValue, onChange) {
    const allowedKeys = [
      "Backspace",
      "Meta",
      "Ctrl",
      "a",
      "A",
      "c",
      "C",
      "x",
      "X",
      "v",
      "V",
      "ArrowLeft",
      "ArrowRight",
      "Tab"
    ];
    const controlPressed = event.metaKey || event.ctrlKey;
    const eventKey = event.key;
    const lowercaseEventKey = eventKey.toLocaleLowerCase();
    const selectAll = lowercaseEventKey === "a";
    const copyKey = lowercaseEventKey === "c";
    const pasteKey = lowercaseEventKey === "v";
    const cutKey = lowercaseEventKey === "x";
    const isComma = eventKey === ",";
    const isDot = eventKey === ".";
    const isNumericKey = eventKey >= "0" && eventKey <= "9";
    if (!controlPressed && (selectAll || copyKey || pasteKey || cutKey)) {
      event.preventDefault();
    }
    if (currentValue === "0" && !isComma && !isDot && eventKey === "0") {
      event.preventDefault();
    }
    if (currentValue === "0" && isNumericKey) {
      onChange(eventKey);
      event.preventDefault();
    }
    if (isComma || isDot) {
      if (!currentValue) {
        onChange("0.");
        event.preventDefault();
      }
      if ((currentValue == null ? void 0 : currentValue.includes(".")) || (currentValue == null ? void 0 : currentValue.includes(","))) {
        event.preventDefault();
      }
    }
    if (!isNumericKey && !allowedKeys.includes(eventKey) && !isDot && !isComma) {
      event.preventDefault();
    }
  }
};

// node_modules/@reown/appkit-common/dist/esm/src/contracts/erc20.js
var erc20ABI = [
  {
    type: "function",
    name: "transfer",
    stateMutability: "nonpayable",
    inputs: [
      {
        name: "_to",
        type: "address"
      },
      {
        name: "_value",
        type: "uint256"
      }
    ],
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ]
  },
  {
    type: "function",
    name: "transferFrom",
    stateMutability: "nonpayable",
    inputs: [
      {
        name: "_from",
        type: "address"
      },
      {
        name: "_to",
        type: "address"
      },
      {
        name: "_value",
        type: "uint256"
      }
    ],
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ]
  }
];

// node_modules/@reown/appkit-common/dist/esm/src/contracts/swap.js
var swapABI = [
  {
    type: "function",
    name: "approve",
    stateMutability: "nonpayable",
    inputs: [
      { name: "spender", type: "address" },
      { name: "amount", type: "uint256" }
    ],
    outputs: [{ type: "bool" }]
  }
];

// node_modules/@reown/appkit-common/dist/esm/src/contracts/usdt.js
var usdtABI = [
  {
    type: "function",
    name: "transfer",
    stateMutability: "nonpayable",
    inputs: [
      {
        name: "recipient",
        type: "address"
      },
      {
        name: "amount",
        type: "uint256"
      }
    ],
    outputs: []
  },
  {
    type: "function",
    name: "transferFrom",
    stateMutability: "nonpayable",
    inputs: [
      {
        name: "sender",
        type: "address"
      },
      {
        name: "recipient",
        type: "address"
      },
      {
        name: "amount",
        type: "uint256"
      }
    ],
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ]
  }
];

// node_modules/@reown/appkit-common/dist/esm/src/utils/ConstantsUtil.js
var ConstantsUtil = {
  WC_NAME_SUFFIX: ".reown.id",
  WC_NAME_SUFFIX_LEGACY: ".wcn.id",
  BLOCKCHAIN_API_RPC_URL: "https://rpc.walletconnect.org",
  PULSE_API_URL: "https://pulse.walletconnect.org",
  W3M_API_URL: "https://api.web3modal.org",
  CONNECTOR_ID: {
    WALLET_CONNECT: "walletConnect",
    INJECTED: "injected",
    WALLET_STANDARD: "announced",
    COINBASE: "coinbaseWallet",
    COINBASE_SDK: "coinbaseWalletSDK",
    SAFE: "safe",
    LEDGER: "ledger",
    EIP6963: "eip6963",
    AUTH: "ID_AUTH"
  },
  CONNECTOR_NAMES: {
    AUTH: "Auth"
  },
  AUTH_CONNECTOR_SUPPORTED_CHAINS: ["eip155", "solana"],
  LIMITS: {
    PENDING_TRANSACTIONS: 99
  },
  CHAIN: {
    EVM: "eip155",
    SOLANA: "solana",
    POLKADOT: "polkadot",
    BITCOIN: "bip122"
  },
  CHAIN_NAME_MAP: {
    eip155: "Ethereum",
    solana: "Solana",
    polkadot: "Polkadot",
    bip122: "Bitcoin"
  },
  USDT_CONTRACT_ADDRESSES: [
    "0xdac17f958d2ee523a2206206994597c13d831ec7",
    "0xc2132d05d31c914a87c6611c10748aeb04b58e8f",
    "0x9702230a8ea53601f5cd2dc00fdbc13d4df4a8c7",
    "0x919C1c267BC06a7039e03fcc2eF738525769109c",
    "0x48065fbBE25f71C9282ddf5e1cD6D6A887483D5e",
    "0x55d398326f99059fF775485246999027B3197955",
    "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9"
  ],
  HTTP_STATUS_CODES: {
    SERVICE_UNAVAILABLE: 503,
    FORBIDDEN: 403
  },
  UNSUPPORTED_NETWORK_NAME: "Unknown Network"
};

// node_modules/@reown/appkit-common/dist/esm/src/utils/ContractUtil.js
var ContractUtil = {
  getERC20Abi: (tokenAddress) => {
    if (ConstantsUtil.USDT_CONTRACT_ADDRESSES.includes(tokenAddress)) {
      return usdtABI;
    }
    return erc20ABI;
  },
  getSwapAbi: () => swapABI
};

// node_modules/@reown/appkit-common/dist/esm/src/utils/NavigationUtil.js
var NavigationUtil = {
  URLS: {
    FAQ: "https://walletconnect.com/faq"
  }
};

// node_modules/@reown/appkit-common/dist/esm/src/utils/EmitterUtil.js
var Emitter = class _Emitter {
  on(eventName, callback) {
    var _a7;
    if (!_Emitter.eventListeners.has(eventName)) {
      _Emitter.eventListeners.set(eventName, /* @__PURE__ */ new Set());
    }
    (_a7 = _Emitter.eventListeners.get(eventName)) == null ? void 0 : _a7.add(callback);
  }
  off(eventName, callback) {
    const listeners = _Emitter.eventListeners.get(eventName);
    if (listeners) {
      listeners.delete(callback);
    }
  }
  emit(eventName, data) {
    const listeners = _Emitter.eventListeners.get(eventName);
    if (listeners) {
      listeners.forEach((callback) => callback(data));
    }
  }
  clear(eventName) {
    _Emitter.eventListeners.delete(eventName);
  }
  clearAll() {
    _Emitter.eventListeners.clear();
  }
};
Emitter.eventListeners = /* @__PURE__ */ new Map();

// node_modules/@reown/appkit-common/dist/esm/src/utils/ParseUtil.js
var ParseUtil = {
  validateCaipAddress(address) {
    var _a7;
    if (((_a7 = address.split(":")) == null ? void 0 : _a7.length) !== 3) {
      throw new Error("Invalid CAIP Address");
    }
    return address;
  },
  parseCaipAddress(caipAddress) {
    const parts = caipAddress.split(":");
    if (parts.length !== 3) {
      throw new Error(`Invalid CAIP-10 address: ${caipAddress}`);
    }
    const [chainNamespace, chainId, address] = parts;
    if (!chainNamespace || !chainId || !address) {
      throw new Error(`Invalid CAIP-10 address: ${caipAddress}`);
    }
    return {
      chainNamespace,
      chainId,
      address
    };
  },
  parseCaipNetworkId(caipNetworkId) {
    const parts = caipNetworkId.split(":");
    if (parts.length !== 2) {
      throw new Error(`Invalid CAIP-2 network id: ${caipNetworkId}`);
    }
    const [chainNamespace, chainId] = parts;
    if (!chainNamespace || !chainId) {
      throw new Error(`Invalid CAIP-2 network id: ${caipNetworkId}`);
    }
    return {
      chainNamespace,
      chainId
    };
  }
};

// node_modules/@reown/appkit-common/dist/esm/src/utils/SafeLocalStorage.js
var SafeLocalStorageKeys = {
  WALLET_ID: "@appkit/wallet_id",
  WALLET_NAME: "@appkit/wallet_name",
  SOLANA_WALLET: "@appkit/solana_wallet",
  SOLANA_CAIP_CHAIN: "@appkit/solana_caip_chain",
  ACTIVE_CAIP_NETWORK_ID: "@appkit/active_caip_network_id",
  CONNECTED_SOCIAL: "@appkit/connected_social",
  CONNECTED_SOCIAL_USERNAME: "@appkit-wallet/SOCIAL_USERNAME",
  RECENT_WALLETS: "@appkit/recent_wallets",
  DEEPLINK_CHOICE: "WALLETCONNECT_DEEPLINK_CHOICE",
  ACTIVE_NAMESPACE: "@appkit/active_namespace",
  CONNECTED_NAMESPACES: "@appkit/connected_namespaces",
  CONNECTION_STATUS: "@appkit/connection_status",
  SIWX_AUTH_TOKEN: "@appkit/siwx-auth-token",
  SIWX_NONCE_TOKEN: "@appkit/siwx-nonce-token"
};
function getSafeConnectorIdKey(namespace) {
  if (!namespace) {
    throw new Error("Namespace is required for CONNECTED_CONNECTOR_ID");
  }
  return `@appkit/${namespace}:connected_connector_id`;
}
var SafeLocalStorage = {
  setItem(key2, value) {
    if (isSafe() && value !== void 0) {
      localStorage.setItem(key2, value);
    }
  },
  getItem(key2) {
    if (isSafe()) {
      return localStorage.getItem(key2) || void 0;
    }
    return void 0;
  },
  removeItem(key2) {
    if (isSafe()) {
      localStorage.removeItem(key2);
    }
  },
  clear() {
    if (isSafe()) {
      localStorage.clear();
    }
  }
};
function isSafe() {
  return typeof window !== "undefined" && typeof localStorage !== "undefined";
}

// node_modules/@reown/appkit-common/dist/esm/src/utils/ThemeUtil.js
function getW3mThemeVariables(themeVariables, themeType) {
  if (themeType === "light") {
    return {
      "--w3m-accent": (themeVariables == null ? void 0 : themeVariables["--w3m-accent"]) || "hsla(231, 100%, 70%, 1)",
      "--w3m-background": "#fff"
    };
  }
  return {
    "--w3m-accent": (themeVariables == null ? void 0 : themeVariables["--w3m-accent"]) || "hsla(230, 100%, 67%, 1)",
    "--w3m-background": "#121313"
  };
}

// node_modules/@reown/appkit-common/dist/esm/src/utils/NamesUtil.js
function isReownName(value) {
  return (value == null ? void 0 : value.endsWith(ConstantsUtil.WC_NAME_SUFFIX_LEGACY)) || (value == null ? void 0 : value.endsWith(ConstantsUtil.WC_NAME_SUFFIX));
}

// node_modules/@reown/appkit-ui/dist/esm/src/utils/ThemeUtil.js
var themeTag = void 0;
var darkModeTag = void 0;
var lightModeTag = void 0;
function initializeTheming(themeVariables, themeMode) {
  themeTag = document.createElement("style");
  darkModeTag = document.createElement("style");
  lightModeTag = document.createElement("style");
  themeTag.textContent = createRootStyles(themeVariables).core.cssText;
  darkModeTag.textContent = createRootStyles(themeVariables).dark.cssText;
  lightModeTag.textContent = createRootStyles(themeVariables).light.cssText;
  document.head.appendChild(themeTag);
  document.head.appendChild(darkModeTag);
  document.head.appendChild(lightModeTag);
  setColorTheme(themeMode);
}
function setColorTheme(themeMode) {
  if (darkModeTag && lightModeTag) {
    if (themeMode === "light") {
      darkModeTag.removeAttribute("media");
      lightModeTag.media = "enabled";
    } else {
      lightModeTag.removeAttribute("media");
      darkModeTag.media = "enabled";
    }
  }
}
function setThemeVariables(themeVariables) {
  if (themeTag && darkModeTag && lightModeTag) {
    themeTag.textContent = createRootStyles(themeVariables).core.cssText;
    darkModeTag.textContent = createRootStyles(themeVariables).dark.cssText;
    lightModeTag.textContent = createRootStyles(themeVariables).light.cssText;
  }
}
function createRootStyles(themeVariables) {
  return {
    core: css`
      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
      @keyframes w3m-shake {
        0% {
          transform: scale(1) rotate(0deg);
        }
        20% {
          transform: scale(1) rotate(-1deg);
        }
        40% {
          transform: scale(1) rotate(1.5deg);
        }
        60% {
          transform: scale(1) rotate(-1.5deg);
        }
        80% {
          transform: scale(1) rotate(1deg);
        }
        100% {
          transform: scale(1) rotate(0deg);
        }
      }
      @keyframes w3m-iframe-fade-out {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
        }
      }
      @keyframes w3m-iframe-zoom-in {
        0% {
          transform: translateY(50px);
          opacity: 0;
        }
        100% {
          transform: translateY(0px);
          opacity: 1;
        }
      }
      @keyframes w3m-iframe-zoom-in-mobile {
        0% {
          transform: scale(0.95);
          opacity: 0;
        }
        100% {
          transform: scale(1);
          opacity: 1;
        }
      }
      :root {
        --w3m-modal-width: 360px;
        --w3m-color-mix-strength: ${unsafeCSS((themeVariables == null ? void 0 : themeVariables["--w3m-color-mix-strength"]) ? `${themeVariables["--w3m-color-mix-strength"]}%` : "0%")};
        --w3m-font-family: ${unsafeCSS((themeVariables == null ? void 0 : themeVariables["--w3m-font-family"]) || "Inter, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;")};
        --w3m-font-size-master: ${unsafeCSS((themeVariables == null ? void 0 : themeVariables["--w3m-font-size-master"]) || "10px")};
        --w3m-border-radius-master: ${unsafeCSS((themeVariables == null ? void 0 : themeVariables["--w3m-border-radius-master"]) || "4px")};
        --w3m-z-index: ${unsafeCSS((themeVariables == null ? void 0 : themeVariables["--w3m-z-index"]) || 999)};

        --wui-font-family: var(--w3m-font-family);

        --wui-font-size-mini: calc(var(--w3m-font-size-master) * 0.8);
        --wui-font-size-micro: var(--w3m-font-size-master);
        --wui-font-size-tiny: calc(var(--w3m-font-size-master) * 1.2);
        --wui-font-size-small: calc(var(--w3m-font-size-master) * 1.4);
        --wui-font-size-paragraph: calc(var(--w3m-font-size-master) * 1.6);
        --wui-font-size-medium: calc(var(--w3m-font-size-master) * 1.8);
        --wui-font-size-large: calc(var(--w3m-font-size-master) * 2);
        --wui-font-size-title-6: calc(var(--w3m-font-size-master) * 2.2);
        --wui-font-size-medium-title: calc(var(--w3m-font-size-master) * 2.4);
        --wui-font-size-2xl: calc(var(--w3m-font-size-master) * 4);

        --wui-border-radius-5xs: var(--w3m-border-radius-master);
        --wui-border-radius-4xs: calc(var(--w3m-border-radius-master) * 1.5);
        --wui-border-radius-3xs: calc(var(--w3m-border-radius-master) * 2);
        --wui-border-radius-xxs: calc(var(--w3m-border-radius-master) * 3);
        --wui-border-radius-xs: calc(var(--w3m-border-radius-master) * 4);
        --wui-border-radius-s: calc(var(--w3m-border-radius-master) * 5);
        --wui-border-radius-m: calc(var(--w3m-border-radius-master) * 7);
        --wui-border-radius-l: calc(var(--w3m-border-radius-master) * 9);
        --wui-border-radius-3xl: calc(var(--w3m-border-radius-master) * 20);

        --wui-font-weight-light: 400;
        --wui-font-weight-regular: 500;
        --wui-font-weight-medium: 600;
        --wui-font-weight-bold: 700;

        --wui-letter-spacing-2xl: -1.6px;
        --wui-letter-spacing-medium-title: -0.96px;
        --wui-letter-spacing-title-6: -0.88px;
        --wui-letter-spacing-large: -0.8px;
        --wui-letter-spacing-medium: -0.72px;
        --wui-letter-spacing-paragraph: -0.64px;
        --wui-letter-spacing-small: -0.56px;
        --wui-letter-spacing-tiny: -0.48px;
        --wui-letter-spacing-micro: -0.2px;
        --wui-letter-spacing-mini: -0.16px;

        --wui-spacing-0: 0px;
        --wui-spacing-4xs: 2px;
        --wui-spacing-3xs: 4px;
        --wui-spacing-xxs: 6px;
        --wui-spacing-2xs: 7px;
        --wui-spacing-xs: 8px;
        --wui-spacing-1xs: 10px;
        --wui-spacing-s: 12px;
        --wui-spacing-m: 14px;
        --wui-spacing-l: 16px;
        --wui-spacing-2l: 18px;
        --wui-spacing-xl: 20px;
        --wui-spacing-xxl: 24px;
        --wui-spacing-2xl: 32px;
        --wui-spacing-3xl: 40px;
        --wui-spacing-4xl: 90px;
        --wui-spacing-5xl: 95px;

        --wui-icon-box-size-xxs: 14px;
        --wui-icon-box-size-xs: 20px;
        --wui-icon-box-size-sm: 24px;
        --wui-icon-box-size-md: 32px;
        --wui-icon-box-size-mdl: 36px;
        --wui-icon-box-size-lg: 40px;
        --wui-icon-box-size-2lg: 48px;
        --wui-icon-box-size-xl: 64px;

        --wui-icon-size-inherit: inherit;
        --wui-icon-size-xxs: 10px;
        --wui-icon-size-xs: 12px;
        --wui-icon-size-sm: 14px;
        --wui-icon-size-md: 16px;
        --wui-icon-size-mdl: 18px;
        --wui-icon-size-lg: 20px;
        --wui-icon-size-xl: 24px;
        --wui-icon-size-xxl: 28px;

        --wui-wallet-image-size-inherit: inherit;
        --wui-wallet-image-size-sm: 40px;
        --wui-wallet-image-size-md: 56px;
        --wui-wallet-image-size-lg: 80px;

        --wui-visual-size-size-inherit: inherit;
        --wui-visual-size-sm: 40px;
        --wui-visual-size-md: 55px;
        --wui-visual-size-lg: 80px;

        --wui-box-size-md: 100px;
        --wui-box-size-lg: 120px;

        --wui-ease-out-power-2: cubic-bezier(0, 0, 0.22, 1);
        --wui-ease-out-power-1: cubic-bezier(0, 0, 0.55, 1);

        --wui-ease-in-power-3: cubic-bezier(0.66, 0, 1, 1);
        --wui-ease-in-power-2: cubic-bezier(0.45, 0, 1, 1);
        --wui-ease-in-power-1: cubic-bezier(0.3, 0, 1, 1);

        --wui-ease-inout-power-1: cubic-bezier(0.45, 0, 0.55, 1);

        --wui-duration-lg: 200ms;
        --wui-duration-md: 125ms;
        --wui-duration-sm: 75ms;

        --wui-path-network-sm: path(
          'M15.4 2.1a5.21 5.21 0 0 1 5.2 0l11.61 6.7a5.21 5.21 0 0 1 2.61 4.52v13.4c0 1.87-1 3.59-2.6 4.52l-11.61 6.7c-1.62.93-3.6.93-5.22 0l-11.6-6.7a5.21 5.21 0 0 1-2.61-4.51v-13.4c0-1.87 1-3.6 2.6-4.52L15.4 2.1Z'
        );

        --wui-path-network-md: path(
          'M43.4605 10.7248L28.0485 1.61089C25.5438 0.129705 22.4562 0.129705 19.9515 1.61088L4.53951 10.7248C2.03626 12.2051 0.5 14.9365 0.5 17.886V36.1139C0.5 39.0635 2.03626 41.7949 4.53951 43.2752L19.9515 52.3891C22.4562 53.8703 25.5438 53.8703 28.0485 52.3891L43.4605 43.2752C45.9637 41.7949 47.5 39.0635 47.5 36.114V17.8861C47.5 14.9365 45.9637 12.2051 43.4605 10.7248Z'
        );

        --wui-path-network-lg: path(
          'M78.3244 18.926L50.1808 2.45078C45.7376 -0.150261 40.2624 -0.150262 35.8192 2.45078L7.6756 18.926C3.23322 21.5266 0.5 26.3301 0.5 31.5248V64.4752C0.5 69.6699 3.23322 74.4734 7.6756 77.074L35.8192 93.5492C40.2624 96.1503 45.7376 96.1503 50.1808 93.5492L78.3244 77.074C82.7668 74.4734 85.5 69.6699 85.5 64.4752V31.5248C85.5 26.3301 82.7668 21.5266 78.3244 18.926Z'
        );

        --wui-width-network-sm: 36px;
        --wui-width-network-md: 48px;
        --wui-width-network-lg: 86px;

        --wui-height-network-sm: 40px;
        --wui-height-network-md: 54px;
        --wui-height-network-lg: 96px;

        --wui-icon-size-network-xs: 12px;
        --wui-icon-size-network-sm: 16px;
        --wui-icon-size-network-md: 24px;
        --wui-icon-size-network-lg: 42px;

        --wui-color-inherit: inherit;

        --wui-color-inverse-100: #fff;
        --wui-color-inverse-000: #000;

        --wui-cover: rgba(20, 20, 20, 0.8);

        --wui-color-modal-bg: var(--wui-color-modal-bg-base);

        --wui-color-accent-100: var(--wui-color-accent-base-100);
        --wui-color-accent-090: var(--wui-color-accent-base-090);
        --wui-color-accent-080: var(--wui-color-accent-base-080);

        --wui-color-success-100: var(--wui-color-success-base-100);
        --wui-color-success-125: var(--wui-color-success-base-125);

        --wui-color-warning-100: var(--wui-color-warning-base-100);

        --wui-color-error-100: var(--wui-color-error-base-100);
        --wui-color-error-125: var(--wui-color-error-base-125);

        --wui-color-blue-100: var(--wui-color-blue-base-100);
        --wui-color-blue-90: var(--wui-color-blue-base-90);

        --wui-icon-box-bg-error-100: var(--wui-icon-box-bg-error-base-100);
        --wui-icon-box-bg-blue-100: var(--wui-icon-box-bg-blue-base-100);
        --wui-icon-box-bg-success-100: var(--wui-icon-box-bg-success-base-100);
        --wui-icon-box-bg-inverse-100: var(--wui-icon-box-bg-inverse-base-100);

        --wui-all-wallets-bg-100: var(--wui-all-wallets-bg-100);

        --wui-avatar-border: var(--wui-avatar-border-base);

        --wui-thumbnail-border: var(--wui-thumbnail-border-base);

        --wui-wallet-button-bg: var(--wui-wallet-button-bg-base);

        --wui-box-shadow-blue: var(--wui-color-accent-glass-020);
      }

      @supports (background: color-mix(in srgb, white 50%, black)) {
        :root {
          --wui-color-modal-bg: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-modal-bg-base)
          );

          --wui-box-shadow-blue: color-mix(in srgb, var(--wui-color-accent-100) 20%, transparent);

          --wui-color-accent-100: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 100%,
            transparent
          );
          --wui-color-accent-090: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 90%,
            transparent
          );
          --wui-color-accent-080: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 80%,
            transparent
          );
          --wui-color-accent-glass-090: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 90%,
            transparent
          );
          --wui-color-accent-glass-080: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 80%,
            transparent
          );
          --wui-color-accent-glass-020: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 20%,
            transparent
          );
          --wui-color-accent-glass-015: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 15%,
            transparent
          );
          --wui-color-accent-glass-010: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 10%,
            transparent
          );
          --wui-color-accent-glass-005: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 5%,
            transparent
          );
          --wui-color-accent-002: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 2%,
            transparent
          );

          --wui-color-fg-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-100)
          );
          --wui-color-fg-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-125)
          );
          --wui-color-fg-150: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-150)
          );
          --wui-color-fg-175: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-175)
          );
          --wui-color-fg-200: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-200)
          );
          --wui-color-fg-225: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-225)
          );
          --wui-color-fg-250: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-250)
          );
          --wui-color-fg-275: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-275)
          );
          --wui-color-fg-300: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-300)
          );
          --wui-color-fg-325: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-325)
          );
          --wui-color-fg-350: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-350)
          );

          --wui-color-bg-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-100)
          );
          --wui-color-bg-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-125)
          );
          --wui-color-bg-150: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-150)
          );
          --wui-color-bg-175: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-175)
          );
          --wui-color-bg-200: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-200)
          );
          --wui-color-bg-225: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-225)
          );
          --wui-color-bg-250: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-250)
          );
          --wui-color-bg-275: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-275)
          );
          --wui-color-bg-300: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-300)
          );
          --wui-color-bg-325: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-325)
          );
          --wui-color-bg-350: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-350)
          );

          --wui-color-success-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-success-base-100)
          );
          --wui-color-success-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-success-base-125)
          );

          --wui-color-warning-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-warning-base-100)
          );

          --wui-color-error-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-error-base-100)
          );
          --wui-color-blue-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-blue-base-100)
          );
          --wui-color-blue-90: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-blue-base-90)
          );
          --wui-color-error-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-error-base-125)
          );

          --wui-icon-box-bg-error-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-error-base-100)
          );
          --wui-icon-box-bg-accent-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-blue-base-100)
          );
          --wui-icon-box-bg-success-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-success-base-100)
          );
          --wui-icon-box-bg-inverse-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-inverse-base-100)
          );

          --wui-all-wallets-bg-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-all-wallets-bg-100)
          );

          --wui-avatar-border: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-avatar-border-base)
          );

          --wui-thumbnail-border: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-thumbnail-border-base)
          );

          --wui-wallet-button-bg: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-wallet-button-bg-base)
          );
        }
      }
    `,
    light: css`
      :root {
        --w3m-color-mix: ${unsafeCSS((themeVariables == null ? void 0 : themeVariables["--w3m-color-mix"]) || "#fff")};
        --w3m-accent: ${unsafeCSS(getW3mThemeVariables(themeVariables, "dark")["--w3m-accent"])};
        --w3m-default: #fff;

        --wui-color-modal-bg-base: ${unsafeCSS(getW3mThemeVariables(themeVariables, "dark")["--w3m-background"])};
        --wui-color-accent-base-100: var(--w3m-accent);

        --wui-color-blueberry-100: hsla(230, 100%, 67%, 1);
        --wui-color-blueberry-090: hsla(231, 76%, 61%, 1);
        --wui-color-blueberry-080: hsla(230, 59%, 55%, 1);
        --wui-color-blueberry-050: hsla(231, 100%, 70%, 0.1);

        --wui-color-fg-100: #e4e7e7;
        --wui-color-fg-125: #d0d5d5;
        --wui-color-fg-150: #a8b1b1;
        --wui-color-fg-175: #a8b0b0;
        --wui-color-fg-200: #949e9e;
        --wui-color-fg-225: #868f8f;
        --wui-color-fg-250: #788080;
        --wui-color-fg-275: #788181;
        --wui-color-fg-300: #6e7777;
        --wui-color-fg-325: #9a9a9a;
        --wui-color-fg-350: #363636;

        --wui-color-bg-100: #141414;
        --wui-color-bg-125: #191a1a;
        --wui-color-bg-150: #1e1f1f;
        --wui-color-bg-175: #222525;
        --wui-color-bg-200: #272a2a;
        --wui-color-bg-225: #2c3030;
        --wui-color-bg-250: #313535;
        --wui-color-bg-275: #363b3b;
        --wui-color-bg-300: #3b4040;
        --wui-color-bg-325: #252525;
        --wui-color-bg-350: #ffffff;

        --wui-color-success-base-100: #26d962;
        --wui-color-success-base-125: #30a46b;

        --wui-color-warning-base-100: #f3a13f;

        --wui-color-error-base-100: #f25a67;
        --wui-color-error-base-125: #df4a34;

        --wui-color-blue-base-100: rgba(102, 125, 255, 1);
        --wui-color-blue-base-90: rgba(102, 125, 255, 0.9);

        --wui-color-success-glass-001: rgba(38, 217, 98, 0.01);
        --wui-color-success-glass-002: rgba(38, 217, 98, 0.02);
        --wui-color-success-glass-005: rgba(38, 217, 98, 0.05);
        --wui-color-success-glass-010: rgba(38, 217, 98, 0.1);
        --wui-color-success-glass-015: rgba(38, 217, 98, 0.15);
        --wui-color-success-glass-020: rgba(38, 217, 98, 0.2);
        --wui-color-success-glass-025: rgba(38, 217, 98, 0.25);
        --wui-color-success-glass-030: rgba(38, 217, 98, 0.3);
        --wui-color-success-glass-060: rgba(38, 217, 98, 0.6);
        --wui-color-success-glass-080: rgba(38, 217, 98, 0.8);

        --wui-color-success-glass-reown-020: rgba(48, 164, 107, 0.2);

        --wui-color-warning-glass-reown-020: rgba(243, 161, 63, 0.2);

        --wui-color-error-glass-001: rgba(242, 90, 103, 0.01);
        --wui-color-error-glass-002: rgba(242, 90, 103, 0.02);
        --wui-color-error-glass-005: rgba(242, 90, 103, 0.05);
        --wui-color-error-glass-010: rgba(242, 90, 103, 0.1);
        --wui-color-error-glass-015: rgba(242, 90, 103, 0.15);
        --wui-color-error-glass-020: rgba(242, 90, 103, 0.2);
        --wui-color-error-glass-025: rgba(242, 90, 103, 0.25);
        --wui-color-error-glass-030: rgba(242, 90, 103, 0.3);
        --wui-color-error-glass-060: rgba(242, 90, 103, 0.6);
        --wui-color-error-glass-080: rgba(242, 90, 103, 0.8);

        --wui-color-error-glass-reown-020: rgba(223, 74, 52, 0.2);

        --wui-color-gray-glass-001: rgba(255, 255, 255, 0.01);
        --wui-color-gray-glass-002: rgba(255, 255, 255, 0.02);
        --wui-color-gray-glass-005: rgba(255, 255, 255, 0.05);
        --wui-color-gray-glass-010: rgba(255, 255, 255, 0.1);
        --wui-color-gray-glass-015: rgba(255, 255, 255, 0.15);
        --wui-color-gray-glass-020: rgba(255, 255, 255, 0.2);
        --wui-color-gray-glass-025: rgba(255, 255, 255, 0.25);
        --wui-color-gray-glass-030: rgba(255, 255, 255, 0.3);
        --wui-color-gray-glass-060: rgba(255, 255, 255, 0.6);
        --wui-color-gray-glass-080: rgba(255, 255, 255, 0.8);
        --wui-color-gray-glass-090: rgba(255, 255, 255, 0.9);

        --wui-color-dark-glass-100: rgba(42, 42, 42, 1);

        --wui-icon-box-bg-error-base-100: #3c2426;
        --wui-icon-box-bg-blue-base-100: #20303f;
        --wui-icon-box-bg-success-base-100: #1f3a28;
        --wui-icon-box-bg-inverse-base-100: #243240;

        --wui-all-wallets-bg-100: #222b35;

        --wui-avatar-border-base: #252525;

        --wui-thumbnail-border-base: #252525;

        --wui-wallet-button-bg-base: var(--wui-color-bg-125);

        --w3m-card-embedded-shadow-color: rgb(17 17 18 / 25%);
      }
    `,
    dark: css`
      :root {
        --w3m-color-mix: ${unsafeCSS((themeVariables == null ? void 0 : themeVariables["--w3m-color-mix"]) || "#000")};
        --w3m-accent: ${unsafeCSS(getW3mThemeVariables(themeVariables, "light")["--w3m-accent"])};
        --w3m-default: #000;

        --wui-color-modal-bg-base: ${unsafeCSS(getW3mThemeVariables(themeVariables, "light")["--w3m-background"])};
        --wui-color-accent-base-100: var(--w3m-accent);

        --wui-color-blueberry-100: hsla(231, 100%, 70%, 1);
        --wui-color-blueberry-090: hsla(231, 97%, 72%, 1);
        --wui-color-blueberry-080: hsla(231, 92%, 74%, 1);

        --wui-color-fg-100: #141414;
        --wui-color-fg-125: #2d3131;
        --wui-color-fg-150: #474d4d;
        --wui-color-fg-175: #636d6d;
        --wui-color-fg-200: #798686;
        --wui-color-fg-225: #828f8f;
        --wui-color-fg-250: #8b9797;
        --wui-color-fg-275: #95a0a0;
        --wui-color-fg-300: #9ea9a9;
        --wui-color-fg-325: #9a9a9a;
        --wui-color-fg-350: #d0d0d0;

        --wui-color-bg-100: #ffffff;
        --wui-color-bg-125: #f5fafa;
        --wui-color-bg-150: #f3f8f8;
        --wui-color-bg-175: #eef4f4;
        --wui-color-bg-200: #eaf1f1;
        --wui-color-bg-225: #e5eded;
        --wui-color-bg-250: #e1e9e9;
        --wui-color-bg-275: #dce7e7;
        --wui-color-bg-300: #d8e3e3;
        --wui-color-bg-325: #f3f3f3;
        --wui-color-bg-350: #202020;

        --wui-color-success-base-100: #26b562;
        --wui-color-success-base-125: #30a46b;

        --wui-color-warning-base-100: #f3a13f;

        --wui-color-error-base-100: #f05142;
        --wui-color-error-base-125: #df4a34;

        --wui-color-blue-base-100: rgba(102, 125, 255, 1);
        --wui-color-blue-base-90: rgba(102, 125, 255, 0.9);

        --wui-color-success-glass-001: rgba(38, 181, 98, 0.01);
        --wui-color-success-glass-002: rgba(38, 181, 98, 0.02);
        --wui-color-success-glass-005: rgba(38, 181, 98, 0.05);
        --wui-color-success-glass-010: rgba(38, 181, 98, 0.1);
        --wui-color-success-glass-015: rgba(38, 181, 98, 0.15);
        --wui-color-success-glass-020: rgba(38, 181, 98, 0.2);
        --wui-color-success-glass-025: rgba(38, 181, 98, 0.25);
        --wui-color-success-glass-030: rgba(38, 181, 98, 0.3);
        --wui-color-success-glass-060: rgba(38, 181, 98, 0.6);
        --wui-color-success-glass-080: rgba(38, 181, 98, 0.8);

        --wui-color-success-glass-reown-020: rgba(48, 164, 107, 0.2);

        --wui-color-warning-glass-reown-020: rgba(243, 161, 63, 0.2);

        --wui-color-error-glass-001: rgba(240, 81, 66, 0.01);
        --wui-color-error-glass-002: rgba(240, 81, 66, 0.02);
        --wui-color-error-glass-005: rgba(240, 81, 66, 0.05);
        --wui-color-error-glass-010: rgba(240, 81, 66, 0.1);
        --wui-color-error-glass-015: rgba(240, 81, 66, 0.15);
        --wui-color-error-glass-020: rgba(240, 81, 66, 0.2);
        --wui-color-error-glass-025: rgba(240, 81, 66, 0.25);
        --wui-color-error-glass-030: rgba(240, 81, 66, 0.3);
        --wui-color-error-glass-060: rgba(240, 81, 66, 0.6);
        --wui-color-error-glass-080: rgba(240, 81, 66, 0.8);

        --wui-color-error-glass-reown-020: rgba(223, 74, 52, 0.2);

        --wui-icon-box-bg-error-base-100: #f4dfdd;
        --wui-icon-box-bg-blue-base-100: #d9ecfb;
        --wui-icon-box-bg-success-base-100: #daf0e4;
        --wui-icon-box-bg-inverse-base-100: #dcecfc;

        --wui-all-wallets-bg-100: #e8f1fa;

        --wui-avatar-border-base: #f3f4f4;

        --wui-thumbnail-border-base: #eaefef;

        --wui-wallet-button-bg-base: var(--wui-color-bg-125);

        --wui-color-gray-glass-001: rgba(0, 0, 0, 0.01);
        --wui-color-gray-glass-002: rgba(0, 0, 0, 0.02);
        --wui-color-gray-glass-005: rgba(0, 0, 0, 0.05);
        --wui-color-gray-glass-010: rgba(0, 0, 0, 0.1);
        --wui-color-gray-glass-015: rgba(0, 0, 0, 0.15);
        --wui-color-gray-glass-020: rgba(0, 0, 0, 0.2);
        --wui-color-gray-glass-025: rgba(0, 0, 0, 0.25);
        --wui-color-gray-glass-030: rgba(0, 0, 0, 0.3);
        --wui-color-gray-glass-060: rgba(0, 0, 0, 0.6);
        --wui-color-gray-glass-080: rgba(0, 0, 0, 0.8);
        --wui-color-gray-glass-090: rgba(0, 0, 0, 0.9);

        --wui-color-dark-glass-100: rgba(233, 233, 233, 1);

        --w3m-card-embedded-shadow-color: rgb(224 225 233 / 25%);
      }
    `
  };
}
var resetStyles = css`
  *,
  *::after,
  *::before,
  :host {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-style: normal;
    text-rendering: optimizeSpeed;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-tap-highlight-color: transparent;
    font-family: var(--wui-font-family);
    backface-visibility: hidden;
  }
`;
var elementStyles = css`
  button,
  a {
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    transition:
      color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      background-color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      border var(--wui-duration-lg) var(--wui-ease-out-power-1),
      border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1),
      box-shadow var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: background-color, color, border, box-shadow, border-radius;
    outline: none;
    border: none;
    column-gap: var(--wui-spacing-3xs);
    background-color: transparent;
    text-decoration: none;
  }

  wui-flex {
    transition: border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: border-radius;
  }

  button:disabled > wui-wallet-image,
  button:disabled > wui-all-wallets-image,
  button:disabled > wui-network-image,
  button:disabled > wui-image,
  button:disabled > wui-transaction-visual,
  button:disabled > wui-logo {
    filter: grayscale(1);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-gray-glass-005);
    }

    button:active:enabled {
      background-color: var(--wui-color-gray-glass-010);
    }
  }

  button:disabled > wui-icon-box {
    opacity: 0.5;
  }

  input {
    border: none;
    outline: none;
    appearance: none;
  }
`;
var colorStyles = css`
  .wui-color-inherit {
    color: var(--wui-color-inherit);
  }

  .wui-color-accent-100 {
    color: var(--wui-color-accent-100);
  }

  .wui-color-error-100 {
    color: var(--wui-color-error-100);
  }

  .wui-color-blue-100 {
    color: var(--wui-color-blue-100);
  }

  .wui-color-blue-90 {
    color: var(--wui-color-blue-90);
  }

  .wui-color-error-125 {
    color: var(--wui-color-error-125);
  }

  .wui-color-success-100 {
    color: var(--wui-color-success-100);
  }

  .wui-color-success-125 {
    color: var(--wui-color-success-125);
  }

  .wui-color-inverse-100 {
    color: var(--wui-color-inverse-100);
  }

  .wui-color-inverse-000 {
    color: var(--wui-color-inverse-000);
  }

  .wui-color-fg-100 {
    color: var(--wui-color-fg-100);
  }

  .wui-color-fg-200 {
    color: var(--wui-color-fg-200);
  }

  .wui-color-fg-300 {
    color: var(--wui-color-fg-300);
  }

  .wui-color-fg-325 {
    color: var(--wui-color-fg-325);
  }

  .wui-color-fg-350 {
    color: var(--wui-color-fg-350);
  }

  .wui-bg-color-inherit {
    background-color: var(--wui-color-inherit);
  }

  .wui-bg-color-blue-100 {
    background-color: var(--wui-color-accent-100);
  }

  .wui-bg-color-error-100 {
    background-color: var(--wui-color-error-100);
  }

  .wui-bg-color-error-125 {
    background-color: var(--wui-color-error-125);
  }

  .wui-bg-color-success-100 {
    background-color: var(--wui-color-success-100);
  }

  .wui-bg-color-success-125 {
    background-color: var(--wui-color-success-100);
  }

  .wui-bg-color-inverse-100 {
    background-color: var(--wui-color-inverse-100);
  }

  .wui-bg-color-inverse-000 {
    background-color: var(--wui-color-inverse-000);
  }

  .wui-bg-color-fg-100 {
    background-color: var(--wui-color-fg-100);
  }

  .wui-bg-color-fg-200 {
    background-color: var(--wui-color-fg-200);
  }

  .wui-bg-color-fg-300 {
    background-color: var(--wui-color-fg-300);
  }

  .wui-color-fg-325 {
    background-color: var(--wui-color-fg-325);
  }

  .wui-color-fg-350 {
    background-color: var(--wui-color-fg-350);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/utils/WebComponentsUtil.js
function standardCustomElement(tagName, descriptor) {
  const { kind, elements } = descriptor;
  return {
    kind,
    elements,
    finisher(clazz) {
      if (!customElements.get(tagName)) {
        customElements.define(tagName, clazz);
      }
    }
  };
}
function legacyCustomElement(tagName, clazz) {
  if (!customElements.get(tagName)) {
    customElements.define(tagName, clazz);
  }
  return clazz;
}
function customElement(tagName) {
  return function create(classOrDescriptor) {
    return typeof classOrDescriptor === "function" ? legacyCustomElement(tagName, classOrDescriptor) : standardCustomElement(tagName, classOrDescriptor);
  };
}

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-card/styles.js
var styles_default = css`
  :host {
    display: block;
    border-radius: clamp(0px, var(--wui-border-radius-l), 44px);
    box-shadow: 0 0 0 1px var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-modal-bg);
    overflow: hidden;
  }

  :host([data-embedded='true']) {
    box-shadow:
      0 0 0 1px var(--wui-color-gray-glass-005),
      0px 4px 12px 4px var(--w3m-card-embedded-shadow-color);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-card/index.js
var __decorate = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiCard = class WuiCard2 extends LitElement {
  render() {
    return html`<slot></slot>`;
  }
};
WuiCard.styles = [resetStyles, styles_default];
WuiCard = __decorate([
  customElement("wui-card")
], WuiCard);

// node_modules/@lit/reactive-element/development/decorators/property.js
var DEV_MODE4 = true;
var issueWarning4;
if (DEV_MODE4) {
  const issuedWarnings = globalThis.litIssuedWarnings ?? (globalThis.litIssuedWarnings = /* @__PURE__ */ new Set());
  issueWarning4 = (code, warning) => {
    warning += ` See https://lit.dev/msg/${code} for more information.`;
    if (!issuedWarnings.has(warning)) {
      console.warn(warning);
      issuedWarnings.add(warning);
    }
  };
}
var legacyProperty = (options, proto, name) => {
  const hasOwnProperty = proto.hasOwnProperty(name);
  proto.constructor.createProperty(name, hasOwnProperty ? { ...options, wrapped: true } : options);
  return hasOwnProperty ? Object.getOwnPropertyDescriptor(proto, name) : void 0;
};
var defaultPropertyDeclaration2 = {
  attribute: true,
  type: String,
  converter: defaultConverter,
  reflect: false,
  hasChanged: notEqual
};
var standardProperty = (options = defaultPropertyDeclaration2, target, context) => {
  const { kind, metadata } = context;
  if (DEV_MODE4 && metadata == null) {
    issueWarning4("missing-class-metadata", `The class ${target} is missing decorator metadata. This could mean that you're using a compiler that supports decorators but doesn't support decorator metadata, such as TypeScript 5.1. Please update your compiler.`);
  }
  let properties = globalThis.litPropertyMetadata.get(metadata);
  if (properties === void 0) {
    globalThis.litPropertyMetadata.set(metadata, properties = /* @__PURE__ */ new Map());
  }
  properties.set(context.name, options);
  if (kind === "accessor") {
    const { name } = context;
    return {
      set(v6) {
        const oldValue = target.get.call(this);
        target.set.call(this, v6);
        this.requestUpdate(name, oldValue, options);
      },
      init(v6) {
        if (v6 !== void 0) {
          this._$changeProperty(name, void 0, options);
        }
        return v6;
      }
    };
  } else if (kind === "setter") {
    const { name } = context;
    return function(value) {
      const oldValue = this[name];
      target.call(this, value);
      this.requestUpdate(name, oldValue, options);
    };
  }
  throw new Error(`Unsupported decorator location: ${kind}`);
};
function property(options) {
  return (protoOrTarget, nameOrContext) => {
    return typeof nameOrContext === "object" ? standardProperty(options, protoOrTarget, nameOrContext) : legacyProperty(options, protoOrTarget, nameOrContext);
  };
}

// node_modules/@lit/reactive-element/development/decorators/state.js
function state(options) {
  return property({
    ...options,
    // Add both `state` and `attribute` because we found a third party
    // controller that is keying off of PropertyOptions.state to determine
    // whether a field is a private internal property or not.
    state: true,
    attribute: false
  });
}

// node_modules/@lit/reactive-element/development/decorators/query.js
var DEV_MODE5 = true;
var issueWarning5;
if (DEV_MODE5) {
  const issuedWarnings = globalThis.litIssuedWarnings ?? (globalThis.litIssuedWarnings = /* @__PURE__ */ new Set());
  issueWarning5 = (code, warning) => {
    warning += code ? ` See https://lit.dev/msg/${code} for more information.` : "";
    if (!issuedWarnings.has(warning)) {
      console.warn(warning);
      issuedWarnings.add(warning);
    }
  };
}

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/add.js
var addSvg = svg`<svg
  width="14"
  height="14"
  viewBox="0 0 14 14"
  fill="none"
  xmlns="http://www.w3.org/2000/svg"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M7.0023 0.875C7.48571 0.875 7.8776 1.26675 7.8776 1.75V6.125H12.2541C12.7375 6.125 13.1294 6.51675 13.1294 7C13.1294 7.48325 12.7375 7.875 12.2541 7.875H7.8776V12.25C7.8776 12.7332 7.48571 13.125 7.0023 13.125C6.51889 13.125 6.12701 12.7332 6.12701 12.25V7.875H1.75054C1.26713 7.875 0.875244 7.48325 0.875244 7C0.875244 6.51675 1.26713 6.125 1.75054 6.125H6.12701V1.75C6.12701 1.26675 6.51889 0.875 7.0023 0.875Z"
    fill="#667dff"
  /></svg
>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/all-wallets.js
var allWalletsSvg = svg`<svg fill="none" viewBox="0 0 24 24">
  <path
    style="fill: var(--wui-color-accent-100);"
    d="M10.2 6.6a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0ZM21 6.6a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0ZM10.2 17.4a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0ZM21 17.4a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0Z"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/app-store.js
var appStoreSvg = svg`
<svg width="36" height="36">
  <path
    d="M28.724 0H7.271A7.269 7.269 0 0 0 0 7.272v21.46A7.268 7.268 0 0 0 7.271 36H28.73A7.272 7.272 0 0 0 36 28.728V7.272A7.275 7.275 0 0 0 28.724 0Z"
    fill="url(#a)"
  />
  <path
    d="m17.845 8.271.729-1.26a1.64 1.64 0 1 1 2.843 1.638l-7.023 12.159h5.08c1.646 0 2.569 1.935 1.853 3.276H6.434a1.632 1.632 0 0 1-1.638-1.638c0-.909.73-1.638 1.638-1.638h4.176l5.345-9.265-1.67-2.898a1.642 1.642 0 0 1 2.844-1.638l.716 1.264Zm-6.317 17.5-1.575 2.732a1.64 1.64 0 1 1-2.844-1.638l1.17-2.025c1.323-.41 2.398-.095 3.249.931Zm13.56-4.954h4.262c.909 0 1.638.729 1.638 1.638 0 .909-.73 1.638-1.638 1.638h-2.367l1.597 2.772c.45.788.185 1.782-.602 2.241a1.642 1.642 0 0 1-2.241-.603c-2.69-4.666-4.711-8.159-6.052-10.485-1.372-2.367-.391-4.743.576-5.549 1.075 1.846 2.682 4.631 4.828 8.348Z"
    fill="#fff"
  />
  <defs>
    <linearGradient id="a" x1="18" y1="0" x2="18" y2="36" gradientUnits="userSpaceOnUse">
      <stop stop-color="#18BFFB" />
      <stop offset="1" stop-color="#2072F3" />
    </linearGradient>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/apple.js
var appleSvg = svg`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#000" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M28.77 23.3c-.69 1.99-2.75 5.52-4.87 5.56-1.4.03-1.86-.84-3.46-.84-1.61 0-2.12.81-3.45.86-2.25.1-5.72-5.1-5.72-9.62 0-4.15 2.9-6.2 5.42-6.25 1.36-.02 2.64.92 3.47.92.83 0 2.38-1.13 4.02-.97.68.03 2.6.28 3.84 2.08-3.27 2.14-2.76 6.61.75 8.25ZM24.2 7.88c-2.47.1-4.49 2.69-4.2 4.84 2.28.17 4.47-2.39 4.2-4.84Z"
        />
      </g>
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/arrow-bottom-circle.js
var arrowBottomCircleSvg = svg`<svg
  fill="none"
  viewBox="0 0 21 20"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M10.5 2.42908C6.31875 2.42908 2.92859 5.81989 2.92859 10.0034C2.92859 14.1869 6.31875 17.5777 10.5 17.5777C14.6813 17.5777 18.0714 14.1869 18.0714 10.0034C18.0714 5.81989 14.6813 2.42908 10.5 2.42908ZM0.928589 10.0034C0.928589 4.71596 5.21355 0.429077 10.5 0.429077C15.7865 0.429077 20.0714 4.71596 20.0714 10.0034C20.0714 15.2908 15.7865 19.5777 10.5 19.5777C5.21355 19.5777 0.928589 15.2908 0.928589 10.0034ZM10.5 5.75003C11.0523 5.75003 11.5 6.19774 11.5 6.75003L11.5 10.8343L12.7929 9.54137C13.1834 9.15085 13.8166 9.15085 14.2071 9.54137C14.5976 9.9319 14.5976 10.5651 14.2071 10.9556L11.2071 13.9556C10.8166 14.3461 10.1834 14.3461 9.79291 13.9556L6.79291 10.9556C6.40239 10.5651 6.40239 9.9319 6.79291 9.54137C7.18343 9.15085 7.8166 9.15085 8.20712 9.54137L9.50002 10.8343L9.50002 6.75003C9.50002 6.19774 9.94773 5.75003 10.5 5.75003Z"
    clip-rule="evenodd"
  /></svg
>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/arrow-bottom.js
var arrowBottomSvg = svg`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M7 1.99a1 1 0 0 1 1 1v7.58l2.46-2.46a1 1 0 0 1 1.41 1.42L7.7 13.69a1 1 0 0 1-1.41 0L2.12 9.53A1 1 0 0 1 3.54 8.1L6 10.57V3a1 1 0 0 1 1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/arrow-left.js
var arrowLeftSvg = svg`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M13 7.99a1 1 0 0 1-1 1H4.4l2.46 2.46a1 1 0 1 1-1.41 1.41L1.29 8.7a1 1 0 0 1 0-1.41L5.46 3.1a1 1 0 0 1 1.41 1.42L4.41 6.99H12a1 1 0 0 1 1 1Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/arrow-right.js
var arrowRightSvg = svg`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M1 7.99a1 1 0 0 1 1-1h7.58L7.12 4.53A1 1 0 1 1 8.54 3.1l4.16 4.17a1 1 0 0 1 0 1.41l-4.16 4.17a1 1 0 1 1-1.42-1.41l2.46-2.46H2a1 1 0 0 1-1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/arrow-top.js
var arrowTopSvg = svg`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M7 13.99a1 1 0 0 1-1-1V5.4L3.54 7.86a1 1 0 0 1-1.42-1.41L6.3 2.28a1 1 0 0 1 1.41 0l4.17 4.17a1 1 0 1 1-1.41 1.41L8 5.4v7.59a1 1 0 0 1-1 1Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/bank.js
var bankSvg = svg`<svg
  xmlns="http://www.w3.org/2000/svg"
  width="12"
  height="13"
  viewBox="0 0 12 13"
  fill="none"
>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M5.61391 1.57124C5.85142 1.42873 6.14813 1.42873 6.38564 1.57124L11.0793 4.38749C11.9179 4.89067 11.5612 6.17864 10.5832 6.17864H9.96398V10.0358H10.2854C10.6996 10.0358 11.0354 10.3716 11.0354 10.7858C11.0354 11.2 10.6996 11.5358 10.2854 11.5358H1.71416C1.29995 11.5358 0.964172 11.2 0.964172 10.7858C0.964172 10.3716 1.29995 10.0358 1.71416 10.0358H2.03558L2.03558 6.17864H1.41637C0.438389 6.17864 0.0816547 4.89066 0.920263 4.38749L5.61391 1.57124ZM3.53554 6.17864V10.0358H5.24979V6.17864H3.53554ZM6.74976 6.17864V10.0358H8.46401V6.17864H6.74976ZM8.64913 4.67864H3.35043L5.99978 3.089L8.64913 4.67864Z"
    fill="currentColor"
  /></svg
>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/browser.js
var browserSvg = svg`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4 6.4a1 1 0 0 1-.46.89 6.98 6.98 0 0 0 .38 6.18A7 7 0 0 0 16.46 7.3a1 1 0 0 1-.47-.92 7 7 0 0 0-12 .03Zm-2.02-.5a9 9 0 1 1 16.03 8.2A9 9 0 0 1 1.98 5.9Z"
    clip-rule="evenodd"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.03 8.63c-1.46-.3-2.72-.75-3.6-1.35l-.02-.01-.14-.11a1 1 0 0 1 1.2-1.6l.1.08c.6.4 1.52.74 2.69 1 .16-.99.39-1.88.67-2.65.3-.79.68-1.5 1.15-2.02A2.58 2.58 0 0 1 9.99 1c.8 0 1.45.44 1.92.97.47.52.84 1.23 1.14 2.02.29.77.52 1.66.68 2.64a8 8 0 0 0 2.7-1l.26-.18h.48a1 1 0 0 1 .12 2c-.86.51-2.01.91-3.34 1.18a22.24 22.24 0 0 1-.03 3.19c1.45.29 2.7.73 3.58 1.31a1 1 0 0 1-1.1 1.68c-.6-.4-1.56-.76-2.75-1-.15.8-.36 1.55-.6 2.2-.3.79-.67 1.5-1.14 2.02-.47.53-1.12.97-1.92.97-.8 0-1.45-.44-1.91-.97a6.51 6.51 0 0 1-1.15-2.02c-.24-.65-.44-1.4-.6-2.2-1.18.24-2.13.6-2.73.99a1 1 0 1 1-1.1-1.67c.88-.58 2.12-1.03 3.57-1.31a22.03 22.03 0 0 1-.04-3.2Zm2.2-1.7c.15-.86.34-1.61.58-2.24.24-.65.51-1.12.76-1.4.25-.28.4-.29.42-.29.03 0 .17.01.42.3.25.27.52.74.77 1.4.23.62.43 1.37.57 2.22a19.96 19.96 0 0 1-3.52 0Zm-.18 4.6a20.1 20.1 0 0 1-.03-2.62 21.95 21.95 0 0 0 3.94 0 20.4 20.4 0 0 1-.03 2.63 21.97 21.97 0 0 0-3.88 0Zm.27 2c.13.66.3 1.26.49 1.78.24.65.51 1.12.76 1.4.25.28.4.29.42.29.03 0 .17-.01.42-.3.25-.27.52-.74.77-1.4.19-.5.36-1.1.49-1.78a20.03 20.03 0 0 0-3.35 0Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/card.js
var cardSvg = svg`<svg
  xmlns="http://www.w3.org/2000/svg"
  width="12"
  height="13"
  viewBox="0 0 12 13"
  fill="none"
>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M4.16072 2C4.17367 2 4.18665 2 4.19968 2L7.83857 2C8.36772 1.99998 8.82398 1.99996 9.19518 2.04018C9.5895 2.0829 9.97577 2.17811 10.3221 2.42971C10.5131 2.56849 10.6811 2.73647 10.8198 2.92749C11.0714 3.27379 11.1666 3.66007 11.2094 4.0544C11.2496 4.42561 11.2496 4.88188 11.2495 5.41105V7.58896C11.2496 8.11812 11.2496 8.57439 11.2094 8.94561C11.1666 9.33994 11.0714 9.72621 10.8198 10.0725C10.6811 10.2635 10.5131 10.4315 10.3221 10.5703C9.97577 10.8219 9.5895 10.9171 9.19518 10.9598C8.82398 11 8.36772 11 7.83856 11H4.16073C3.63157 11 3.17531 11 2.80411 10.9598C2.40979 10.9171 2.02352 10.8219 1.67722 10.5703C1.48621 10.4315 1.31824 10.2635 1.17946 10.0725C0.927858 9.72621 0.832652 9.33994 0.78993 8.94561C0.749713 8.5744 0.749733 8.11813 0.749757 7.58896L0.749758 5.45C0.749758 5.43697 0.749758 5.42399 0.749757 5.41104C0.749733 4.88188 0.749713 4.42561 0.78993 4.0544C0.832652 3.66007 0.927858 3.27379 1.17946 2.92749C1.31824 2.73647 1.48621 2.56849 1.67722 2.42971C2.02352 2.17811 2.40979 2.0829 2.80411 2.04018C3.17531 1.99996 3.63157 1.99998 4.16072 2ZM2.96567 3.53145C2.69897 3.56034 2.60687 3.60837 2.55888 3.64324C2.49521 3.6895 2.43922 3.74549 2.39296 3.80916C2.35809 3.85715 2.31007 3.94926 2.28117 4.21597C2.26629 4.35335 2.25844 4.51311 2.25431 4.70832H9.74498C9.74085 4.51311 9.733 4.35335 9.71812 4.21597C9.68922 3.94926 9.6412 3.85715 9.60633 3.80916C9.56007 3.74549 9.50408 3.6895 9.44041 3.64324C9.39242 3.60837 9.30031 3.56034 9.03362 3.53145C8.75288 3.50103 8.37876 3.5 7.79961 3.5H4.19968C3.62053 3.5 3.24641 3.50103 2.96567 3.53145ZM9.74956 6.20832H2.24973V7.55C2.24973 8.12917 2.25076 8.5033 2.28117 8.78404C2.31007 9.05074 2.35809 9.14285 2.39296 9.19084C2.43922 9.25451 2.49521 9.31051 2.55888 9.35677C2.60687 9.39163 2.69897 9.43966 2.96567 9.46856C3.24641 9.49897 3.62053 9.5 4.19968 9.5H7.79961C8.37876 9.5 8.75288 9.49897 9.03362 9.46856C9.30032 9.43966 9.39242 9.39163 9.44041 9.35677C9.50408 9.31051 9.56007 9.25451 9.60633 9.19084C9.6412 9.14285 9.68922 9.05075 9.71812 8.78404C9.74854 8.5033 9.74956 8.12917 9.74956 7.55V6.20832ZM6.74963 8C6.74963 7.58579 7.08541 7.25 7.49961 7.25H8.2496C8.6638 7.25 8.99958 7.58579 8.99958 8C8.99958 8.41422 8.6638 8.75 8.2496 8.75H7.49961C7.08541 8.75 6.74963 8.41422 6.74963 8Z"
    fill="currentColor"
  /></svg
>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/checkmark-bold.js
var checkmarkBoldSvg = svg`<svg fill="none" viewBox="0 0 14 14">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M12.9576 2.23383C13.3807 2.58873 13.4361 3.21947 13.0812 3.64263L6.37159 11.6426C6.19161 11.8572 5.92989 11.9865 5.65009 11.999C5.3703 12.0115 5.09808 11.9062 4.89965 11.7085L0.979321 7.80331C0.588042 7.41354 0.586817 6.78038 0.976585 6.3891C1.36635 5.99782 1.99952 5.99659 2.3908 6.38636L5.53928 9.52268L11.5488 2.35742C11.9037 1.93426 12.5344 1.87893 12.9576 2.23383Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/checkmark.js
var checkmarkSvg = svg`<svg
  width="28"
  height="28"
  viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M25.5297 4.92733C26.1221 5.4242 26.1996 6.30724 25.7027 6.89966L12.2836 22.8997C12.0316 23.2001 11.6652 23.3811 11.2735 23.3986C10.8817 23.4161 10.5006 23.2686 10.2228 22.9919L2.38218 15.1815C1.83439 14.6358 1.83268 13.7494 2.37835 13.2016C2.92403 12.6538 3.81046 12.6521 4.35825 13.1978L11.1183 19.9317L23.5573 5.10036C24.0542 4.50794 24.9372 4.43047 25.5297 4.92733Z"
    fill="currentColor"/>
</svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/chevron-bottom.js
var chevronBottomSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M1.46 4.96a1 1 0 0 1 1.41 0L8 10.09l5.13-5.13a1 1 0 1 1 1.41 1.41l-5.83 5.84a1 1 0 0 1-1.42 0L1.46 6.37a1 1 0 0 1 0-1.41Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/chevron-left.js
var chevronLeftSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M11.04 1.46a1 1 0 0 1 0 1.41L5.91 8l5.13 5.13a1 1 0 1 1-1.41 1.41L3.79 8.71a1 1 0 0 1 0-1.42l5.84-5.83a1 1 0 0 1 1.41 0Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/chevron-right.js
var chevronRightSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4.96 14.54a1 1 0 0 1 0-1.41L10.09 8 4.96 2.87a1 1 0 0 1 1.41-1.41l5.84 5.83a1 1 0 0 1 0 1.42l-5.84 5.83a1 1 0 0 1-1.41 0Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/chevron-top.js
var chevronTopSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M14.54 11.04a1 1 0 0 1-1.41 0L8 5.92l-5.13 5.12a1 1 0 1 1-1.41-1.41l5.83-5.84a1 1 0 0 1 1.42 0l5.83 5.84a1 1 0 0 1 0 1.41Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/chrome-store.js
var chromeStoreSvg = svg`<svg width="36" height="36" fill="none">
  <path
    fill="#fff"
    fill-opacity=".05"
    d="M0 14.94c0-5.55 0-8.326 1.182-10.4a9 9 0 0 1 3.359-3.358C6.614 0 9.389 0 14.94 0h6.12c5.55 0 8.326 0 10.4 1.182a9 9 0 0 1 3.358 3.359C36 6.614 36 9.389 36 14.94v6.12c0 5.55 0 8.326-1.182 10.4a9 9 0 0 1-3.359 3.358C29.386 36 26.611 36 21.06 36h-6.12c-5.55 0-8.326 0-10.4-1.182a9 9 0 0 1-3.358-3.359C0 29.386 0 26.611 0 21.06v-6.12Z"
  />
  <path
    stroke="#fff"
    stroke-opacity=".05"
    d="M14.94.5h6.12c2.785 0 4.84 0 6.46.146 1.612.144 2.743.43 3.691.97a8.5 8.5 0 0 1 3.172 3.173c.541.948.826 2.08.971 3.692.145 1.62.146 3.675.146 6.459v6.12c0 2.785 0 4.84-.146 6.46-.145 1.612-.43 2.743-.97 3.691a8.5 8.5 0 0 1-3.173 3.172c-.948.541-2.08.826-3.692.971-1.62.145-3.674.146-6.459.146h-6.12c-2.784 0-4.84 0-6.46-.146-1.612-.145-2.743-.43-3.691-.97a8.5 8.5 0 0 1-3.172-3.173c-.541-.948-.827-2.08-.971-3.692C.5 25.9.5 23.845.5 21.06v-6.12c0-2.784 0-4.84.146-6.46.144-1.612.43-2.743.97-3.691A8.5 8.5 0 0 1 4.79 1.617C5.737 1.076 6.869.79 8.48.646 10.1.5 12.156.5 14.94.5Z"
  />
  <path
    fill="url(#a)"
    d="M17.998 10.8h12.469a14.397 14.397 0 0 0-24.938.001l6.234 10.798.006-.001a7.19 7.19 0 0 1 6.23-10.799Z"
  />
  <path
    fill="url(#b)"
    d="m24.237 21.598-6.234 10.798A14.397 14.397 0 0 0 30.47 10.798H18.002l-.002.006a7.191 7.191 0 0 1 6.237 10.794Z"
  />
  <path
    fill="url(#c)"
    d="M11.765 21.601 5.531 10.803A14.396 14.396 0 0 0 18.001 32.4l6.235-10.798-.004-.004a7.19 7.19 0 0 1-12.466.004Z"
  />
  <path fill="#fff" d="M18 25.2a7.2 7.2 0 1 0 0-14.4 7.2 7.2 0 0 0 0 14.4Z" />
  <path fill="#1A73E8" d="M18 23.7a5.7 5.7 0 1 0 0-11.4 5.7 5.7 0 0 0 0 11.4Z" />
  <defs>
    <linearGradient
      id="a"
      x1="6.294"
      x2="41.1"
      y1="5.995"
      y2="5.995"
      gradientUnits="userSpaceOnUse"
    >
      <stop stop-color="#D93025" />
      <stop offset="1" stop-color="#EA4335" />
    </linearGradient>
    <linearGradient
      id="b"
      x1="20.953"
      x2="37.194"
      y1="32.143"
      y2="2.701"
      gradientUnits="userSpaceOnUse"
    >
      <stop stop-color="#FCC934" />
      <stop offset="1" stop-color="#FBBC04" />
    </linearGradient>
    <linearGradient
      id="c"
      x1="25.873"
      x2="9.632"
      y1="31.2"
      y2="1.759"
      gradientUnits="userSpaceOnUse"
    >
      <stop stop-color="#1E8E3E" />
      <stop offset="1" stop-color="#34A853" />
    </linearGradient>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/clock.js
var clockSvg = svg`<svg width="14" height="14" viewBox="0 0 14 14" fill="none">
  <path 
    fill-rule="evenodd" 
    clip-rule="evenodd" 
    d="M7.00235 2C4.24 2 2.00067 4.23858 2.00067 7C2.00067 9.76142 4.24 12 7.00235 12C9.7647 12 12.004 9.76142 12.004 7C12.004 4.23858 9.7647 2 7.00235 2ZM0 7C0 3.13401 3.13506 0 7.00235 0C10.8696 0 14.0047 3.13401 14.0047 7C14.0047 10.866 10.8696 14 7.00235 14C3.13506 14 0 10.866 0 7ZM7.00235 3C7.55482 3 8.00269 3.44771 8.00269 4V6.58579L9.85327 8.43575C10.2439 8.82627 10.2439 9.45944 9.85327 9.84996C9.46262 10.2405 8.82924 10.2405 8.43858 9.84996L6.29501 7.70711C6.10741 7.51957 6.00201 7.26522 6.00201 7V4C6.00201 3.44771 6.44988 3 7.00235 3Z" 
    fill="currentColor"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/close.js
var closeSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M2.54 2.54a1 1 0 0 1 1.42 0L8 6.6l4.04-4.05a1 1 0 1 1 1.42 1.42L9.4 8l4.05 4.04a1 1 0 0 1-1.42 1.42L8 9.4l-4.04 4.05a1 1 0 0 1-1.42-1.42L6.6 8 2.54 3.96a1 1 0 0 1 0-1.42Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/coinPlaceholder.js
var coinPlaceholderSvg = svg`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M10 3a7 7 0 0 0-6.85 8.44l8.29-8.3C10.97 3.06 10.49 3 10 3Zm3.49.93-9.56 9.56c.32.55.71 1.06 1.16 1.5L15 5.1a7.03 7.03 0 0 0-1.5-1.16Zm2.7 2.8-9.46 9.46a7 7 0 0 0 9.46-9.46ZM1.99 5.9A9 9 0 1 1 18 14.09 9 9 0 0 1 1.98 5.91Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/compass.js
var compassSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M8 2a6 6 0 1 0 0 12A6 6 0 0 0 8 2ZM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm10.66-2.65a1 1 0 0 1 .23 1.06L9.83 9.24a1 1 0 0 1-.59.58l-2.83 1.06A1 1 0 0 1 5.13 9.6l1.06-2.82a1 1 0 0 1 .58-.59L9.6 5.12a1 1 0 0 1 1.06.23ZM7.9 7.89l-.13.35.35-.13.12-.35-.34.13Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/copy.js
var copySvg = svg`<svg
  xmlns="http://www.w3.org/2000/svg"
  width="16"
  height="16"
  viewBox="0 0 16 16"
  fill="none"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M9.21498 1.28565H10.5944C11.1458 1.28562 11.6246 1.2856 12.0182 1.32093C12.4353 1.35836 12.853 1.44155 13.2486 1.66724C13.7005 1.92498 14.0749 2.29935 14.3326 2.75122C14.5583 3.14689 14.6415 3.56456 14.6789 3.9817C14.7143 4.37531 14.7142 4.85403 14.7142 5.40545V6.78489C14.7142 7.33631 14.7143 7.81503 14.6789 8.20865C14.6415 8.62578 14.5583 9.04345 14.3326 9.43912C14.0749 9.89099 13.7005 10.2654 13.2486 10.5231C12.853 10.7488 12.4353 10.832 12.0182 10.8694C11.7003 10.8979 11.3269 10.9034 10.9045 10.9045C10.9034 11.3269 10.8979 11.7003 10.8694 12.0182C10.832 12.4353 10.7488 12.853 10.5231 13.2486C10.2654 13.7005 9.89099 14.0749 9.43912 14.3326C9.04345 14.5583 8.62578 14.6415 8.20865 14.6789C7.81503 14.7143 7.33631 14.7142 6.78489 14.7142H5.40545C4.85403 14.7142 4.37531 14.7143 3.9817 14.6789C3.56456 14.6415 3.14689 14.5583 2.75122 14.3326C2.29935 14.0749 1.92498 13.7005 1.66724 13.2486C1.44155 12.853 1.35836 12.4353 1.32093 12.0182C1.2856 11.6246 1.28562 11.1458 1.28565 10.5944V9.21498C1.28562 8.66356 1.2856 8.18484 1.32093 7.79122C1.35836 7.37409 1.44155 6.95642 1.66724 6.56074C1.92498 6.10887 2.29935 5.73451 2.75122 5.47677C3.14689 5.25108 3.56456 5.16789 3.9817 5.13045C4.2996 5.10192 4.67301 5.09645 5.09541 5.09541C5.09645 4.67302 5.10192 4.2996 5.13045 3.9817C5.16789 3.56456 5.25108 3.14689 5.47676 2.75122C5.73451 2.29935 6.10887 1.92498 6.56074 1.66724C6.95642 1.44155 7.37409 1.35836 7.79122 1.32093C8.18484 1.2856 8.66356 1.28562 9.21498 1.28565ZM5.09541 7.09552C4.68397 7.09667 4.39263 7.10161 4.16046 7.12245C3.88053 7.14757 3.78516 7.18949 3.74214 7.21403C3.60139 7.29431 3.48478 7.41091 3.4045 7.55166C3.37997 7.59468 3.33804 7.69005 3.31292 7.96999C3.28659 8.26345 3.28565 8.65147 3.28565 9.25708V10.5523C3.28565 11.1579 3.28659 11.5459 3.31292 11.8394C3.33804 12.1193 3.37997 12.2147 3.4045 12.2577C3.48478 12.3985 3.60139 12.5151 3.74214 12.5954C3.78516 12.6199 3.88053 12.6618 4.16046 12.6869C4.45393 12.7133 4.84195 12.7142 5.44755 12.7142H6.74279C7.3484 12.7142 7.73641 12.7133 8.02988 12.6869C8.30981 12.6618 8.40518 12.6199 8.44821 12.5954C8.58895 12.5151 8.70556 12.3985 8.78584 12.2577C8.81038 12.2147 8.8523 12.1193 8.87742 11.8394C8.89825 11.6072 8.90319 11.3159 8.90435 10.9045C8.48219 10.9034 8.10898 10.8979 7.79122 10.8694C7.37409 10.832 6.95641 10.7488 6.56074 10.5231C6.10887 10.2654 5.73451 9.89099 5.47676 9.43912C5.25108 9.04345 5.16789 8.62578 5.13045 8.20865C5.10194 7.89089 5.09645 7.51767 5.09541 7.09552ZM7.96999 3.31292C7.69005 3.33804 7.59468 3.37997 7.55166 3.4045C7.41091 3.48478 7.29431 3.60139 7.21403 3.74214C7.18949 3.78516 7.14757 3.88053 7.12245 4.16046C7.09611 4.45393 7.09517 4.84195 7.09517 5.44755V6.74279C7.09517 7.3484 7.09611 7.73641 7.12245 8.02988C7.14757 8.30981 7.18949 8.40518 7.21403 8.4482C7.29431 8.58895 7.41091 8.70556 7.55166 8.78584C7.59468 8.81038 7.69005 8.8523 7.96999 8.87742C8.26345 8.90376 8.65147 8.9047 9.25708 8.9047H10.5523C11.1579 8.9047 11.5459 8.90376 11.8394 8.87742C12.1193 8.8523 12.2147 8.81038 12.2577 8.78584C12.3985 8.70556 12.5151 8.58895 12.5954 8.4482C12.6199 8.40518 12.6618 8.30981 12.6869 8.02988C12.7133 7.73641 12.7142 7.3484 12.7142 6.74279V5.44755C12.7142 4.84195 12.7133 4.45393 12.6869 4.16046C12.6618 3.88053 12.6199 3.78516 12.5954 3.74214C12.5151 3.60139 12.3985 3.48478 12.2577 3.4045C12.2147 3.37997 12.1193 3.33804 11.8394 3.31292C11.5459 3.28659 11.1579 3.28565 10.5523 3.28565H9.25708C8.65147 3.28565 8.26345 3.28659 7.96999 3.31292Z"
    fill="#788181"
  /></svg
>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/cursor-transparent.js
var cursorTransparentSvg = svg`<svg fill="none" viewBox="0 0 14 6">
  <path style="fill: var(--wui-color-bg-150);" d="M0 1h14L9.21 5.12a3.31 3.31 0 0 1-4.49 0L0 1Z" />
  <path
    style="stroke: var(--wui-color-inverse-100);"
    stroke-opacity=".05"
    d="M1.33 1.5h11.32L8.88 4.75l-.01.01a2.81 2.81 0 0 1-3.8 0l-.02-.01L1.33 1.5Z"
  />
  <path
    style="fill: var(--wui-color-bg-150);"
    d="M1.25.71h11.5L9.21 3.88a3.31 3.31 0 0 1-4.49 0L1.25.71Z"
  />
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/cursor.js
var cursorSvg = svg` <svg fill="none" viewBox="0 0 13 4">
  <path fill="currentColor" d="M.5 0h12L8.9 3.13a3.76 3.76 0 0 1-4.8 0L.5 0Z" />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/desktop.js
var desktopSvg = svg`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M13.66 2H6.34c-1.07 0-1.96 0-2.68.08-.74.08-1.42.25-2.01.68a4 4 0 0 0-.89.89c-.43.6-.6 1.27-.68 2.01C0 6.38 0 7.26 0 8.34v.89c0 1.07 0 1.96.08 2.68.08.74.25 1.42.68 2.01a4 4 0 0 0 .89.89c.6.43 1.27.6 2.01.68a27 27 0 0 0 2.68.08h7.32a27 27 0 0 0 2.68-.08 4.03 4.03 0 0 0 2.01-.68 4 4 0 0 0 .89-.89c.43-.6.6-1.27.68-2.01.08-.72.08-1.6.08-2.68v-.89c0-1.07 0-1.96-.08-2.68a4.04 4.04 0 0 0-.68-2.01 4 4 0 0 0-.89-.89c-.6-.43-1.27-.6-2.01-.68C15.62 2 14.74 2 13.66 2ZM2.82 4.38c.2-.14.48-.25 1.06-.31C4.48 4 5.25 4 6.4 4h7.2c1.15 0 1.93 0 2.52.07.58.06.86.17 1.06.31a2 2 0 0 1 .44.44c.14.2.25.48.31 1.06.07.6.07 1.37.07 2.52v.77c0 1.15 0 1.93-.07 2.52-.06.58-.17.86-.31 1.06a2 2 0 0 1-.44.44c-.2.14-.48.25-1.06.32-.6.06-1.37.06-2.52.06H6.4c-1.15 0-1.93 0-2.52-.06-.58-.07-.86-.18-1.06-.32a2 2 0 0 1-.44-.44c-.14-.2-.25-.48-.31-1.06C2 11.1 2 10.32 2 9.17V8.4c0-1.15 0-1.93.07-2.52.06-.58.17-.86.31-1.06a2 2 0 0 1 .44-.44Z"
    clip-rule="evenodd"
  />
  <path fill="currentColor" d="M6.14 17.57a1 1 0 1 0 0 2h7.72a1 1 0 1 0 0-2H6.14Z" />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/disconnect.js
var disconnectSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.07 1h.57a1 1 0 0 1 0 2h-.52c-.98 0-1.64 0-2.14.06-.48.05-.7.14-.84.24-.13.1-.25.22-.34.35-.1.14-.2.35-.25.83-.05.5-.05 1.16-.05 2.15v2.74c0 .99 0 1.65.05 2.15.05.48.14.7.25.83.1.14.2.25.34.35.14.1.36.2.84.25.5.05 1.16.05 2.14.05h.52a1 1 0 0 1 0 2h-.57c-.92 0-1.69 0-2.3-.07a3.6 3.6 0 0 1-1.8-.61c-.3-.22-.57-.49-.8-.8a3.6 3.6 0 0 1-.6-1.79C.5 11.11.5 10.35.5 9.43V6.58c0-.92 0-1.7.06-2.31a3.6 3.6 0 0 1 .62-1.8c.22-.3.48-.57.79-.79a3.6 3.6 0 0 1 1.8-.61C4.37 1 5.14 1 6.06 1ZM9.5 3a1 1 0 0 1 1.42 0l4.28 4.3a1 1 0 0 1 0 1.4L10.93 13a1 1 0 0 1-1.42-1.42L12.1 9H6.8a1 1 0 1 1 0-2h5.3L9.51 4.42a1 1 0 0 1 0-1.41Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/discord.js
var discordSvg = svg`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#5865F2" />
      <path
        fill="#fff"
        fill-rule="evenodd"
        d="M25.71 28.15C30.25 28 32 25.02 32 25.02c0-6.61-2.96-11.98-2.96-11.98-2.96-2.22-5.77-2.15-5.77-2.15l-.29.32c3.5 1.07 5.12 2.61 5.12 2.61a16.75 16.75 0 0 0-10.34-1.93l-.35.04a15.43 15.43 0 0 0-5.88 1.9s1.71-1.63 5.4-2.7l-.2-.24s-2.81-.07-5.77 2.15c0 0-2.96 5.37-2.96 11.98 0 0 1.73 2.98 6.27 3.13l1.37-1.7c-2.6-.79-3.6-2.43-3.6-2.43l.58.35.09.06.08.04.02.01.08.05a17.25 17.25 0 0 0 4.52 1.58 14.4 14.4 0 0 0 8.3-.86c.72-.27 1.52-.66 2.37-1.21 0 0-1.03 1.68-3.72 2.44.61.78 1.35 1.67 1.35 1.67Zm-9.55-9.6c-1.17 0-2.1 1.03-2.1 2.28 0 1.25.95 2.28 2.1 2.28 1.17 0 2.1-1.03 2.1-2.28.01-1.25-.93-2.28-2.1-2.28Zm7.5 0c-1.17 0-2.1 1.03-2.1 2.28 0 1.25.95 2.28 2.1 2.28 1.17 0 2.1-1.03 2.1-2.28 0-1.25-.93-2.28-2.1-2.28Z"
        clip-rule="evenodd"
      />
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/etherscan.js
var etherscanSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    d="M4.25 7a.63.63 0 0 0-.63.63v3.97c0 .28-.2.51-.47.54l-.75.07a.93.93 0 0 1-.9-.47A7.51 7.51 0 0 1 5.54.92a7.5 7.5 0 0 1 9.54 4.62c.12.35.06.72-.16 1-.74.97-1.68 1.78-2.6 2.44V4.44a.64.64 0 0 0-.63-.64h-1.06c-.35 0-.63.3-.63.64v5.5c0 .23-.12.42-.32.5l-.52.23V6.05c0-.36-.3-.64-.64-.64H7.45c-.35 0-.64.3-.64.64v4.97c0 .25-.17.46-.4.52a5.8 5.8 0 0 0-.45.11v-4c0-.36-.3-.65-.64-.65H4.25ZM14.07 12.4A7.49 7.49 0 0 1 3.6 14.08c4.09-.58 9.14-2.5 11.87-6.6v.03a7.56 7.56 0 0 1-1.41 4.91Z"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/exclamation-triangle.js
var exclamationTriangleSvg = svg`<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0162 11.6312L9.55059 2.13937C9.39228 1.86862 9.16584 1.64405 8.8938 1.48798C8.62176 1.33192 8.3136 1.2498 7.99997 1.2498C7.68634 1.2498 7.37817 1.33192 7.10613 1.48798C6.83409 1.64405 6.60765 1.86862 6.44934 2.13937L0.983716 11.6312C0.830104 11.894 0.749146 12.1928 0.749146 12.4972C0.749146 12.8015 0.830104 13.1004 0.983716 13.3631C1.14027 13.6352 1.3664 13.8608 1.63889 14.0166C1.91139 14.1725 2.22044 14.253 2.53434 14.25H13.4656C13.7793 14.2528 14.0881 14.1721 14.3603 14.0163C14.6326 13.8604 14.8585 13.635 15.015 13.3631C15.1688 13.1005 15.2499 12.8017 15.2502 12.4973C15.2504 12.193 15.1696 11.8941 15.0162 11.6312ZM13.7162 12.6125C13.6908 12.6558 13.6541 12.6914 13.6101 12.7157C13.5661 12.7399 13.5164 12.7517 13.4662 12.75H2.53434C2.48415 12.7517 2.43442 12.7399 2.39042 12.7157C2.34641 12.6914 2.30976 12.6558 2.28434 12.6125C2.26278 12.5774 2.25137 12.5371 2.25137 12.4959C2.25137 12.4548 2.26278 12.4144 2.28434 12.3794L7.74997 2.88749C7.77703 2.84583 7.81408 2.8116 7.85774 2.7879C7.9014 2.7642 7.95029 2.75178 7.99997 2.75178C8.04964 2.75178 8.09854 2.7642 8.1422 2.7879C8.18586 2.8116 8.2229 2.84583 8.24997 2.88749L13.715 12.3794C13.7367 12.4143 13.7483 12.4546 13.7486 12.4958C13.7488 12.5369 13.7376 12.5773 13.7162 12.6125ZM7.24997 8.49999V6.49999C7.24997 6.30108 7.32898 6.11031 7.46964 5.96966C7.61029 5.82901 7.80105 5.74999 7.99997 5.74999C8.19888 5.74999 8.38964 5.82901 8.5303 5.96966C8.67095 6.11031 8.74997 6.30108 8.74997 6.49999V8.49999C8.74997 8.6989 8.67095 8.88967 8.5303 9.03032C8.38964 9.17097 8.19888 9.24999 7.99997 9.24999C7.80105 9.24999 7.61029 9.17097 7.46964 9.03032C7.32898 8.88967 7.24997 8.6989 7.24997 8.49999ZM8.99997 11C8.99997 11.1978 8.94132 11.3911 8.83144 11.5556C8.72155 11.72 8.56538 11.8482 8.38265 11.9239C8.19992 11.9996 7.99886 12.0194 7.80488 11.9808C7.6109 11.9422 7.43271 11.847 7.29286 11.7071C7.15301 11.5672 7.05777 11.3891 7.01918 11.1951C6.9806 11.0011 7.0004 10.8 7.07609 10.6173C7.15177 10.4346 7.27995 10.2784 7.4444 10.1685C7.60885 10.0586 7.80219 9.99999 7.99997 9.99999C8.26518 9.99999 8.51954 10.1053 8.70707 10.2929C8.89461 10.4804 8.99997 10.7348 8.99997 11Z" fill="currentColor"/>
</svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/extension.js
var extensionSvg = svg`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.71 2.99a.57.57 0 0 0-.57.57 1 1 0 0 1-1 1c-.58 0-.96 0-1.24.03-.27.03-.37.07-.42.1a.97.97 0 0 0-.36.35c-.04.08-.09.21-.11.67a2.57 2.57 0 0 1 0 5.13c.02.45.07.6.11.66.09.15.21.28.36.36.07.04.21.1.67.12a2.57 2.57 0 0 1 5.12 0c.46-.03.6-.08.67-.12a.97.97 0 0 0 .36-.36c.03-.04.07-.14.1-.41.02-.29.03-.66.03-1.24a1 1 0 0 1 1-1 .57.57 0 0 0 0-1.15 1 1 0 0 1-1-1c0-.58 0-.95-.03-1.24a1.04 1.04 0 0 0-.1-.42.97.97 0 0 0-.36-.36 1.04 1.04 0 0 0-.42-.1c-.28-.02-.65-.02-1.24-.02a1 1 0 0 1-1-1 .57.57 0 0 0-.57-.57ZM5.15 13.98a1 1 0 0 0 .99-1v-.78a.57.57 0 0 1 1.14 0v.78a1 1 0 0 0 .99 1H8.36a66.26 66.26 0 0 0 .73 0 3.78 3.78 0 0 0 1.84-.38c.46-.26.85-.64 1.1-1.1.23-.4.32-.8.36-1.22.02-.2.03-.4.03-.63a2.57 2.57 0 0 0 0-4.75c0-.23-.01-.44-.03-.63a2.96 2.96 0 0 0-.35-1.22 2.97 2.97 0 0 0-1.1-1.1c-.4-.22-.8-.31-1.22-.35a8.7 8.7 0 0 0-.64-.04 2.57 2.57 0 0 0-4.74 0c-.23 0-.44.02-.63.04-.42.04-.83.13-1.22.35-.46.26-.84.64-1.1 1.1-.33.57-.37 1.2-.39 1.84a21.39 21.39 0 0 0 0 .72v.1a1 1 0 0 0 1 .99h.78a.57.57 0 0 1 0 1.15h-.77a1 1 0 0 0-1 .98v.1a63.87 63.87 0 0 0 0 .73c0 .64.05 1.27.38 1.83.26.47.64.85 1.1 1.11.56.32 1.2.37 1.84.38a20.93 20.93 0 0 0 .72 0h.1Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/external-link.js
var externalLinkSvg = svg`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.74 3.99a1 1 0 0 1 1-1H11a1 1 0 0 1 1 1v6.26a1 1 0 0 1-2 0V6.4l-6.3 6.3a1 1 0 0 1-1.4-1.42l6.29-6.3H4.74a1 1 0 0 1-1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/facebook.js
var facebookSvg = svg`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#1877F2" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M26 12.38h-2.89c-.92 0-1.61.38-1.61 1.34v1.66H26l-.36 4.5H21.5v12H17v-12h-3v-4.5h3V12.5c0-3.03 1.6-4.62 5.2-4.62H26v4.5Z"
        />
      </g>
    </g>
    <path
      fill="#1877F2"
      d="M40 20a20 20 0 1 0-23.13 19.76V25.78H11.8V20h5.07v-4.4c0-5.02 3-7.79 7.56-7.79 2.19 0 4.48.4 4.48.4v4.91h-2.53c-2.48 0-3.25 1.55-3.25 3.13V20h5.54l-.88 5.78h-4.66v13.98A20 20 0 0 0 40 20Z"
    />
    <path
      fill="#fff"
      d="m27.79 25.78.88-5.78h-5.55v-3.75c0-1.58.78-3.13 3.26-3.13h2.53V8.2s-2.3-.39-4.48-.39c-4.57 0-7.55 2.77-7.55 7.78V20H11.8v5.78h5.07v13.98a20.15 20.15 0 0 0 6.25 0V25.78h4.67Z"
    />
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/farcaster.js
var farcasterSvg = svg`<svg style="border-radius: 9999px; overflow: hidden;"  fill="none" viewBox="0 0 1000 1000">
  <rect width="1000" height="1000" rx="9999" ry="9999" fill="#855DCD"/>
  <path fill="#855DCD" d="M0 0h1000v1000H0V0Z" />
  <path
    fill="#fff"
    d="M320 248h354v504h-51.96V521.13h-.5c-5.76-63.8-59.31-113.81-124.54-113.81s-118.78 50-124.53 113.81h-.5V752H320V248Z"
  />
  <path
    fill="#fff"
    d="m225 320 21.16 71.46h17.9v289.09a16.29 16.29 0 0 0-16.28 16.24v19.49h-3.25a16.3 16.3 0 0 0-16.28 16.24V752h182.26v-19.48a16.22 16.22 0 0 0-16.28-16.24h-3.25v-19.5a16.22 16.22 0 0 0-16.28-16.23h-19.52V320H225Zm400.3 360.55a16.3 16.3 0 0 0-15.04 10.02 16.2 16.2 0 0 0-1.24 6.22v19.49h-3.25a16.29 16.29 0 0 0-16.27 16.24V752h182.24v-19.48a16.23 16.23 0 0 0-16.27-16.24h-3.25v-19.5a16.2 16.2 0 0 0-10.04-15 16.3 16.3 0 0 0-6.23-1.23v-289.1h17.9L775 320H644.82v360.55H625.3Z"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/filters.js
var filtersSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M0 3a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H1a1 1 0 0 1-1-1Zm2.63 5.25a1 1 0 0 1 1-1h8.75a1 1 0 1 1 0 2H3.63a1 1 0 0 1-1-1Zm2.62 5.25a1 1 0 0 1 1-1h3.5a1 1 0 0 1 0 2h-3.5a1 1 0 0 1-1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/github.js
var githubSvg = svg`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#1B1F23" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M8 19.89a12 12 0 1 1 15.8 11.38c-.6.12-.8-.26-.8-.57v-3.3c0-1.12-.4-1.85-.82-2.22 2.67-.3 5.48-1.31 5.48-5.92 0-1.31-.47-2.38-1.24-3.22.13-.3.54-1.52-.12-3.18 0 0-1-.32-3.3 1.23a11.54 11.54 0 0 0-6 0c-2.3-1.55-3.3-1.23-3.3-1.23a4.32 4.32 0 0 0-.12 3.18 4.64 4.64 0 0 0-1.24 3.22c0 4.6 2.8 5.63 5.47 5.93-.34.3-.65.83-.76 1.6-.69.31-2.42.84-3.5-1 0 0-.63-1.15-1.83-1.23 0 0-1.18-.02-.09.73 0 0 .8.37 1.34 1.76 0 0 .7 2.14 4.03 1.41v2.24c0 .31-.2.68-.8.57A12 12 0 0 1 8 19.9Z"
        />
      </g>
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/google.js
var googleSvg = svg`<svg fill="none" viewBox="0 0 40 40">
  <path
    fill="#4285F4"
    d="M32.74 20.3c0-.93-.08-1.81-.24-2.66H20.26v5.03h7a6 6 0 0 1-2.62 3.91v3.28h4.22c2.46-2.27 3.88-5.6 3.88-9.56Z"
  />
  <path
    fill="#34A853"
    d="M20.26 33a12.4 12.4 0 0 0 8.6-3.14l-4.22-3.28a7.74 7.74 0 0 1-4.38 1.26 7.76 7.76 0 0 1-7.28-5.36H8.65v3.36A12.99 12.99 0 0 0 20.26 33Z"
  />
  <path
    fill="#FBBC05"
    d="M12.98 22.47a7.79 7.79 0 0 1 0-4.94v-3.36H8.65a12.84 12.84 0 0 0 0 11.66l3.37-2.63.96-.73Z"
  />
  <path
    fill="#EA4335"
    d="M20.26 12.18a7.1 7.1 0 0 1 4.98 1.93l3.72-3.72A12.47 12.47 0 0 0 20.26 7c-5.08 0-9.47 2.92-11.6 7.17l4.32 3.36a7.76 7.76 0 0 1 7.28-5.35Z"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/help-circle.js
var helpCircleSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    d="M8.51 5.66a.83.83 0 0 0-.57-.2.83.83 0 0 0-.52.28.8.8 0 0 0-.25.52 1 1 0 0 1-2 0c0-.75.34-1.43.81-1.91a2.75 2.75 0 0 1 4.78 1.92c0 1.24-.8 1.86-1.25 2.2l-.04.03c-.47.36-.5.43-.5.65a1 1 0 1 1-2 0c0-1.25.8-1.86 1.24-2.2l.04-.04c.47-.36.5-.43.5-.65 0-.3-.1-.49-.24-.6ZM9.12 11.87a1.13 1.13 0 1 1-2.25 0 1.13 1.13 0 0 1 2.25 0Z"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6a6 6 0 1 0 0 12A6 6 0 0 0 8 2Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/id.js
var idSvg = svg`<svg
 xmlns="http://www.w3.org/2000/svg"
 width="28"
 height="28"
 viewBox="0 0 28 28"
 fill="none">
  <path
    fill="#949E9E"
    fill-rule="evenodd"
    d="M7.974 2.975h12.052c1.248 0 2.296 0 3.143.092.89.096 1.723.307 2.461.844a4.9 4.9 0 0 1 1.084 1.084c.537.738.748 1.57.844 2.461.092.847.092 1.895.092 3.143v6.802c0 1.248 0 2.296-.092 3.143-.096.89-.307 1.723-.844 2.461a4.9 4.9 0 0 1-1.084 1.084c-.738.537-1.57.748-2.461.844-.847.092-1.895.092-3.143.092H7.974c-1.247 0-2.296 0-3.143-.092-.89-.096-1.723-.307-2.461-.844a4.901 4.901 0 0 1-1.084-1.084c-.537-.738-.748-1.571-.844-2.461C.35 19.697.35 18.649.35 17.4v-6.802c0-1.248 0-2.296.092-3.143.096-.89.307-1.723.844-2.461A4.9 4.9 0 0 1 2.37 3.91c.738-.537 1.571-.748 2.461-.844.847-.092 1.895-.092 3.143-.092ZM5.133 5.85c-.652.071-.936.194-1.117.326a2.1 2.1 0 0 0-.465.465c-.132.181-.255.465-.325 1.117-.074.678-.076 1.573-.076 2.917v6.65c0 1.344.002 2.239.076 2.917.07.652.193.936.325 1.117a2.1 2.1 0 0 0 .465.465c.181.132.465.255 1.117.326.678.073 1.574.075 2.917.075h11.9c1.344 0 2.239-.002 2.917-.075.652-.071.936-.194 1.117-.326.179-.13.335-.286.465-.465.132-.181.255-.465.326-1.117.073-.678.075-1.573.075-2.917v-6.65c0-1.344-.002-2.239-.075-2.917-.071-.652-.194-.936-.326-1.117a2.1 2.1 0 0 0-.465-.465c-.181-.132-.465-.255-1.117-.326-.678-.073-1.573-.075-2.917-.075H8.05c-1.343 0-2.239.002-2.917.075Zm.467 7.275a3.15 3.15 0 1 1 6.3 0 3.15 3.15 0 0 1-6.3 0Zm8.75-1.75a1.4 1.4 0 0 1 1.4-1.4h3.5a1.4 1.4 0 0 1 0 2.8h-3.5a1.4 1.4 0 0 1-1.4-1.4Zm0 5.25a1.4 1.4 0 0 1 1.4-1.4H21a1.4 1.4 0 1 1 0 2.8h-5.25a1.4 1.4 0 0 1-1.4-1.4Z"
    clip-rule="evenodd"/>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/image.js
var imageSvg = svg`<svg width="14" height="14" viewBox="0 0 14 14" fill="none">
  <path d="M4.98926 3.73932C4.2989 3.73932 3.73926 4.29896 3.73926 4.98932C3.73926 5.67968 4.2989 6.23932 4.98926 6.23932C5.67962 6.23932 6.23926 5.67968 6.23926 4.98932C6.23926 4.29896 5.67962 3.73932 4.98926 3.73932Z" fill="currentColor"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M7.60497 0.500001H6.39504C5.41068 0.499977 4.59185 0.499958 3.93178 0.571471C3.24075 0.64634 2.60613 0.809093 2.04581 1.21619C1.72745 1.44749 1.44749 1.72745 1.21619 2.04581C0.809093 2.60613 0.64634 3.24075 0.571471 3.93178C0.499958 4.59185 0.499977 5.41065 0.500001 6.39501V7.57815C0.499998 8.37476 0.499995 9.05726 0.534869 9.62725C0.570123 10.2034 0.644114 10.7419 0.828442 11.2302C0.925651 11.4877 1.05235 11.7287 1.21619 11.9542C1.44749 12.2726 1.72745 12.5525 2.04581 12.7838C2.60613 13.1909 3.24075 13.3537 3.93178 13.4285C4.59185 13.5001 5.41066 13.5 6.39503 13.5H7.60496C8.58933 13.5 9.40815 13.5001 10.0682 13.4285C10.7593 13.3537 11.3939 13.1909 11.9542 12.7838C12.2726 12.5525 12.5525 12.2726 12.7838 11.9542C13.1909 11.3939 13.3537 10.7593 13.4285 10.0682C13.5 9.40816 13.5 8.58935 13.5 7.60497V6.39505C13.5 5.41068 13.5 4.59185 13.4285 3.93178C13.3537 3.24075 13.1909 2.60613 12.7838 2.04581C12.5525 1.72745 12.2726 1.44749 11.9542 1.21619C11.3939 0.809093 10.7593 0.64634 10.0682 0.571471C9.40816 0.499958 8.58933 0.499977 7.60497 0.500001ZM3.22138 2.83422C3.38394 2.71612 3.62634 2.61627 4.14721 2.55984C4.68679 2.50138 5.39655 2.5 6.45 2.5H7.55C8.60345 2.5 9.31322 2.50138 9.8528 2.55984C10.3737 2.61627 10.6161 2.71612 10.7786 2.83422C10.9272 2.94216 11.0578 3.07281 11.1658 3.22138C11.2839 3.38394 11.3837 3.62634 11.4402 4.14721C11.4986 4.68679 11.5 5.39655 11.5 6.45V6.49703C10.9674 6.11617 10.386 5.84936 9.74213 5.81948C8.40536 5.75745 7.3556 6.73051 6.40509 7.84229C6.33236 7.92737 6.27406 7.98735 6.22971 8.02911L6.1919 8.00514L6.17483 7.99427C6.09523 7.94353 5.98115 7.87083 5.85596 7.80302C5.56887 7.64752 5.18012 7.4921 4.68105 7.4921C4.66697 7.4921 4.6529 7.49239 4.63884 7.49299C3.79163 7.52878 3.09922 8.1106 2.62901 8.55472C2.58751 8.59392 2.54594 8.6339 2.50435 8.6745C2.50011 8.34653 2.5 7.97569 2.5 7.55V6.45C2.5 5.39655 2.50138 4.68679 2.55984 4.14721C2.61627 3.62634 2.71612 3.38394 2.83422 3.22138C2.94216 3.07281 3.07281 2.94216 3.22138 2.83422ZM10.3703 8.14825C10.6798 8.37526 11.043 8.71839 11.4832 9.20889C11.4744 9.44992 11.4608 9.662 11.4402 9.8528C11.3837 10.3737 11.2839 10.6161 11.1658 10.7786C11.0578 10.9272 10.9272 11.0578 10.7786 11.1658C10.6161 11.2839 10.3737 11.3837 9.8528 11.4402C9.31322 11.4986 8.60345 11.5 7.55 11.5H6.45C5.39655 11.5 4.68679 11.4986 4.14721 11.4402C3.62634 11.3837 3.38394 11.2839 3.22138 11.1658C3.15484 11.1174 3.0919 11.0645 3.03298 11.0075C3.10126 10.9356 3.16806 10.8649 3.23317 10.7959L3.29772 10.7276C3.55763 10.4525 3.78639 10.2126 4.00232 10.0087C4.22016 9.80294 4.39412 9.66364 4.53524 9.57742C4.63352 9.51738 4.69022 9.49897 4.71275 9.49345C4.76387 9.49804 4.81803 9.51537 4.90343 9.56162C4.96409 9.59447 5.02355 9.63225 5.11802 9.69238L5.12363 9.69595C5.20522 9.74789 5.32771 9.82587 5.46078 9.89278C5.76529 10.0459 6.21427 10.186 6.74977 10.0158C7.21485 9.86796 7.59367 9.52979 7.92525 9.14195C8.91377 7.98571 9.38267 7.80495 9.64941 7.81733C9.7858 7.82366 10.0101 7.884 10.3703 8.14825Z" fill="currentColor"/>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/info-circle.js
var infoCircleSvg = svg`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    d="M6 10.49a1 1 0 1 0 2 0v-2a1 1 0 0 0-2 0v2ZM7 4.49a1 1 0 1 0 0 2 1 1 0 0 0 0-2Z"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M7 14.99a7 7 0 1 0 0-14 7 7 0 0 0 0 14Zm5-7a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/info.js
var infoSvg = svg`<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.125 6.875C9.125 6.57833 9.21298 6.28832 9.3778 6.04165C9.54262 5.79497 9.77689 5.60271 10.051 5.48918C10.3251 5.37565 10.6267 5.34594 10.9176 5.40382C11.2086 5.4617 11.4759 5.60456 11.6857 5.81434C11.8954 6.02412 12.0383 6.29139 12.0962 6.58236C12.1541 6.87334 12.1244 7.17494 12.0108 7.44903C11.8973 7.72311 11.705 7.95738 11.4584 8.1222C11.2117 8.28703 10.9217 8.375 10.625 8.375C10.2272 8.375 9.84565 8.21696 9.56434 7.93566C9.28304 7.65436 9.125 7.27282 9.125 6.875ZM21.125 11C21.125 13.0025 20.5312 14.9601 19.4186 16.6251C18.3061 18.2902 16.7248 19.5879 14.8747 20.3543C13.0246 21.1206 10.9888 21.3211 9.02471 20.9305C7.06066 20.5398 5.25656 19.5755 3.84055 18.1595C2.42454 16.7435 1.46023 14.9393 1.06955 12.9753C0.678878 11.0112 0.879387 8.97543 1.64572 7.12533C2.41206 5.27523 3.70981 3.69392 5.37486 2.58137C7.0399 1.46882 8.99747 0.875 11 0.875C13.6844 0.877978 16.258 1.94567 18.1562 3.84383C20.0543 5.74199 21.122 8.3156 21.125 11ZM18.875 11C18.875 9.44247 18.4131 7.91992 17.5478 6.62488C16.6825 5.32985 15.4526 4.32049 14.0136 3.72445C12.5747 3.12841 10.9913 2.97246 9.46367 3.27632C7.93607 3.58017 6.53288 4.3302 5.43154 5.43153C4.3302 6.53287 3.58018 7.93606 3.27632 9.46366C2.97246 10.9913 3.12841 12.5747 3.72445 14.0136C4.32049 15.4526 5.32985 16.6825 6.62489 17.5478C7.91993 18.4131 9.44248 18.875 11 18.875C13.0879 18.8728 15.0896 18.0424 16.566 16.566C18.0424 15.0896 18.8728 13.0879 18.875 11ZM12.125 14.4387V11.375C12.125 10.8777 11.9275 10.4008 11.5758 10.0492C11.2242 9.69754 10.7473 9.5 10.25 9.5C9.98433 9.4996 9.72708 9.59325 9.52383 9.76435C9.32058 9.93544 9.18444 10.173 9.13952 10.4348C9.09461 10.6967 9.14381 10.966 9.27843 11.195C9.41304 11.4241 9.62438 11.5981 9.875 11.6863V14.75C9.875 15.2473 10.0725 15.7242 10.4242 16.0758C10.7758 16.4275 11.2527 16.625 11.75 16.625C12.0157 16.6254 12.2729 16.5318 12.4762 16.3607C12.6794 16.1896 12.8156 15.952 12.8605 15.6902C12.9054 15.4283 12.8562 15.159 12.7216 14.93C12.587 14.7009 12.3756 14.5269 12.125 14.4387Z" fill="currentColor"/>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/lightbulb.js
var lightbulbSvg = svg`<svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M5.00177 1.78569C3.8179 1.78569 2.85819 2.74508 2.85819 3.92855C2.85819 4.52287 3.09928 5.05956 3.49077 5.4485L3.5005 5.45817C3.64381 5.60054 3.76515 5.72108 3.85631 5.81845C3.93747 5.90512 4.05255 6.03218 4.12889 6.1805C4.16999 6.26034 4.19 6.30843 4.21768 6.39385C4.22145 6.40546 4.22499 6.41703 4.22833 6.42855H5.77521C5.77854 6.41703 5.78208 6.40547 5.78585 6.39385C5.81353 6.30843 5.83354 6.26034 5.87464 6.1805C5.95098 6.03218 6.06606 5.90512 6.14722 5.81845C6.23839 5.72108 6.35973 5.60053 6.50304 5.45816L6.51276 5.4485C6.90425 5.05956 7.14534 4.52287 7.14534 3.92855C7.14534 2.74508 6.18563 1.78569 5.00177 1.78569ZM5.71629 7.85712H4.28724C4.28724 8.21403 4.28876 8.40985 4.30703 8.54571C4.30727 8.54748 4.30751 8.54921 4.30774 8.55091C4.30944 8.55115 4.31118 8.55138 4.31295 8.55162C4.44884 8.56989 4.64474 8.5714 5.00177 8.5714C5.3588 8.5714 5.55469 8.56989 5.69059 8.55162C5.69236 8.55138 5.69409 8.55115 5.69579 8.55091C5.69603 8.54921 5.69627 8.54748 5.6965 8.54571C5.71477 8.40985 5.71629 8.21403 5.71629 7.85712ZM2.85819 7.14283C2.85819 6.9948 2.85796 6.91114 2.8548 6.85032C2.85461 6.84656 2.85441 6.84309 2.85421 6.83988C2.84393 6.8282 2.83047 6.81334 2.81301 6.79469C2.74172 6.71856 2.63908 6.61643 2.48342 6.46178C1.83307 5.81566 1.42914 4.91859 1.42914 3.92855C1.42914 1.9561 3.02866 0.357117 5.00177 0.357117C6.97487 0.357117 8.57439 1.9561 8.57439 3.92855C8.57439 4.91859 8.17047 5.81566 7.52012 6.46178C7.36445 6.61643 7.26182 6.71856 7.19053 6.79469C7.17306 6.81334 7.1596 6.8282 7.14932 6.83988C7.14912 6.84309 7.14892 6.84656 7.14873 6.85032C7.14557 6.91114 7.14534 6.9948 7.14534 7.14283V7.85712C7.14534 7.87009 7.14535 7.88304 7.14535 7.89598C7.14541 8.19889 7.14547 8.49326 7.11281 8.73606C7.076 9.00978 6.98631 9.32212 6.72678 9.58156C6.46726 9.841 6.15481 9.93065 5.881 9.96745C5.63813 10.0001 5.34365 10 5.04064 9.99998C5.0277 9.99998 5.01474 9.99998 5.00177 9.99998C4.98879 9.99998 4.97583 9.99998 4.96289 9.99998C4.65988 10 4.36541 10.0001 4.12253 9.96745C3.84872 9.93065 3.53628 9.841 3.27675 9.58156C3.01722 9.32212 2.92753 9.00978 2.89072 8.73606C2.85807 8.49326 2.85812 8.19889 2.85818 7.89598C2.85819 7.88304 2.85819 7.87008 2.85819 7.85712V7.14283ZM7.1243 6.86977C7.12366 6.87069 7.1233 6.87116 7.12327 6.87119C7.12323 6.87123 7.12356 6.87076 7.1243 6.86977ZM2.88027 6.8712C2.88025 6.87119 2.87988 6.8707 2.87921 6.86975C2.87995 6.87072 2.88028 6.8712 2.88027 6.8712Z" fill="#949E9E"/>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/mail.js
var mailSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4.83 1.34h6.34c.68 0 1.26 0 1.73.04.5.05.97.15 1.42.4.52.3.95.72 1.24 1.24.26.45.35.92.4 1.42.04.47.04 1.05.04 1.73v3.71c0 .69 0 1.26-.04 1.74-.05.5-.14.97-.4 1.41-.3.52-.72.95-1.24 1.25-.45.25-.92.35-1.42.4-.47.03-1.05.03-1.73.03H4.83c-.68 0-1.26 0-1.73-.04-.5-.04-.97-.14-1.42-.4-.52-.29-.95-.72-1.24-1.24a3.39 3.39 0 0 1-.4-1.41A20.9 20.9 0 0 1 0 9.88v-3.7c0-.7 0-1.27.04-1.74.05-.5.14-.97.4-1.42.3-.52.72-.95 1.24-1.24.45-.25.92-.35 1.42-.4.47-.04 1.05-.04 1.73-.04ZM3.28 3.38c-.36.03-.51.08-.6.14-.21.11-.39.29-.5.5a.8.8 0 0 0-.08.19l5.16 3.44c.45.3 1.03.3 1.48 0L13.9 4.2a.79.79 0 0 0-.08-.2c-.11-.2-.29-.38-.5-.5-.09-.05-.24-.1-.6-.13-.37-.04-.86-.04-1.6-.04H4.88c-.73 0-1.22 0-1.6.04ZM14 6.54 9.85 9.31a3.33 3.33 0 0 1-3.7 0L2 6.54v3.3c0 .74 0 1.22.03 1.6.04.36.1.5.15.6.11.2.29.38.5.5.09.05.24.1.6.14.37.03.86.03 1.6.03h6.25c.73 0 1.22 0 1.6-.03.35-.03.5-.09.6-.14.2-.12.38-.3.5-.5.05-.1.1-.24.14-.6.03-.38.03-.86.03-1.6v-3.3Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/mobile.js
var mobileSvg = svg`<svg fill="none" viewBox="0 0 20 20">
  <path fill="currentColor" d="M10.81 5.81a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z" />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3 4.75A4.75 4.75 0 0 1 7.75 0h4.5A4.75 4.75 0 0 1 17 4.75v10.5A4.75 4.75 0 0 1 12.25 20h-4.5A4.75 4.75 0 0 1 3 15.25V4.75ZM7.75 2A2.75 2.75 0 0 0 5 4.75v10.5A2.75 2.75 0 0 0 7.75 18h4.5A2.75 2.75 0 0 0 15 15.25V4.75A2.75 2.75 0 0 0 12.25 2h-4.5Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/more.js
var moreSvg = svg`<svg fill="none" viewBox="0 0 41 40">
  <path
    style="fill: var(--wui-color-fg-100);"
    fill-opacity=".05"
    d="M.6 20a20 20 0 1 1 40 0 20 20 0 0 1-40 0Z"
  />
  <path
    fill="#949E9E"
    d="M15.6 20.31a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0ZM23.1 20.31a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0ZM28.1 22.81a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/network-placeholder.js
var networkPlaceholderSvg = svg`<svg fill="none" viewBox="0 0 22 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M16.32 13.62a3.14 3.14 0 1 1-.99 1.72l-1.6-.93a3.83 3.83 0 0 1-3.71 1 3.66 3.66 0 0 1-1.74-1l-1.6.94a3.14 3.14 0 1 1-1-1.73l1.6-.94a3.7 3.7 0 0 1 0-2 3.81 3.81 0 0 1 1.8-2.33c.29-.17.6-.3.92-.38V6.1a3.14 3.14 0 1 1 2 0l-.01.02v1.85H12a3.82 3.82 0 0 1 2.33 1.8 3.7 3.7 0 0 1 .39 2.91l1.6.93ZM2.6 16.54a1.14 1.14 0 0 0 1.98-1.14 1.14 1.14 0 0 0-1.98 1.14ZM11 2.01a1.14 1.14 0 1 0 0 2.28 1.14 1.14 0 0 0 0-2.28Zm1.68 10.45c.08-.19.14-.38.16-.58v-.05l.02-.13v-.13a1.92 1.92 0 0 0-.24-.8l-.11-.15a1.89 1.89 0 0 0-.74-.6 1.86 1.86 0 0 0-.77-.17h-.19a1.97 1.97 0 0 0-.89.34 1.98 1.98 0 0 0-.61.74 1.99 1.99 0 0 0-.16.9v.05a1.87 1.87 0 0 0 .24.74l.1.15c.12.16.26.3.42.42l.16.1.13.07.04.02a1.84 1.84 0 0 0 .76.17h.17a2 2 0 0 0 .91-.35 1.78 1.78 0 0 0 .52-.58l.03-.05a.84.84 0 0 0 .05-.11Zm5.15 4.5a1.14 1.14 0 0 0 1.14-1.97 1.13 1.13 0 0 0-1.55.41c-.32.55-.13 1.25.41 1.56Z"
    clip-rule="evenodd"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4.63 9.43a1.5 1.5 0 1 0 1.5-2.6 1.5 1.5 0 0 0-1.5 2.6Zm.32-1.55a.5.5 0 0 1 .68-.19.5.5 0 0 1 .18.68.5.5 0 0 1-.68.19.5.5 0 0 1-.18-.68ZM17.94 8.88a1.5 1.5 0 1 1-2.6-1.5 1.5 1.5 0 1 1 2.6 1.5ZM16.9 7.69a.5.5 0 0 0-.68.19.5.5 0 0 0 .18.68.5.5 0 0 0 .68-.19.5.5 0 0 0-.18-.68ZM9.75 17.75a1.5 1.5 0 1 1 2.6 1.5 1.5 1.5 0 1 1-2.6-1.5Zm1.05 1.18a.5.5 0 0 0 .68-.18.5.5 0 0 0-.18-.68.5.5 0 0 0-.68.18.5.5 0 0 0 .18.68Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/nftPlaceholder.js
var nftPlaceholderSvg = svg`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M9.13 1h1.71c1.46 0 2.63 0 3.56.1.97.1 1.8.33 2.53.85a5 5 0 0 1 1.1 1.11c.53.73.75 1.56.86 2.53.1.93.1 2.1.1 3.55v1.72c0 1.45 0 2.62-.1 3.55-.1.97-.33 1.8-.86 2.53a5 5 0 0 1-1.1 1.1c-.73.53-1.56.75-2.53.86-.93.1-2.1.1-3.55.1H9.13c-1.45 0-2.62 0-3.56-.1-.96-.1-1.8-.33-2.52-.85a5 5 0 0 1-1.1-1.11 5.05 5.05 0 0 1-.86-2.53c-.1-.93-.1-2.1-.1-3.55V9.14c0-1.45 0-2.62.1-3.55.1-.97.33-1.8.85-2.53a5 5 0 0 1 1.1-1.1 5.05 5.05 0 0 1 2.53-.86C6.51 1 7.67 1 9.13 1ZM5.79 3.09a3.1 3.1 0 0 0-1.57.48 3 3 0 0 0-.66.67c-.24.32-.4.77-.48 1.56-.1.82-.1 1.88-.1 3.4v1.6c0 1.15 0 2.04.05 2.76l.41-.42c.5-.5.93-.92 1.32-1.24.41-.33.86-.6 1.43-.7a3 3 0 0 1 .94 0c.35.06.66.2.95.37a17.11 17.11 0 0 0 .8.45c.1-.08.2-.2.41-.4l.04-.03a27 27 0 0 1 1.95-1.84 4.03 4.03 0 0 1 1.91-.94 4 4 0 0 1 1.25 0c.73.11 1.33.46 1.91.94l.64.55V9.2c0-1.52 0-2.58-.1-3.4a3.1 3.1 0 0 0-.48-1.56 3 3 0 0 0-.66-.67 3.1 3.1 0 0 0-1.56-.48C13.37 3 12.3 3 10.79 3h-1.6c-1.52 0-2.59 0-3.4.09Zm11.18 10-.04-.05a26.24 26.24 0 0 0-1.83-1.74c-.45-.36-.73-.48-.97-.52a2 2 0 0 0-.63 0c-.24.04-.51.16-.97.52-.46.38-1.01.93-1.83 1.74l-.02.02c-.17.18-.34.34-.49.47a2.04 2.04 0 0 1-1.08.5 1.97 1.97 0 0 1-1.25-.27l-.79-.46-.02-.02a.65.65 0 0 0-.24-.1 1 1 0 0 0-.31 0c-.08.02-.21.06-.49.28-.3.24-.65.59-1.2 1.14l-.56.56-.65.66a3 3 0 0 0 .62.6c.33.24.77.4 1.57.49.81.09 1.88.09 3.4.09h1.6c1.52 0 2.58 0 3.4-.09a3.1 3.1 0 0 0 1.56-.48 3 3 0 0 0 .66-.67c.24-.32.4-.77.49-1.56l.07-1.12Zm-8.02-1.03ZM4.99 7a2 2 0 1 1 4 0 2 2 0 0 1-4 0Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/off.js
var offSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M8 0a1 1 0 0 1 1 1v5.38a1 1 0 0 1-2 0V1a1 1 0 0 1 1-1ZM5.26 2.6a1 1 0 0 1-.28 1.39 5.46 5.46 0 1 0 6.04 0 1 1 0 1 1 1.1-1.67 7.46 7.46 0 1 1-8.25 0 1 1 0 0 1 1.4.28Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/play-store.js
var playStoreSvg = svg` <svg
  width="36"
  height="36"
  fill="none"
>
  <path
    d="M0 8a8 8 0 0 1 8-8h20a8 8 0 0 1 8 8v20a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8V8Z"
    fill="#fff"
    fill-opacity=".05"
  />
  <path
    d="m18.262 17.513-8.944 9.49v.01a2.417 2.417 0 0 0 3.56 1.452l.026-.017 10.061-5.803-4.703-5.132Z"
    fill="#EA4335"
  />
  <path
    d="m27.307 15.9-.008-.008-4.342-2.52-4.896 4.36 4.913 4.912 4.325-2.494a2.42 2.42 0 0 0 .008-4.25Z"
    fill="#FBBC04"
  />
  <path
    d="M9.318 8.997c-.05.202-.084.403-.084.622V26.39c0 .218.025.42.084.621l9.246-9.247-9.246-8.768Z"
    fill="#4285F4"
  />
  <path
    d="m18.33 18 4.627-4.628-10.053-5.828a2.427 2.427 0 0 0-3.586 1.444L18.329 18Z"
    fill="#34A853"
  />
  <path
    d="M8 .5h20A7.5 7.5 0 0 1 35.5 8v20a7.5 7.5 0 0 1-7.5 7.5H8A7.5 7.5 0 0 1 .5 28V8A7.5 7.5 0 0 1 8 .5Z"
    stroke="#fff"
    stroke-opacity=".05"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/plus.js
var plusSvg = svg`<svg
  width="13"
  height="12"
  viewBox="0 0 13 12"
  fill="none"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M0.794373 5.99982C0.794373 5.52643 1.17812 5.14268 1.6515 5.14268H5.643V1.15109C5.643 0.677701 6.02675 0.293946 6.50012 0.293945C6.9735 0.293946 7.35725 0.677701 7.35725 1.15109V5.14268H11.3488C11.8221 5.14268 12.2059 5.52643 12.2059 5.99982C12.2059 6.47321 11.8221 6.85696 11.3488 6.85696H7.35725V10.8486C7.35725 11.3219 6.9735 11.7057 6.50012 11.7057C6.02675 11.7057 5.643 11.3219 5.643 10.8486V6.85696H1.6515C1.17812 6.85696 0.794373 6.47321 0.794373 5.99982Z"
  /></svg
>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/qr-code.js
var qrCodeIcon = svg`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    d="M3 6a3 3 0 0 1 3-3h1a1 1 0 1 0 0-2H6a5 5 0 0 0-5 5v1a1 1 0 0 0 2 0V6ZM13 1a1 1 0 1 0 0 2h1a3 3 0 0 1 3 3v1a1 1 0 1 0 2 0V6a5 5 0 0 0-5-5h-1ZM3 13a1 1 0 1 0-2 0v1a5 5 0 0 0 5 5h1a1 1 0 1 0 0-2H6a3 3 0 0 1-3-3v-1ZM19 13a1 1 0 1 0-2 0v1a3 3 0 0 1-3 3h-1a1 1 0 1 0 0 2h1.01a5 5 0 0 0 5-5v-1ZM5.3 6.36c-.04.2-.04.43-.04.89s0 .7.05.89c.14.52.54.92 1.06 1.06.19.05.42.05.89.05.46 0 .7 0 .88-.05A1.5 1.5 0 0 0 9.2 8.14c.06-.2.06-.43.06-.89s0-.7-.06-.89A1.5 1.5 0 0 0 8.14 5.3c-.19-.05-.42-.05-.88-.05-.47 0-.7 0-.9.05a1.5 1.5 0 0 0-1.05 1.06ZM10.8 6.36c-.04.2-.04.43-.04.89s0 .7.05.89c.14.52.54.92 1.06 1.06.19.05.42.05.89.05.46 0 .7 0 .88-.05a1.5 1.5 0 0 0 1.06-1.06c.06-.2.06-.43.06-.89s0-.7-.06-.89a1.5 1.5 0 0 0-1.06-1.06c-.19-.05-.42-.05-.88-.05-.47 0-.7 0-.9.05a1.5 1.5 0 0 0-1.05 1.06ZM5.26 12.75c0-.46 0-.7.05-.89a1.5 1.5 0 0 1 1.06-1.06c.19-.05.42-.05.89-.05.46 0 .7 0 .88.05.52.14.93.54 1.06 1.06.06.2.06.43.06.89s0 .7-.06.89a1.5 1.5 0 0 1-1.06 1.06c-.19.05-.42.05-.88.05-.47 0-.7 0-.9-.05a1.5 1.5 0 0 1-1.05-1.06c-.05-.2-.05-.43-.05-.89ZM10.8 11.86c-.04.2-.04.43-.04.89s0 .7.05.89c.14.52.54.92 1.06 1.06.19.05.42.05.89.05.46 0 .7 0 .88-.05a1.5 1.5 0 0 0 1.06-1.06c.06-.2.06-.43.06-.89s0-.7-.06-.89a1.5 1.5 0 0 0-1.06-1.06c-.19-.05-.42-.05-.88-.05-.47 0-.7 0-.9.05a1.5 1.5 0 0 0-1.05 1.06Z"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/recycle-horizontal.js
var recycleHorizontalSvg = svg`<svg
  fill="none"
  viewBox="0 0 21 20"
>
  <path
    fill="currentColor"
    d="M8.8071 0.292893C9.19763 0.683417 9.19763 1.31658 8.8071 1.70711L6.91421 3.6H11.8404C14.3368 3.6 16.5533 5.1975 17.3427 7.56588L17.4487 7.88377C17.6233 8.40772 17.3402 8.97404 16.8162 9.14868C16.2923 9.32333 15.726 9.04017 15.5513 8.51623L15.4453 8.19834C14.9281 6.64664 13.476 5.6 11.8404 5.6H6.91421L8.8071 7.49289C9.19763 7.88342 9.19763 8.51658 8.8071 8.90711C8.41658 9.29763 7.78341 9.29763 7.39289 8.90711L3.79289 5.30711C3.40236 4.91658 3.40236 4.28342 3.79289 3.89289L7.39289 0.292893C7.78341 -0.0976311 8.41658 -0.0976311 8.8071 0.292893ZM4.18377 10.8513C4.70771 10.6767 5.27403 10.9598 5.44868 11.4838L5.55464 11.8017C6.07188 13.3534 7.52401 14.4 9.15964 14.4L14.0858 14.4L12.1929 12.5071C11.8024 12.1166 11.8024 11.4834 12.1929 11.0929C12.5834 10.7024 13.2166 10.7024 13.6071 11.0929L17.2071 14.6929C17.5976 15.0834 17.5976 15.7166 17.2071 16.1071L13.6071 19.7071C13.2166 20.0976 12.5834 20.0976 12.1929 19.7071C11.8024 19.3166 11.8024 18.6834 12.1929 18.2929L14.0858 16.4L9.15964 16.4C6.66314 16.4 4.44674 14.8025 3.65728 12.4341L3.55131 12.1162C3.37667 11.5923 3.65983 11.026 4.18377 10.8513Z"
  /></svg
>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/refresh.js
var refreshSvg = svg`<svg fill="none" viewBox="0 0 14 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.94 1.04a1 1 0 0 1 .7 1.23l-.48 1.68a5.85 5.85 0 0 1 8.53 4.32 5.86 5.86 0 0 1-11.4 2.56 1 1 0 0 1 1.9-.57 3.86 3.86 0 1 0 1.83-4.5l1.87.53a1 1 0 0 1-.55 1.92l-4.1-1.15a1 1 0 0 1-.69-1.23l1.16-4.1a1 1 0 0 1 1.23-.7Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/search.js
var searchSvg = svg`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M9.36 4.21a5.14 5.14 0 1 0 0 10.29 5.14 5.14 0 0 0 0-10.29ZM1.64 9.36a7.71 7.71 0 1 1 14 4.47l2.52 2.5a1.29 1.29 0 1 1-1.82 1.83l-2.51-2.51A7.71 7.71 0 0 1 1.65 9.36Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/send.js
var sendSvg = svg`<svg fill="none" viewBox="0 0 21 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M14.3808 4.34812C13.72 4.47798 12.8501 4.7587 11.5748 5.17296L9.00869 6.00646C6.90631 6.68935 5.40679 7.17779 4.38121 7.63178C3.87166 7.85734 3.5351 8.05091 3.32022 8.22035C3.11183 8.38466 3.07011 8.48486 3.05969 8.51817C2.98058 8.77103 2.98009 9.04195 3.05831 9.29509C3.06861 9.32844 3.10998 9.42878 3.31777 9.59384C3.53205 9.76404 3.86792 9.95881 4.37667 10.1862C5.29287 10.5957 6.58844 11.0341 8.35529 11.6164L10.8876 8.59854C11.2426 8.17547 11.8733 8.12028 12.2964 8.47528C12.7195 8.83029 12.7746 9.46104 12.4196 9.88412L9.88738 12.9019C10.7676 14.5408 11.4244 15.7406 11.9867 16.5718C12.299 17.0333 12.5491 17.3303 12.7539 17.5117C12.9526 17.6877 13.0586 17.711 13.0932 17.7154C13.3561 17.7484 13.6228 17.7009 13.8581 17.5791C13.8891 17.563 13.9805 17.5046 14.1061 17.2708C14.2357 17.0298 14.3679 16.6647 14.5015 16.1237C14.7705 15.0349 14.9912 13.4733 15.2986 11.2843L15.6738 8.61249C15.8603 7.28456 15.9857 6.37917 15.9989 5.7059C16.012 5.03702 15.9047 4.8056 15.8145 4.69183C15.7044 4.55297 15.5673 4.43792 15.4114 4.35365C15.2837 4.28459 15.0372 4.2191 14.3808 4.34812ZM7.99373 13.603C6.11919 12.9864 4.6304 12.4902 3.5606 12.0121C2.98683 11.7557 2.4778 11.4808 2.07383 11.1599C1.66337 10.8339 1.31312 10.4217 1.14744 9.88551C0.949667 9.24541 0.950886 8.56035 1.15094 7.92096C1.31852 7.38534 1.67024 6.97442 2.08185 6.64985C2.48697 6.33041 2.99697 6.05734 3.57166 5.80295C4.70309 5.3021 6.30179 4.78283 8.32903 4.12437L11.0196 3.25042C12.2166 2.86159 13.2017 2.54158 13.9951 2.38566C14.8065 2.22618 15.6202 2.19289 16.3627 2.59437C16.7568 2.80747 17.1035 3.09839 17.3818 3.4495C17.9062 4.111 18.0147 4.91815 17.9985 5.74496C17.9827 6.55332 17.8386 7.57903 17.6636 8.82534L17.2701 11.6268C16.9737 13.7376 16.7399 15.4022 16.4432 16.6034C16.2924 17.2135 16.1121 17.7632 15.8678 18.2176C15.6197 18.6794 15.2761 19.0971 14.7777 19.3551C14.1827 19.6632 13.5083 19.7833 12.8436 19.6997C12.2867 19.6297 11.82 19.3563 11.4277 19.0087C11.0415 18.6666 10.6824 18.213 10.3302 17.6925C9.67361 16.722 8.92648 15.342 7.99373 13.603Z"
    clip-rule="evenodd"
  />
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="21"
    height="20"
    viewBox="0 0 21 20"
    fill="none"
  ></svg></svg
>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/swapHorizontal.js
var swapHorizontalSvg = svg`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.76.3a1 1 0 0 1 0 1.4L4.07 4.4h9a1 1 0 1 1 0 2h-9l2.69 2.68a1 1 0 1 1-1.42 1.42L.95 6.09a1 1 0 0 1 0-1.4l4.4-4.4a1 1 0 0 1 1.4 0Zm6.49 9.21a1 1 0 0 1 1.41 0l4.39 4.4a1 1 0 0 1 0 1.4l-4.39 4.4a1 1 0 0 1-1.41-1.42l2.68-2.68h-9a1 1 0 0 1 0-2h9l-2.68-2.68a1 1 0 0 1 0-1.42Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/swapHorizontalBold.js
var swapHorizontalBoldSvg = svg`<svg width="10" height="10" viewBox="0 0 10 10">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.77986 0.566631C4.0589 0.845577 4.0589 1.29784 3.77986 1.57678L3.08261 2.2738H6.34184C6.73647 2.2738 7.05637 2.5936 7.05637 2.98808C7.05637 3.38257 6.73647 3.70237 6.34184 3.70237H3.08261L3.77986 4.39938C4.0589 4.67833 4.0589 5.13059 3.77986 5.40954C3.50082 5.68848 3.04841 5.68848 2.76937 5.40954L0.852346 3.49316C0.573306 3.21421 0.573306 2.76195 0.852346 2.48301L2.76937 0.566631C3.04841 0.287685 3.50082 0.287685 3.77986 0.566631ZM6.22 4.59102C6.49904 4.31208 6.95145 4.31208 7.23049 4.59102L9.14751 6.5074C9.42655 6.78634 9.42655 7.23861 9.14751 7.51755L7.23049 9.43393C6.95145 9.71287 6.49904 9.71287 6.22 9.43393C5.94096 9.15498 5.94096 8.70272 6.22 8.42377L6.91725 7.72676L3.65802 7.72676C3.26339 7.72676 2.94349 7.40696 2.94349 7.01247C2.94349 6.61798 3.26339 6.29819 3.65802 6.29819L6.91725 6.29819L6.22 5.60117C5.94096 5.32223 5.94096 4.86997 6.22 4.59102Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/swapHorizontalMedium.js
var swapHorizontalMediumSvg = svg`<svg
  width="14"
  height="14"
  viewBox="0 0 14 14"
  fill="none"
  xmlns="http://www.w3.org/2000/svg"
>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M13.7306 3.24213C14.0725 3.58384 14.0725 4.13786 13.7306 4.47957L10.7418 7.46737C10.4 7.80908 9.84581 7.80908 9.50399 7.46737C9.16216 7.12567 9.16216 6.57165 9.50399 6.22994L10.9986 4.73585H5.34082C4.85741 4.73585 4.46553 4.3441 4.46553 3.86085C4.46553 3.3776 4.85741 2.98585 5.34082 2.98585L10.9986 2.98585L9.50399 1.49177C9.16216 1.15006 9.16216 0.596037 9.50399 0.254328C9.84581 -0.0873803 10.4 -0.0873803 10.7418 0.254328L13.7306 3.24213ZM9.52515 10.1352C9.52515 10.6185 9.13327 11.0102 8.64986 11.0102L2.9921 11.0102L4.48669 12.5043C4.82852 12.846 4.82852 13.4001 4.48669 13.7418C4.14487 14.0835 3.59066 14.0835 3.24884 13.7418L0.26003 10.754C0.0958806 10.5899 0.0036621 10.3673 0.00366211 10.1352C0.00366212 9.90318 0.0958806 9.68062 0.26003 9.51652L3.24884 6.52872C3.59066 6.18701 4.14487 6.18701 4.48669 6.52872C4.82851 6.87043 4.82851 7.42445 4.48669 7.76616L2.9921 9.26024L8.64986 9.26024C9.13327 9.26024 9.52515 9.65199 9.52515 10.1352Z"
    fill="currentColor"
  />
</svg>

`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/swapHorizontalRoundedBold.js
var swapHorizontalRoundedBoldSvg = svg`<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
  <path 
    fill="currentColor"
    fill-rule="evenodd" 
    clip-rule="evenodd" 
    d="M8.3071 0.292893C8.69763 0.683417 8.69763 1.31658 8.3071 1.70711L6.41421 3.6H11.3404C13.8368 3.6 16.0533 5.1975 16.8427 7.56588L16.9487 7.88377C17.1233 8.40772 16.8402 8.97404 16.3162 9.14868C15.7923 9.32333 15.226 9.04017 15.0513 8.51623L14.9453 8.19834C14.4281 6.64664 12.976 5.6 11.3404 5.6H6.41421L8.3071 7.49289C8.69763 7.88342 8.69763 8.51658 8.3071 8.90711C7.91658 9.29763 7.28341 9.29763 6.89289 8.90711L3.29289 5.30711C2.90236 4.91658 2.90236 4.28342 3.29289 3.89289L6.89289 0.292893C7.28341 -0.0976311 7.91658 -0.0976311 8.3071 0.292893ZM3.68377 10.8513C4.20771 10.6767 4.77403 10.9598 4.94868 11.4838L5.05464 11.8017C5.57188 13.3534 7.024 14.4 8.65964 14.4L13.5858 14.4L11.6929 12.5071C11.3024 12.1166 11.3024 11.4834 11.6929 11.0929C12.0834 10.7024 12.7166 10.7024 13.1071 11.0929L16.7071 14.6929C17.0976 15.0834 17.0976 15.7166 16.7071 16.1071L13.1071 19.7071C12.7166 20.0976 12.0834 20.0976 11.6929 19.7071C11.3024 19.3166 11.3024 18.6834 11.6929 18.2929L13.5858 16.4L8.65964 16.4C6.16314 16.4 3.94674 14.8025 3.15728 12.4341L3.05131 12.1162C2.87667 11.5923 3.15983 11.026 3.68377 10.8513Z" 
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/swapVertical.js
var swapVerticalSvg = svg`<svg fill="none" viewBox="0 0 14 14">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.48 2.18a1 1 0 0 1 1.41 0l2.68 2.68a1 1 0 1 1-1.41 1.42l-.98-.98v4.56a1 1 0 0 1-2 0V5.3l-.97.98A1 1 0 0 1 .79 4.86l2.69-2.68Zm6.34 2.93a1 1 0 0 1 1 1v4.56l.97-.98a1 1 0 1 1 1.42 1.42l-2.69 2.68a1 1 0 0 1-1.41 0l-2.68-2.68a1 1 0 0 1 1.41-1.42l.98.98V6.1a1 1 0 0 1 1-1Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/telegram.js
var telegramSvg = svg`<svg width="32" height="32" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
  <g clip-path="url(#a)">
    <path fill="url(#b)" d="M0 0h32v32H0z"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M7.034 15.252c4.975-2.167 8.293-3.596 9.953-4.287 4.74-1.971 5.725-2.314 6.366-2.325.142-.002.457.033.662.198.172.14.22.33.243.463.022.132.05.435.028.671-.257 2.7-1.368 9.248-1.933 12.27-.24 1.28-.71 1.708-1.167 1.75-.99.091-1.743-.655-2.703-1.284-1.502-.985-2.351-1.598-3.81-2.558-1.684-1.11-.592-1.721.368-2.718.252-.261 4.619-4.233 4.703-4.594.01-.045.02-.213-.08-.301-.1-.09-.246-.059-.353-.035-.15.034-2.55 1.62-7.198 4.758-.682.468-1.298.696-1.851.684-.61-.013-1.782-.344-2.653-.628-1.069-.347-1.918-.53-1.845-1.12.039-.308.462-.623 1.27-.944Z" fill="#fff"/>
  </g>
  <path d="M.5 16C.5 7.44 7.44.5 16 .5 24.56.5 31.5 7.44 31.5 16c0 8.56-6.94 15.5-15.5 15.5C7.44 31.5.5 24.56.5 16Z" stroke="#141414" stroke-opacity=".05"/>
  <defs>
    <linearGradient id="b" x1="1600" y1="0" x2="1600" y2="3176.27" gradientUnits="userSpaceOnUse">
      <stop stop-color="#2AABEE"/>
      <stop offset="1" stop-color="#229ED9"/>
    </linearGradient>
    <clipPath id="a">
      <path d="M0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16S0 24.837 0 16Z" fill="#fff"/>
    </clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/three-dots.js
var threeDotsSvg = svg`<svg width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M7 3.71875C6.0335 3.71875 5.25 2.93525 5.25 1.96875C5.25 1.00225 6.0335 0.21875 7 0.21875C7.9665 0.21875 8.75 1.00225 8.75 1.96875C8.75 2.93525 7.9665 3.71875 7 3.71875Z" fill="#949E9E"/>
  <path d="M7 8.96875C6.0335 8.96875 5.25 8.18525 5.25 7.21875C5.25 6.25225 6.0335 5.46875 7 5.46875C7.9665 5.46875 8.75 6.25225 8.75 7.21875C8.75 8.18525 7.9665 8.96875 7 8.96875Z" fill="#949E9E"/>
  <path d="M5.25 12.4688C5.25 13.4352 6.0335 14.2187 7 14.2187C7.9665 14.2187 8.75 13.4352 8.75 12.4688C8.75 11.5023 7.9665 10.7188 7 10.7188C6.0335 10.7188 5.25 11.5023 5.25 12.4688Z" fill="#949E9E"/>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/twitch.js
var twitchSvg = svg`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#5A3E85" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M18.22 25.7 20 23.91h3.34l2.1-2.1v-6.68H15.4v8.78h2.82v1.77Zm3.87-8.16h1.25v3.66H22.1v-3.66Zm-3.34 0H20v3.66h-1.25v-3.66ZM20 7.9a12 12 0 1 0 0 24 12 12 0 0 0 0-24Zm6.69 14.56-3.66 3.66h-2.72l-1.77 1.78h-1.88V26.1H13.3v-9.82l.94-2.4H26.7v8.56Z"
        />
      </g>
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/twitterIcon.js
var twitterIconSvg = svg`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    d="m14.36 4.74.01.42c0 4.34-3.3 9.34-9.34 9.34A9.3 9.3 0 0 1 0 13.03a6.6 6.6 0 0 0 4.86-1.36 3.29 3.29 0 0 1-3.07-2.28c.5.1 1 .07 1.48-.06A3.28 3.28 0 0 1 .64 6.11v-.04c.46.26.97.4 1.49.41A3.29 3.29 0 0 1 1.11 2.1a9.32 9.32 0 0 0 6.77 3.43 3.28 3.28 0 0 1 5.6-3 6.59 6.59 0 0 0 2.08-.8 3.3 3.3 0 0 1-1.45 1.82A6.53 6.53 0 0 0 16 3.04c-.44.66-1 1.23-1.64 1.7Z"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/verify-filled.js
var verifyFilledSvg = svg`<svg fill="none" viewBox="0 0 14 14">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="m4.1 12.43-.45-.78-.93-.2a1.65 1.65 0 0 1-1.31-1.8l.1-.86-.61-.71a1.65 1.65 0 0 1 0-2.16l.6-.7-.09-.85c-.1-.86.47-1.64 1.3-1.81l.94-.2.45-.78A1.65 1.65 0 0 1 6.23.9l.77.36.78-.36c.77-.36 1.69-.07 2.12.66l.47.8.91.2c.84.17 1.4.95 1.31 1.8l-.1.86.6.7c.54.62.54 1.54.01 2.16l-.6.71.09.86c.1.85-.47 1.63-1.3 1.8l-.92.2-.47.79a1.65 1.65 0 0 1-2.12.66L7 12.74l-.77.36c-.78.35-1.7.07-2.13-.67Zm5.74-6.9a1 1 0 1 0-1.68-1.07L6.32 7.3l-.55-.66a1 1 0 0 0-1.54 1.28l1.43 1.71a1 1 0 0 0 1.61-.1l2.57-4Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/verify.js
var verifySvg = svg`<svg fill="none" viewBox="0 0 28 28">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M18.1 4.76c-.42-.73-1.33-1.01-2.09-.66l-1.42.66c-.37.18-.8.18-1.18 0l-1.4-.65a1.63 1.63 0 0 0-2.1.66l-.84 1.45c-.2.34-.53.59-.92.67l-1.7.35c-.83.17-1.39.94-1.3 1.78l.19 1.56c.04.39-.08.78-.33 1.07l-1.12 1.3c-.52.6-.52 1.5 0 2.11L5 16.38c.25.3.37.68.33 1.06l-.18 1.57c-.1.83.46 1.6 1.28 1.78l1.7.35c.4.08.73.32.93.66l.84 1.43a1.63 1.63 0 0 0 2.09.66l1.41-.66c.37-.17.8-.17 1.18 0l1.43.67c.76.35 1.66.07 2.08-.65l.86-1.45c.2-.34.54-.58.92-.66l1.68-.35A1.63 1.63 0 0 0 22.84 19l-.18-1.57a1.4 1.4 0 0 1 .33-1.06l1.12-1.32c.52-.6.52-1.5 0-2.11l-1.12-1.3a1.4 1.4 0 0 1-.33-1.07l.18-1.57c.1-.83-.46-1.6-1.28-1.77l-1.68-.35a1.4 1.4 0 0 1-.92-.66l-.86-1.47Zm-3.27-3.2a4.43 4.43 0 0 1 5.69 1.78l.54.93 1.07.22a4.43 4.43 0 0 1 3.5 4.84l-.11.96.7.83a4.43 4.43 0 0 1 .02 5.76l-.72.85.1.96a4.43 4.43 0 0 1-3.5 4.84l-1.06.22-.54.92a4.43 4.43 0 0 1-5.68 1.77l-.84-.4-.82.39a4.43 4.43 0 0 1-5.7-1.79l-.51-.89-1.09-.22a4.43 4.43 0 0 1-3.5-4.84l.1-.96-.72-.85a4.43 4.43 0 0 1 .01-5.76l.71-.83-.1-.95a4.43 4.43 0 0 1 3.5-4.84l1.08-.23.53-.9a4.43 4.43 0 0 1 5.7-1.8l.81.38.83-.39ZM18.2 9.4c.65.42.84 1.28.42 1.93l-4.4 6.87a1.4 1.4 0 0 1-2.26.14L9.5 15.39a1.4 1.4 0 0 1 2.15-1.8l1.23 1.48 3.38-5.26a1.4 1.4 0 0 1 1.93-.42Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/wallet-placeholder.js
var walletPlaceholderSvg = svg`
  <svg fill="none" viewBox="0 0 48 44">
    <path
      style="fill: var(--wui-color-bg-300);"
      d="M4.56 8.64c-1.23 1.68-1.23 4.08-1.23 8.88v8.96c0 4.8 0 7.2 1.23 8.88.39.55.87 1.02 1.41 1.42C7.65 38 10.05 38 14.85 38h14.3c4.8 0 7.2 0 8.88-1.22a6.4 6.4 0 0 0 1.41-1.42c.83-1.14 1.1-2.6 1.19-4.92a6.4 6.4 0 0 0 5.16-4.65c.21-.81.21-1.8.21-3.79 0-1.98 0-2.98-.22-3.79a6.4 6.4 0 0 0-5.15-4.65c-.1-2.32-.36-3.78-1.19-4.92a6.4 6.4 0 0 0-1.41-1.42C36.35 6 33.95 6 29.15 6h-14.3c-4.8 0-7.2 0-8.88 1.22a6.4 6.4 0 0 0-1.41 1.42Z"
    />
    <path
      style="fill: var(--wui-color-fg-200);"
      fill-rule="evenodd"
      d="M2.27 11.33a6.4 6.4 0 0 1 6.4-6.4h26.66a6.4 6.4 0 0 1 6.4 6.4v1.7a6.4 6.4 0 0 1 5.34 6.3v5.34a6.4 6.4 0 0 1-5.34 6.3v1.7a6.4 6.4 0 0 1-6.4 6.4H8.67a6.4 6.4 0 0 1-6.4-6.4V11.33ZM39.6 31.07h-6.93a9.07 9.07 0 1 1 0-18.14h6.93v-1.6a4.27 4.27 0 0 0-4.27-4.26H8.67a4.27 4.27 0 0 0-4.27 4.26v21.34a4.27 4.27 0 0 0 4.27 4.26h26.66a4.27 4.27 0 0 0 4.27-4.26v-1.6Zm-6.93-16a6.93 6.93 0 0 0 0 13.86h8a4.27 4.27 0 0 0 4.26-4.26v-5.34a4.27 4.27 0 0 0-4.26-4.26h-8Z"
      clip-rule="evenodd"
    />
  </svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/wallet.js
var walletSvg = svg`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M0 5.5c0-1.8 1.46-3.25 3.25-3.25H14.5c1.8 0 3.25 1.46 3.25 3.25v.28A3.25 3.25 0 0 1 20 8.88v2.24c0 1.45-.94 2.68-2.25 3.1v.28c0 1.8-1.46 3.25-3.25 3.25H3.25A3.25 3.25 0 0 1 0 14.5v-9Zm15.75 8.88h-2.38a4.38 4.38 0 0 1 0-8.76h2.38V5.5c0-.69-.56-1.25-1.25-1.25H3.25C2.56 4.25 2 4.81 2 5.5v9c0 .69.56 1.25 1.25 1.25H14.5c.69 0 1.25-.56 1.25-1.25v-.13Zm-2.38-6.76a2.37 2.37 0 1 0 0 4.75h3.38c.69 0 1.25-.55 1.25-1.24V8.87c0-.69-.56-1.24-1.25-1.24h-3.38Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/walletconnect.js
var walletConnectSvg = svg`<svg fill="none" viewBox="0 0 96 67">
  <path
    fill="currentColor"
    d="M25.32 18.8a32.56 32.56 0 0 1 45.36 0l1.5 1.47c.63.62.63 1.61 0 2.22l-5.15 5.05c-.31.3-.82.3-1.14 0l-2.07-2.03a22.71 22.71 0 0 0-31.64 0l-2.22 2.18c-.31.3-.82.3-1.14 0l-5.15-5.05a1.55 1.55 0 0 1 0-2.22l1.65-1.62Zm56.02 10.44 4.59 4.5c.63.6.63 1.6 0 2.21l-20.7 20.26c-.62.61-1.63.61-2.26 0L48.28 41.83a.4.4 0 0 0-.56 0L33.03 56.21c-.63.61-1.64.61-2.27 0L10.07 35.95a1.55 1.55 0 0 1 0-2.22l4.59-4.5a1.63 1.63 0 0 1 2.27 0L31.6 43.63a.4.4 0 0 0 .57 0l14.69-14.38a1.63 1.63 0 0 1 2.26 0l14.69 14.38a.4.4 0 0 0 .57 0l14.68-14.38a1.63 1.63 0 0 1 2.27 0Z"
  />
  <path
    stroke="#000"
    stroke-opacity=".1"
    d="M25.67 19.15a32.06 32.06 0 0 1 44.66 0l1.5 1.48c.43.42.43 1.09 0 1.5l-5.15 5.05a.31.31 0 0 1-.44 0l-2.07-2.03a23.21 23.21 0 0 0-32.34 0l-2.22 2.18a.31.31 0 0 1-.44 0l-5.15-5.05a1.05 1.05 0 0 1 0-1.5l1.65-1.63ZM81 29.6l4.6 4.5c.42.41.42 1.09 0 1.5l-20.7 20.26c-.43.43-1.14.43-1.57 0L48.63 41.47a.9.9 0 0 0-1.26 0L32.68 55.85c-.43.43-1.14.43-1.57 0L10.42 35.6a1.05 1.05 0 0 1 0-1.5l4.59-4.5a1.13 1.13 0 0 1 1.57 0l14.68 14.38a.9.9 0 0 0 1.27 0l-.35-.35.35.35L47.22 29.6a1.13 1.13 0 0 1 1.56 0l14.7 14.38a.9.9 0 0 0 1.26 0L79.42 29.6a1.13 1.13 0 0 1 1.57 0Z"
  />
</svg>`;
var walletConnectLightBrownSvg = svg`
<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_22274_4692)">
<path d="M0 6.64C0 4.17295 0 2.93942 0.525474 2.01817C0.880399 1.39592 1.39592 0.880399 2.01817 0.525474C2.93942 0 4.17295 0 6.64 0H9.36C11.8271 0 13.0606 0 13.9818 0.525474C14.6041 0.880399 15.1196 1.39592 15.4745 2.01817C16 2.93942 16 4.17295 16 6.64V9.36C16 11.8271 16 13.0606 15.4745 13.9818C15.1196 14.6041 14.6041 15.1196 13.9818 15.4745C13.0606 16 11.8271 16 9.36 16H6.64C4.17295 16 2.93942 16 2.01817 15.4745C1.39592 15.1196 0.880399 14.6041 0.525474 13.9818C0 13.0606 0 11.8271 0 9.36V6.64Z" fill="#C7B994"/>
<path d="M4.49038 5.76609C6.42869 3.86833 9.5713 3.86833 11.5096 5.76609L11.7429 5.99449C11.8398 6.08938 11.8398 6.24323 11.7429 6.33811L10.9449 7.11942C10.8964 7.16686 10.8179 7.16686 10.7694 7.11942L10.4484 6.80512C9.09617 5.48119 6.90381 5.48119 5.5516 6.80512L5.20782 7.14171C5.15936 7.18915 5.08079 7.18915 5.03234 7.14171L4.23434 6.3604C4.13742 6.26552 4.13742 6.11167 4.23434 6.01678L4.49038 5.76609ZM13.1599 7.38192L13.8702 8.07729C13.9671 8.17217 13.9671 8.32602 13.8702 8.4209L10.6677 11.5564C10.5708 11.6513 10.4137 11.6513 10.3168 11.5564L8.04388 9.33105C8.01965 9.30733 7.98037 9.30733 7.95614 9.33105L5.6833 11.5564C5.58638 11.6513 5.42925 11.6513 5.33234 11.5564L2.12982 8.42087C2.0329 8.32598 2.0329 8.17213 2.12982 8.07724L2.84004 7.38188C2.93695 7.28699 3.09408 7.28699 3.191 7.38188L5.46392 9.60726C5.48815 9.63098 5.52743 9.63098 5.55166 9.60726L7.82447 7.38188C7.92138 7.28699 8.07851 7.28699 8.17543 7.38187L10.4484 9.60726C10.4726 9.63098 10.5119 9.63098 10.5361 9.60726L12.809 7.38192C12.9059 7.28703 13.063 7.28703 13.1599 7.38192Z" fill="#202020"/>
</g>
<defs>
<clipPath id="clip0_22274_4692">
<path d="M0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8Z" fill="white"/>
</clipPath>
</defs>
</svg>
`;
var walletConnectBrownSvg = svg`
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<circle cx="11" cy="11" r="11" transform="matrix(-1 0 0 1 23 1)" fill="#202020"/>
<circle cx="11" cy="11" r="11.5" transform="matrix(-1 0 0 1 23 1)" stroke="#C7B994" stroke-opacity="0.7"/>
<path d="M15.4523 11.0686L16.7472 9.78167C13.8205 6.87297 10.1838 6.87297 7.25708 9.78167L8.55201 11.0686C10.7779 8.85645 13.2279 8.85645 15.4538 11.0686H15.4523Z" fill="#C7B994"/>
<path d="M15.0199 14.067L12 11.0656L8.98 14.067L5.96004 11.0656L4.66663 12.3511L8.98 16.6393L12 13.638L15.0199 16.6393L19.3333 12.3511L18.0399 11.0656L15.0199 14.067Z" fill="#C7B994"/>
</svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/warning-circle.js
var warningCircleSvg = svg`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    d="M11 6.67a1 1 0 1 0-2 0v2.66a1 1 0 0 0 2 0V6.67ZM10 14.5a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M10 1a9 9 0 1 0 0 18 9 9 0 0 0 0-18Zm-7 9a7 7 0 1 1 14 0 7 7 0 0 1-14 0Z"
    clip-rule="evenodd"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/x.js
var xSvg = svg`<svg fill="none" viewBox="0 0 41 40">
  <g clip-path="url(#a)">
    <path fill="#000" d="M.8 0h40v40H.8z" />
    <path
      fill="#fff"
      d="m22.63 18.46 7.14-8.3h-1.69l-6.2 7.2-4.96-7.2H11.2l7.5 10.9-7.5 8.71h1.7l6.55-7.61 5.23 7.61h5.72l-7.77-11.31Zm-9.13-7.03h2.6l11.98 17.13h-2.6L13.5 11.43Z"
    />
  </g>
  <defs>
    <clipPath id="a"><path fill="#fff" d="M.8 20a20 20 0 1 1 40 0 20 20 0 0 1-40 0Z" /></clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-icon/styles.js
var styles_default2 = css`
  :host {
    display: flex;
    aspect-ratio: 1 / 1;
    color: var(--local-color);
    width: var(--local-width);
  }

  svg {
    width: inherit;
    height: inherit;
    object-fit: contain;
    object-position: center;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-icon/index.js
var __decorate2 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var svgOptions = {
  add: addSvg,
  allWallets: allWalletsSvg,
  arrowBottomCircle: arrowBottomCircleSvg,
  appStore: appStoreSvg,
  apple: appleSvg,
  arrowBottom: arrowBottomSvg,
  arrowLeft: arrowLeftSvg,
  arrowRight: arrowRightSvg,
  arrowTop: arrowTopSvg,
  bank: bankSvg,
  browser: browserSvg,
  card: cardSvg,
  checkmark: checkmarkSvg,
  checkmarkBold: checkmarkBoldSvg,
  chevronBottom: chevronBottomSvg,
  chevronLeft: chevronLeftSvg,
  chevronRight: chevronRightSvg,
  chevronTop: chevronTopSvg,
  chromeStore: chromeStoreSvg,
  clock: clockSvg,
  close: closeSvg,
  compass: compassSvg,
  coinPlaceholder: coinPlaceholderSvg,
  copy: copySvg,
  cursor: cursorSvg,
  cursorTransparent: cursorTransparentSvg,
  desktop: desktopSvg,
  disconnect: disconnectSvg,
  discord: discordSvg,
  etherscan: etherscanSvg,
  extension: extensionSvg,
  externalLink: externalLinkSvg,
  facebook: facebookSvg,
  farcaster: farcasterSvg,
  filters: filtersSvg,
  github: githubSvg,
  google: googleSvg,
  helpCircle: helpCircleSvg,
  image: imageSvg,
  id: idSvg,
  infoCircle: infoCircleSvg,
  lightbulb: lightbulbSvg,
  mail: mailSvg,
  mobile: mobileSvg,
  more: moreSvg,
  networkPlaceholder: networkPlaceholderSvg,
  nftPlaceholder: nftPlaceholderSvg,
  off: offSvg,
  playStore: playStoreSvg,
  plus: plusSvg,
  qrCode: qrCodeIcon,
  recycleHorizontal: recycleHorizontalSvg,
  refresh: refreshSvg,
  search: searchSvg,
  send: sendSvg,
  swapHorizontal: swapHorizontalSvg,
  swapHorizontalMedium: swapHorizontalMediumSvg,
  swapHorizontalBold: swapHorizontalBoldSvg,
  swapHorizontalRoundedBold: swapHorizontalRoundedBoldSvg,
  swapVertical: swapVerticalSvg,
  telegram: telegramSvg,
  threeDots: threeDotsSvg,
  twitch: twitchSvg,
  twitter: xSvg,
  twitterIcon: twitterIconSvg,
  verify: verifySvg,
  verifyFilled: verifyFilledSvg,
  wallet: walletSvg,
  walletConnect: walletConnectSvg,
  walletConnectLightBrown: walletConnectLightBrownSvg,
  walletConnectBrown: walletConnectBrownSvg,
  walletPlaceholder: walletPlaceholderSvg,
  warningCircle: warningCircleSvg,
  x: xSvg,
  info: infoSvg,
  exclamationTriangle: exclamationTriangleSvg
};
var WuiIcon = class WuiIcon2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "md";
    this.name = "copy";
    this.color = "fg-300";
  }
  render() {
    this.style.cssText = `
      --local-color: ${`var(--wui-color-${this.color});`}
      --local-width: ${`var(--wui-icon-size-${this.size});`}
    `;
    return html`${svgOptions[this.name]}`;
  }
};
WuiIcon.styles = [resetStyles, colorStyles, styles_default2];
__decorate2([
  property()
], WuiIcon.prototype, "size", void 0);
__decorate2([
  property()
], WuiIcon.prototype, "name", void 0);
__decorate2([
  property()
], WuiIcon.prototype, "color", void 0);
WuiIcon = __decorate2([
  customElement("wui-icon")
], WuiIcon);

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-image/styles.js
var styles_default3 = css`
  :host {
    display: block;
    width: var(--local-width);
    height: var(--local-height);
  }

  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center center;
    border-radius: inherit;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-image/index.js
var __decorate3 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiImage = class WuiImage2 extends LitElement {
  constructor() {
    super(...arguments);
    this.src = "./path/to/image.jpg";
    this.alt = "Image";
    this.size = void 0;
  }
  render() {
    this.style.cssText = `
      --local-width: ${this.size ? `var(--wui-icon-size-${this.size});` : "100%"};
      --local-height: ${this.size ? `var(--wui-icon-size-${this.size});` : "100%"};
      `;
    return html`<img src=${this.src} alt=${this.alt} @error=${this.handleImageError} />`;
  }
  handleImageError() {
    this.dispatchEvent(new CustomEvent("onLoadError", { bubbles: true, composed: true }));
  }
};
WuiImage.styles = [resetStyles, colorStyles, styles_default3];
__decorate3([
  property()
], WuiImage.prototype, "src", void 0);
__decorate3([
  property()
], WuiImage.prototype, "alt", void 0);
__decorate3([
  property()
], WuiImage.prototype, "size", void 0);
WuiImage = __decorate3([
  customElement("wui-image")
], WuiImage);

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-loading-hexagon/styles.js
var styles_default4 = css`
  :host {
    display: block;
    width: var(--wui-box-size-lg);
    height: var(--wui-box-size-lg);
  }

  svg {
    width: var(--wui-box-size-lg);
    height: var(--wui-box-size-lg);
    fill: none;
    stroke: transparent;
    stroke-linecap: round;
  }

  use {
    stroke: var(--wui-color-accent-100);
    stroke-width: 2px;
    stroke-dasharray: 54, 118;
    stroke-dashoffset: 172;
    animation: dash 1s linear infinite;
  }

  @keyframes dash {
    to {
      stroke-dashoffset: 0px;
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-loading-hexagon/index.js
var __decorate4 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiLoadingHexagon = class WuiLoadingHexagon2 extends LitElement {
  render() {
    return html`
      <svg viewBox="0 0 54 59">
        <path
          id="wui-loader-path"
          d="M17.22 5.295c3.877-2.277 5.737-3.363 7.72-3.726a11.44 11.44 0 0 1 4.12 0c1.983.363 3.844 1.45 7.72 3.726l6.065 3.562c3.876 2.276 5.731 3.372 7.032 4.938a11.896 11.896 0 0 1 2.06 3.63c.683 1.928.688 4.11.688 8.663v7.124c0 4.553-.005 6.735-.688 8.664a11.896 11.896 0 0 1-2.06 3.63c-1.3 1.565-3.156 2.66-7.032 4.937l-6.065 3.563c-3.877 2.276-5.737 3.362-7.72 3.725a11.46 11.46 0 0 1-4.12 0c-1.983-.363-3.844-1.449-7.72-3.726l-6.065-3.562c-3.876-2.276-5.731-3.372-7.032-4.938a11.885 11.885 0 0 1-2.06-3.63c-.682-1.928-.688-4.11-.688-8.663v-7.124c0-4.553.006-6.735.688-8.664a11.885 11.885 0 0 1 2.06-3.63c1.3-1.565 3.156-2.66 7.032-4.937l6.065-3.562Z"
        />
        <use xlink:href="#wui-loader-path"></use>
      </svg>
    `;
  }
};
WuiLoadingHexagon.styles = [resetStyles, styles_default4];
WuiLoadingHexagon = __decorate4([
  customElement("wui-loading-hexagon")
], WuiLoadingHexagon);

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-loading-spinner/styles.js
var styles_default5 = css`
  :host {
    display: flex;
  }

  :host([data-size='sm']) > svg {
    width: 12px;
    height: 12px;
  }

  :host([data-size='md']) > svg {
    width: 16px;
    height: 16px;
  }

  :host([data-size='lg']) > svg {
    width: 24px;
    height: 24px;
  }

  :host([data-size='xl']) > svg {
    width: 32px;
    height: 32px;
  }

  svg {
    animation: rotate 2s linear infinite;
  }

  circle {
    fill: none;
    stroke: var(--local-color);
    stroke-width: 4px;
    stroke-dasharray: 1, 124;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
  }

  :host([data-size='md']) > svg > circle {
    stroke-width: 6px;
  }

  :host([data-size='sm']) > svg > circle {
    stroke-width: 8px;
  }

  @keyframes rotate {
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes dash {
    0% {
      stroke-dasharray: 1, 124;
      stroke-dashoffset: 0;
    }

    50% {
      stroke-dasharray: 90, 124;
      stroke-dashoffset: -35;
    }

    100% {
      stroke-dashoffset: -125;
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-loading-spinner/index.js
var __decorate5 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiLoadingSpinner = class WuiLoadingSpinner2 extends LitElement {
  constructor() {
    super(...arguments);
    this.color = "accent-100";
    this.size = "lg";
  }
  render() {
    this.style.cssText = `--local-color: ${this.color === "inherit" ? "inherit" : `var(--wui-color-${this.color})`}`;
    this.dataset["size"] = this.size;
    return html`<svg viewBox="25 25 50 50">
      <circle r="20" cy="50" cx="50"></circle>
    </svg>`;
  }
};
WuiLoadingSpinner.styles = [resetStyles, styles_default5];
__decorate5([
  property()
], WuiLoadingSpinner.prototype, "color", void 0);
__decorate5([
  property()
], WuiLoadingSpinner.prototype, "size", void 0);
WuiLoadingSpinner = __decorate5([
  customElement("wui-loading-spinner")
], WuiLoadingSpinner);

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-loading-thumbnail/styles.js
var styles_default6 = css`
  :host {
    display: block;
    width: var(--wui-box-size-md);
    height: var(--wui-box-size-md);
  }

  svg {
    width: var(--wui-box-size-md);
    height: var(--wui-box-size-md);
  }

  rect {
    fill: none;
    stroke: var(--wui-color-accent-100);
    stroke-width: 4px;
    stroke-linecap: round;
    animation: dash 1s linear infinite;
  }

  @keyframes dash {
    to {
      stroke-dashoffset: 0px;
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-loading-thumbnail/index.js
var __decorate6 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiLoadingThumbnail = class WuiLoadingThumbnail2 extends LitElement {
  constructor() {
    super(...arguments);
    this.radius = 36;
  }
  render() {
    return this.svgLoaderTemplate();
  }
  svgLoaderTemplate() {
    const radius = this.radius > 50 ? 50 : this.radius;
    const standardValue = 36;
    const radiusFactor = standardValue - radius;
    const dashArrayStart = 116 + radiusFactor;
    const dashArrayEnd = 245 + radiusFactor;
    const dashOffset = 360 + radiusFactor * 1.75;
    return html`
      <svg viewBox="0 0 110 110" width="110" height="110">
        <rect
          x="2"
          y="2"
          width="106"
          height="106"
          rx=${radius}
          stroke-dasharray="${dashArrayStart} ${dashArrayEnd}"
          stroke-dashoffset=${dashOffset}
        />
      </svg>
    `;
  }
};
WuiLoadingThumbnail.styles = [resetStyles, styles_default6];
__decorate6([
  property({ type: Number })
], WuiLoadingThumbnail.prototype, "radius", void 0);
WuiLoadingThumbnail = __decorate6([
  customElement("wui-loading-thumbnail")
], WuiLoadingThumbnail);

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-shimmer/styles.js
var styles_default7 = css`
  :host {
    display: block;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
    background: linear-gradient(
      120deg,
      var(--wui-color-bg-200) 5%,
      var(--wui-color-bg-200) 48%,
      var(--wui-color-bg-300) 55%,
      var(--wui-color-bg-300) 60%,
      var(--wui-color-bg-300) calc(60% + 10px),
      var(--wui-color-bg-200) calc(60% + 12px),
      var(--wui-color-bg-200) 100%
    );
    background-size: 250%;
    animation: shimmer 3s linear infinite reverse;
  }

  :host([variant='light']) {
    background: linear-gradient(
      120deg,
      var(--wui-color-bg-150) 5%,
      var(--wui-color-bg-150) 48%,
      var(--wui-color-bg-200) 55%,
      var(--wui-color-bg-200) 60%,
      var(--wui-color-bg-200) calc(60% + 10px),
      var(--wui-color-bg-150) calc(60% + 12px),
      var(--wui-color-bg-150) 100%
    );
    background-size: 250%;
  }

  @keyframes shimmer {
    from {
      background-position: -250% 0;
    }
    to {
      background-position: 250% 0;
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-shimmer/index.js
var __decorate7 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiShimmer = class WuiShimmer2 extends LitElement {
  constructor() {
    super(...arguments);
    this.width = "";
    this.height = "";
    this.borderRadius = "m";
    this.variant = "default";
  }
  render() {
    this.style.cssText = `
      width: ${this.width};
      height: ${this.height};
      border-radius: ${`clamp(0px,var(--wui-border-radius-${this.borderRadius}), 40px)`};
    `;
    return html`<slot></slot>`;
  }
};
WuiShimmer.styles = [styles_default7];
__decorate7([
  property()
], WuiShimmer.prototype, "width", void 0);
__decorate7([
  property()
], WuiShimmer.prototype, "height", void 0);
__decorate7([
  property()
], WuiShimmer.prototype, "borderRadius", void 0);
__decorate7([
  property()
], WuiShimmer.prototype, "variant", void 0);
WuiShimmer = __decorate7([
  customElement("wui-shimmer")
], WuiShimmer);

// node_modules/lit-html/development/directive.js
var PartType = {
  ATTRIBUTE: 1,
  CHILD: 2,
  PROPERTY: 3,
  BOOLEAN_ATTRIBUTE: 4,
  EVENT: 5,
  ELEMENT: 6
};
var directive = (c3) => (...values) => ({
  // This property needs to remain unminified.
  ["_$litDirective$"]: c3,
  values
});
var Directive = class {
  constructor(_partInfo) {
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  /** @internal */
  _$initialize(part, parent2, attributeIndex) {
    this.__part = part;
    this._$parent = parent2;
    this.__attributeIndex = attributeIndex;
  }
  /** @internal */
  _$resolve(part, props) {
    return this.update(part, props);
  }
  update(_part, props) {
    return this.render(...props);
  }
};

// node_modules/lit-html/development/directives/class-map.js
var ClassMapDirective = class extends Directive {
  constructor(partInfo) {
    var _a7;
    super(partInfo);
    if (partInfo.type !== PartType.ATTRIBUTE || partInfo.name !== "class" || ((_a7 = partInfo.strings) == null ? void 0 : _a7.length) > 2) {
      throw new Error("`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.");
    }
  }
  render(classInfo) {
    return " " + Object.keys(classInfo).filter((key2) => classInfo[key2]).join(" ") + " ";
  }
  update(part, [classInfo]) {
    var _a7, _b3;
    if (this._previousClasses === void 0) {
      this._previousClasses = /* @__PURE__ */ new Set();
      if (part.strings !== void 0) {
        this._staticClasses = new Set(part.strings.join(" ").split(/\s/).filter((s2) => s2 !== ""));
      }
      for (const name in classInfo) {
        if (classInfo[name] && !((_a7 = this._staticClasses) == null ? void 0 : _a7.has(name))) {
          this._previousClasses.add(name);
        }
      }
      return this.render(classInfo);
    }
    const classList = part.element.classList;
    for (const name of this._previousClasses) {
      if (!(name in classInfo)) {
        classList.remove(name);
        this._previousClasses.delete(name);
      }
    }
    for (const name in classInfo) {
      const value = !!classInfo[name];
      if (value !== this._previousClasses.has(name) && !((_b3 = this._staticClasses) == null ? void 0 : _b3.has(name))) {
        if (value) {
          classList.add(name);
          this._previousClasses.add(name);
        } else {
          classList.remove(name);
          this._previousClasses.delete(name);
        }
      }
    }
    return noChange;
  }
};
var classMap = directive(ClassMapDirective);

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-text/styles.js
var styles_default8 = css`
  :host {
    display: inline-flex !important;
  }

  slot {
    width: 100%;
    display: inline-block;
    font-style: normal;
    font-family: var(--wui-font-family);
    font-feature-settings:
      'tnum' on,
      'lnum' on,
      'case' on;
    line-height: 130%;
    font-weight: var(--wui-font-weight-regular);
    overflow: inherit;
    text-overflow: inherit;
    text-align: var(--local-align);
    color: var(--local-color);
  }

  .wui-line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }

  .wui-line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  .wui-font-medium-400 {
    font-size: var(--wui-font-size-medium);
    font-weight: var(--wui-font-weight-light);
    letter-spacing: var(--wui-letter-spacing-medium);
  }

  .wui-font-medium-600 {
    font-size: var(--wui-font-size-medium);
    letter-spacing: var(--wui-letter-spacing-medium);
  }

  .wui-font-title-600 {
    font-size: var(--wui-font-size-title);
    letter-spacing: var(--wui-letter-spacing-title);
  }

  .wui-font-title-6-600 {
    font-size: var(--wui-font-size-title-6);
    letter-spacing: var(--wui-letter-spacing-title-6);
  }

  .wui-font-mini-700 {
    font-size: var(--wui-font-size-mini);
    letter-spacing: var(--wui-letter-spacing-mini);
    text-transform: uppercase;
  }

  .wui-font-large-500,
  .wui-font-large-600,
  .wui-font-large-700 {
    font-size: var(--wui-font-size-large);
    letter-spacing: var(--wui-letter-spacing-large);
  }

  .wui-font-2xl-500,
  .wui-font-2xl-600,
  .wui-font-2xl-700 {
    font-size: var(--wui-font-size-2xl);
    letter-spacing: var(--wui-letter-spacing-2xl);
  }

  .wui-font-paragraph-400,
  .wui-font-paragraph-500,
  .wui-font-paragraph-600,
  .wui-font-paragraph-700 {
    font-size: var(--wui-font-size-paragraph);
    letter-spacing: var(--wui-letter-spacing-paragraph);
  }

  .wui-font-small-400,
  .wui-font-small-500,
  .wui-font-small-600 {
    font-size: var(--wui-font-size-small);
    letter-spacing: var(--wui-letter-spacing-small);
  }

  .wui-font-tiny-400,
  .wui-font-tiny-500,
  .wui-font-tiny-600 {
    font-size: var(--wui-font-size-tiny);
    letter-spacing: var(--wui-letter-spacing-tiny);
  }

  .wui-font-micro-700,
  .wui-font-micro-600 {
    font-size: var(--wui-font-size-micro);
    letter-spacing: var(--wui-letter-spacing-micro);
    text-transform: uppercase;
  }

  .wui-font-tiny-400,
  .wui-font-small-400,
  .wui-font-medium-400,
  .wui-font-paragraph-400 {
    font-weight: var(--wui-font-weight-light);
  }

  .wui-font-large-700,
  .wui-font-paragraph-700,
  .wui-font-micro-700,
  .wui-font-mini-700 {
    font-weight: var(--wui-font-weight-bold);
  }

  .wui-font-medium-600,
  .wui-font-medium-title-600,
  .wui-font-title-6-600,
  .wui-font-large-600,
  .wui-font-paragraph-600,
  .wui-font-small-600,
  .wui-font-tiny-600,
  .wui-font-micro-600 {
    font-weight: var(--wui-font-weight-medium);
  }

  :host([disabled]) {
    opacity: 0.4;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-text/index.js
var __decorate8 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiText = class WuiText2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "paragraph-500";
    this.color = "fg-300";
    this.align = "left";
    this.lineClamp = void 0;
  }
  render() {
    const classes = {
      [`wui-font-${this.variant}`]: true,
      [`wui-color-${this.color}`]: true,
      [`wui-line-clamp-${this.lineClamp}`]: this.lineClamp ? true : false
    };
    this.style.cssText = `
      --local-align: ${this.align};
      --local-color: var(--wui-color-${this.color});
    `;
    return html`<slot class=${classMap(classes)}></slot>`;
  }
};
WuiText.styles = [resetStyles, styles_default8];
__decorate8([
  property()
], WuiText.prototype, "variant", void 0);
__decorate8([
  property()
], WuiText.prototype, "color", void 0);
__decorate8([
  property()
], WuiText.prototype, "align", void 0);
__decorate8([
  property()
], WuiText.prototype, "lineClamp", void 0);
WuiText = __decorate8([
  customElement("wui-text")
], WuiText);

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/browser.js
var browserSvg2 = svg`<svg fill="none" viewBox="0 0 60 60">
  <rect width="60" height="60" fill="#1DC956" rx="30" />
  <circle cx="30" cy="30" r="3" fill="#fff" />
  <path
    fill="#2BEE6C"
    stroke="#fff"
    stroke-width="2"
    d="m45.32 17.9-.88-.42.88.42.02-.05c.1-.2.21-.44.26-.7l-.82-.15.82.16a2 2 0 0 0-.24-1.4c-.13-.23-.32-.42-.47-.57a8.42 8.42 0 0 1-.04-.04l-.04-.04a2.9 2.9 0 0 0-.56-.47l-.51.86.5-.86a2 2 0 0 0-1.4-.24c-.26.05-.5.16-.69.26l-.05.02-15.05 7.25-.1.05c-1.14.55-1.85.89-2.46 1.37a7 7 0 0 0-1.13 1.14c-.5.6-.83 1.32-1.38 2.45l-.05.11-7.25 15.05-.02.05c-.1.2-.21.43-.26.69a2 2 0 0 0 .24 1.4l.85-.5-.85.5c.13.23.32.42.47.57l.04.04.04.04c.15.15.34.34.56.47a2 2 0 0 0 1.41.24l-.2-.98.2.98c.25-.05.5-.17.69-.26l.05-.02-.42-.87.42.87 15.05-7.25.1-.05c1.14-.55 1.85-.89 2.46-1.38a7 7 0 0 0 1.13-1.13 12.87 12.87 0 0 0 1.43-2.56l7.25-15.05Z"
  />
  <path
    fill="#1DC956"
    d="M33.38 32.72 30.7 29.3 15.86 44.14l.2.2a1 1 0 0 0 1.14.2l15.1-7.27a3 3 0 0 0 1.08-4.55Z"
  />
  <path
    fill="#86F999"
    d="m26.62 27.28 2.67 3.43 14.85-14.85-.2-.2a1 1 0 0 0-1.14-.2l-15.1 7.27a3 3 0 0 0-1.08 4.55Z"
  />
  <circle cx="30" cy="30" r="3" fill="#fff" transform="rotate(45 30 30)" />
  <rect width="59" height="59" x=".5" y=".5" stroke="#062B2B" stroke-opacity=".1" rx="29.5" />
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/coinbase.js
var coinbaseSvg = svg`<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none">
  <g clip-path="url(#clip0_187_29)">
    <path d="M1.18187e-05 15.8055C1.18187e-05 9.8015 -5.19442e-07 6.91338 1.69991e-08 0C4.5 3.72236e-05 9.62249 0 16.5 0L23.5 4.31399e-05C29.9349 4.31399e-05 35.5 0.000206332 40 3.73468e-05C40 2.77754 40 9.36708 40 15.8055V22.8364C40 29.2647 40 33.7962 40 40C31.5 40 29.8337 40 23.4 40H16.6C10.5092 40 6.50004 40 4.04289e-05 40C3.05176e-05 32.2453 1.18187e-05 29.6382 1.18187e-05 22.8364V15.8055Z" fill="#0052FF"/>
    <path d="M20.0236 26.5C16.4342 26.5 13.5236 23.5931 13.5236 20C13.5236 16.4069 16.4342 13.5 20.0236 13.5C23.2411 13.5 25.9134 15.8472 26.4261 18.9167H32.9731C32.4206 12.2433 26.8342 7 20.02 7C12.8411 7 7.02002 12.8211 7.02002 20C7.02002 27.1789 12.8411 33 20.02 33C26.8342 33 32.4206 27.7567 32.9731 21.0833H26.4225C25.9061 24.1528 23.2411 26.5 20.0236 26.5Z" fill="white"/>
  </g>
  <defs>
    <clipPath id="clip0_187_29">
      <rect width="40" height="40" fill="white"/>
    </clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/dao.js
var daoSvg = svg`<svg viewBox="0 0 60 60" fill="none">
  <g clip-path="url(#clip0_7734_50402)">
    <path
      d="M0 24.9C0 15.6485 0 11.0228 1.97053 7.56812C3.3015 5.23468 5.23468 3.3015 7.56812 1.97053C11.0228 0 15.6485 0 24.9 0H35.1C44.3514 0 48.9772 0 52.4319 1.97053C54.7653 3.3015 56.6985 5.23468 58.0295 7.56812C60 11.0228 60 15.6485 60 24.9V35.1C60 44.3514 60 48.9772 58.0295 52.4319C56.6985 54.7653 54.7653 56.6985 52.4319 58.0295C48.9772 60 44.3514 60 35.1 60H24.9C15.6485 60 11.0228 60 7.56812 58.0295C5.23468 56.6985 3.3015 54.7653 1.97053 52.4319C0 48.9772 0 44.3514 0 35.1V24.9Z"
      fill="#EB8B47"
    />
    <path
      d="M0.5 24.9C0.5 20.2652 0.50047 16.8221 0.744315 14.105C0.987552 11.3946 1.46987 9.45504 2.40484 7.81585C3.69145 5.56019 5.56019 3.69145 7.81585 2.40484C9.45504 1.46987 11.3946 0.987552 14.105 0.744315C16.8221 0.50047 20.2652 0.5 24.9 0.5H35.1C39.7348 0.5 43.1779 0.50047 45.895 0.744315C48.6054 0.987552 50.545 1.46987 52.1841 2.40484C54.4398 3.69145 56.3086 5.56019 57.5952 7.81585C58.5301 9.45504 59.0124 11.3946 59.2557 14.105C59.4995 16.8221 59.5 20.2652 59.5 24.9V35.1C59.5 39.7348 59.4995 43.1779 59.2557 45.895C59.0124 48.6054 58.5301 50.545 57.5952 52.1841C56.3086 54.4398 54.4398 56.3086 52.1841 57.5952C50.545 58.5301 48.6054 59.0124 45.895 59.2557C43.1779 59.4995 39.7348 59.5 35.1 59.5H24.9C20.2652 59.5 16.8221 59.4995 14.105 59.2557C11.3946 59.0124 9.45504 58.5301 7.81585 57.5952C5.56019 56.3086 3.69145 54.4398 2.40484 52.1841C1.46987 50.545 0.987552 48.6054 0.744315 45.895C0.50047 43.1779 0.5 39.7348 0.5 35.1V24.9Z"
      stroke="#062B2B"
      stroke-opacity="0.1"
    />
    <path
      d="M19 52C24.5228 52 29 47.5228 29 42C29 36.4772 24.5228 32 19 32C13.4772 32 9 36.4772 9 42C9 47.5228 13.4772 52 19 52Z"
      fill="#FF974C"
      stroke="white"
      stroke-width="2"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M42.8437 8.3264C42.4507 7.70891 41.5493 7.70891 41.1564 8.32641L28.978 27.4638C28.5544 28.1295 29.0326 29.0007 29.8217 29.0007H54.1783C54.9674 29.0007 55.4456 28.1295 55.022 27.4638L42.8437 8.3264Z"
      fill="white"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M42.3348 11.6456C42.659 11.7608 42.9061 12.1492 43.4005 12.926L50.7332 24.4488C51.2952 25.332 51.5763 25.7737 51.5254 26.1382C51.4915 26.3808 51.3698 26.6026 51.1833 26.7614C50.9031 27 50.3796 27 49.3327 27H34.6673C33.6204 27 33.0969 27 32.8167 26.7614C32.6302 26.6026 32.5085 26.3808 32.4746 26.1382C32.4237 25.7737 32.7048 25.332 33.2669 24.4488L40.5995 12.926C41.0939 12.1492 41.341 11.7608 41.6652 11.6456C41.8818 11.5687 42.1182 11.5687 42.3348 11.6456ZM35.0001 26.999C38.8661 26.999 42.0001 23.865 42.0001 19.999C42.0001 23.865 45.1341 26.999 49.0001 26.999H35.0001Z"
      fill="#FF974C"
    />
    <path
      d="M10.1061 9.35712C9.9973 9.67775 9.99867 10.0388 9.99978 10.3323C9.99989 10.3611 10 10.3893 10 10.4167V25.5833C10 25.6107 9.99989 25.6389 9.99978 25.6677C9.99867 25.9612 9.9973 26.3222 10.1061 26.6429C10.306 27.2317 10.7683 27.694 11.3571 27.8939C11.6777 28.0027 12.0388 28.0013 12.3323 28.0002C12.3611 28.0001 12.3893 28 12.4167 28H19C24.5228 28 29 23.5228 29 18C29 12.4772 24.5228 8 19 8H12.4167C12.3893 8 12.3611 7.99989 12.3323 7.99978C12.0388 7.99867 11.6778 7.9973 11.3571 8.10614C10.7683 8.306 10.306 8.76834 10.1061 9.35712Z"
      fill="#FF974C"
      stroke="white"
      stroke-width="2"
    />
    <circle cx="19" cy="18" r="4" fill="#EB8B47" stroke="white" stroke-width="2" />
    <circle cx="19" cy="42" r="4" fill="#EB8B47" stroke="white" stroke-width="2" />
  </g>
  <defs>
    <clipPath id="clip0_7734_50402">
      <rect width="60" height="60" fill="white" />
    </clipPath>
  </defs>
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/defi.js
var defiSvg = svg`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <path
      fill="#1DC956"
      d="M0 25.01c0-9.25 0-13.88 1.97-17.33a15 15 0 0 1 5.6-5.6C11.02.11 15.65.11 24.9.11h10.2c9.25 0 13.88 0 17.33 1.97a15 15 0 0 1 5.6 5.6C60 11.13 60 15.76 60 25v10.2c0 9.25 0 13.88-1.97 17.33a15 15 0 0 1-5.6 5.6c-3.45 1.97-8.08 1.97-17.33 1.97H24.9c-9.25 0-13.88 0-17.33-1.97a15 15 0 0 1-5.6-5.6C0 49.1 0 44.46 0 35.21v-10.2Z"
    />
    <path
      fill="#2BEE6C"
      d="M16.1 60c-3.82-.18-6.4-.64-8.53-1.86a15 15 0 0 1-5.6-5.6C.55 50.06.16 46.97.04 41.98L4.2 40.6a4 4 0 0 0 2.48-2.39l4.65-12.4a2 2 0 0 1 2.5-1.2l2.53.84a2 2 0 0 0 2.43-1l2.96-5.94a2 2 0 0 1 3.7.32l3.78 12.58a2 2 0 0 0 3.03 1.09l3.34-2.23a2 2 0 0 0 .65-.7l5.3-9.72a2 2 0 0 1 1.42-1.01l4.14-.69a2 2 0 0 1 1.6.44l3.9 3.24a2 2 0 0 0 2.7-.12l4.62-4.63c.08 2.2.08 4.8.08 7.93v10.2c0 9.25 0 13.88-1.97 17.33a15 15 0 0 1-5.6 5.6c-2.13 1.22-4.7 1.68-8.54 1.86H16.11Z"
    />
    <path
      fill="#fff"
      d="m.07 43.03-.05-2.1 3.85-1.28a3 3 0 0 0 1.86-1.79l4.66-12.4a3 3 0 0 1 3.75-1.8l2.53.84a1 1 0 0 0 1.21-.5l2.97-5.94a3 3 0 0 1 5.56.48l3.77 12.58a1 1 0 0 0 1.51.55l3.34-2.23a1 1 0 0 0 .33-.35l5.3-9.71a3 3 0 0 1 2.14-1.53l4.13-.69a3 3 0 0 1 2.41.66l3.9 3.24a1 1 0 0 0 1.34-.06l5.28-5.28c.05.85.08 1.75.1 2.73L56 22.41a3 3 0 0 1-4.04.19l-3.9-3.25a1 1 0 0 0-.8-.21l-4.13.69a1 1 0 0 0-.72.5l-5.3 9.72a3 3 0 0 1-.97 1.05l-3.34 2.23a3 3 0 0 1-4.53-1.63l-3.78-12.58a1 1 0 0 0-1.85-.16l-2.97 5.94a3 3 0 0 1-3.63 1.5l-2.53-.84a1 1 0 0 0-1.25.6l-4.65 12.4a5 5 0 0 1-3.1 3L.07 43.02Z"
    />
    <path
      fill="#fff"
      fill-rule="evenodd"
      d="M49.5 19a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z"
      clip-rule="evenodd"
    />
    <path fill="#fff" d="M45 .28v59.66l-2 .1V.19c.7.02 1.37.05 2 .1Z" />
    <path fill="#2BEE6C" d="M47.5 19a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z" />
    <path
      stroke="#fff"
      stroke-opacity=".1"
      d="M.5 25.01c0-4.63 0-8.08.24-10.8.25-2.7.73-4.64 1.66-6.28a14.5 14.5 0 0 1 5.42-5.41C9.46 1.58 11.39 1.1 14.1.85A133 133 0 0 1 24.9.61h10.2c4.63 0 8.08 0 10.8.24 2.7.25 4.65.73 6.28 1.67a14.5 14.5 0 0 1 5.42 5.4c.93 1.65 1.41 3.58 1.66 6.3.24 2.71.24 6.16.24 10.79v10.2c0 4.64 0 8.08-.24 10.8-.25 2.7-.73 4.65-1.66 6.28a14.5 14.5 0 0 1-5.42 5.42c-1.63.93-3.57 1.41-6.28 1.66-2.72.24-6.17.24-10.8.24H24.9c-4.63 0-8.08 0-10.8-.24-2.7-.25-4.64-.73-6.28-1.66a14.5 14.5 0 0 1-5.42-5.42C1.47 50.66 1 48.72.74 46.01A133 133 0 0 1 .5 35.2v-10.2Z"
    />
  </g>
  <defs>
    <clipPath id="a"><path fill="#fff" d="M0 0h60v60H0z" /></clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/defiAlt.js
var defiAltSvg = svg`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <rect width="60" height="60" fill="#C653C6" rx="30" />
    <path
      fill="#E87DE8"
      d="M57.98.01v19.5a4.09 4.09 0 0 0-2.63 2.29L50.7 34.2a2 2 0 0 1-2.5 1.2l-2.53-.84a2 2 0 0 0-2.42 1l-2.97 5.94a2 2 0 0 1-3.7-.32L32.8 28.6a2 2 0 0 0-3.02-1.09l-3.35 2.23a2 2 0 0 0-.64.7l-5.3 9.72a2 2 0 0 1-1.43 1.01l-4.13.69a2 2 0 0 1-1.61-.44l-3.9-3.24a2 2 0 0 0-2.69.12L2.1 42.93.02 43V.01h57.96Z"
    />
    <path
      fill="#fff"
      d="m61.95 16.94.05 2.1-3.85 1.28a3 3 0 0 0-1.86 1.79l-4.65 12.4a3 3 0 0 1-3.76 1.8l-2.53-.84a1 1 0 0 0-1.2.5l-2.98 5.94a3 3 0 0 1-5.55-.48l-3.78-12.58a1 1 0 0 0-1.5-.55l-3.35 2.23a1 1 0 0 0-.32.35l-5.3 9.72a3 3 0 0 1-2.14 1.52l-4.14.69a3 3 0 0 1-2.41-.66l-3.9-3.24a1 1 0 0 0-1.34.06l-5.28 5.28c-.05-.84-.08-1.75-.1-2.73l3.97-3.96a3 3 0 0 1 4.04-.19l3.89 3.25a1 1 0 0 0 .8.21l4.14-.68a1 1 0 0 0 .71-.51l5.3-9.71a3 3 0 0 1 .97-1.06l3.34-2.23a3 3 0 0 1 4.54 1.63l3.77 12.58a1 1 0 0 0 1.86.16l2.96-5.93a3 3 0 0 1 3.64-1.5l2.52.83a1 1 0 0 0 1.25-.6l4.66-12.4a5 5 0 0 1 3.1-2.99l4.43-1.48Z"
    />
    <path
      fill="#fff"
      fill-rule="evenodd"
      d="M35.5 27a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z"
      clip-rule="evenodd"
    />
    <path fill="#fff" d="M31 0v60h-2V0h2Z" />
    <path fill="#E87DE8" d="M33.5 27a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z" />
  </g>
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="29.5" />
  <defs>
    <clipPath id="a"><rect width="60" height="60" fill="#fff" rx="30" /></clipPath>
  </defs>
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/eth.js
var ethSvg = svg`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <rect width="60" height="60" fill="#987DE8" rx="30" />
    <path
      fill="#fff"
      fill-rule="evenodd"
      d="m15.48 28.37 11.97-19.3a3 3 0 0 1 5.1 0l11.97 19.3a6 6 0 0 1 .9 3.14v.03a6 6 0 0 1-1.16 3.56L33.23 50.2a4 4 0 0 1-6.46 0L15.73 35.1a6 6 0 0 1-1.15-3.54v-.03a6 6 0 0 1 .9-3.16Z"
      clip-rule="evenodd"
    />
    <path
      fill="#643CDD"
      d="M30.84 10.11a1 1 0 0 0-.84-.46V24.5l12.6 5.53a2 2 0 0 0-.28-1.4L30.84 10.11Z"
    />
    <path
      fill="#BDADEB"
      d="M30 9.65a1 1 0 0 0-.85.46L17.66 28.64a2 2 0 0 0-.26 1.39L30 24.5V9.65Z"
    />
    <path
      fill="#643CDD"
      d="M30 50.54a1 1 0 0 0 .8-.4l11.24-15.38c.3-.44-.2-1-.66-.73l-9.89 5.68a3 3 0 0 1-1.5.4v10.43Z"
    />
    <path
      fill="#BDADEB"
      d="m17.97 34.76 11.22 15.37c.2.28.5.41.8.41V40.11a3 3 0 0 1-1.49-.4l-9.88-5.68c-.47-.27-.97.3-.65.73Z"
    />
    <path
      fill="#401AB3"
      d="M42.6 30.03 30 24.5v13.14a3 3 0 0 0 1.5-.4l10.14-5.83a2 2 0 0 0 .95-1.38Z"
    />
    <path
      fill="#7C5AE2"
      d="M30 37.64V24.46l-12.6 5.57a2 2 0 0 0 .97 1.39l10.13 5.82a3 3 0 0 0 1.5.4Z"
    />
  </g>
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="29.5" />
  <defs>
    <clipPath id="a"><rect width="60" height="60" fill="#fff" rx="30" /></clipPath>
  </defs>
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/google.js
var googleSvg2 = svg`<svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect width="64" height="64" rx="30" fill="#1DC956"/>
  <rect x="0.5" y="0.5" width="63" height="63" rx="29.5" stroke="#141414" stroke-opacity="0.1"/>
  <path d="M32.4053 19.8031C35.3901 19.8031 38.0431 20.8349 40.1619 22.8247L45.9656 17.0211C42.4465 13.7416 37.8773 11.7333 32.4053 11.7333C24.4829 11.7333 17.6475 16.2841 14.3127 22.9168L21.056 28.1493C22.6589 23.359 27.136 19.8031 32.4053 19.8031Z" fill="#1DC956" stroke="white" stroke-width="2" stroke-linejoin="round"/>
  <path d="M32.4053 52.2667C37.8773 52.2667 42.465 50.4611 45.8182 47.3658L39.2407 42.2623C37.4351 43.4783 35.1321 44.2153 32.4053 44.2153C27.136 44.2153 22.6589 40.6594 21.056 35.8691L14.3127 41.1016C17.6475 47.7159 24.4829 52.2667 32.4053 52.2667Z" fill="#2BEE6C"/>
  <path d="M21.056 35.8507L19.5636 36.993L14.3127 41.0832M39.2407 42.2623L45.8182 47.3658C42.465 50.4611 37.8773 52.2667 32.4053 52.2667C24.4829 52.2667 17.6475 47.7159 14.3127 41.1016L21.056 35.8691C22.6589 40.6594 27.136 44.2153 32.4053 44.2153C35.1321 44.2153 37.4351 43.4783 39.2407 42.2623Z" stroke="white" stroke-width="2" stroke-linejoin="round"/>
  <path d="M51.8613 32.4606C51.8613 31.0235 51.7323 29.6417 51.4928 28.3151H32.4053V36.1638H43.3124C42.8334 38.688 41.3963 40.8252 39.2407 42.2623L45.8181 47.3658C49.6503 43.8283 51.8613 38.6327 51.8613 32.4606Z" fill="#1FAD7E" stroke="white" stroke-width="2" stroke-linejoin="round"/>
  <path d="M21.056 35.8507C20.6507 34.6347 20.4111 33.345 20.4111 32C20.4111 30.655 20.6507 29.3653 21.056 28.1493L14.3127 22.9169C12.9309 25.6437 12.1387 28.7205 12.1387 32C12.1387 35.2795 12.9309 38.3564 14.3127 41.0831L19.5636 36.993L21.056 35.8507Z" fill="#86F999"/>
  <path d="M21.056 35.8691L14.3127 41.1016M21.056 35.8507C20.6507 34.6347 20.4111 33.345 20.4111 32C20.4111 30.655 20.6507 29.3653 21.056 28.1493L14.3127 22.9169C12.9309 25.6437 12.1387 28.7205 12.1387 32C12.1387 35.2795 12.9309 38.3564 14.3127 41.0831L19.5636 36.993L21.056 35.8507Z" stroke="white" stroke-width="2" stroke-linejoin="round"/>
</svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/layers.js
var layersSvg = svg`<svg fill="none" viewBox="0 0 60 60">
  <rect width="60" height="60" fill="#1DC956" rx="3" />
  <path
    fill="#1FAD7E"
    stroke="#fff"
    stroke-width="2"
    d="m30.49 29.13-.49-.27-.49.27-12.77 7.1-.05.02c-.86.48-1.58.88-2.1 1.24-.54.37-1.04.81-1.28 1.45a3 3 0 0 0 0 2.12c.24.63.74 1.08 1.27 1.45.53.36 1.25.76 2.11 1.24l.05.03 6.33 3.51.17.1c2.33 1.3 3.72 2.06 5.22 2.32a9 9 0 0 0 3.08 0c1.5-.26 2.9-1.03 5.22-2.32l.18-.1 6.32-3.51.05-.03a26.9 26.9 0 0 0 2.1-1.24 3.21 3.21 0 0 0 1.28-1.45l-.94-.35.94.35a3 3 0 0 0 0-2.12l-.94.35.94-.35a3.21 3.21 0 0 0-1.27-1.45c-.53-.36-1.25-.76-2.11-1.24l-.05-.03-12.77-7.1Z"
  />
  <path
    fill="#2BEE6C"
    stroke="#fff"
    stroke-width="2"
    d="m30.49 19.13-.49-.27-.49.27-12.77 7.1-.05.02c-.86.48-1.58.88-2.1 1.24-.54.37-1.04.81-1.28 1.45a3 3 0 0 0 0 2.12c.24.63.74 1.08 1.27 1.45.53.36 1.25.76 2.11 1.24l.05.03 6.33 3.51.17.1c2.33 1.3 3.72 2.06 5.22 2.32a9 9 0 0 0 3.08 0c1.5-.26 2.9-1.03 5.22-2.32l.18-.1 6.32-3.51.05-.03a26.9 26.9 0 0 0 2.1-1.24 3.21 3.21 0 0 0 1.28-1.45l-.94-.35.94.35a3 3 0 0 0 0-2.12l-.94.35.94-.35a3.21 3.21 0 0 0-1.27-1.45c-.53-.36-1.25-.76-2.11-1.24l-.05-.03-12.77-7.1Z"
  />
  <path
    fill="#86F999"
    stroke="#fff"
    stroke-width="2"
    d="m46.69 21.06-.94-.35.94.35a3 3 0 0 0 0-2.12l-.94.35.94-.35a3.21 3.21 0 0 0-1.27-1.45c-.53-.36-1.25-.76-2.11-1.24l-.05-.03-6.32-3.51-.18-.1c-2.33-1.3-3.72-2.06-5.22-2.33a9 9 0 0 0-3.08 0c-1.5.27-2.9 1.04-5.22 2.33l-.17.1-6.33 3.51-.05.03c-.86.48-1.58.88-2.1 1.24-.54.37-1.04.81-1.28 1.45a3 3 0 0 0 0 2.12c.24.63.74 1.08 1.27 1.45.53.36 1.25.76 2.11 1.24l.05.03 6.33 3.51.17.1c2.33 1.3 3.72 2.06 5.22 2.32a9 9 0 0 0 3.08 0c1.5-.26 2.9-1.03 5.22-2.32l.18-.1 6.32-3.51.05-.03a26.9 26.9 0 0 0 2.1-1.24 3.21 3.21 0 0 0 1.28-1.45Z"
  />
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="2.5" />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/lightbulb.js
var lightbulbSvg2 = svg`<svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
  <g clip-path="url(#clip0_241_31636)">
    <path d="M0 26.5595C0 16.6913 0 11.7572 2.1019 8.07217C3.5216 5.58318 5.58366 3.52111 8.07266 2.10141C11.7577 -0.000488281 16.6918 -0.000488281 26.56 -0.000488281H37.44C47.3082 -0.000488281 52.2423 -0.000488281 55.9273 2.10141C58.4163 3.52111 60.4784 5.58318 61.8981 8.07217C64 11.7572 64 16.6913 64 26.5595V37.4395C64 47.3077 64 52.2418 61.8981 55.9269C60.4784 58.4159 58.4163 60.4779 55.9273 61.8976C52.2423 63.9995 47.3082 63.9995 37.44 63.9995H26.56C16.6918 63.9995 11.7577 63.9995 8.07266 61.8976C5.58366 60.4779 3.5216 58.4159 2.1019 55.9269C0 52.2418 0 47.3077 0 37.4395V26.5595Z" fill="#794CFF"/>
    <path d="M0.5 26.5595C0.5 21.6163 0.50047 17.942 0.760736 15.0418C1.02039 12.1485 1.53555 10.0742 2.53621 8.3199C3.91155 5.90869 5.90917 3.91106 8.32039 2.53572C10.0747 1.53506 12.1489 1.01991 15.0423 0.760247C17.9425 0.499981 21.6168 0.499512 26.56 0.499512H37.44C42.3832 0.499512 46.0575 0.499981 48.9577 0.760247C51.8511 1.01991 53.9253 1.53506 55.6796 2.53572C58.0908 3.91106 60.0885 5.90869 61.4638 8.3199C62.4645 10.0742 62.9796 12.1485 63.2393 15.0418C63.4995 17.942 63.5 21.6163 63.5 26.5595V37.4395C63.5 42.3827 63.4995 46.057 63.2393 48.9572C62.9796 51.8506 62.4645 53.9248 61.4638 55.6791C60.0885 58.0903 58.0908 60.088 55.6796 61.4633C53.9253 62.464 51.8511 62.9791 48.9577 63.2388C46.0575 63.499 42.3832 63.4995 37.44 63.4995H26.56C21.6168 63.4995 17.9425 63.499 15.0423 63.2388C12.1489 62.9791 10.0747 62.464 8.32039 61.4633C5.90917 60.088 3.91155 58.0903 2.53621 55.6791C1.53555 53.9248 1.02039 51.8506 0.760736 48.9572C0.50047 46.057 0.5 42.3827 0.5 37.4395V26.5595Z" stroke="#141414" stroke-opacity="0.1"/>
    <path d="M40 39.4595C44.7824 36.693 48 31.5222 48 25.6C48 16.7634 40.8366 9.59998 32 9.59998C23.1634 9.59998 16 16.7634 16 25.6C16 31.5222 19.2176 36.693 24 39.4595V45.8144H40V39.4595Z" fill="#906EF7"/>
    <path d="M24 49.9689C24 51.8192 24 52.7444 24.3941 53.4353C24.6603 53.902 25.0469 54.2886 25.5136 54.5548C26.2046 54.9489 27.1297 54.9489 28.98 54.9489H35.02C36.8703 54.9489 37.7954 54.9489 38.4864 54.5548C38.9531 54.2886 39.3397 53.902 39.6059 53.4353C40 52.7444 40 51.8192 40 49.9689V45.8144H24V49.9689Z" fill="#906EF7"/>
    <path d="M24 45.8144V39.4595C19.2176 36.693 16 31.5222 16 25.6C16 16.7634 23.1634 9.59998 32 9.59998C40.8366 9.59998 48 16.7634 48 25.6C48 31.5222 44.7824 36.693 40 39.4595V45.8144M24 45.8144H40M24 45.8144V49.9689C24 51.8192 24 52.7444 24.3941 53.4353C24.6603 53.902 25.0469 54.2886 25.5136 54.5548C26.2046 54.9489 27.1297 54.9489 28.98 54.9489H35.02C36.8703 54.9489 37.7954 54.9489 38.4864 54.5548C38.9531 54.2886 39.3397 53.902 39.6059 53.4353C40 52.7444 40 51.8192 40 49.9689V45.8144" stroke="white" stroke-width="2" stroke-linejoin="round"/>
    <path d="M24 49.9689C24 51.8192 24 52.7444 24.3941 53.4353C24.6603 53.902 25.0469 54.2886 25.5136 54.5548C26.2046 54.9489 27.1297 54.9489 28.98 54.9489H35.02C36.8703 54.9489 37.7954 54.9489 38.4864 54.5548C38.9531 54.2886 39.3397 53.902 39.6059 53.4353C40 52.7444 40 51.8192 40 49.9689V45.8144H24V49.9689Z" fill="#643CDD" stroke="white" stroke-width="2" stroke-linejoin="round"/>
    <path d="M29.6735 26.9101V29.1109H34.0753V26.9101C34.0753 25.6945 35.0607 24.7092 36.2762 24.7092C37.4917 24.7092 38.4771 25.6945 38.4771 26.9101C38.4771 28.1256 37.4917 29.1109 36.2762 29.1109H34.0753H29.6735H27.4726C26.2571 29.1109 25.2717 28.1256 25.2717 26.9101C25.2717 25.6945 26.2571 24.7092 27.4726 24.7092C28.6881 24.7092 29.6735 25.6945 29.6735 26.9101Z" fill="#906EF7"/>
    <path d="M29.6735 45.3183V26.9101C29.6735 25.6945 28.6881 24.7092 27.4726 24.7092V24.7092C26.2571 24.7092 25.2717 25.6945 25.2717 26.9101V26.9101C25.2717 28.1256 26.2571 29.1109 27.4726 29.1109H36.2762C37.4917 29.1109 38.4771 28.1256 38.4771 26.9101V26.9101C38.4771 25.6945 37.4917 24.7092 36.2762 24.7092V24.7092C35.0607 24.7092 34.0753 25.6945 34.0753 26.9101V45.3183" stroke="white" stroke-width="2" stroke-linejoin="round"/>
  </g>
  <defs>
    <clipPath id="clip0_241_31636">
      <rect width="64" height="64" fill="white"/>
    </clipPath>
  </defs>
</svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/lock.js
var lockSvg = svg`<svg fill="none" viewBox="0 0 60 60">
  <rect width="60" height="60" fill="#C653C6" rx="3" />
  <path
    fill="#fff"
    d="M20.03 15.22C20 15.6 20 16.07 20 17v2.8c0 1.14 0 1.7-.2 2.12-.15.31-.3.5-.58.71-.37.28-1.06.42-2.43.7-.59.12-1.11.29-1.6.51a9 9 0 0 0-4.35 4.36C10 30 10 32.34 10 37c0 4.66 0 7 .84 8.8a9 9 0 0 0 4.36 4.36C17 51 19.34 51 24 51h12c4.66 0 7 0 8.8-.84a9 9 0 0 0 4.36-4.36C50 44 50 41.66 50 37c0-4.66 0-7-.84-8.8a9 9 0 0 0-4.36-4.36c-.48-.22-1-.39-1.6-.5-1.36-.29-2.05-.43-2.42-.7-.27-.22-.43-.4-.58-.72-.2-.42-.2-.98-.2-2.11V17c0-.93 0-1.4-.03-1.78a9 9 0 0 0-8.19-8.19C31.4 7 30.93 7 30 7s-1.4 0-1.78.03a9 9 0 0 0-8.19 8.19Z"
  />
  <path
    fill="#E87DE8"
    d="M22 17c0-.93 0-1.4.04-1.78a7 7 0 0 1 6.18-6.18C28.6 9 29.07 9 30 9s1.4 0 1.78.04a7 7 0 0 1 6.18 6.18c.04.39.04.85.04 1.78v4.5a1.5 1.5 0 0 1-3 0V17c0-.93 0-1.4-.08-1.78a4 4 0 0 0-3.14-3.14C31.39 12 30.93 12 30 12s-1.4 0-1.78.08a4 4 0 0 0-3.14 3.14c-.08.39-.08.85-.08 1.78v4.5a1.5 1.5 0 0 1-3 0V17Z"
  />
  <path
    fill="#E87DE8"
    fill-rule="evenodd"
    d="M12 36.62c0-4.32 0-6.48.92-8.09a7 7 0 0 1 2.61-2.61C17.14 25 19.3 25 23.62 25h6.86c.46 0 .7 0 .9.02 2.73.22 4.37 2.43 4.62 4.98.27-2.7 2.11-5 5.02-5A6.98 6.98 0 0 1 48 31.98v5.4c0 4.32 0 6.48-.92 8.09a7 7 0 0 1-2.61 2.61c-1.61.92-3.77.92-8.09.92h-5.86c-.46 0-.7 0-.9-.02-2.73-.22-4.37-2.43-4.62-4.98-.26 2.58-1.94 4.82-4.71 4.99l-.7.01c-.55 0-.82 0-1.05-.02a7 7 0 0 1-6.52-6.52c-.02-.23-.02-.5-.02-1.05v-4.79Zm21.24-.27a4 4 0 1 0-6.48 0 31.28 31.28 0 0 1 1.57 2.23c.17.4.17.81.17 1.24V42.5a1.5 1.5 0 0 0 3 0V39.82c0-.43 0-.85.17-1.24.09-.2.58-.87 1.57-2.23Z"
    clip-rule="evenodd"
  />
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="2.5" />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/login.js
var loginSvg = svg`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <path
      fill="#EB8B47"
      d="M0 24.9c0-9.25 0-13.88 1.97-17.33a15 15 0 0 1 5.6-5.6C11.02 0 15.65 0 24.9 0h10.2c9.25 0 13.88 0 17.33 1.97a15 15 0 0 1 5.6 5.6C60 11.02 60 15.65 60 24.9v10.2c0 9.25 0 13.88-1.97 17.33a15 15 0 0 1-5.6 5.6C48.98 60 44.35 60 35.1 60H24.9c-9.25 0-13.88 0-17.33-1.97a15 15 0 0 1-5.6-5.6C0 48.98 0 44.35 0 35.1V24.9Z"
    />
    <path
      stroke="#062B2B"
      stroke-opacity=".1"
      d="M.5 24.9c0-4.64 0-8.08.24-10.8.25-2.7.73-4.65 1.66-6.28A14.5 14.5 0 0 1 7.82 2.4C9.46 1.47 11.39 1 14.1.74A133 133 0 0 1 24.9.5h10.2c4.63 0 8.08 0 10.8.24 2.7.25 4.65.73 6.28 1.66a14.5 14.5 0 0 1 5.42 5.42c.93 1.63 1.41 3.57 1.66 6.28.24 2.72.24 6.16.24 10.8v10.2c0 4.63 0 8.08-.24 10.8-.25 2.7-.73 4.64-1.66 6.28a14.5 14.5 0 0 1-5.42 5.41c-1.63.94-3.57 1.42-6.28 1.67-2.72.24-6.17.24-10.8.24H24.9c-4.63 0-8.08 0-10.8-.24-2.7-.25-4.64-.73-6.28-1.67a14.5 14.5 0 0 1-5.42-5.4C1.47 50.53 1 48.6.74 45.88A133 133 0 0 1 .5 35.1V24.9Z"
    />
    <path
      fill="#FF974C"
      stroke="#fff"
      stroke-width="2"
      d="M39.2 29.2a13 13 0 1 0-18.4 0l1.3 1.28a12.82 12.82 0 0 1 2.1 2.39 6 6 0 0 1 .6 1.47c.2.76.2 1.56.2 3.17v11.24c0 1.08 0 1.61.13 2.12a4 4 0 0 0 .41.98c.26.45.64.83 1.4 1.6l.3.29c.65.65.98.98 1.36 1.09.26.07.54.07.8 0 .38-.11.7-.44 1.36-1.1l3.48-3.47c.65-.65.98-.98 1.09-1.36a1.5 1.5 0 0 0 0-.8c-.1-.38-.44-.7-1.1-1.36l-.47-.48c-.65-.65-.98-.98-1.09-1.36a1.5 1.5 0 0 1 0-.8c.1-.38.44-.7 1.1-1.36l.47-.48c.65-.65.98-.98 1.09-1.36a1.5 1.5 0 0 0 0-.8c-.1-.38-.44-.7-1.1-1.36l-.48-.5c-.65-.64-.98-.97-1.08-1.35a1.5 1.5 0 0 1 0-.79c.1-.38.42-.7 1.06-1.36l5.46-5.55Z"
    />
    <circle cx="30" cy="17" r="4" fill="#EB8B47" stroke="#fff" stroke-width="2" />
  </g>
  <defs>
    <clipPath id="a"><path fill="#fff" d="M0 0h60v60H0z" /></clipPath>
  </defs>
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/meld.js
var meldSvg = svg`<svg width="40" height="42" viewBox="0 0 40 42" fill="none">
<path opacity="0.7" d="M19.9526 41.9076L7.3877 34.655V26.1226L19.9526 33.3751V41.9076Z" fill="url(#paint0_linear_2113_32117)"/>
<path opacity="0.7" d="M19.9521 41.9076L32.5171 34.655V26.1226L19.9521 33.3751V41.9076Z" fill="url(#paint1_linear_2113_32117)"/>
<path opacity="0.7" d="M39.9095 7.34521V21.8562L32.5166 26.1225V11.6114L39.9095 7.34521Z" fill="url(#paint2_linear_2113_32117)"/>
<path d="M39.9099 7.34536L27.345 0.0927734L19.9521 4.359L32.5171 11.6116L39.9099 7.34536Z" fill="url(#paint3_linear_2113_32117)"/>
<path d="M0 7.34536L12.5649 0.0927734L19.9519 4.359L7.387 11.6116L0 7.34536Z" fill="#F969D3"/>
<path opacity="0.7" d="M0 7.34521V21.8562L7.387 26.1225V11.6114L0 7.34521Z" fill="url(#paint4_linear_2113_32117)"/>
<defs>
<linearGradient id="paint0_linear_2113_32117" x1="18.6099" y1="41.8335" x2="7.73529" y2="8.31842" gradientUnits="userSpaceOnUse">
<stop stop-color="#E98ADA"/>
<stop offset="1" stop-color="#7E4DBD"/>
</linearGradient>
<linearGradient id="paint1_linear_2113_32117" x1="26.2346" y1="26.1226" x2="26.2346" y2="41.9076" gradientUnits="userSpaceOnUse">
<stop stop-color="#719DED"/>
<stop offset="1" stop-color="#2545BE"/>
</linearGradient>
<linearGradient id="paint2_linear_2113_32117" x1="36.213" y1="7.34521" x2="36.213" y2="26.1225" gradientUnits="userSpaceOnUse">
<stop stop-color="#93EBFF"/>
<stop offset="1" stop-color="#197DDB"/>
</linearGradient>
<linearGradient id="paint3_linear_2113_32117" x1="29.931" y1="0.0927734" x2="38.2156" y2="14.8448" gradientUnits="userSpaceOnUse">
<stop stop-color="#F969D3"/>
<stop offset="1" stop-color="#4F51C0"/>
</linearGradient>
<linearGradient id="paint4_linear_2113_32117" x1="18.1251" y1="44.2539" x2="-7.06792" y2="15.2763" gradientUnits="userSpaceOnUse">
<stop stop-color="#E98ADA"/>
<stop offset="1" stop-color="#7E4DBD"/>
</linearGradient>
</defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/moonpay.js
var moonpaySvg = svg`
  <svg width="40" height="40" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#a)">
      <path
        d="M0 16.6c0-6.168 0-9.251 1.314-11.555a10 10 0 0 1 3.731-3.731C7.35 0 10.432 0 16.6 0h6.8c6.168 0 9.252 0 11.555 1.314a10 10 0 0 1 3.731 3.731C40 7.35 40 10.432 40 16.6v6.8c0 6.168 0 9.252-1.314 11.555a10 10 0 0 1-3.731 3.731C32.652 40 29.568 40 23.4 40h-6.8c-6.168 0-9.251 0-11.555-1.314a10 10 0 0 1-3.731-3.731C0 32.652 0 29.568 0 23.4v-6.8Z"
        fill="#7D00FF"
      />
      <path
        d="M.5 16.6c0-3.093 0-5.38.162-7.182.161-1.795.48-3.061 1.086-4.125a9.5 9.5 0 0 1 3.545-3.545C6.357 1.141 7.623.823 9.418.662 11.221.5 13.508.5 16.6.5h6.8c3.093 0 5.38 0 7.182.162 1.795.161 3.062.48 4.125 1.086a9.5 9.5 0 0 1 3.545 3.545c.607 1.064.925 2.33 1.086 4.125.161 1.803.162 4.09.162 7.182v6.8c0 3.093 0 5.38-.162 7.182-.161 1.795-.48 3.062-1.086 4.125a9.5 9.5 0 0 1-3.545 3.545c-1.063.607-2.33.925-4.125 1.086-1.803.161-4.09.162-7.182.162h-6.8c-3.093 0-5.38 0-7.182-.162-1.795-.161-3.061-.48-4.125-1.086a9.5 9.5 0 0 1-3.545-3.545c-.607-1.063-.925-2.33-1.086-4.125C.5 28.779.5 26.492.5 23.4v-6.8Z"
        stroke="#fff"
        stroke-opacity=".05"
      />
      <path
        d="M28.306 15.381a3.69 3.69 0 1 0 0-7.381 3.69 3.69 0 0 0 0 7.381ZM16.987 32a8.991 8.991 0 1 1 .016-17.983A8.991 8.991 0 0 1 16.988 32Z"
        fill="#fff"
      />
    </g>
    <defs>
      <clipPath id="a"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    </defs>
  </svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/network.js
var networkSvg = svg`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <rect width="60" height="60" fill="#00ACE6" rx="30" />
    <circle cx="64" cy="39" r="50" fill="#1AC6FF" stroke="#fff" stroke-width="2" />
    <circle cx="78" cy="30" r="50" fill="#4DD2FF" stroke="#fff" stroke-width="2" />
    <circle cx="72" cy="15" r="35" fill="#80DFFF" stroke="#fff" stroke-width="2" />
    <circle cx="34" cy="-17" r="45" stroke="#fff" stroke-width="2" />
    <circle cx="34" cy="-5" r="50" stroke="#fff" stroke-width="2" />
    <circle cx="30" cy="45" r="4" fill="#4DD2FF" stroke="#fff" stroke-width="2" />
    <circle cx="39.5" cy="27.5" r="4" fill="#80DFFF" stroke="#fff" stroke-width="2" />
    <circle cx="16" cy="24" r="4" fill="#19C6FF" stroke="#fff" stroke-width="2" />
  </g>
  <rect width="59" height="59" x=".5" y=".5" stroke="#062B2B" stroke-opacity=".1" rx="29.5" />
  <defs>
    <clipPath id="a"><rect width="60" height="60" fill="#fff" rx="30" /></clipPath>
  </defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/nft.js
var nftSvg = svg`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <rect width="60" height="60" fill="#C653C6" rx="3" />
    <path
      fill="#E87DE8"
      stroke="#fff"
      stroke-width="2"
      d="M52.1 47.34c0-4.24-1.44-9.55-5.9-12.4a2.86 2.86 0 0 0-1.6-3.89v-.82c0-1.19-.52-2.26-1.35-3a4.74 4.74 0 0 0-2.4-6.26v-5.5a11.31 11.31 0 1 0-22.63 0v2.15a3.34 3.34 0 0 0-1.18 5.05 4.74 4.74 0 0 0-.68 6.44A5.22 5.22 0 0 0 14 35.92c-3.06 4.13-6.1 8.3-6.1 15.64 0 2.67.37 4.86.74 6.39a20.3 20.3 0 0 0 .73 2.39l.02.04v.01l.92-.39-.92.4.26.6h38.26l.3-.49-.87-.51.86.5.02-.01.03-.07a16.32 16.32 0 0 0 .57-1.05c.36-.72.85-1.74 1.33-2.96a25.51 25.51 0 0 0 1.94-9.07Z"
    />
    <path
      fill="#fff"
      fill-rule="evenodd"
      d="M26.5 29.5c-3-.5-5.5-3-5.5-7v-7c0-.47 0-.7.03-.9a3 3 0 0 1 2.58-2.57c.2-.03.42-.03.89-.03 2 0 2.5-2.5 2.5-2.5s0 2.5 2.5 2.5c1.4 0 2.1 0 2.65.23a3 3 0 0 1 1.62 1.62c.23.55.23 1.25.23 2.65v6c0 4-3 7-6.5 7 1.35.23 4 0 6.5-2v9.53C34 38.5 31.5 40 28 40s-6-1.5-6-2.97L24 34l2.5 1.5v-6ZM26 47h4.5c2.5 0 3 4 3 5.5h-3l-1-1.5H26v-4Zm-6.25 5.5H24V57h-8c0-1 1-4.5 3.75-4.5Z"
      clip-rule="evenodd"
    />
  </g>
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="2.5" />
  <defs>
    <clipPath id="a"><rect width="60" height="60" fill="#fff" rx="3" /></clipPath>
  </defs>
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/noun.js
var nounSvg = svg`<svg fill="none" viewBox="0 0 60 60">
  <rect width="60" height="60" fill="#794CFF" rx="3" />
  <path
    fill="#987DE8"
    stroke="#fff"
    stroke-width="2"
    d="M33 22.5v-1H16v5H8.5V36H13v-5h3v7.5h17V31h1v7.5h17v-17H34v5h-1v-4Z"
  />
  <path fill="#fff" d="M37.5 25h10v10h-10z" />
  <path fill="#4019B2" d="M42.5 25h5v10h-5z" />
  <path fill="#fff" d="M19.5 25h10v10h-10z" />
  <path fill="#4019B2" d="M24.5 25h5v10h-5z" />
  <path fill="#fff" d="M12 30.5h4V37h-4v-6.5Z" />
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="2.5" />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/onramp-card.js
var onrampCardSvg = svg`<svg width="60" height="60" viewBox="0 0 60 60" fill="none">
<g clip-path="url(#clip0_13859_31161)">
  <path d="M0 24.8995C0 15.6481 0 11.0223 1.97053 7.56763C3.3015 5.2342 5.23468 3.30101 7.56812 1.97004C11.0228 -0.000488281 15.6485 -0.000488281 24.9 -0.000488281H35.1C44.3514 -0.000488281 48.9772 -0.000488281 52.4319 1.97004C54.7653 3.30101 56.6985 5.2342 58.0295 7.56763C60 11.0223 60 15.6481 60 24.8995V35.0995C60 44.351 60 48.9767 58.0295 52.4314C56.6985 54.7648 54.7653 56.698 52.4319 58.029C48.9772 59.9995 44.3514 59.9995 35.1 59.9995H24.9C15.6485 59.9995 11.0228 59.9995 7.56812 58.029C5.23468 56.698 3.3015 54.7648 1.97053 52.4314C0 48.9767 0 44.351 0 35.0995V24.8995Z" fill="#EB8B47"/>
  <path d="M0.5 24.8995C0.5 20.2647 0.50047 16.8216 0.744315 14.1045C0.987552 11.3941 1.46987 9.45455 2.40484 7.81536C3.69145 5.55971 5.56019 3.69096 7.81585 2.40435C9.45504 1.46938 11.3946 0.987064 14.105 0.743826C16.8221 0.499981 20.2652 0.499512 24.9 0.499512H35.1C39.7348 0.499512 43.1779 0.499981 45.895 0.743826C48.6054 0.987064 50.545 1.46938 52.1841 2.40435C54.4398 3.69096 56.3086 5.55971 57.5952 7.81536C58.5301 9.45455 59.0124 11.3941 59.2557 14.1045C59.4995 16.8216 59.5 20.2647 59.5 24.8995V35.0995C59.5 39.7343 59.4995 43.1774 59.2557 45.8945C59.0124 48.6049 58.5301 50.5445 57.5952 52.1837C56.3086 54.4393 54.4398 56.3081 52.1841 57.5947C50.545 58.5296 48.6054 59.012 45.895 59.2552C43.1779 59.499 39.7348 59.4995 35.1 59.4995H24.9C20.2652 59.4995 16.8221 59.499 14.105 59.2552C11.3946 59.012 9.45504 58.5296 7.81585 57.5947C5.56019 56.3081 3.69145 54.4393 2.40484 52.1837C1.46987 50.5445 0.987552 48.6049 0.744315 45.8945C0.50047 43.1774 0.5 39.7343 0.5 35.0995V24.8995Z" stroke="#141414" stroke-opacity="0.1"/>
  <path d="M13 26.0335C13 21.7838 13 19.659 14.0822 18.1694C14.4318 17.6883 14.8548 17.2653 15.3359 16.9157C16.8255 15.8335 18.9503 15.8335 23.2 15.8335H36.8C41.0497 15.8335 43.1745 15.8335 44.6641 16.9157C45.1452 17.2653 45.5682 17.6883 45.9178 18.1694C47 19.659 47 21.7838 47 26.0335V33.9668C47 38.2165 47 40.3414 45.9178 41.831C45.5682 42.312 45.1452 42.7351 44.6641 43.0846C43.1745 44.1668 41.0497 44.1668 36.8 44.1668H23.2C18.9503 44.1668 16.8255 44.1668 15.3359 43.0846C14.8548 42.7351 14.4318 42.312 14.0822 41.831C13 40.3414 13 38.2165 13 33.9668V26.0335Z" fill="#FF974C" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  <path d="M39.5 36.667H36.6666" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/>
  <path d="M45.2 23.0645H14.8C14.0501 23.0645 13.6751 23.0645 13.4122 23.2554C13.3273 23.3171 13.2527 23.3918 13.191 23.4767C13 23.7395 13 24.1145 13 24.8645V27.2645C13 28.0144 13 28.3894 13.191 28.6522C13.2527 28.7371 13.3273 28.8118 13.4122 28.8735C13.6751 29.0645 14.0501 29.0645 14.8 29.0645H45.2C45.9499 29.0645 46.3249 29.0645 46.5878 28.8735C46.6727 28.8118 46.7473 28.7371 46.809 28.6522C47 28.3894 47 28.0144 47 27.2645V24.8645C47 24.1145 47 23.7395 46.809 23.4767C46.7473 23.3918 46.6727 23.3171 46.5878 23.2554C46.3249 23.0645 45.9499 23.0645 45.2 23.0645Z" fill="white" fill-opacity="0.4" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</g>
<defs>
  <clipPath id="clip0_13859_31161">
    <rect width="60" height="60" fill="white"/>
  </clipPath>
</defs>
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/paypal.js
var paypalSvg = svg`
  <svg width="40" height="40" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#a)">
      <path
        d="M0 16.6c0-6.168 0-9.251 1.314-11.555a10 10 0 0 1 3.731-3.731C7.35 0 10.432 0 16.6 0h6.8c6.168 0 9.252 0 11.555 1.314a10 10 0 0 1 3.731 3.731C40 7.35 40 10.432 40 16.6v6.8c0 6.168 0 9.252-1.314 11.555a10 10 0 0 1-3.731 3.731C32.652 40 29.568 40 23.4 40h-6.8c-6.168 0-9.251 0-11.555-1.314a10 10 0 0 1-3.731-3.731C0 32.652 0 29.568 0 23.4v-6.8Z"
        fill="#fff"
      />
      <path
        d="M.5 16.6c0-3.093 0-5.38.162-7.182.161-1.795.48-3.061 1.086-4.125a9.5 9.5 0 0 1 3.545-3.545C6.357 1.141 7.623.823 9.418.662 11.221.5 13.508.5 16.6.5h6.8c3.093 0 5.38 0 7.182.162 1.795.161 3.062.48 4.125 1.086a9.5 9.5 0 0 1 3.545 3.545c.607 1.064.925 2.33 1.086 4.125.161 1.803.162 4.09.162 7.182v6.8c0 3.093 0 5.38-.162 7.182-.161 1.795-.48 3.062-1.086 4.125a9.5 9.5 0 0 1-3.545 3.545c-1.063.607-2.33.925-4.125 1.086-1.803.161-4.09.162-7.182.162h-6.8c-3.093 0-5.38 0-7.182-.162-1.795-.161-3.061-.48-4.125-1.086a9.5 9.5 0 0 1-3.545-3.545c-.607-1.063-.925-2.33-1.086-4.125C.5 28.779.5 26.492.5 23.4v-6.8Z"
        stroke="#fff"
        stroke-opacity=".05"
      />
      <path
        d="M18.606 12.642a.781.781 0 0 0-.771.66l-1.281 8.125a.78.78 0 0 1 .77-.66h3.755a7.668 7.668 0 0 0 7.57-6.49 6.26 6.26 0 0 0 .075-.843c-.96-.504-2.089-.792-3.325-.792h-6.793Z"
        fill="#001C64"
      />
      <path
        d="M28.724 13.434c-.006.282-.03.564-.075.843a7.668 7.668 0 0 1-7.57 6.491h-3.754a.78.78 0 0 0-.771.66l-1.916 12.15a.634.634 0 0 0 .626.734h4.075a.781.781 0 0 0 .77-.66l1.074-6.807a.781.781 0 0 1 .772-.66h2.4a7.668 7.668 0 0 0 7.57-6.491c.415-2.651-.92-5.064-3.201-6.26Z"
        fill="#0070E0"
      />
      <path
        d="M13.977 7.226a.78.78 0 0 0-.771.658l-3.198 20.277a.634.634 0 0 0 .626.733h4.742l1.178-7.467 1.281-8.125a.782.782 0 0 1 .771-.66H25.4c1.237 0 2.364.289 3.325.792.065-3.4-2.74-6.208-6.599-6.208h-8.148Z"
        fill="#003087"
      />
    </g>
    <defs>
      <clipPath id="a"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    </defs>
  </svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/pencil.js
var pencilSvg = svg`<svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
  <g clip-path="url(#clip0_241_31635)">
    <path d="M0 26.5595C0 16.6913 0 11.7572 2.1019 8.07217C3.5216 5.58317 5.58366 3.52111 8.07266 2.10141C11.7577 -0.000488281 16.6918 -0.000488281 26.56 -0.000488281H37.44C47.3082 -0.000488281 52.2423 -0.000488281 55.9273 2.10141C58.4163 3.52111 60.4784 5.58317 61.8981 8.07217C64 11.7572 64 16.6913 64 26.5595V37.4395C64 47.3077 64 52.2418 61.8981 55.9268C60.4784 58.4158 58.4163 60.4779 55.9273 61.8976C52.2423 63.9995 47.3082 63.9995 37.44 63.9995H26.56C16.6918 63.9995 11.7577 63.9995 8.07266 61.8976C5.58366 60.4779 3.5216 58.4158 2.1019 55.9268C0 52.2418 0 47.3077 0 37.4395V26.5595Z" fill="#EB8B47"/>
    <path d="M0.5 26.5595C0.5 21.6163 0.50047 17.942 0.760736 15.0418C1.02039 12.1485 1.53555 10.0742 2.53621 8.3199C3.91155 5.90869 5.90917 3.91106 8.32039 2.53572C10.0747 1.53506 12.1489 1.01991 15.0423 0.760247C17.9425 0.499981 21.6168 0.499512 26.56 0.499512H37.44C42.3832 0.499512 46.0575 0.499981 48.9577 0.760247C51.8511 1.01991 53.9253 1.53506 55.6796 2.53572C58.0908 3.91106 60.0885 5.90869 61.4638 8.3199C62.4645 10.0742 62.9796 12.1485 63.2393 15.0418C63.4995 17.942 63.5 21.6163 63.5 26.5595V37.4395C63.5 42.3827 63.4995 46.057 63.2393 48.9572C62.9796 51.8506 62.4645 53.9248 61.4638 55.6791C60.0885 58.0903 58.0908 60.088 55.6796 61.4633C53.9253 62.464 51.8511 62.9791 48.9577 63.2388C46.0575 63.499 42.3832 63.4995 37.44 63.4995H26.56C21.6168 63.4995 17.9425 63.499 15.0423 63.2388C12.1489 62.9791 10.0747 62.464 8.32039 61.4633C5.90917 60.088 3.91155 58.0903 2.53621 55.6791C1.53555 53.9248 1.02039 51.8506 0.760736 48.9572C0.50047 46.057 0.5 42.3827 0.5 37.4395V26.5595Z" stroke="#141414" stroke-opacity="0.1"/>
    <path d="M28.1042 49.2329L13.1024 51.2077L15.0772 36.2059L37.1015 14.1815C39.2441 12.039 40.3154 10.9677 41.5718 10.624C42.4205 10.3918 43.3159 10.3918 44.1645 10.624C45.421 10.9677 46.4922 12.039 48.6348 14.1815L50.1286 15.6753C52.2711 17.8179 53.3424 18.8891 53.6861 20.1456C53.9183 20.9942 53.9183 21.8896 53.6861 22.7383C53.3424 23.9947 52.2711 25.066 50.1286 27.2086L28.1042 49.2329Z" fill="#FF974C" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M38.5962 20.5376L22.4199 36.7139" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M43.7727 25.714L27.5964 41.8903" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M22.3703 36.7635C19.3258 39.808 16.0198 36.6395 16.2616 35.0324" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M27.5466 41.9399C24.5034 44.9831 28.155 48.7098 29.2738 48.0475" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M27.5468 41.9398C23.428 46.0586 18.2516 40.8822 22.3704 36.7634" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M15.8191 50.5214C15.4711 49.5823 14.728 48.8392 13.7889 48.4912" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M49.2862 29.5805L34.7275 15.0219" stroke="#E4E7E7" stroke-width="2" stroke-linejoin="round"/>
  </g>
  <defs>
    <clipPath id="clip0_241_31635">
      <rect width="64" height="64" fill="white"/>
    </clipPath>
  </defs>
</svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/profile.js
var profileSvg = svg`<svg
  viewBox="0 0 60 60"
  fill="none"
>
  <g clip-path="url(#1)">
    <rect width="60" height="60" rx="30" fill="#00ACE6" />
    <path
      d="M59 73C59 89.0163 46.0163 102 30 102C13.9837 102 1 89.0163 1 73C1 56.9837 12 44 30 44C48 44 59 56.9837 59 73Z"
      fill="#1AC6FF"
      stroke="white"
      stroke-width="2"
    />
    <path
      d="M18.6904 19.9015C19.6264 15.3286 23.3466 11.8445 27.9708 11.2096C29.3231 11.024 30.6751 11.0238 32.0289 11.2096C36.6532 11.8445 40.3733 15.3286 41.3094 19.9015C41.4868 20.7681 41.6309 21.6509 41.7492 22.5271C41.8811 23.5041 41.8811 24.4944 41.7492 25.4715C41.6309 26.3476 41.4868 27.2304 41.3094 28.097C40.3733 32.6699 36.6532 36.154 32.0289 36.7889C30.6772 36.9744 29.3216 36.9743 27.9708 36.7889C23.3466 36.154 19.6264 32.6699 18.6904 28.097C18.513 27.2304 18.3689 26.3476 18.2506 25.4715C18.1186 24.4944 18.1186 23.5041 18.2506 22.5271C18.3689 21.6509 18.513 20.7681 18.6904 19.9015Z"
      fill="#1AC6FF"
      stroke="white"
      stroke-width="2"
    />
    <circle cx="24.5" cy="23.5" r="1.5" fill="white" />
    <circle cx="35.5" cy="23.5" r="1.5" fill="white" />
    <path
      d="M31 20L28 28H32"
      stroke="white"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
  </g>
  <rect x="0.5" y="0.5" width="59" height="59" rx="29.5" stroke="white" stroke-opacity="0.1" />
  <defs>
    <clipPath id="1">
      <rect width="60" height="60" rx="30" fill="white" />
    </clipPath>
  </defs>
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/solana.js
var solanaSvg = svg`<svg fill="none" viewBox="0 0 80 80">
  <g clip-path="url(#a)">
    <path fill="url(#b)" d="M40 80a40 40 0 1 0 0-80 40 40 0 0 0 0 80Z" />
    <path
      stroke="#fff"
      stroke-opacity=".1"
      d="M79.5 40a39.5 39.5 0 1 1-79 0 39.5 39.5 0 0 1 79 0Z"
    />
    <path
      fill="#fff"
      d="m62.62 51.54-7.54 7.91a1.75 1.75 0 0 1-1.29.55H18.02a.9.9 0 0 1-.8-.52.84.84 0 0 1 .16-.92l7.55-7.92a1.75 1.75 0 0 1 1.28-.55h35.77a.87.87 0 0 1 .8.52.84.84 0 0 1-.16.93Zm-7.54-15.95a1.75 1.75 0 0 0-1.29-.54H18.02a.89.89 0 0 0-.8.51.84.84 0 0 0 .16.93l7.55 7.92a1.75 1.75 0 0 0 1.28.54h35.77a.89.89 0 0 0 .8-.51.84.84 0 0 0-.16-.93l-7.54-7.92ZM18.02 29.9h35.77a1.79 1.79 0 0 0 1.29-.54l7.54-7.92a.85.85 0 0 0 .16-.93.87.87 0 0 0-.8-.51H26.21a1.79 1.79 0 0 0-1.28.54l-7.55 7.92a.85.85 0 0 0-.16.93.89.89 0 0 0 .8.52Z"
    />
  </g>
  <defs>
    <linearGradient id="b" x1="6.75" x2="80.68" y1="81.91" y2="7.37" gradientUnits="userSpaceOnUse">
      <stop offset=".08" stop-color="#9945FF" />
      <stop offset=".3" stop-color="#8752F3" />
      <stop offset=".5" stop-color="#5497D5" />
      <stop offset=".6" stop-color="#43B4CA" />
      <stop offset=".72" stop-color="#28E0B9" />
      <stop offset=".97" stop-color="#19FB9B" />
    </linearGradient>
    <clipPath id="a"><path fill="#fff" d="M0 0h80v80H0z" /></clipPath>
  </defs>
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/stripe.js
var stripeSvg = svg`
  <svg width="40" height="40" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#a)">
      <path
        d="M0 16.6c0-6.168 0-9.251 1.314-11.555a10 10 0 0 1 3.731-3.731C7.35 0 10.432 0 16.6 0h6.8c6.168 0 9.252 0 11.555 1.314a10 10 0 0 1 3.731 3.731C40 7.35 40 10.432 40 16.6v6.8c0 6.168 0 9.252-1.314 11.555a10 10 0 0 1-3.731 3.731C32.652 40 29.568 40 23.4 40h-6.8c-6.168 0-9.251 0-11.555-1.314a10 10 0 0 1-3.731-3.731C0 32.652 0 29.568 0 23.4v-6.8Z"
        fill="#635BFF"
      />
      <path
        d="M.5 16.6c0-3.093 0-5.38.162-7.182.161-1.795.48-3.061 1.086-4.125a9.5 9.5 0 0 1 3.545-3.545C6.357 1.141 7.623.823 9.418.662 11.221.5 13.508.5 16.6.5h6.8c3.093 0 5.38 0 7.182.162 1.795.161 3.062.48 4.125 1.086a9.5 9.5 0 0 1 3.545 3.545c.607 1.064.925 2.33 1.086 4.125.161 1.803.162 4.09.162 7.182v6.8c0 3.093 0 5.38-.162 7.182-.161 1.795-.48 3.062-1.086 4.125a9.5 9.5 0 0 1-3.545 3.545c-1.063.607-2.33.925-4.125 1.086-1.803.161-4.09.162-7.182.162h-6.8c-3.093 0-5.38 0-7.182-.162-1.795-.161-3.061-.48-4.125-1.086a9.5 9.5 0 0 1-3.545-3.545c-.607-1.063-.925-2.33-1.086-4.125C.5 28.779.5 26.492.5 23.4v-6.8Z"
        stroke="#fff"
        stroke-opacity=".05"
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M18.299 15.147c0-1.028.844-1.424 2.242-1.424 2.004 0 4.536.607 6.54 1.688V9.213C24.892 8.343 22.73 8 20.541 8c-5.354 0-8.915 2.796-8.915 7.464 0 7.279 10.022 6.118 10.022 9.257 0 1.213-1.055 1.609-2.531 1.609-2.19 0-4.985-.897-7.2-2.11v6.277a18.283 18.283 0 0 0 7.2 1.503c5.485 0 9.257-2.716 9.257-7.437-.027-7.86-10.075-6.462-10.075-9.416Z"
        fill="#fff"
      />
    </g>
    <defs>
      <clipPath id="a"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    </defs>
  </svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/visual/system.js
var systemSvg = svg`<svg viewBox="0 0 60 60" fill="none">
  <g clip-path="url(#1)">
    <path
      d="M0 24.9C0 15.6485 0 11.0228 1.97053 7.56812C3.3015 5.23468 5.23468 3.3015 7.56812 1.97053C11.0228 0 15.6485 0 24.9 0H35.1C44.3514 0 48.9772 0 52.4319 1.97053C54.7653 3.3015 56.6985 5.23468 58.0295 7.56812C60 11.0228 60 15.6485 60 24.9V35.1C60 44.3514 60 48.9772 58.0295 52.4319C56.6985 54.7653 54.7653 56.6985 52.4319 58.0295C48.9772 60 44.3514 60 35.1 60H24.9C15.6485 60 11.0228 60 7.56812 58.0295C5.23468 56.6985 3.3015 54.7653 1.97053 52.4319C0 48.9772 0 44.3514 0 35.1V24.9Z"
      fill="#794CFF"
    />
    <path
      d="M0.5 24.9C0.5 20.2652 0.50047 16.8221 0.744315 14.105C0.987552 11.3946 1.46987 9.45504 2.40484 7.81585C3.69145 5.56019 5.56019 3.69145 7.81585 2.40484C9.45504 1.46987 11.3946 0.987552 14.105 0.744315C16.8221 0.50047 20.2652 0.5 24.9 0.5H35.1C39.7348 0.5 43.1779 0.50047 45.895 0.744315C48.6054 0.987552 50.545 1.46987 52.1841 2.40484C54.4398 3.69145 56.3086 5.56019 57.5952 7.81585C58.5301 9.45504 59.0124 11.3946 59.2557 14.105C59.4995 16.8221 59.5 20.2652 59.5 24.9V35.1C59.5 39.7348 59.4995 43.1779 59.2557 45.895C59.0124 48.6054 58.5301 50.545 57.5952 52.1841C56.3086 54.4398 54.4398 56.3086 52.1841 57.5952C50.545 58.5301 48.6054 59.0124 45.895 59.2557C43.1779 59.4995 39.7348 59.5 35.1 59.5H24.9C20.2652 59.5 16.8221 59.4995 14.105 59.2557C11.3946 59.0124 9.45504 58.5301 7.81585 57.5952C5.56019 56.3086 3.69145 54.4398 2.40484 52.1841C1.46987 50.545 0.987552 48.6054 0.744315 45.895C0.50047 43.1779 0.5 39.7348 0.5 35.1V24.9Z"
      stroke="#062B2B"
      stroke-opacity="0.1"
    />
    <path
      d="M35.1403 31.5016C35.1193 30.9637 35.388 30.4558 35.8446 30.1707C36.1207 29.9982 36.4761 29.8473 36.7921 29.7685C37.3143 29.6382 37.8664 29.7977 38.2386 30.1864C38.8507 30.8257 39.3004 31.6836 39.8033 32.408C40.2796 33.0942 41.4695 33.2512 41.9687 32.5047C42.4839 31.7341 42.9405 30.8229 43.572 30.1399C43.9375 29.7447 44.4866 29.5756 45.0111 29.6967C45.3283 29.7701 45.6863 29.9147 45.9655 30.0823C46.4269 30.3595 46.7045 30.8626 46.6928 31.4008C46.6731 32.3083 46.3764 33.2571 46.2158 34.1473C46.061 35.0048 46.9045 35.8337 47.7592 35.664C48.6464 35.4878 49.5899 35.1747 50.497 35.1391C51.0348 35.1181 51.5427 35.3868 51.8279 35.8433C52.0004 36.1195 52.1513 36.4749 52.2301 36.7908C52.3604 37.3131 52.2009 37.8651 51.8121 38.2374C51.1729 38.8495 50.3151 39.2991 49.5908 39.8019C48.9046 40.2782 48.7473 41.4683 49.4939 41.9675C50.2644 42.4827 51.1757 42.9393 51.8587 43.5708C52.2539 43.9362 52.423 44.4854 52.3018 45.0099C52.2285 45.3271 52.0839 45.6851 51.9162 45.9642C51.6391 46.4257 51.1359 46.7032 50.5978 46.6916C49.6903 46.6719 48.7417 46.3753 47.8516 46.2146C46.9939 46.0598 46.1648 46.9035 46.3346 47.7583C46.5108 48.6454 46.8239 49.5888 46.8594 50.4958C46.8805 51.0336 46.6117 51.5415 46.1552 51.8267C45.879 51.9992 45.5236 52.15 45.2077 52.2289C44.6854 52.3592 44.1334 52.1997 43.7611 51.8109C43.1491 51.1718 42.6996 50.314 42.1968 49.5897C41.7203 48.9034 40.5301 48.7463 40.0309 49.493C39.5157 50.2634 39.0592 51.1746 38.4278 51.8574C38.0623 52.2527 37.5132 52.4218 36.9887 52.3006C36.6715 52.2273 36.3135 52.0826 36.0343 51.915C35.5729 51.6379 35.2953 51.1347 35.307 50.5966C35.3267 49.6891 35.6233 48.7405 35.7839 47.8505C35.9388 46.9928 35.0951 46.1636 34.2402 46.3334C33.3531 46.5096 32.4098 46.8227 31.5028 46.8582C30.9649 46.8793 30.457 46.6105 30.1719 46.154C29.9994 45.8778 29.8485 45.5224 29.7697 45.2065C29.6394 44.6842 29.7989 44.1322 30.1877 43.7599C30.8269 43.1479 31.6847 42.6982 32.4091 42.1954C33.0954 41.7189 33.2522 40.5289 32.5056 40.0297C31.7351 39.5145 30.824 39.058 30.1411 38.4265C29.7459 38.0611 29.5768 37.5119 29.698 36.9875C29.7713 36.6702 29.9159 36.3122 30.0836 36.0331C30.3607 35.5717 30.8638 35.2941 31.402 35.3058C32.3095 35.3255 33.2583 35.6221 34.1485 35.7828C35.006 35.9376 35.8349 35.094 35.6652 34.2393C35.489 33.3521 35.1759 32.4087 35.1403 31.5016Z"
      fill="#906EF7"
      stroke="white"
      stroke-width="2"
    />
    <path
      d="M20.7706 8.22357C20.9036 7.51411 21.5231 7 22.2449 7H23.7551C24.4769 7 25.0964 7.51411 25.2294 8.22357C25.5051 9.69403 25.4829 11.6321 27.1202 12.2606C27.3092 12.3331 27.4958 12.4105 27.6798 12.4926C29.2818 13.2072 30.6374 11.8199 31.8721 10.9752C32.4678 10.5676 33.2694 10.6421 33.7798 11.1525L34.8477 12.2204C35.3581 12.7308 35.4326 13.5323 35.025 14.128C34.1802 15.3627 32.7931 16.7183 33.5077 18.3202C33.5898 18.5043 33.6672 18.6909 33.7398 18.88C34.3683 20.5171 36.3061 20.4949 37.7764 20.7706C38.4859 20.9036 39 21.5231 39 22.2449V23.7551C39 24.4769 38.4859 25.0964 37.7764 25.2294C36.3061 25.5051 34.3685 25.483 33.7401 27.1201C33.6675 27.3093 33.59 27.4961 33.5079 27.6803C32.7934 29.282 34.1803 30.6374 35.025 31.8719C35.4326 32.4677 35.3581 33.2692 34.8477 33.7796L33.7798 34.8475C33.2694 35.3579 32.4678 35.4324 31.8721 35.0248C30.6376 34.1801 29.2823 32.7934 27.6806 33.508C27.4962 33.5903 27.3093 33.6678 27.12 33.7405C25.483 34.3688 25.5051 36.3062 25.2294 37.7764C25.0964 38.4859 24.4769 39 23.7551 39H22.2449C21.5231 39 20.9036 38.4859 20.7706 37.7764C20.4949 36.3062 20.517 34.3688 18.88 33.7405C18.6908 33.6678 18.5039 33.5903 18.3196 33.5081C16.7179 32.7936 15.3625 34.1804 14.1279 35.0251C13.5322 35.4327 12.7307 35.3582 12.2203 34.8478L11.1524 33.7799C10.642 33.2695 10.5675 32.4679 10.9751 31.8722C11.8198 30.6376 13.2067 29.2822 12.4922 27.6804C12.41 27.4962 12.3325 27.3093 12.2599 27.1201C11.6315 25.483 9.69392 25.5051 8.22357 25.2294C7.51411 25.0964 7 24.4769 7 23.7551V22.2449C7 21.5231 7.51411 20.9036 8.22357 20.7706C9.69394 20.4949 11.6317 20.5171 12.2602 18.88C12.3328 18.6909 12.4103 18.5042 12.4924 18.3201C13.207 16.7181 11.8198 15.3625 10.975 14.1278C10.5674 13.5321 10.6419 12.7305 11.1523 12.2201L12.2202 11.1522C12.7306 10.6418 13.5322 10.5673 14.1279 10.9749C15.3626 11.8197 16.7184 13.2071 18.3204 12.4925C18.5044 12.4105 18.6909 12.3331 18.8799 12.2606C20.5171 11.6321 20.4949 9.69403 20.7706 8.22357Z"
      fill="#906EF7"
      stroke="white"
      stroke-width="2"
    />
    <circle cx="23" cy="23" r="6" fill="#794CFF" stroke="white" stroke-width="2" />
    <circle cx="41" cy="41" r="4" fill="#794CFF" stroke="white" stroke-width="2" />
  </g>
  <defs>
    <clipPath id="1">
      <rect width="60" height="60" fill="white" />
    </clipPath>
  </defs>
</svg> `;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-visual/styles.js
var styles_default9 = css`
  :host {
    display: block;
    width: var(--local-size);
    height: var(--local-size);
  }

  :host svg {
    width: 100%;
    height: 100%;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/components/wui-visual/index.js
var __decorate9 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var svgOptions2 = {
  browser: browserSvg2,
  dao: daoSvg,
  defi: defiSvg,
  defiAlt: defiAltSvg,
  eth: ethSvg,
  layers: layersSvg,
  lock: lockSvg,
  login: loginSvg,
  network: networkSvg,
  nft: nftSvg,
  noun: nounSvg,
  profile: profileSvg,
  system: systemSvg,
  coinbase: coinbaseSvg,
  meld: meldSvg,
  onrampCard: onrampCardSvg,
  moonpay: moonpaySvg,
  stripe: stripeSvg,
  paypal: paypalSvg,
  google: googleSvg2,
  pencil: pencilSvg,
  lightbulb: lightbulbSvg2,
  solana: solanaSvg
};
var WuiVisual = class WuiVisual2 extends LitElement {
  constructor() {
    super(...arguments);
    this.name = "browser";
    this.size = "md";
  }
  render() {
    this.style.cssText = `
       --local-size: var(--wui-visual-size-${this.size});
   `;
    return html`${svgOptions2[this.name]}`;
  }
};
WuiVisual.styles = [resetStyles, styles_default9];
__decorate9([
  property()
], WuiVisual.prototype, "name", void 0);
__decorate9([
  property()
], WuiVisual.prototype, "size", void 0);
WuiVisual = __decorate9([
  customElement("wui-visual")
], WuiVisual);

// node_modules/lit-html/development/directives/if-defined.js
var ifDefined = (value) => value ?? nothing;

// node_modules/@reown/appkit-ui/dist/esm/src/utils/UiHelperUtil.js
var UiHelperUtil = {
  getSpacingStyles(spacing, index) {
    if (Array.isArray(spacing)) {
      return spacing[index] ? `var(--wui-spacing-${spacing[index]})` : void 0;
    } else if (typeof spacing === "string") {
      return `var(--wui-spacing-${spacing})`;
    }
    return void 0;
  },
  getFormattedDate(date) {
    return new Intl.DateTimeFormat("en-US", { month: "short", day: "numeric" }).format(date);
  },
  getHostName(url) {
    try {
      const newUrl = new URL(url);
      return newUrl.hostname;
    } catch (error) {
      return "";
    }
  },
  getTruncateString({ string, charsStart, charsEnd, truncate }) {
    if (string.length <= charsStart + charsEnd) {
      return string;
    }
    if (truncate === "end") {
      return `${string.substring(0, charsStart)}...`;
    } else if (truncate === "start") {
      return `...${string.substring(string.length - charsEnd)}`;
    }
    return `${string.substring(0, Math.floor(charsStart))}...${string.substring(string.length - Math.floor(charsEnd))}`;
  },
  generateAvatarColors(address) {
    const hash2 = address.toLowerCase().replace(/^0x/iu, "").replace(/[^a-f0-9]/gu, "");
    const baseColor = hash2.substring(0, 6).padEnd(6, "0");
    const rgbColor = this.hexToRgb(baseColor);
    const masterBorderRadius = getComputedStyle(document.documentElement).getPropertyValue("--w3m-border-radius-master");
    const radius = Number(masterBorderRadius == null ? void 0 : masterBorderRadius.replace("px", ""));
    const edge = 100 - 3 * radius;
    const gradientCircle = `${edge}% ${edge}% at 65% 40%`;
    const colors = [];
    for (let i4 = 0; i4 < 5; i4 += 1) {
      const tintedColor = this.tintColor(rgbColor, 0.15 * i4);
      colors.push(`rgb(${tintedColor[0]}, ${tintedColor[1]}, ${tintedColor[2]})`);
    }
    return `
    --local-color-1: ${colors[0]};
    --local-color-2: ${colors[1]};
    --local-color-3: ${colors[2]};
    --local-color-4: ${colors[3]};
    --local-color-5: ${colors[4]};
    --local-radial-circle: ${gradientCircle}
   `;
  },
  hexToRgb(hex) {
    const bigint = parseInt(hex, 16);
    const r2 = bigint >> 16 & 255;
    const g3 = bigint >> 8 & 255;
    const b3 = bigint & 255;
    return [r2, g3, b3];
  },
  tintColor(rgb, tint) {
    const [r2, g3, b3] = rgb;
    const tintedR = Math.round(r2 + (255 - r2) * tint);
    const tintedG = Math.round(g3 + (255 - g3) * tint);
    const tintedB = Math.round(b3 + (255 - b3) * tint);
    return [tintedR, tintedG, tintedB];
  },
  isNumber(character) {
    const regex = {
      number: /^[0-9]+$/u
    };
    return regex.number.test(character);
  },
  getColorTheme(theme) {
    if (theme) {
      return theme;
    } else if (typeof window !== "undefined" && window.matchMedia) {
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    }
    return "dark";
  },
  splitBalance(input) {
    const parts = input.split(".");
    if (parts.length === 2) {
      return [parts[0], parts[1]];
    }
    return ["0", "00"];
  },
  roundNumber(number, threshold, fixed) {
    const roundedNumber = number.toString().length >= threshold ? Number(number).toFixed(fixed) : number;
    return roundedNumber;
  },
  formatNumberToLocalString(value, decimals = 2) {
    if (value === void 0) {
      return "0.00";
    }
    if (typeof value === "number") {
      return value.toLocaleString("en-US", {
        maximumFractionDigits: decimals,
        minimumFractionDigits: decimals
      });
    }
    return parseFloat(value).toLocaleString("en-US", {
      maximumFractionDigits: decimals,
      minimumFractionDigits: decimals
    });
  }
};

// node_modules/@reown/appkit-ui/dist/esm/src/layout/wui-flex/styles.js
var styles_default10 = css`
  :host {
    display: flex;
    width: inherit;
    height: inherit;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/layout/wui-flex/index.js
var __decorate10 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiFlex = class WuiFlex2 extends LitElement {
  render() {
    this.style.cssText = `
      flex-direction: ${this.flexDirection};
      flex-wrap: ${this.flexWrap};
      flex-basis: ${this.flexBasis};
      flex-grow: ${this.flexGrow};
      flex-shrink: ${this.flexShrink};
      align-items: ${this.alignItems};
      justify-content: ${this.justifyContent};
      column-gap: ${this.columnGap && `var(--wui-spacing-${this.columnGap})`};
      row-gap: ${this.rowGap && `var(--wui-spacing-${this.rowGap})`};
      gap: ${this.gap && `var(--wui-spacing-${this.gap})`};
      padding-top: ${this.padding && UiHelperUtil.getSpacingStyles(this.padding, 0)};
      padding-right: ${this.padding && UiHelperUtil.getSpacingStyles(this.padding, 1)};
      padding-bottom: ${this.padding && UiHelperUtil.getSpacingStyles(this.padding, 2)};
      padding-left: ${this.padding && UiHelperUtil.getSpacingStyles(this.padding, 3)};
      margin-top: ${this.margin && UiHelperUtil.getSpacingStyles(this.margin, 0)};
      margin-right: ${this.margin && UiHelperUtil.getSpacingStyles(this.margin, 1)};
      margin-bottom: ${this.margin && UiHelperUtil.getSpacingStyles(this.margin, 2)};
      margin-left: ${this.margin && UiHelperUtil.getSpacingStyles(this.margin, 3)};
    `;
    return html`<slot></slot>`;
  }
};
WuiFlex.styles = [resetStyles, styles_default10];
__decorate10([
  property()
], WuiFlex.prototype, "flexDirection", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "flexWrap", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "flexBasis", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "flexGrow", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "flexShrink", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "alignItems", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "justifyContent", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "columnGap", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "rowGap", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "gap", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "padding", void 0);
__decorate10([
  property()
], WuiFlex.prototype, "margin", void 0);
WuiFlex = __decorate10([
  customElement("wui-flex")
], WuiFlex);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-avatar/styles.js
var styles_default11 = css`
  :host {
    display: block;
    width: var(--local-width);
    height: var(--local-height);
    border-radius: var(--wui-border-radius-3xl);
    box-shadow: 0 0 0 8px var(--wui-color-gray-glass-005);
    overflow: hidden;
    position: relative;
  }

  :host([data-variant='generated']) {
    --mixed-local-color-1: var(--local-color-1);
    --mixed-local-color-2: var(--local-color-2);
    --mixed-local-color-3: var(--local-color-3);
    --mixed-local-color-4: var(--local-color-4);
    --mixed-local-color-5: var(--local-color-5);
  }

  @supports (background: color-mix(in srgb, white 50%, black)) {
    :host([data-variant='generated']) {
      --mixed-local-color-1: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-1)
      );
      --mixed-local-color-2: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-2)
      );
      --mixed-local-color-3: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-3)
      );
      --mixed-local-color-4: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-4)
      );
      --mixed-local-color-5: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-5)
      );
    }
  }

  :host([data-variant='generated']) {
    box-shadow: 0 0 0 8px var(--wui-color-gray-glass-005);
    background: radial-gradient(
      var(--local-radial-circle),
      #fff 0.52%,
      var(--mixed-local-color-5) 31.25%,
      var(--mixed-local-color-3) 51.56%,
      var(--mixed-local-color-2) 65.63%,
      var(--mixed-local-color-1) 82.29%,
      var(--mixed-local-color-4) 100%
    );
  }

  :host([data-variant='default']) {
    box-shadow: 0 0 0 8px var(--wui-color-gray-glass-005);
    background: radial-gradient(
      75.29% 75.29% at 64.96% 24.36%,
      #fff 0.52%,
      #f5ccfc 31.25%,
      #dba4f5 51.56%,
      #9a8ee8 65.63%,
      #6493da 82.29%,
      #6ebdea 100%
    );
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-avatar/index.js
var __decorate11 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiAvatar = class WuiAvatar2 extends LitElement {
  constructor() {
    super(...arguments);
    this.imageSrc = void 0;
    this.alt = void 0;
    this.address = void 0;
    this.size = "xl";
  }
  render() {
    this.style.cssText = `
    --local-width: var(--wui-icon-box-size-${this.size});
    --local-height: var(--wui-icon-box-size-${this.size});
    `;
    return html`${this.visualTemplate()}`;
  }
  visualTemplate() {
    if (this.imageSrc) {
      this.dataset["variant"] = "image";
      return html`<wui-image src=${this.imageSrc} alt=${this.alt ?? "avatar"}></wui-image>`;
    } else if (this.address) {
      this.dataset["variant"] = "generated";
      const cssColors = UiHelperUtil.generateAvatarColors(this.address);
      this.style.cssText += `
 ${cssColors}`;
      return null;
    }
    this.dataset["variant"] = "default";
    return null;
  }
};
WuiAvatar.styles = [resetStyles, styles_default11];
__decorate11([
  property()
], WuiAvatar.prototype, "imageSrc", void 0);
__decorate11([
  property()
], WuiAvatar.prototype, "alt", void 0);
__decorate11([
  property()
], WuiAvatar.prototype, "address", void 0);
__decorate11([
  property()
], WuiAvatar.prototype, "size", void 0);
WuiAvatar = __decorate11([
  customElement("wui-avatar")
], WuiAvatar);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-icon-box/styles.js
var styles_default12 = css`
  :host {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    position: relative;
    overflow: hidden;
    background-color: var(--wui-color-gray-glass-020);
    border-radius: var(--local-border-radius);
    border: var(--local-border);
    box-sizing: content-box;
    width: var(--local-size);
    height: var(--local-size);
    min-height: var(--local-size);
    min-width: var(--local-size);
  }

  @supports (background: color-mix(in srgb, white 50%, black)) {
    :host {
      background-color: color-mix(in srgb, var(--local-bg-value) var(--local-bg-mix), transparent);
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-icon-box/index.js
var __decorate12 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiIconBox = class WuiIconBox2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "md";
    this.backgroundColor = "accent-100";
    this.iconColor = "accent-100";
    this.background = "transparent";
    this.border = false;
    this.borderColor = "wui-color-bg-125";
    this.icon = "copy";
  }
  render() {
    const iconSize = this.iconSize || this.size;
    const isLg = this.size === "lg";
    const isXl = this.size === "xl";
    const bgMix = isLg ? "12%" : "16%";
    const borderRadius = isLg ? "xxs" : isXl ? "s" : "3xl";
    const isGray = this.background === "gray";
    const isOpaque = this.background === "opaque";
    const isColorChange = this.backgroundColor === "accent-100" && isOpaque || this.backgroundColor === "success-100" && isOpaque || this.backgroundColor === "error-100" && isOpaque || this.backgroundColor === "inverse-100" && isOpaque;
    let bgValueVariable = `var(--wui-color-${this.backgroundColor})`;
    if (isColorChange) {
      bgValueVariable = `var(--wui-icon-box-bg-${this.backgroundColor})`;
    } else if (isGray) {
      bgValueVariable = `var(--wui-color-gray-${this.backgroundColor})`;
    }
    this.style.cssText = `
       --local-bg-value: ${bgValueVariable};
       --local-bg-mix: ${isColorChange || isGray ? `100%` : bgMix};
       --local-border-radius: var(--wui-border-radius-${borderRadius});
       --local-size: var(--wui-icon-box-size-${this.size});
       --local-border: ${this.borderColor === "wui-color-bg-125" ? `2px` : `1px`} solid ${this.border ? `var(--${this.borderColor})` : `transparent`}
   `;
    return html` <wui-icon color=${this.iconColor} size=${iconSize} name=${this.icon}></wui-icon> `;
  }
};
WuiIconBox.styles = [resetStyles, elementStyles, styles_default12];
__decorate12([
  property()
], WuiIconBox.prototype, "size", void 0);
__decorate12([
  property()
], WuiIconBox.prototype, "backgroundColor", void 0);
__decorate12([
  property()
], WuiIconBox.prototype, "iconColor", void 0);
__decorate12([
  property()
], WuiIconBox.prototype, "iconSize", void 0);
__decorate12([
  property()
], WuiIconBox.prototype, "background", void 0);
__decorate12([
  property({ type: Boolean })
], WuiIconBox.prototype, "border", void 0);
__decorate12([
  property()
], WuiIconBox.prototype, "borderColor", void 0);
__decorate12([
  property()
], WuiIconBox.prototype, "icon", void 0);
WuiIconBox = __decorate12([
  customElement("wui-icon-box")
], WuiIconBox);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-account-button/styles.js
var styles_default13 = css`
  :host {
    display: block;
  }

  button {
    border-radius: var(--wui-border-radius-3xl);
    background: var(--wui-color-gray-glass-002);
    display: flex;
    gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-3xs) var(--wui-spacing-xs) var(--wui-spacing-3xs)
      var(--wui-spacing-xs);
    border: 1px solid var(--wui-color-gray-glass-005);
  }

  button:disabled {
    background: var(--wui-color-gray-glass-015);
  }

  button:disabled > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  button:disabled > wui-flex > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  button:disabled > wui-image,
  button:disabled > wui-flex > wui-avatar {
    filter: grayscale(1);
  }

  button:has(wui-image) {
    padding: var(--wui-spacing-3xs) var(--wui-spacing-3xs) var(--wui-spacing-3xs)
      var(--wui-spacing-xs);
  }

  wui-text {
    color: var(--wui-color-fg-100);
  }

  wui-flex > wui-text {
    color: var(--wui-color-fg-200);
  }

  wui-image,
  wui-icon-box {
    border-radius: var(--wui-border-radius-3xl);
    width: 24px;
    height: 24px;
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
  }

  wui-flex {
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-005);
    background: var(--wui-color-gray-glass-005);
    padding: 4px var(--wui-spacing-m) 4px var(--wui-spacing-xxs);
  }

  button.local-no-balance {
    border-radius: 0px;
    border: none;
    background: transparent;
  }

  wui-avatar {
    width: 20px;
    height: 20px;
    box-shadow: 0 0 0 2px var(--wui-color-accent-glass-010);
  }

  @media (max-width: 500px) {
    button {
      gap: 0px;
      padding: var(--wui-spacing-3xs) var(--wui-spacing-xs) !important;
      height: 32px;
    }
    wui-image,
    wui-icon-box,
    button > wui-text {
      visibility: hidden;
      width: 0px;
      height: 0px;
    }
    button {
      border-radius: 0px;
      border: none;
      background: transparent;
      padding: 0px;
    }
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled > wui-flex > wui-text {
      color: var(--wui-color-fg-175);
    }

    button:active:enabled > wui-flex > wui-text {
      color: var(--wui-color-fg-175);
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-account-button/index.js
var __decorate13 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiAccountButton = class WuiAccountButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.networkSrc = void 0;
    this.avatarSrc = void 0;
    this.balance = void 0;
    this.isUnsupportedChain = void 0;
    this.disabled = false;
    this.loading = false;
    this.address = "";
    this.profileName = "";
    this.charsStart = 4;
    this.charsEnd = 6;
  }
  render() {
    return html`
      <button
        ?disabled=${this.disabled}
        class=${ifDefined(this.balance ? void 0 : "local-no-balance")}
      >
        ${this.balanceTemplate()}
        <wui-flex gap="xxs" alignItems="center">
          <wui-avatar
            .imageSrc=${this.avatarSrc}
            alt=${this.address}
            address=${this.address}
          ></wui-avatar>
          <wui-text variant="paragraph-600" color="inherit">
            ${this.address ? UiHelperUtil.getTruncateString({
      string: this.profileName || this.address,
      charsStart: this.profileName ? 18 : this.charsStart,
      charsEnd: this.profileName ? 0 : this.charsEnd,
      truncate: this.profileName ? "end" : "middle"
    }) : null}
          </wui-text>
        </wui-flex>
      </button>
    `;
  }
  balanceTemplate() {
    if (this.isUnsupportedChain) {
      return html` <wui-icon-box
          size="sm"
          iconColor="error-100"
          backgroundColor="error-100"
          icon="warningCircle"
        ></wui-icon-box>
        <wui-text variant="paragraph-600" color="inherit"> Switch Network</wui-text>`;
    }
    if (this.balance) {
      const networkElement = this.networkSrc ? html`<wui-image src=${this.networkSrc}></wui-image>` : html`
            <wui-icon-box
              size="sm"
              iconColor="fg-200"
              backgroundColor="fg-300"
              icon="networkPlaceholder"
            ></wui-icon-box>
          `;
      const balanceTemplate = this.loading ? html`<wui-loading-spinner size="md" color="fg-200"></wui-loading-spinner>` : html`<wui-text variant="paragraph-600" color="inherit"> ${this.balance}</wui-text>`;
      return html`${networkElement} ${balanceTemplate}`;
    }
    return null;
  }
};
WuiAccountButton.styles = [resetStyles, elementStyles, styles_default13];
__decorate13([
  property()
], WuiAccountButton.prototype, "networkSrc", void 0);
__decorate13([
  property()
], WuiAccountButton.prototype, "avatarSrc", void 0);
__decorate13([
  property()
], WuiAccountButton.prototype, "balance", void 0);
__decorate13([
  property({ type: Boolean })
], WuiAccountButton.prototype, "isUnsupportedChain", void 0);
__decorate13([
  property({ type: Boolean })
], WuiAccountButton.prototype, "disabled", void 0);
__decorate13([
  property({ type: Boolean })
], WuiAccountButton.prototype, "loading", void 0);
__decorate13([
  property()
], WuiAccountButton.prototype, "address", void 0);
__decorate13([
  property()
], WuiAccountButton.prototype, "profileName", void 0);
__decorate13([
  property()
], WuiAccountButton.prototype, "charsStart", void 0);
__decorate13([
  property()
], WuiAccountButton.prototype, "charsEnd", void 0);
WuiAccountButton = __decorate13([
  customElement("wui-account-button")
], WuiAccountButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-wallet-image/styles.js
var styles_default14 = css`
  :host {
    position: relative;
    background-color: var(--wui-color-gray-glass-002);
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--local-size);
    height: var(--local-size);
    border-radius: inherit;
    border-radius: var(--local-border-radius);
  }

  :host > wui-flex {
    overflow: hidden;
    border-radius: inherit;
    border-radius: var(--local-border-radius);
  }

  :host::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    border: 1px solid var(--wui-color-gray-glass-010);
    pointer-events: none;
  }

  :host([name='Extension'])::after {
    border: 1px solid var(--wui-color-accent-glass-010);
  }

  :host([data-wallet-icon='allWallets']) {
    background-color: var(--wui-all-wallets-bg-100);
  }

  :host([data-wallet-icon='allWallets'])::after {
    border: 1px solid var(--wui-color-accent-glass-010);
  }

  wui-icon[data-parent-size='inherit'] {
    width: 75%;
    height: 75%;
    align-items: center;
  }

  wui-icon[data-parent-size='sm'] {
    width: 18px;
    height: 18px;
  }

  wui-icon[data-parent-size='md'] {
    width: 24px;
    height: 24px;
  }

  wui-icon[data-parent-size='lg'] {
    width: 42px;
    height: 42px;
  }

  wui-icon[data-parent-size='full'] {
    width: 100%;
    height: 100%;
  }

  :host > wui-icon-box {
    position: absolute;
    overflow: hidden;
    right: -1px;
    bottom: -2px;
    z-index: 1;
    border: 2px solid var(--wui-color-bg-150, #1e1f1f);
    padding: 1px;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-wallet-image/index.js
var __decorate14 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiWalletImage = class WuiWalletImage2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "md";
    this.name = "";
    this.installed = false;
    this.badgeSize = "xs";
  }
  render() {
    let borderRadius = "xxs";
    if (this.size === "lg") {
      borderRadius = "m";
    } else if (this.size === "md") {
      borderRadius = "xs";
    } else {
      borderRadius = "xxs";
    }
    this.style.cssText = `
       --local-border-radius: var(--wui-border-radius-${borderRadius});
       --local-size: var(--wui-wallet-image-size-${this.size});
   `;
    if (this.walletIcon) {
      this.dataset["walletIcon"] = this.walletIcon;
    }
    return html`
      <wui-flex justifyContent="center" alignItems="center"> ${this.templateVisual()} </wui-flex>
    `;
  }
  templateVisual() {
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc} alt=${this.name}></wui-image>`;
    } else if (this.walletIcon) {
      return html`<wui-icon
        data-parent-size="md"
        size="md"
        color="inherit"
        name=${this.walletIcon}
      ></wui-icon>`;
    }
    return html`<wui-icon
      data-parent-size=${this.size}
      size="inherit"
      color="inherit"
      name="walletPlaceholder"
    ></wui-icon>`;
  }
};
WuiWalletImage.styles = [elementStyles, resetStyles, styles_default14];
__decorate14([
  property()
], WuiWalletImage.prototype, "size", void 0);
__decorate14([
  property()
], WuiWalletImage.prototype, "name", void 0);
__decorate14([
  property()
], WuiWalletImage.prototype, "imageSrc", void 0);
__decorate14([
  property()
], WuiWalletImage.prototype, "walletIcon", void 0);
__decorate14([
  property({ type: Boolean })
], WuiWalletImage.prototype, "installed", void 0);
__decorate14([
  property()
], WuiWalletImage.prototype, "badgeSize", void 0);
WuiWalletImage = __decorate14([
  customElement("wui-wallet-image")
], WuiWalletImage);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-all-wallets-image/styles.js
var styles_default15 = css`
  :host {
    position: relative;
    border-radius: var(--wui-border-radius-xxs);
    width: 40px;
    height: 40px;
    overflow: hidden;
    background: var(--wui-color-gray-glass-002);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--wui-spacing-4xs);
    padding: 3.75px !important;
  }

  :host::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    border: 1px solid var(--wui-color-gray-glass-010);
    pointer-events: none;
  }

  :host > wui-wallet-image {
    width: 14px;
    height: 14px;
    border-radius: var(--wui-border-radius-5xs);
  }

  :host > wui-flex {
    padding: 2px;
    position: fixed;
    overflow: hidden;
    left: 34px;
    bottom: 8px;
    background: var(--dark-background-150, #1e1f1f);
    border-radius: 50%;
    z-index: 2;
    display: flex;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-all-wallets-image/index.js
var __decorate15 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var TOTAL_IMAGES = 4;
var WuiAllWalletsImage = class WuiAllWalletsImage2 extends LitElement {
  constructor() {
    super(...arguments);
    this.walletImages = [];
  }
  render() {
    const isPlaceholders = this.walletImages.length < TOTAL_IMAGES;
    return html`${this.walletImages.slice(0, TOTAL_IMAGES).map(({ src, walletName }) => html`
            <wui-wallet-image
              size="inherit"
              imageSrc=${src}
              name=${ifDefined(walletName)}
            ></wui-wallet-image>
          `)}
      ${isPlaceholders ? [...Array(TOTAL_IMAGES - this.walletImages.length)].map(() => html` <wui-wallet-image size="inherit" name=""></wui-wallet-image>`) : null}
      <wui-flex>
        <wui-icon-box
          size="xxs"
          iconSize="xxs"
          iconcolor="success-100"
          backgroundcolor="success-100"
          icon="checkmark"
          background="opaque"
        ></wui-icon-box>
      </wui-flex>`;
  }
};
WuiAllWalletsImage.styles = [resetStyles, styles_default15];
__decorate15([
  property({ type: Array })
], WuiAllWalletsImage.prototype, "walletImages", void 0);
WuiAllWalletsImage = __decorate15([
  customElement("wui-all-wallets-image")
], WuiAllWalletsImage);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-button/styles.js
var styles_default16 = css`
  :host {
    width: var(--local-width);
    position: relative;
  }

  button {
    border: none;
    border-radius: var(--local-border-radius);
    width: var(--local-width);
    white-space: nowrap;
  }

  /* -- Sizes --------------------------------------------------- */
  button[data-size='md'] {
    padding: 8.2px var(--wui-spacing-l) 9px var(--wui-spacing-l);
    height: 36px;
  }

  button[data-size='md'][data-icon-left='true'][data-icon-right='false'] {
    padding: 8.2px var(--wui-spacing-l) 9px var(--wui-spacing-s);
  }

  button[data-size='md'][data-icon-right='true'][data-icon-left='false'] {
    padding: 8.2px var(--wui-spacing-s) 9px var(--wui-spacing-l);
  }

  button[data-size='lg'] {
    padding: var(--wui-spacing-m) var(--wui-spacing-2l);
    height: 48px;
  }

  /* -- Variants --------------------------------------------------------- */
  button[data-variant='main'] {
    background-color: var(--wui-color-accent-100);
    color: var(--wui-color-inverse-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='inverse'] {
    background-color: var(--wui-color-inverse-100);
    color: var(--wui-color-inverse-000);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='accent'] {
    background-color: var(--wui-color-accent-glass-010);
    color: var(--wui-color-accent-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  button[data-variant='accent-error'] {
    background: var(--wui-color-error-glass-015);
    color: var(--wui-color-error-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-error-glass-010);
  }

  button[data-variant='accent-success'] {
    background: var(--wui-color-success-glass-015);
    color: var(--wui-color-success-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-success-glass-010);
  }

  button[data-variant='neutral'] {
    background: transparent;
    color: var(--wui-color-fg-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  /* -- Focus states --------------------------------------------------- */
  button[data-variant='main']:focus-visible:enabled {
    background-color: var(--wui-color-accent-090);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
  button[data-variant='inverse']:focus-visible:enabled {
    background-color: var(--wui-color-inverse-100);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-gray-glass-010),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
  button[data-variant='accent']:focus-visible:enabled {
    background-color: var(--wui-color-accent-glass-010);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
  button[data-variant='accent-error']:focus-visible:enabled {
    background: var(--wui-color-error-glass-015);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-error-100),
      0 0 0 4px var(--wui-color-error-glass-020);
  }
  button[data-variant='accent-success']:focus-visible:enabled {
    background: var(--wui-color-success-glass-015);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-success-100),
      0 0 0 4px var(--wui-color-success-glass-020);
  }
  button[data-variant='neutral']:focus-visible:enabled {
    background: var(--wui-color-gray-glass-005);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-gray-glass-010),
      0 0 0 4px var(--wui-color-gray-glass-002);
  }

  /* -- Hover & Active states ----------------------------------------------------------- */
  @media (hover: hover) and (pointer: fine) {
    button[data-variant='main']:hover:enabled {
      background-color: var(--wui-color-accent-090);
    }

    button[data-variant='main']:active:enabled {
      background-color: var(--wui-color-accent-080);
    }

    button[data-variant='accent']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }

    button[data-variant='accent']:active:enabled {
      background-color: var(--wui-color-accent-glass-020);
    }

    button[data-variant='accent-error']:hover:enabled {
      background: var(--wui-color-error-glass-020);
      color: var(--wui-color-error-100);
    }

    button[data-variant='accent-error']:active:enabled {
      background: var(--wui-color-error-glass-030);
      color: var(--wui-color-error-100);
    }

    button[data-variant='accent-success']:hover:enabled {
      background: var(--wui-color-success-glass-020);
      color: var(--wui-color-success-100);
    }

    button[data-variant='accent-success']:active:enabled {
      background: var(--wui-color-success-glass-030);
      color: var(--wui-color-success-100);
    }

    button[data-variant='neutral']:hover:enabled {
      background: var(--wui-color-gray-glass-002);
    }

    button[data-variant='neutral']:active:enabled {
      background: var(--wui-color-gray-glass-005);
    }

    button[data-size='lg'][data-icon-left='true'][data-icon-right='false'] {
      padding-left: var(--wui-spacing-m);
    }

    button[data-size='lg'][data-icon-right='true'][data-icon-left='false'] {
      padding-right: var(--wui-spacing-m);
    }
  }

  /* -- Disabled state --------------------------------------------------- */
  button:disabled {
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    color: var(--wui-color-gray-glass-020);
    cursor: not-allowed;
  }

  button > wui-text {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
  }

  ::slotted(*) {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
  }

  wui-loading-spinner {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    opacity: var(--local-opacity-000);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-button/index.js
var __decorate16 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var SPINNER_COLOR_BY_VARIANT = {
  main: "inverse-100",
  inverse: "inverse-000",
  accent: "accent-100",
  "accent-error": "error-100",
  "accent-success": "success-100",
  neutral: "fg-100",
  disabled: "gray-glass-020"
};
var TEXT_VARIANT_BY_SIZE = {
  lg: "paragraph-600",
  md: "small-600"
};
var SPINNER_SIZE_BY_SIZE = {
  lg: "md",
  md: "md"
};
var WuiButton = class WuiButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "lg";
    this.disabled = false;
    this.fullWidth = false;
    this.loading = false;
    this.variant = "main";
    this.hasIconLeft = false;
    this.hasIconRight = false;
    this.borderRadius = "m";
  }
  render() {
    this.style.cssText = `
    --local-width: ${this.fullWidth ? "100%" : "auto"};
    --local-opacity-100: ${this.loading ? 0 : 1};
    --local-opacity-000: ${this.loading ? 1 : 0};
    --local-border-radius: var(--wui-border-radius-${this.borderRadius});
    `;
    const textVariant = this.textVariant ?? TEXT_VARIANT_BY_SIZE[this.size];
    return html`
      <button
        data-variant=${this.variant}
        data-icon-left=${this.hasIconLeft}
        data-icon-right=${this.hasIconRight}
        data-size=${this.size}
        ?disabled=${this.disabled}
      >
        ${this.loadingTemplate()}
        <slot name="iconLeft" @slotchange=${() => this.handleSlotLeftChange()}></slot>
        <wui-text variant=${textVariant} color="inherit">
          <slot></slot>
        </wui-text>
        <slot name="iconRight" @slotchange=${() => this.handleSlotRightChange()}></slot>
      </button>
    `;
  }
  handleSlotLeftChange() {
    this.hasIconLeft = true;
  }
  handleSlotRightChange() {
    this.hasIconRight = true;
  }
  loadingTemplate() {
    if (this.loading) {
      const size = SPINNER_SIZE_BY_SIZE[this.size];
      const color = this.disabled ? SPINNER_COLOR_BY_VARIANT["disabled"] : SPINNER_COLOR_BY_VARIANT[this.variant];
      return html`<wui-loading-spinner color=${color} size=${size}></wui-loading-spinner>`;
    }
    return html``;
  }
};
WuiButton.styles = [resetStyles, elementStyles, styles_default16];
__decorate16([
  property()
], WuiButton.prototype, "size", void 0);
__decorate16([
  property({ type: Boolean })
], WuiButton.prototype, "disabled", void 0);
__decorate16([
  property({ type: Boolean })
], WuiButton.prototype, "fullWidth", void 0);
__decorate16([
  property({ type: Boolean })
], WuiButton.prototype, "loading", void 0);
__decorate16([
  property()
], WuiButton.prototype, "variant", void 0);
__decorate16([
  property({ type: Boolean })
], WuiButton.prototype, "hasIconLeft", void 0);
__decorate16([
  property({ type: Boolean })
], WuiButton.prototype, "hasIconRight", void 0);
__decorate16([
  property()
], WuiButton.prototype, "borderRadius", void 0);
__decorate16([
  property()
], WuiButton.prototype, "textVariant", void 0);
WuiButton = __decorate16([
  customElement("wui-button")
], WuiButton);

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/networkMd.js
var networkSvgMd = svg`<svg  viewBox="0 0 48 54" fill="none">
  <path
    d="M43.4605 10.7248L28.0485 1.61089C25.5438 0.129705 22.4562 0.129705 19.9515 1.61088L4.53951 10.7248C2.03626 12.2051 0.5 14.9365 0.5 17.886V36.1139C0.5 39.0635 2.03626 41.7949 4.53951 43.2752L19.9515 52.3891C22.4562 53.8703 25.5438 53.8703 28.0485 52.3891L43.4605 43.2752C45.9637 41.7949 47.5 39.0635 47.5 36.114V17.8861C47.5 14.9365 45.9637 12.2051 43.4605 10.7248Z"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-card-select-loader/styles.js
var styles_default17 = css`
  :host {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 104px;
    row-gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-xs) 10px;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: clamp(0px, var(--wui-border-radius-xs), 20px);
    position: relative;
  }

  wui-shimmer[data-type='network'] {
    border: none;
    -webkit-clip-path: var(--wui-path-network);
    clip-path: var(--wui-path-network);
  }

  svg {
    position: absolute;
    width: 48px;
    height: 54px;
    z-index: 1;
  }

  svg > path {
    stroke: var(--wui-color-gray-glass-010);
    stroke-width: 1px;
  }

  @media (max-width: 350px) {
    :host {
      width: 100%;
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-card-select-loader/index.js
var __decorate17 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiCardSelectLoader = class WuiCardSelectLoader2 extends LitElement {
  constructor() {
    super(...arguments);
    this.type = "wallet";
  }
  render() {
    return html`
      ${this.shimmerTemplate()}
      <wui-shimmer width="56px" height="20px" borderRadius="xs"></wui-shimmer>
    `;
  }
  shimmerTemplate() {
    if (this.type === "network") {
      return html` <wui-shimmer
          data-type=${this.type}
          width="48px"
          height="54px"
          borderRadius="xs"
        ></wui-shimmer>
        ${networkSvgMd}`;
    }
    return html`<wui-shimmer width="56px" height="56px" borderRadius="xs"></wui-shimmer>`;
  }
};
WuiCardSelectLoader.styles = [resetStyles, elementStyles, styles_default17];
__decorate17([
  property()
], WuiCardSelectLoader.prototype, "type", void 0);
WuiCardSelectLoader = __decorate17([
  customElement("wui-card-select-loader")
], WuiCardSelectLoader);

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/networkLg.js
var networkSvgLg = svg`<svg width="86" height="96" fill="none">
  <path
    d="M78.3244 18.926L50.1808 2.45078C45.7376 -0.150261 40.2624 -0.150262 35.8192 2.45078L7.6756 18.926C3.23322 21.5266 0.5 26.3301 0.5 31.5248V64.4752C0.5 69.6699 3.23322 74.4734 7.6756 77.074L35.8192 93.5492C40.2624 96.1503 45.7376 96.1503 50.1808 93.5492L78.3244 77.074C82.7668 74.4734 85.5 69.6699 85.5 64.4752V31.5248C85.5 26.3301 82.7668 21.5266 78.3244 18.926Z"
  />
</svg>`;

// node_modules/@reown/appkit-ui/dist/esm/src/assets/svg/networkSm.js
var networkSvgSm = svg`
  <svg fill="none" viewBox="0 0 36 40">
    <path
      d="M15.4 2.1a5.21 5.21 0 0 1 5.2 0l11.61 6.7a5.21 5.21 0 0 1 2.61 4.52v13.4c0 1.87-1 3.59-2.6 4.52l-11.61 6.7c-1.62.93-3.6.93-5.22 0l-11.6-6.7a5.21 5.21 0 0 1-2.61-4.51v-13.4c0-1.87 1-3.6 2.6-4.52L15.4 2.1Z"
    />
  </svg>
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-network-image/styles.js
var styles_default18 = css`
  :host {
    position: relative;
    border-radius: inherit;
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--local-width);
    height: var(--local-height);
  }

  :host([data-round='true']) {
    background: var(--wui-color-gray-glass-002);
    border-radius: 100%;
    outline: 1px solid var(--wui-color-gray-glass-005);
  }

  svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    fill: var(--wui-color-gray-glass-002);
  }

  svg > path {
    stroke: var(--local-stroke);
  }

  wui-image {
    width: 100%;
    height: 100%;
    -webkit-clip-path: var(--local-path);
    clip-path: var(--local-path);
    background: var(--wui-color-gray-glass-002);
  }

  wui-icon {
    transform: translateY(-5%);
    width: var(--local-icon-size);
    height: var(--local-icon-size);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-network-image/index.js
var __decorate18 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiNetworkImage = class WuiNetworkImage2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "md";
    this.name = "uknown";
    this.networkImagesBySize = {
      sm: networkSvgSm,
      md: networkSvgMd,
      lg: networkSvgLg
    };
    this.selected = false;
    this.round = false;
  }
  render() {
    if (this.round) {
      this.dataset["round"] = "true";
      this.style.cssText = `
      --local-width: var(--wui-spacing-3xl);
      --local-height: var(--wui-spacing-3xl);
      --local-icon-size: var(--wui-spacing-l);
    `;
    } else {
      this.style.cssText = `

      --local-path: var(--wui-path-network-${this.size});
      --local-width:  var(--wui-width-network-${this.size});
      --local-height:  var(--wui-height-network-${this.size});
      --local-icon-size:  var(--wui-icon-size-network-${this.size});
    `;
    }
    return html`${this.templateVisual()} ${this.svgTemplate()} `;
  }
  svgTemplate() {
    if (this.round) {
      return null;
    }
    return this.networkImagesBySize[this.size];
  }
  templateVisual() {
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc} alt=${this.name}></wui-image>`;
    }
    return html`<wui-icon size="inherit" color="fg-200" name="networkPlaceholder"></wui-icon>`;
  }
};
WuiNetworkImage.styles = [resetStyles, styles_default18];
__decorate18([
  property()
], WuiNetworkImage.prototype, "size", void 0);
__decorate18([
  property()
], WuiNetworkImage.prototype, "name", void 0);
__decorate18([
  property({ type: Object })
], WuiNetworkImage.prototype, "networkImagesBySize", void 0);
__decorate18([
  property()
], WuiNetworkImage.prototype, "imageSrc", void 0);
__decorate18([
  property({ type: Boolean })
], WuiNetworkImage.prototype, "selected", void 0);
__decorate18([
  property({ type: Boolean })
], WuiNetworkImage.prototype, "round", void 0);
WuiNetworkImage = __decorate18([
  customElement("wui-network-image")
], WuiNetworkImage);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-card-select/styles.js
var styles_default19 = css`
  button {
    flex-direction: column;
    width: 76px;
    row-gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-xs) var(--wui-spacing-0);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: clamp(0px, var(--wui-border-radius-xs), 20px);
  }

  button > wui-text {
    color: var(--wui-color-fg-100);
    max-width: var(--wui-icon-box-size-xl);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    justify-content: center;
  }

  button:disabled > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  [data-selected='true'] {
    background-color: var(--wui-color-accent-glass-020);
  }

  @media (hover: hover) and (pointer: fine) {
    [data-selected='true']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }
  }

  [data-selected='true']:active:enabled {
    background-color: var(--wui-color-accent-glass-010);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-card-select/index.js
var __decorate19 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiCardSelect = class WuiCardSelect2 extends LitElement {
  constructor() {
    super(...arguments);
    this.name = "Unknown";
    this.type = "wallet";
    this.imageSrc = void 0;
    this.disabled = false;
    this.selected = false;
    this.installed = false;
  }
  render() {
    return html`
      <button data-selected=${ifDefined(this.selected)} ?disabled=${this.disabled}>
        ${this.imageTemplate()}
        <wui-text variant="tiny-500" color=${this.selected ? "accent-100" : "inherit"}>
          ${this.name}
        </wui-text>
      </button>
    `;
  }
  imageTemplate() {
    if (this.type === "network") {
      return html`
        <wui-network-image
          .selected=${this.selected}
          imageSrc=${ifDefined(this.imageSrc)}
          name=${this.name}
        >
        </wui-network-image>
      `;
    }
    return html`
      <wui-wallet-image
        size="md"
        imageSrc=${ifDefined(this.imageSrc)}
        name=${this.name}
        .installed=${this.installed}
        badgeSize="sm"
      >
      </wui-wallet-image>
    `;
  }
};
WuiCardSelect.styles = [resetStyles, elementStyles, styles_default19];
__decorate19([
  property()
], WuiCardSelect.prototype, "name", void 0);
__decorate19([
  property()
], WuiCardSelect.prototype, "type", void 0);
__decorate19([
  property()
], WuiCardSelect.prototype, "imageSrc", void 0);
__decorate19([
  property({ type: Boolean })
], WuiCardSelect.prototype, "disabled", void 0);
__decorate19([
  property({ type: Boolean })
], WuiCardSelect.prototype, "selected", void 0);
__decorate19([
  property({ type: Boolean })
], WuiCardSelect.prototype, "installed", void 0);
WuiCardSelect = __decorate19([
  customElement("wui-card-select")
], WuiCardSelect);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-chip/styles.js
var styles_default20 = css`
  a {
    border: 1px solid var(--wui-color-gray-glass-010);
    border-radius: var(--wui-border-radius-3xl);
  }

  wui-image {
    border-radius: var(--wui-border-radius-3xl);
    overflow: hidden;
  }

  a.disabled > wui-icon:not(.image-icon),
  a.disabled > wui-image {
    filter: grayscale(1);
  }

  a[data-variant='fill'] {
    color: var(--wui-color-inverse-100);
    background-color: var(--wui-color-accent-100);
  }

  a[data-variant='shade'],
  a[data-variant='shadeSmall'] {
    background-color: transparent;
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-200);
  }

  a[data-variant='success'] {
    column-gap: var(--wui-spacing-xxs);
    border: 1px solid var(--wui-color-success-glass-010);
    background-color: var(--wui-color-success-glass-010);
    color: var(--wui-color-success-100);
  }

  a[data-variant='error'] {
    column-gap: var(--wui-spacing-xxs);
    border: 1px solid var(--wui-color-error-glass-010);
    background-color: var(--wui-color-error-glass-010);
    color: var(--wui-color-error-100);
  }

  a[data-variant='transparent'] {
    column-gap: var(--wui-spacing-xxs);
    background-color: transparent;
    color: var(--wui-color-fg-150);
  }

  a[data-variant='transparent'],
  a[data-variant='success'],
  a[data-variant='shadeSmall'],
  a[data-variant='error'] {
    padding: 7px var(--wui-spacing-s) 7px 10px;
  }

  a[data-variant='transparent']:has(wui-text:first-child),
  a[data-variant='success']:has(wui-text:first-child),
  a[data-variant='shadeSmall']:has(wui-text:first-child),
  a[data-variant='error']:has(wui-text:first-child) {
    padding: 7px var(--wui-spacing-s);
  }

  a[data-variant='fill'],
  a[data-variant='shade'] {
    column-gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-xxs) var(--wui-spacing-m) var(--wui-spacing-xxs)
      var(--wui-spacing-xs);
  }

  a[data-variant='fill']:has(wui-text:first-child),
  a[data-variant='shade']:has(wui-text:first-child) {
    padding: 9px var(--wui-spacing-m) 9px var(--wui-spacing-m);
  }

  a[data-variant='fill'] > wui-image,
  a[data-variant='shade'] > wui-image {
    width: 24px;
    height: 24px;
  }

  a[data-variant='fill'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-accent-090);
  }

  a[data-variant='shade'] > wui-image,
  a[data-variant='shadeSmall'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  a[data-variant='fill'] > wui-icon:not(.image-icon),
  a[data-variant='shade'] > wui-icon:not(.image-icon) {
    width: 14px;
    height: 14px;
  }

  a[data-variant='transparent'] > wui-image,
  a[data-variant='success'] > wui-image,
  a[data-variant='shadeSmall'] > wui-image,
  a[data-variant='error'] > wui-image {
    width: 14px;
    height: 14px;
  }

  a[data-variant='transparent'] > wui-icon:not(.image-icon),
  a[data-variant='success'] > wui-icon:not(.image-icon),
  a[data-variant='shadeSmall'] > wui-icon:not(.image-icon),
  a[data-variant='error'] > wui-icon:not(.image-icon) {
    width: 12px;
    height: 12px;
  }

  a[data-variant='fill']:focus-visible {
    background-color: var(--wui-color-accent-090);
  }

  a[data-variant='shade']:focus-visible,
  a[data-variant='shadeSmall']:focus-visible {
    background-color: var(--wui-color-gray-glass-015);
  }

  a[data-variant='transparent']:focus-visible {
    background-color: var(--wui-color-gray-glass-005);
  }

  a[data-variant='success']:focus-visible {
    background-color: var(--wui-color-success-glass-015);
  }

  a[data-variant='error']:focus-visible {
    background-color: var(--wui-color-error-glass-015);
  }

  a.disabled {
    color: var(--wui-color-gray-glass-015);
    background-color: var(--wui-color-gray-glass-015);
    pointer-events: none;
  }

  @media (hover: hover) and (pointer: fine) {
    a[data-variant='fill']:hover {
      background-color: var(--wui-color-accent-090);
    }

    a[data-variant='shade']:hover,
    a[data-variant='shadeSmall']:hover {
      background-color: var(--wui-color-gray-glass-015);
    }

    a[data-variant='transparent']:hover {
      background-color: var(--wui-color-gray-glass-005);
    }

    a[data-variant='success']:hover {
      background-color: var(--wui-color-success-glass-015);
    }

    a[data-variant='error']:hover {
      background-color: var(--wui-color-error-glass-015);
    }
  }

  a[data-variant='fill']:active {
    background-color: var(--wui-color-accent-080);
  }

  a[data-variant='shade']:active,
  a[data-variant='shadeSmall']:active {
    background-color: var(--wui-color-gray-glass-020);
  }

  a[data-variant='transparent']:active {
    background-color: var(--wui-color-gray-glass-010);
  }

  a[data-variant='success']:active {
    background-color: var(--wui-color-success-glass-020);
  }

  a[data-variant='error']:active {
    background-color: var(--wui-color-error-glass-020);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-chip/index.js
var __decorate20 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiChip = class WuiChip2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "fill";
    this.imageSrc = void 0;
    this.imageIcon = void 0;
    this.imageIconSize = "md";
    this.disabled = false;
    this.icon = "externalLink";
    this.href = "";
    this.text = void 0;
  }
  render() {
    const isSmall = this.variant === "success" || this.variant === "transparent" || this.variant === "shadeSmall";
    const textVariant = isSmall ? "small-600" : "paragraph-600";
    return html`
      <a
        rel="noreferrer"
        target="_blank"
        href=${this.href}
        class=${this.disabled ? "disabled" : ""}
        data-variant=${this.variant}
      >
        ${this.imageTemplate()}
        <wui-text variant=${textVariant} color="inherit">
          ${this.title ? this.title : UiHelperUtil.getHostName(this.href)}
        </wui-text>
        <wui-icon name=${this.icon} color="inherit" size="inherit"></wui-icon>
      </a>
    `;
  }
  imageTemplate() {
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc}></wui-image>`;
    }
    if (this.imageIcon) {
      return html`<wui-icon
        name=${this.imageIcon}
        color="inherit"
        size=${this.imageIconSize}
        class="image-icon"
      ></wui-icon>`;
    }
    return null;
  }
};
WuiChip.styles = [resetStyles, elementStyles, styles_default20];
__decorate20([
  property()
], WuiChip.prototype, "variant", void 0);
__decorate20([
  property()
], WuiChip.prototype, "imageSrc", void 0);
__decorate20([
  property()
], WuiChip.prototype, "imageIcon", void 0);
__decorate20([
  property()
], WuiChip.prototype, "imageIconSize", void 0);
__decorate20([
  property({ type: Boolean })
], WuiChip.prototype, "disabled", void 0);
__decorate20([
  property()
], WuiChip.prototype, "icon", void 0);
__decorate20([
  property()
], WuiChip.prototype, "href", void 0);
__decorate20([
  property()
], WuiChip.prototype, "text", void 0);
WuiChip = __decorate20([
  customElement("wui-chip")
], WuiChip);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-connect-button/styles.js
var styles_default21 = css`
  :host {
    position: relative;
    display: block;
  }

  button {
    background: var(--wui-color-accent-100);
    border: 1px solid var(--wui-color-gray-glass-010);
    border-radius: var(--wui-border-radius-m);
    gap: var(--wui-spacing-xs);
  }

  button.loading {
    background: var(--wui-color-gray-glass-010);
    border: 1px solid var(--wui-color-gray-glass-010);
    pointer-events: none;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-015);
    border: 1px solid var(--wui-color-gray-glass-010);
  }

  button:disabled > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-accent-090);
    }

    button:active:enabled {
      background-color: var(--wui-color-accent-080);
    }
  }

  button:focus-visible {
    border: 1px solid var(--wui-color-gray-glass-010);
    background-color: var(--wui-color-accent-090);
    -webkit-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    -moz-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
  }

  button[data-size='sm'] {
    padding: 6.75px 10px 7.25px;
  }

  ::slotted(*) {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
  }

  button > wui-text {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
    color: var(--wui-color-inverse-100);
  }

  button[data-size='md'] {
    padding: 9px var(--wui-spacing-l) 9px var(--wui-spacing-l);
  }

  button[data-size='md'] + wui-text {
    padding-left: var(--wui-spacing-3xs);
  }

  @media (max-width: 500px) {
    button[data-size='md'] {
      height: 32px;
      padding: 5px 12px;
    }

    button[data-size='md'] > wui-text > slot {
      font-size: 14px !important;
    }
  }

  wui-loading-spinner {
    width: 14px;
    height: 14px;
  }

  wui-loading-spinner::slotted(svg) {
    width: 10px !important;
    height: 10px !important;
  }

  button[data-size='sm'] > wui-loading-spinner {
    width: 12px;
    height: 12px;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-connect-button/index.js
var __decorate21 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiConnectButton = class WuiConnectButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "md";
    this.loading = false;
  }
  render() {
    const textVariant = this.size === "md" ? "paragraph-600" : "small-600";
    return html`
      <button data-size=${this.size} ?disabled=${this.loading}>
        ${this.loadingTemplate()}
        <wui-text variant=${textVariant} color=${this.loading ? "accent-100" : "inherit"}>
          <slot></slot>
        </wui-text>
      </button>
    `;
  }
  loadingTemplate() {
    if (!this.loading) {
      return null;
    }
    return html`<wui-loading-spinner size=${this.size} color="accent-100"></wui-loading-spinner>`;
  }
};
WuiConnectButton.styles = [resetStyles, elementStyles, styles_default21];
__decorate21([
  property()
], WuiConnectButton.prototype, "size", void 0);
__decorate21([
  property({ type: Boolean })
], WuiConnectButton.prototype, "loading", void 0);
WuiConnectButton = __decorate21([
  customElement("wui-connect-button")
], WuiConnectButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-cta-button/styles.js
var styles_default22 = css`
  wui-flex {
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-cta-button/index.js
var __decorate22 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiCtaButton = class WuiCtaButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.label = "";
    this.buttonLabel = "";
  }
  render() {
    return html`
      <wui-flex
        justifyContent="space-between"
        alignItems="center"
        .padding=${["1xs", "2l", "1xs", "2l"]}
      >
        <wui-text variant="paragraph-500" color="fg-200">${this.label}</wui-text>
        <wui-chip-button size="sm" variant="shade" text=${this.buttonLabel} icon="chevronRight">
        </wui-chip-button>
      </wui-flex>
    `;
  }
};
WuiCtaButton.styles = [resetStyles, elementStyles, styles_default22];
__decorate22([
  property({ type: Boolean })
], WuiCtaButton.prototype, "disabled", void 0);
__decorate22([
  property()
], WuiCtaButton.prototype, "label", void 0);
__decorate22([
  property()
], WuiCtaButton.prototype, "buttonLabel", void 0);
WuiCtaButton = __decorate22([
  customElement("wui-cta-button")
], WuiCtaButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-details-group/styles.js
var styles_default23 = css`
  :host {
    display: block;
    padding: var(--wui-spacing-l) var(--wui-spacing-m);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    width: 100%;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-details-group/index.js
var __decorate23 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiDetailsGroup = class WuiDetailsGroup2 extends LitElement {
  render() {
    return html`
      <wui-flex gap="xl" flexDirection="column" justifyContent="space-between" alignItems="center">
        <slot></slot>
      </wui-flex>
    `;
  }
};
WuiDetailsGroup.styles = [resetStyles, elementStyles, styles_default23];
WuiDetailsGroup = __decorate23([
  customElement("wui-details-group")
], WuiDetailsGroup);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-details-group-item/styles.js
var styles_default24 = css`
  :host {
    display: flex;
    flex-direction: row;
    gap: var(--wui-spacing-l);
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-details-group-item/index.js
var __decorate24 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiDetailsGroupItem = class WuiDetailsGroupItem2 extends LitElement {
  constructor() {
    super(...arguments);
    this.name = "";
  }
  render() {
    return html`
      <wui-flex justifyContent="space-between" alignItems="center">
        <wui-text variant="paragraph-500" color="fg-200">${this.name}</wui-text>
        <wui-flex gap="xs" alignItems="center">
          <slot></slot>
        </wui-flex>
      </wui-flex>
    `;
  }
};
WuiDetailsGroupItem.styles = [resetStyles, elementStyles, styles_default24];
__decorate24([
  property()
], WuiDetailsGroupItem.prototype, "name", void 0);
WuiDetailsGroupItem = __decorate24([
  customElement("wui-details-group-item")
], WuiDetailsGroupItem);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-dropdown-menu/styles.js
var styles_default25 = css`
  :host {
    z-index: calc(var(--w3m-z-index) + 1);
    width: 200px;
    padding: var(--wui-spacing-3xs);
    align-items: center;
    display: inherit;
    border-radius: var(--wui-border-radius-xs);
    border: 1px solid var(--wui-color-gray-glass-002);
    background: var(--wui-color-fg-base-125);
    /* Dark/Elevation/L */
    box-shadow:
      0px 8px 22px -6px rgba(0, 0, 0, 0.12),
      0px 14px 64px -4px rgba(0, 0, 0, 0.12);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-dropdown-menu/index.js
var __decorate25 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiDropdownMenu = class WuiDropdownMenu2 extends LitElement {
  constructor() {
    super(...arguments);
    this.actions = [];
    this.isOpen = false;
  }
  render() {
    if (!this.isOpen) {
      return null;
    }
    return html`
      <wui-flex flexDirection="column" gap="4xs">
        ${this.actions.map((action) => html`
            <wui-list-item
              icon=${action.icon}
              iconSize="sm"
              variant="icon"
              @click=${action.onClick}
            >
              <wui-text variant="small-400" color="fg-100">${action.label}</wui-text>
            </wui-list-item>
          `)}
      </wui-flex>
    `;
  }
};
WuiDropdownMenu.styles = [resetStyles, elementStyles, styles_default25];
__decorate25([
  property({ type: Array })
], WuiDropdownMenu.prototype, "actions", void 0);
__decorate25([
  property({ type: Boolean })
], WuiDropdownMenu.prototype, "isOpen", void 0);
WuiDropdownMenu = __decorate25([
  customElement("wui-dropdown-menu")
], WuiDropdownMenu);

// node_modules/lit-html/development/directive-helpers.js
var { _ChildPart: ChildPart2 } = _$LH;
var ENABLE_SHADYDOM_NOPATCH2 = true;
var _a4, _b2;
var wrap2 = ENABLE_SHADYDOM_NOPATCH2 && ((_a4 = window.ShadyDOM) == null ? void 0 : _a4.inUse) && ((_b2 = window.ShadyDOM) == null ? void 0 : _b2.noPatch) === true ? window.ShadyDOM.wrap : (node) => node;
var isSingleExpression = (part) => part.strings === void 0;

// node_modules/lit-html/development/async-directive.js
var DEV_MODE6 = true;
var notifyChildrenConnectedChanged = (parent2, isConnected) => {
  var _a7;
  const children = parent2._$disconnectableChildren;
  if (children === void 0) {
    return false;
  }
  for (const obj of children) {
    (_a7 = obj["_$notifyDirectiveConnectionChanged"]) == null ? void 0 : _a7.call(obj, isConnected, false);
    notifyChildrenConnectedChanged(obj, isConnected);
  }
  return true;
};
var removeDisconnectableFromParent = (obj) => {
  let parent2, children;
  do {
    if ((parent2 = obj._$parent) === void 0) {
      break;
    }
    children = parent2._$disconnectableChildren;
    children.delete(obj);
    obj = parent2;
  } while ((children == null ? void 0 : children.size) === 0);
};
var addDisconnectableToParent = (obj) => {
  for (let parent2; parent2 = obj._$parent; obj = parent2) {
    let children = parent2._$disconnectableChildren;
    if (children === void 0) {
      parent2._$disconnectableChildren = children = /* @__PURE__ */ new Set();
    } else if (children.has(obj)) {
      break;
    }
    children.add(obj);
    installDisconnectAPI(parent2);
  }
};
function reparentDisconnectables(newParent) {
  if (this._$disconnectableChildren !== void 0) {
    removeDisconnectableFromParent(this);
    this._$parent = newParent;
    addDisconnectableToParent(this);
  } else {
    this._$parent = newParent;
  }
}
function notifyChildPartConnectedChanged(isConnected, isClearingValue = false, fromPartIndex = 0) {
  const value = this._$committedValue;
  const children = this._$disconnectableChildren;
  if (children === void 0 || children.size === 0) {
    return;
  }
  if (isClearingValue) {
    if (Array.isArray(value)) {
      for (let i4 = fromPartIndex; i4 < value.length; i4++) {
        notifyChildrenConnectedChanged(value[i4], false);
        removeDisconnectableFromParent(value[i4]);
      }
    } else if (value != null) {
      notifyChildrenConnectedChanged(value, false);
      removeDisconnectableFromParent(value);
    }
  } else {
    notifyChildrenConnectedChanged(this, isConnected);
  }
}
var installDisconnectAPI = (obj) => {
  if (obj.type == PartType.CHILD) {
    obj._$notifyConnectionChanged ?? (obj._$notifyConnectionChanged = notifyChildPartConnectedChanged);
    obj._$reparentDisconnectables ?? (obj._$reparentDisconnectables = reparentDisconnectables);
  }
};
var AsyncDirective = class extends Directive {
  constructor() {
    super(...arguments);
    this._$disconnectableChildren = void 0;
  }
  /**
   * Initialize the part with internal fields
   * @param part
   * @param parent
   * @param attributeIndex
   */
  _$initialize(part, parent2, attributeIndex) {
    super._$initialize(part, parent2, attributeIndex);
    addDisconnectableToParent(this);
    this.isConnected = part._$isConnected;
  }
  // This property needs to remain unminified.
  /**
   * Called from the core code when a directive is going away from a part (in
   * which case `shouldRemoveFromParent` should be true), and from the
   * `setChildrenConnected` helper function when recursively changing the
   * connection state of a tree (in which case `shouldRemoveFromParent` should
   * be false).
   *
   * @param isConnected
   * @param isClearingDirective - True when the directive itself is being
   *     removed; false when the tree is being disconnected
   * @internal
   */
  ["_$notifyDirectiveConnectionChanged"](isConnected, isClearingDirective = true) {
    var _a7, _b3;
    if (isConnected !== this.isConnected) {
      this.isConnected = isConnected;
      if (isConnected) {
        (_a7 = this.reconnected) == null ? void 0 : _a7.call(this);
      } else {
        (_b3 = this.disconnected) == null ? void 0 : _b3.call(this);
      }
    }
    if (isClearingDirective) {
      notifyChildrenConnectedChanged(this, isConnected);
      removeDisconnectableFromParent(this);
    }
  }
  /**
   * Sets the value of the directive's Part outside the normal `update`/`render`
   * lifecycle of a directive.
   *
   * This method should not be called synchronously from a directive's `update`
   * or `render`.
   *
   * @param directive The directive to update
   * @param value The value to set
   */
  setValue(value) {
    if (isSingleExpression(this.__part)) {
      this.__part._$setValue(value, this);
    } else {
      if (DEV_MODE6 && this.__attributeIndex === void 0) {
        throw new Error(`Expected this.__attributeIndex to be a number`);
      }
      const newValues = [...this.__part._$committedValue];
      newValues[this.__attributeIndex] = value;
      this.__part._$setValue(newValues, this, 0);
    }
  }
  /**
   * User callbacks for implementing logic to release any resources/subscriptions
   * that may have been retained by this directive. Since directives may also be
   * re-connected, `reconnected` should also be implemented to restore the
   * working state of the directive prior to the next render.
   */
  disconnected() {
  }
  reconnected() {
  }
};

// node_modules/lit-html/development/directives/ref.js
var createRef = () => new Ref();
var Ref = class {
};
var lastElementForContextAndCallback = /* @__PURE__ */ new WeakMap();
var RefDirective = class extends AsyncDirective {
  render(_ref) {
    return nothing;
  }
  update(part, [ref3]) {
    var _a7;
    const refChanged = ref3 !== this._ref;
    if (refChanged && this._ref !== void 0) {
      this._updateRefValue(void 0);
    }
    if (refChanged || this._lastElementForRef !== this._element) {
      this._ref = ref3;
      this._context = (_a7 = part.options) == null ? void 0 : _a7.host;
      this._updateRefValue(this._element = part.element);
    }
    return nothing;
  }
  _updateRefValue(element) {
    if (!this.isConnected) {
      element = void 0;
    }
    if (typeof this._ref === "function") {
      const context = this._context ?? globalThis;
      let lastElementForCallback = lastElementForContextAndCallback.get(context);
      if (lastElementForCallback === void 0) {
        lastElementForCallback = /* @__PURE__ */ new WeakMap();
        lastElementForContextAndCallback.set(context, lastElementForCallback);
      }
      if (lastElementForCallback.get(this._ref) !== void 0) {
        this._ref.call(this._context, void 0);
      }
      lastElementForCallback.set(this._ref, element);
      if (element !== void 0) {
        this._ref.call(this._context, element);
      }
    } else {
      this._ref.value = element;
    }
  }
  get _lastElementForRef() {
    var _a7, _b3;
    return typeof this._ref === "function" ? (_a7 = lastElementForContextAndCallback.get(this._context ?? globalThis)) == null ? void 0 : _a7.get(this._ref) : (_b3 = this._ref) == null ? void 0 : _b3.value;
  }
  disconnected() {
    if (this._lastElementForRef === this._element) {
      this._updateRefValue(void 0);
    }
  }
  reconnected() {
    this._updateRefValue(this._element);
  }
};
var ref = directive(RefDirective);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-input-text/styles.js
var styles_default26 = css`
  :host {
    position: relative;
    width: 100%;
    display: inline-block;
    color: var(--wui-color-fg-275);
  }

  input {
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    background: var(--wui-color-gray-glass-002);
    font-size: var(--wui-font-size-paragraph);
    letter-spacing: var(--wui-letter-spacing-paragraph);
    color: var(--wui-color-fg-100);
    transition:
      background-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      border-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      box-shadow var(--wui-ease-inout-power-1) var(--wui-duration-md);
    will-change: background-color, border-color, box-shadow;
    caret-color: var(--wui-color-accent-100);
  }

  input:disabled {
    cursor: not-allowed;
    border: 1px solid var(--wui-color-gray-glass-010);
  }

  input:disabled::placeholder,
  input:disabled + wui-icon {
    color: var(--wui-color-fg-300);
  }

  input::placeholder {
    color: var(--wui-color-fg-275);
  }

  input:focus:enabled {
    background-color: var(--wui-color-gray-glass-005);
    -webkit-box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0px 0px 0px 4px var(--wui-box-shadow-blue);
    -moz-box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0px 0px 0px 4px var(--wui-box-shadow-blue);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0px 0px 0px 4px var(--wui-box-shadow-blue);
  }

  input:hover:enabled {
    background-color: var(--wui-color-gray-glass-005);
  }

  wui-icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
  }

  .wui-size-sm {
    padding: 9px var(--wui-spacing-m) 10px var(--wui-spacing-s);
  }

  wui-icon + .wui-size-sm {
    padding: 9px var(--wui-spacing-m) 10px 36px;
  }

  wui-icon[data-input='sm'] {
    left: var(--wui-spacing-s);
  }

  .wui-size-md {
    padding: 15px var(--wui-spacing-m) var(--wui-spacing-l) var(--wui-spacing-m);
  }

  wui-icon + .wui-size-md,
  wui-loading-spinner + .wui-size-md {
    padding: 10.5px var(--wui-spacing-3xl) 10.5px var(--wui-spacing-3xl);
  }

  wui-icon[data-input='md'] {
    left: var(--wui-spacing-l);
  }

  .wui-size-lg {
    padding: var(--wui-spacing-s) var(--wui-spacing-s) var(--wui-spacing-s) var(--wui-spacing-l);
    letter-spacing: var(--wui-letter-spacing-medium-title);
    font-size: var(--wui-font-size-medium-title);
    font-weight: var(--wui-font-weight-light);
    line-height: 130%;
    color: var(--wui-color-fg-100);
    height: 64px;
  }

  .wui-padding-right-xs {
    padding-right: var(--wui-spacing-xs);
  }

  .wui-padding-right-s {
    padding-right: var(--wui-spacing-s);
  }

  .wui-padding-right-m {
    padding-right: var(--wui-spacing-m);
  }

  .wui-padding-right-l {
    padding-right: var(--wui-spacing-l);
  }

  .wui-padding-right-xl {
    padding-right: var(--wui-spacing-xl);
  }

  .wui-padding-right-2xl {
    padding-right: var(--wui-spacing-2xl);
  }

  .wui-padding-right-3xl {
    padding-right: var(--wui-spacing-3xl);
  }

  .wui-padding-right-4xl {
    padding-right: var(--wui-spacing-4xl);
  }

  .wui-padding-right-5xl {
    padding-right: var(--wui-spacing-5xl);
  }

  wui-icon + .wui-size-lg,
  wui-loading-spinner + .wui-size-lg {
    padding-left: 50px;
  }

  wui-icon[data-input='lg'] {
    left: var(--wui-spacing-l);
  }

  .wui-size-mdl {
    padding: 17.25px var(--wui-spacing-m) 17.25px var(--wui-spacing-m);
  }
  wui-icon + .wui-size-mdl,
  wui-loading-spinner + .wui-size-mdl {
    padding: 17.25px var(--wui-spacing-3xl) 17.25px 40px;
  }
  wui-icon[data-input='mdl'] {
    left: var(--wui-spacing-m);
  }

  input:placeholder-shown ~ ::slotted(wui-input-element),
  input:placeholder-shown ~ ::slotted(wui-icon) {
    opacity: 0;
    pointer-events: none;
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type='number'] {
    -moz-appearance: textfield;
  }

  ::slotted(wui-input-element),
  ::slotted(wui-icon) {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }

  ::slotted(wui-input-element) {
    right: var(--wui-spacing-m);
  }

  ::slotted(wui-icon) {
    right: 0px;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-input-text/index.js
var __decorate26 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiInputText = class WuiInputText2 extends LitElement {
  constructor() {
    super(...arguments);
    this.inputElementRef = createRef();
    this.size = "md";
    this.disabled = false;
    this.placeholder = "";
    this.type = "text";
    this.value = "";
  }
  render() {
    const inputClass = `wui-padding-right-${this.inputRightPadding}`;
    const sizeClass = `wui-size-${this.size}`;
    const classes = {
      [sizeClass]: true,
      [inputClass]: Boolean(this.inputRightPadding)
    };
    return html`${this.templateIcon()}
      <input
        data-testid="wui-input-text"
        ${ref(this.inputElementRef)}
        class=${classMap(classes)}
        type=${this.type}
        enterkeyhint=${ifDefined(this.enterKeyHint)}
        ?disabled=${this.disabled}
        placeholder=${this.placeholder}
        @input=${this.dispatchInputChangeEvent.bind(this)}
        .value=${this.value || ""}
        tabindex=${ifDefined(this.tabIdx)}
      />
      <slot></slot>`;
  }
  templateIcon() {
    if (this.icon) {
      return html`<wui-icon
        data-input=${this.size}
        size=${this.size}
        color="inherit"
        name=${this.icon}
      ></wui-icon>`;
    }
    return null;
  }
  dispatchInputChangeEvent() {
    var _a7;
    this.dispatchEvent(new CustomEvent("inputChange", {
      detail: (_a7 = this.inputElementRef.value) == null ? void 0 : _a7.value,
      bubbles: true,
      composed: true
    }));
  }
};
WuiInputText.styles = [resetStyles, elementStyles, styles_default26];
__decorate26([
  property()
], WuiInputText.prototype, "size", void 0);
__decorate26([
  property()
], WuiInputText.prototype, "icon", void 0);
__decorate26([
  property({ type: Boolean })
], WuiInputText.prototype, "disabled", void 0);
__decorate26([
  property()
], WuiInputText.prototype, "placeholder", void 0);
__decorate26([
  property()
], WuiInputText.prototype, "type", void 0);
__decorate26([
  property()
], WuiInputText.prototype, "keyHint", void 0);
__decorate26([
  property()
], WuiInputText.prototype, "value", void 0);
__decorate26([
  property()
], WuiInputText.prototype, "inputRightPadding", void 0);
__decorate26([
  property()
], WuiInputText.prototype, "tabIdx", void 0);
WuiInputText = __decorate26([
  customElement("wui-input-text")
], WuiInputText);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-email-input/styles.js
var styles_default27 = css`
  :host {
    position: relative;
    display: inline-block;
  }

  wui-text {
    margin: var(--wui-spacing-xxs) var(--wui-spacing-m) var(--wui-spacing-0) var(--wui-spacing-m);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-email-input/index.js
var __decorate27 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiEmailInput = class WuiEmailInput2 extends LitElement {
  constructor() {
    super(...arguments);
    this.disabled = false;
  }
  render() {
    return html`
      <wui-input-text
        type="email"
        placeholder="Email"
        icon="mail"
        size="mdl"
        .disabled=${this.disabled}
        .value=${this.value}
        data-testid="wui-email-input"
        tabIdx=${ifDefined(this.tabIdx)}
      ></wui-input-text>
      ${this.templateError()}
    `;
  }
  templateError() {
    if (this.errorMessage) {
      return html`<wui-text variant="tiny-500" color="error-100">${this.errorMessage}</wui-text>`;
    }
    return null;
  }
};
WuiEmailInput.styles = [resetStyles, styles_default27];
__decorate27([
  property()
], WuiEmailInput.prototype, "errorMessage", void 0);
__decorate27([
  property({ type: Boolean })
], WuiEmailInput.prototype, "disabled", void 0);
__decorate27([
  property()
], WuiEmailInput.prototype, "value", void 0);
__decorate27([
  property()
], WuiEmailInput.prototype, "tabIdx", void 0);
WuiEmailInput = __decorate27([
  customElement("wui-email-input")
], WuiEmailInput);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-ens-input/styles.js
var styles_default28 = css`
  :host {
    position: relative;
    width: 100%;
    display: inline-block;
    color: var(--wui-color-fg-275);
  }

  .error {
    margin: var(--wui-spacing-xxs) var(--wui-spacing-m) var(--wui-spacing-0) var(--wui-spacing-m);
  }

  .base-name {
    position: absolute;
    right: 45px;
    top: 15px;
    text-align: right;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-ens-input/index.js
var __decorate28 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiEnsInput = class WuiEnsInput2 extends LitElement {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.loading = false;
  }
  render() {
    return html`
      <wui-input-text
        value=${ifDefined(this.value)}
        ?disabled=${this.disabled}
        .value=${this.value || ""}
        data-testid="wui-ens-input"
        inputRightPadding="5xl"
      >
        ${this.baseNameTemplate()} ${this.errorTemplate()}${this.loadingTemplate()}
      </wui-input-text>
    `;
  }
  baseNameTemplate() {
    return html`<wui-text variant="paragraph-400" color="fg-200" class="base-name">
      ${ConstantsUtil.WC_NAME_SUFFIX}
    </wui-text>`;
  }
  loadingTemplate() {
    return this.loading ? html`<wui-loading-spinner size="md" color="accent-100"></wui-loading-spinner>` : null;
  }
  errorTemplate() {
    if (this.errorMessage) {
      return html`<wui-text variant="tiny-500" color="error-100" class="error"
        >${this.errorMessage}</wui-text
      >`;
    }
    return null;
  }
};
WuiEnsInput.styles = [resetStyles, styles_default28];
__decorate28([
  property()
], WuiEnsInput.prototype, "errorMessage", void 0);
__decorate28([
  property({ type: Boolean })
], WuiEnsInput.prototype, "disabled", void 0);
__decorate28([
  property()
], WuiEnsInput.prototype, "value", void 0);
__decorate28([
  property({ type: Boolean })
], WuiEnsInput.prototype, "loading", void 0);
WuiEnsInput = __decorate28([
  customElement("wui-ens-input")
], WuiEnsInput);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-icon-link/styles.js
var styles_default29 = css`
  button {
    border-radius: var(--local-border-radius);
    color: var(--wui-color-fg-100);
    padding: var(--local-padding);
  }

  @media (max-width: 700px) {
    button {
      padding: var(--wui-spacing-s);
    }
  }

  button > wui-icon {
    pointer-events: none;
  }

  button:disabled > wui-icon {
    color: var(--wui-color-bg-300) !important;
  }

  button:disabled {
    background-color: transparent;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-icon-link/index.js
var __decorate29 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiIconLink = class WuiIconLink2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "md";
    this.disabled = false;
    this.icon = "copy";
    this.iconColor = "inherit";
  }
  render() {
    const borderRadius = this.size === "lg" ? "--wui-border-radius-xs" : "--wui-border-radius-xxs";
    const padding = this.size === "lg" ? "--wui-spacing-1xs" : "--wui-spacing-2xs";
    this.style.cssText = `
    --local-border-radius: var(${borderRadius});
    --local-padding: var(${padding});
`;
    return html`
      <button ?disabled=${this.disabled}>
        <wui-icon color=${this.iconColor} size=${this.size} name=${this.icon}></wui-icon>
      </button>
    `;
  }
};
WuiIconLink.styles = [resetStyles, elementStyles, colorStyles, styles_default29];
__decorate29([
  property()
], WuiIconLink.prototype, "size", void 0);
__decorate29([
  property({ type: Boolean })
], WuiIconLink.prototype, "disabled", void 0);
__decorate29([
  property()
], WuiIconLink.prototype, "icon", void 0);
__decorate29([
  property()
], WuiIconLink.prototype, "iconColor", void 0);
WuiIconLink = __decorate29([
  customElement("wui-icon-link")
], WuiIconLink);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-input-element/styles.js
var styles_default30 = css`
  button {
    background-color: var(--wui-color-fg-300);
    border-radius: var(--wui-border-radius-4xs);
    width: 16px;
    height: 16px;
  }

  button:disabled {
    background-color: var(--wui-color-bg-300);
  }

  wui-icon {
    color: var(--wui-color-bg-200) !important;
  }

  button:focus-visible {
    background-color: var(--wui-color-fg-250);
    border: 1px solid var(--wui-color-accent-100);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-fg-250);
    }

    button:active:enabled {
      background-color: var(--wui-color-fg-225);
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-input-element/index.js
var __decorate30 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiInputElement = class WuiInputElement2 extends LitElement {
  constructor() {
    super(...arguments);
    this.icon = "copy";
  }
  render() {
    return html`
      <button>
        <wui-icon color="inherit" size="xxs" name=${this.icon}></wui-icon>
      </button>
    `;
  }
};
WuiInputElement.styles = [resetStyles, elementStyles, styles_default30];
__decorate30([
  property()
], WuiInputElement.prototype, "icon", void 0);
WuiInputElement = __decorate30([
  customElement("wui-input-element")
], WuiInputElement);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-input-numeric/styles.js
var styles_default31 = css`
  :host {
    position: relative;
    display: inline-block;
  }

  input {
    width: 50px;
    height: 50px;
    background: var(--wui-color-gray-glass-010);
    border-radius: var(--wui-border-radius-xs);
    border: 1px solid var(--wui-color-gray-glass-005);
    font-family: var(--wui-font-family);
    font-size: var(--wui-font-size-large);
    font-weight: var(--wui-font-weight-regular);
    letter-spacing: var(--wui-letter-spacing-large);
    text-align: center;
    color: var(--wui-color-fg-100);
    caret-color: var(--wui-color-accent-100);
    transition:
      background-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      border-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      box-shadow var(--wui-ease-inout-power-1) var(--wui-duration-md);
    will-change: background-color, border-color, box-shadow;
    box-sizing: border-box;
    -webkit-appearance: none;
    -moz-appearance: textfield;
    padding: 0px;
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type='number'] {
    -moz-appearance: textfield;
  }

  input:disabled {
    cursor: not-allowed;
    border: 1px solid var(--wui-color-gray-glass-010);
    background: var(--wui-color-gray-glass-005);
  }

  input:focus:enabled {
    background-color: var(--wui-color-gray-glass-015);
    border: 1px solid var(--wui-color-accent-100);
    -webkit-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    -moz-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
  }

  @media (hover: hover) and (pointer: fine) {
    input:hover:enabled {
      background-color: var(--wui-color-gray-glass-015);
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-input-numeric/index.js
var __decorate31 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiInputNumeric = class WuiInputNumeric2 extends LitElement {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.value = "";
  }
  render() {
    return html`<input
      type="number"
      maxlength="1"
      inputmode="numeric"
      autofocus
      ?disabled=${this.disabled}
      value=${this.value}
    /> `;
  }
};
WuiInputNumeric.styles = [resetStyles, elementStyles, styles_default31];
__decorate31([
  property({ type: Boolean })
], WuiInputNumeric.prototype, "disabled", void 0);
__decorate31([
  property({ type: String })
], WuiInputNumeric.prototype, "value", void 0);
WuiInputNumeric = __decorate31([
  customElement("wui-input-numeric")
], WuiInputNumeric);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-link/styles.js
var styles_default32 = css`
  button {
    padding: var(--wui-spacing-4xs) var(--wui-spacing-xxs);
    border-radius: var(--wui-border-radius-3xs);
    background-color: transparent;
    color: var(--wui-color-accent-100);
  }

  button:disabled {
    background-color: transparent;
    color: var(--wui-color-gray-glass-015);
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-005);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-link/index.js
var __decorate32 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiLink = class WuiLink2 extends LitElement {
  constructor() {
    super(...arguments);
    this.tabIdx = void 0;
    this.disabled = false;
    this.color = "inherit";
  }
  render() {
    return html`
      <button ?disabled=${this.disabled} tabindex=${ifDefined(this.tabIdx)}>
        <slot name="iconLeft"></slot>
        <wui-text variant="small-600" color=${this.color}>
          <slot></slot>
        </wui-text>
        <slot name="iconRight"></slot>
      </button>
    `;
  }
};
WuiLink.styles = [resetStyles, elementStyles, styles_default32];
__decorate32([
  property()
], WuiLink.prototype, "tabIdx", void 0);
__decorate32([
  property({ type: Boolean })
], WuiLink.prototype, "disabled", void 0);
__decorate32([
  property()
], WuiLink.prototype, "color", void 0);
WuiLink = __decorate32([
  customElement("wui-link")
], WuiLink);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-item/styles.js
var styles_default33 = css`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 11px 18px 11px var(--wui-spacing-s);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
    transition:
      color var(--wui-ease-out-power-1) var(--wui-duration-md),
      background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: color, background-color;
  }

  button[data-iconvariant='square'],
  button[data-iconvariant='square-blue'] {
    padding: 6px 18px 6px 9px;
  }

  button > wui-flex {
    flex: 1;
  }

  button > wui-image {
    width: 32px;
    height: 32px;
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
    border-radius: var(--wui-border-radius-3xl);
  }

  button > wui-icon {
    width: 36px;
    height: 36px;
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
  }

  button > wui-icon-box[data-variant='blue'] {
    box-shadow: 0 0 0 2px var(--wui-color-accent-glass-005);
  }

  button > wui-icon-box[data-variant='overlay'] {
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
  }

  button > wui-icon-box[data-variant='square-blue'] {
    border-radius: var(--wui-border-radius-3xs);
    position: relative;
    border: none;
    width: 36px;
    height: 36px;
  }

  button > wui-icon-box[data-variant='square-blue']::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    border: 1px solid var(--wui-color-accent-glass-010);
    pointer-events: none;
  }

  button > wui-icon:last-child {
    width: 14px;
    height: 14px;
  }

  button:disabled {
    color: var(--wui-color-gray-glass-020);
  }

  button[data-loading='true'] > wui-icon {
    opacity: 0;
  }

  wui-loading-spinner {
    position: absolute;
    right: 18px;
    top: 50%;
    transform: translateY(-50%);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-item/index.js
var __decorate33 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListItem = class WuiListItem2 extends LitElement {
  constructor() {
    super(...arguments);
    this.tabIdx = void 0;
    this.variant = "icon";
    this.disabled = false;
    this.imageSrc = void 0;
    this.alt = void 0;
    this.chevron = false;
    this.loading = false;
  }
  render() {
    return html`
      <button
        ?disabled=${this.loading ? true : Boolean(this.disabled)}
        data-loading=${this.loading}
        data-iconvariant=${ifDefined(this.iconVariant)}
        tabindex=${ifDefined(this.tabIdx)}
      >
        ${this.loadingTemplate()} ${this.visualTemplate()}
        <wui-flex gap="3xs">
          <slot></slot>
        </wui-flex>
        ${this.chevronTemplate()}
      </button>
    `;
  }
  visualTemplate() {
    if (this.variant === "image" && this.imageSrc) {
      return html`<wui-image src=${this.imageSrc} alt=${this.alt ?? "list item"}></wui-image>`;
    }
    if (this.iconVariant === "square" && this.icon && this.variant === "icon") {
      return html`<wui-icon name=${this.icon}></wui-icon>`;
    }
    if (this.variant === "icon" && this.icon && this.iconVariant) {
      const color = ["blue", "square-blue"].includes(this.iconVariant) ? "accent-100" : "fg-200";
      const size = this.iconVariant === "square-blue" ? "mdl" : "md";
      const iconSize = this.iconSize ? this.iconSize : size;
      return html`
        <wui-icon-box
          data-variant=${this.iconVariant}
          icon=${this.icon}
          iconSize=${iconSize}
          background="transparent"
          iconColor=${color}
          backgroundColor=${color}
          size=${size}
        ></wui-icon-box>
      `;
    }
    return null;
  }
  loadingTemplate() {
    if (this.loading) {
      return html`<wui-loading-spinner color="fg-300"></wui-loading-spinner>`;
    }
    return html``;
  }
  chevronTemplate() {
    if (this.chevron) {
      return html`<wui-icon size="inherit" color="fg-200" name="chevronRight"></wui-icon>`;
    }
    return null;
  }
};
WuiListItem.styles = [resetStyles, elementStyles, styles_default33];
__decorate33([
  property()
], WuiListItem.prototype, "icon", void 0);
__decorate33([
  property()
], WuiListItem.prototype, "iconSize", void 0);
__decorate33([
  property()
], WuiListItem.prototype, "tabIdx", void 0);
__decorate33([
  property()
], WuiListItem.prototype, "variant", void 0);
__decorate33([
  property()
], WuiListItem.prototype, "iconVariant", void 0);
__decorate33([
  property({ type: Boolean })
], WuiListItem.prototype, "disabled", void 0);
__decorate33([
  property()
], WuiListItem.prototype, "imageSrc", void 0);
__decorate33([
  property()
], WuiListItem.prototype, "alt", void 0);
__decorate33([
  property({ type: Boolean })
], WuiListItem.prototype, "chevron", void 0);
__decorate33([
  property({ type: Boolean })
], WuiListItem.prototype, "loading", void 0);
WuiListItem = __decorate33([
  customElement("wui-list-item")
], WuiListItem);

// node_modules/@reown/appkit-ui/dist/esm/src/utils/TypeUtil.js
var TransactionTypePastTense;
(function(TransactionTypePastTense2) {
  TransactionTypePastTense2["approve"] = "approved";
  TransactionTypePastTense2["bought"] = "bought";
  TransactionTypePastTense2["borrow"] = "borrowed";
  TransactionTypePastTense2["burn"] = "burnt";
  TransactionTypePastTense2["cancel"] = "canceled";
  TransactionTypePastTense2["claim"] = "claimed";
  TransactionTypePastTense2["deploy"] = "deployed";
  TransactionTypePastTense2["deposit"] = "deposited";
  TransactionTypePastTense2["execute"] = "executed";
  TransactionTypePastTense2["mint"] = "minted";
  TransactionTypePastTense2["receive"] = "received";
  TransactionTypePastTense2["repay"] = "repaid";
  TransactionTypePastTense2["send"] = "sent";
  TransactionTypePastTense2["sell"] = "sold";
  TransactionTypePastTense2["stake"] = "staked";
  TransactionTypePastTense2["trade"] = "swapped";
  TransactionTypePastTense2["unstake"] = "unstaked";
  TransactionTypePastTense2["withdraw"] = "withdrawn";
})(TransactionTypePastTense || (TransactionTypePastTense = {}));

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-transaction-visual/styles.js
var styles_default34 = css`
  :host > wui-flex {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 40px;
    height: 40px;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-gray-glass-005);
  }

  :host > wui-flex wui-image {
    display: block;
  }

  :host > wui-flex,
  :host > wui-flex wui-image,
  .swap-images-container,
  .swap-images-container.nft,
  wui-image.nft {
    border-top-left-radius: var(--local-left-border-radius);
    border-top-right-radius: var(--local-right-border-radius);
    border-bottom-left-radius: var(--local-left-border-radius);
    border-bottom-right-radius: var(--local-right-border-radius);
  }

  wui-icon {
    width: 20px;
    height: 20px;
  }

  wui-icon-box {
    position: absolute;
    right: 0;
    bottom: 0;
    transform: translate(20%, 20%);
  }

  .swap-images-container {
    position: relative;
    width: 40px;
    height: 40px;
    overflow: hidden;
  }

  .swap-images-container wui-image:first-child {
    position: absolute;
    width: 40px;
    height: 40px;
    top: 0;
    left: 0%;
    clip-path: inset(0px calc(50% + 2px) 0px 0%);
  }

  .swap-images-container wui-image:last-child {
    clip-path: inset(0px 0px 0px calc(50% + 2px));
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-transaction-visual/index.js
var __decorate34 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiTransactionVisual = class WuiTransactionVisual2 extends LitElement {
  constructor() {
    super(...arguments);
    this.images = [];
    this.secondImage = {
      type: void 0,
      url: ""
    };
  }
  render() {
    const [firstImage, secondImage] = this.images;
    const isLeftNFT = (firstImage == null ? void 0 : firstImage.type) === "NFT";
    const isRightNFT = (secondImage == null ? void 0 : secondImage.url) ? secondImage.type === "NFT" : isLeftNFT;
    const leftRadius = isLeftNFT ? "var(--wui-border-radius-xxs)" : "var(--wui-border-radius-s)";
    const rightRadius = isRightNFT ? "var(--wui-border-radius-xxs)" : "var(--wui-border-radius-s)";
    this.style.cssText = `
    --local-left-border-radius: ${leftRadius};
    --local-right-border-radius: ${rightRadius};
    `;
    return html`<wui-flex> ${this.templateVisual()} ${this.templateIcon()} </wui-flex>`;
  }
  templateVisual() {
    const [firstImage, secondImage] = this.images;
    const firstImageType = firstImage == null ? void 0 : firstImage.type;
    const haveTwoImages = this.images.length === 2;
    if (haveTwoImages && ((firstImage == null ? void 0 : firstImage.url) || (secondImage == null ? void 0 : secondImage.url))) {
      return html`<div class="swap-images-container">
        ${(firstImage == null ? void 0 : firstImage.url) ? html`<wui-image src=${firstImage.url} alt="Transaction image"></wui-image>` : null}
        ${(secondImage == null ? void 0 : secondImage.url) ? html`<wui-image src=${secondImage.url} alt="Transaction image"></wui-image>` : null}
      </div>`;
    } else if (firstImage == null ? void 0 : firstImage.url) {
      return html`<wui-image src=${firstImage.url} alt="Transaction image"></wui-image>`;
    } else if (firstImageType === "NFT") {
      return html`<wui-icon size="inherit" color="fg-200" name="nftPlaceholder"></wui-icon>`;
    }
    return html`<wui-icon size="inherit" color="fg-200" name="coinPlaceholder"></wui-icon>`;
  }
  templateIcon() {
    let color = "accent-100";
    let icon = void 0;
    icon = this.getIcon();
    if (this.status) {
      color = this.getStatusColor();
    }
    if (!icon) {
      return null;
    }
    return html`
      <wui-icon-box
        size="xxs"
        iconColor=${color}
        backgroundColor=${color}
        background="opaque"
        icon=${icon}
        ?border=${true}
        borderColor="wui-color-bg-125"
      ></wui-icon-box>
    `;
  }
  getDirectionIcon() {
    switch (this.direction) {
      case "in":
        return "arrowBottom";
      case "out":
        return "arrowTop";
      default:
        return void 0;
    }
  }
  getIcon() {
    if (this.onlyDirectionIcon) {
      return this.getDirectionIcon();
    }
    if (this.type === "trade") {
      return "swapHorizontalBold";
    } else if (this.type === "approve") {
      return "checkmark";
    } else if (this.type === "cancel") {
      return "close";
    }
    return this.getDirectionIcon();
  }
  getStatusColor() {
    switch (this.status) {
      case "confirmed":
        return "success-100";
      case "failed":
        return "error-100";
      case "pending":
        return "inverse-100";
      default:
        return "accent-100";
    }
  }
};
WuiTransactionVisual.styles = [styles_default34];
__decorate34([
  property()
], WuiTransactionVisual.prototype, "type", void 0);
__decorate34([
  property()
], WuiTransactionVisual.prototype, "status", void 0);
__decorate34([
  property()
], WuiTransactionVisual.prototype, "direction", void 0);
__decorate34([
  property({ type: Boolean })
], WuiTransactionVisual.prototype, "onlyDirectionIcon", void 0);
__decorate34([
  property({ type: Array })
], WuiTransactionVisual.prototype, "images", void 0);
__decorate34([
  property({ type: Object })
], WuiTransactionVisual.prototype, "secondImage", void 0);
WuiTransactionVisual = __decorate34([
  customElement("wui-transaction-visual")
], WuiTransactionVisual);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-transaction-list-item/styles.js
var styles_default35 = css`
  :host > wui-flex:first-child {
    align-items: center;
    column-gap: var(--wui-spacing-s);
    padding: 6.5px var(--wui-spacing-xs) 6.5px var(--wui-spacing-xs);
    width: 100%;
  }

  :host > wui-flex:first-child wui-text:nth-child(1) {
    text-transform: capitalize;
  }

  wui-transaction-visual {
    width: 40px;
    height: 40px;
  }

  wui-flex {
    flex: 1;
  }

  :host wui-flex wui-flex {
    overflow: hidden;
  }

  :host .description-container wui-text span {
    word-break: break-all;
  }

  :host .description-container wui-text {
    overflow: hidden;
  }

  :host .description-separator-icon {
    margin: 0px 6px;
  }

  :host wui-text > span {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-transaction-list-item/index.js
var __decorate35 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiTransactionListItem = class WuiTransactionListItem2 extends LitElement {
  constructor() {
    super(...arguments);
    this.type = "approve";
    this.onlyDirectionIcon = false;
    this.images = [];
    this.price = [];
    this.amount = [];
    this.symbol = [];
  }
  render() {
    return html`
      <wui-flex>
        <wui-transaction-visual
          .status=${this.status}
          direction=${ifDefined(this.direction)}
          type=${this.type}
          onlyDirectionIcon=${ifDefined(this.onlyDirectionIcon)}
          .images=${this.images}
        ></wui-transaction-visual>
        <wui-flex flexDirection="column" gap="3xs">
          <wui-text variant="paragraph-600" color="fg-100">
            ${TransactionTypePastTense[this.type] || this.type}
          </wui-text>
          <wui-flex class="description-container">
            ${this.templateDescription()} ${this.templateSecondDescription()}
          </wui-flex>
        </wui-flex>
        <wui-text variant="micro-700" color="fg-300"><span>${this.date}</span></wui-text>
      </wui-flex>
    `;
  }
  templateDescription() {
    var _a7;
    const description = (_a7 = this.descriptions) == null ? void 0 : _a7[0];
    return description ? html`
          <wui-text variant="small-500" color="fg-200">
            <span>${description}</span>
          </wui-text>
        ` : null;
  }
  templateSecondDescription() {
    var _a7;
    const description = (_a7 = this.descriptions) == null ? void 0 : _a7[1];
    return description ? html`
          <wui-icon class="description-separator-icon" size="xxs" name="arrowRight"></wui-icon>
          <wui-text variant="small-400" color="fg-200">
            <span>${description}</span>
          </wui-text>
        ` : null;
  }
};
WuiTransactionListItem.styles = [resetStyles, styles_default35];
__decorate35([
  property()
], WuiTransactionListItem.prototype, "type", void 0);
__decorate35([
  property({ type: Array })
], WuiTransactionListItem.prototype, "descriptions", void 0);
__decorate35([
  property()
], WuiTransactionListItem.prototype, "date", void 0);
__decorate35([
  property({ type: Boolean })
], WuiTransactionListItem.prototype, "onlyDirectionIcon", void 0);
__decorate35([
  property()
], WuiTransactionListItem.prototype, "status", void 0);
__decorate35([
  property()
], WuiTransactionListItem.prototype, "direction", void 0);
__decorate35([
  property({ type: Array })
], WuiTransactionListItem.prototype, "images", void 0);
__decorate35([
  property({ type: Array })
], WuiTransactionListItem.prototype, "price", void 0);
__decorate35([
  property({ type: Array })
], WuiTransactionListItem.prototype, "amount", void 0);
__decorate35([
  property({ type: Array })
], WuiTransactionListItem.prototype, "symbol", void 0);
WuiTransactionListItem = __decorate35([
  customElement("wui-transaction-list-item")
], WuiTransactionListItem);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-transaction-list-item-loader/styles.js
var styles_default36 = css`
  :host > wui-flex:first-child {
    column-gap: var(--wui-spacing-s);
    padding: 7px var(--wui-spacing-l) 7px var(--wui-spacing-xs);
    width: 100%;
  }

  wui-flex {
    display: flex;
    flex: 1;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-transaction-list-item-loader/index.js
var __decorate36 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiTransactionListItemLoader = class WuiTransactionListItemLoader2 extends LitElement {
  render() {
    return html`
      <wui-flex alignItems="center">
        <wui-shimmer width="40px" height="40px"></wui-shimmer>
        <wui-flex flexDirection="column" gap="2xs">
          <wui-shimmer width="72px" height="16px" borderRadius="4xs"></wui-shimmer>
          <wui-shimmer width="148px" height="14px" borderRadius="4xs"></wui-shimmer>
        </wui-flex>
        <wui-shimmer width="24px" height="12px" borderRadius="5xs"></wui-shimmer>
      </wui-flex>
    `;
  }
};
WuiTransactionListItemLoader.styles = [resetStyles, styles_default36];
WuiTransactionListItemLoader = __decorate36([
  customElement("wui-transaction-list-item-loader")
], WuiTransactionListItemLoader);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-tag/styles.js
var styles_default37 = css`
  :host {
    display: flex;
    justify-content: center;
    align-items: center;
    height: var(--wui-spacing-m);
    padding: 0 var(--wui-spacing-3xs) !important;
    border-radius: var(--wui-border-radius-5xs);
    transition:
      border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1),
      background-color var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: border-radius, background-color;
  }

  :host > wui-text {
    transform: translateY(5%);
  }

  :host([data-variant='main']) {
    background-color: var(--wui-color-accent-glass-015);
    color: var(--wui-color-accent-100);
  }

  :host([data-variant='shade']) {
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-200);
  }

  :host([data-variant='success']) {
    background-color: var(--wui-icon-box-bg-success-100);
    color: var(--wui-color-success-100);
  }

  :host([data-variant='error']) {
    background-color: var(--wui-icon-box-bg-error-100);
    color: var(--wui-color-error-100);
  }

  :host([data-size='lg']) {
    padding: 11px 5px !important;
  }

  :host([data-size='lg']) > wui-text {
    transform: translateY(2%);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-tag/index.js
var __decorate37 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiTag = class WuiTag2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "main";
    this.size = "lg";
  }
  render() {
    this.dataset["variant"] = this.variant;
    this.dataset["size"] = this.size;
    const textVariant = this.size === "md" ? "mini-700" : "micro-700";
    return html`
      <wui-text data-variant=${this.variant} variant=${textVariant} color="inherit">
        <slot></slot>
      </wui-text>
    `;
  }
};
WuiTag.styles = [resetStyles, styles_default37];
__decorate37([
  property()
], WuiTag.prototype, "variant", void 0);
__decorate37([
  property()
], WuiTag.prototype, "size", void 0);
WuiTag = __decorate37([
  customElement("wui-tag")
], WuiTag);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-wallet/styles.js
var styles_default38 = css`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 7px var(--wui-spacing-l) 7px var(--wui-spacing-xs);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-100);
  }

  button > wui-text:nth-child(2) {
    display: flex;
    flex: 1;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-015);
    color: var(--wui-color-gray-glass-015);
  }

  button:disabled > wui-tag {
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-300);
  }

  wui-icon {
    color: var(--wui-color-fg-200) !important;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-wallet/index.js
var __decorate38 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListWallet = class WuiListWallet2 extends LitElement {
  constructor() {
    super(...arguments);
    this.walletImages = [];
    this.imageSrc = "";
    this.name = "";
    this.tabIdx = void 0;
    this.installed = false;
    this.disabled = false;
    this.showAllWallets = false;
  }
  render() {
    return html`
      <button ?disabled=${this.disabled} tabindex=${ifDefined(this.tabIdx)}>
        ${this.templateAllWallets()} ${this.templateWalletImage()}
        <wui-text variant="paragraph-500" color="inherit">${this.name}</wui-text>
        ${this.templateStatus()}
      </button>
    `;
  }
  templateAllWallets() {
    if (this.showAllWallets && this.imageSrc) {
      return html` <wui-all-wallets-image .imageeSrc=${this.imageSrc}> </wui-all-wallets-image> `;
    } else if (this.showAllWallets && this.walletIcon) {
      return html` <wui-wallet-image .walletIcon=${this.walletIcon} size="sm"> </wui-wallet-image> `;
    }
    return null;
  }
  templateWalletImage() {
    if (!this.showAllWallets && this.imageSrc) {
      return html`<wui-wallet-image
        size="sm"
        imageSrc=${this.imageSrc}
        name=${this.name}
        .installed=${this.installed}
      ></wui-wallet-image>`;
    } else if (!this.showAllWallets && !this.imageSrc) {
      return html`<wui-wallet-image size="sm" name=${this.name}></wui-wallet-image>`;
    }
    return null;
  }
  templateStatus() {
    if (this.tagLabel && this.tagVariant) {
      return html`<wui-tag variant=${this.tagVariant}>${this.tagLabel}</wui-tag>`;
    } else if (this.icon) {
      return html`<wui-icon color="inherit" size="sm" name=${this.icon}></wui-icon>`;
    }
    return null;
  }
};
WuiListWallet.styles = [resetStyles, elementStyles, styles_default38];
__decorate38([
  property({ type: Array })
], WuiListWallet.prototype, "walletImages", void 0);
__decorate38([
  property()
], WuiListWallet.prototype, "imageSrc", void 0);
__decorate38([
  property()
], WuiListWallet.prototype, "name", void 0);
__decorate38([
  property()
], WuiListWallet.prototype, "tagLabel", void 0);
__decorate38([
  property()
], WuiListWallet.prototype, "tagVariant", void 0);
__decorate38([
  property()
], WuiListWallet.prototype, "icon", void 0);
__decorate38([
  property()
], WuiListWallet.prototype, "walletIcon", void 0);
__decorate38([
  property()
], WuiListWallet.prototype, "tabIdx", void 0);
__decorate38([
  property({ type: Boolean })
], WuiListWallet.prototype, "installed", void 0);
__decorate38([
  property({ type: Boolean })
], WuiListWallet.prototype, "disabled", void 0);
__decorate38([
  property({ type: Boolean })
], WuiListWallet.prototype, "showAllWallets", void 0);
WuiListWallet = __decorate38([
  customElement("wui-list-wallet")
], WuiListWallet);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-logo/styles.js
var styles_default39 = css`
  :host {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-005);
    overflow: hidden;
  }

  wui-icon {
    width: 100%;
    height: 100%;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-logo/index.js
var __decorate39 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiLogo = class WuiLogo2 extends LitElement {
  constructor() {
    super(...arguments);
    this.logo = "google";
  }
  render() {
    return html`<wui-icon color="inherit" size="inherit" name=${this.logo}></wui-icon> `;
  }
};
WuiLogo.styles = [resetStyles, styles_default39];
__decorate39([
  property()
], WuiLogo.prototype, "logo", void 0);
WuiLogo = __decorate39([
  customElement("wui-logo")
], WuiLogo);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-logo-select/styles.js
var styles_default40 = css`
  :host {
    display: block;
    width: 100%;
  }

  button {
    width: 100%;
    height: 56px;
    background: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-logo-select/index.js
var __decorate40 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiLogoSelect = class WuiLogoSelect2 extends LitElement {
  constructor() {
    super(...arguments);
    this.logo = "google";
    this.disabled = false;
    this.tabIdx = void 0;
  }
  render() {
    return html`
      <button ?disabled=${this.disabled} tabindex=${ifDefined(this.tabIdx)}>
        <wui-logo logo=${this.logo}></wui-logo>
      </button>
    `;
  }
};
WuiLogoSelect.styles = [resetStyles, elementStyles, styles_default40];
__decorate40([
  property()
], WuiLogoSelect.prototype, "logo", void 0);
__decorate40([
  property({ type: Boolean })
], WuiLogoSelect.prototype, "disabled", void 0);
__decorate40([
  property()
], WuiLogoSelect.prototype, "tabIdx", void 0);
WuiLogoSelect = __decorate40([
  customElement("wui-logo-select")
], WuiLogoSelect);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-network-button/styles.js
var styles_default41 = css`
  :host {
    display: block;
  }

  button {
    border-radius: var(--wui-border-radius-3xl);
    display: flex;
    gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-2xs) var(--wui-spacing-s) var(--wui-spacing-2xs)
      var(--wui-spacing-xs);
    border: 1px solid var(--wui-color-gray-glass-010);
    background-color: var(--wui-color-gray-glass-005);
    color: var(--wui-color-fg-100);
  }

  button:disabled {
    border: 1px solid var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-gray-glass-015);
    color: var(--wui-color-gray-glass-015);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-gray-glass-010);
    }

    button:active:enabled {
      background-color: var(--wui-color-gray-glass-015);
    }
  }

  wui-image,
  wui-icon-box {
    border-radius: var(--wui-border-radius-3xl);
    width: 24px;
    height: 24px;
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-network-button/index.js
var __decorate41 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiNetworkButton = class WuiNetworkButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.imageSrc = void 0;
    this.isUnsupportedChain = void 0;
    this.disabled = false;
  }
  render() {
    return html`
      <button data-testid="wui-network-button" ?disabled=${this.disabled}>
        ${this.visualTemplate()}
        <wui-text variant="paragraph-600" color="inherit">
          <slot></slot>
        </wui-text>
      </button>
    `;
  }
  visualTemplate() {
    if (this.isUnsupportedChain) {
      return html`
        <wui-icon-box
          size="sm"
          iconColor="error-100"
          backgroundColor="error-100"
          icon="warningCircle"
        ></wui-icon-box>
      `;
    }
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc}></wui-image>`;
    }
    return html`
      <wui-icon-box
        size="sm"
        iconColor="inverse-100"
        backgroundColor="fg-100"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `;
  }
};
WuiNetworkButton.styles = [resetStyles, elementStyles, styles_default41];
__decorate41([
  property()
], WuiNetworkButton.prototype, "imageSrc", void 0);
__decorate41([
  property({ type: Boolean })
], WuiNetworkButton.prototype, "isUnsupportedChain", void 0);
__decorate41([
  property({ type: Boolean })
], WuiNetworkButton.prototype, "disabled", void 0);
WuiNetworkButton = __decorate41([
  customElement("wui-network-button")
], WuiNetworkButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-otp/styles.js
var styles_default42 = css`
  :host {
    position: relative;
    display: block;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-otp/index.js
var __decorate42 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiOtp = class WuiOtp2 extends LitElement {
  constructor() {
    super(...arguments);
    this.length = 6;
    this.otp = "";
    this.values = Array.from({ length: this.length }).map(() => "");
    this.numerics = [];
    this.shouldInputBeEnabled = (index) => {
      const previousInputs = this.values.slice(0, index);
      return previousInputs.every((input) => input !== "");
    };
    this.handleKeyDown = (e2, index) => {
      const inputElement = e2.target;
      const input = this.getInputElement(inputElement);
      const keyArr = ["ArrowLeft", "ArrowRight", "Shift", "Delete"];
      if (!input) {
        return;
      }
      if (keyArr.includes(e2.key)) {
        e2.preventDefault();
      }
      const currentCaretPos = input.selectionStart;
      switch (e2.key) {
        case "ArrowLeft":
          if (currentCaretPos) {
            input.setSelectionRange(currentCaretPos + 1, currentCaretPos + 1);
          }
          this.focusInputField("prev", index);
          break;
        case "ArrowRight":
          this.focusInputField("next", index);
          break;
        case "Shift":
          this.focusInputField("next", index);
          break;
        case "Delete":
          if (input.value === "") {
            this.focusInputField("prev", index);
          } else {
            this.updateInput(input, index, "");
          }
          break;
        case "Backspace":
          if (input.value === "") {
            this.focusInputField("prev", index);
          } else {
            this.updateInput(input, index, "");
          }
          break;
        default:
      }
    };
    this.focusInputField = (dir, index) => {
      if (dir === "next") {
        const nextIndex = index + 1;
        if (!this.shouldInputBeEnabled(nextIndex)) {
          return;
        }
        const numeric = this.numerics[nextIndex < this.length ? nextIndex : index];
        const input = numeric ? this.getInputElement(numeric) : void 0;
        if (input) {
          input.disabled = false;
          input.focus();
        }
      }
      if (dir === "prev") {
        const nextIndex = index - 1;
        const numeric = this.numerics[nextIndex > -1 ? nextIndex : index];
        const input = numeric ? this.getInputElement(numeric) : void 0;
        if (input) {
          input.focus();
        }
      }
    };
  }
  firstUpdated() {
    var _a7, _b3;
    if (this.otp) {
      this.values = this.otp.split("");
    }
    const numericElements = (_a7 = this.shadowRoot) == null ? void 0 : _a7.querySelectorAll("wui-input-numeric");
    if (numericElements) {
      this.numerics = Array.from(numericElements);
    }
    (_b3 = this.numerics[0]) == null ? void 0 : _b3.focus();
  }
  render() {
    return html`
      <wui-flex gap="xxs" data-testid="wui-otp-input">
        ${Array.from({ length: this.length }).map((_3, index) => html`
            <wui-input-numeric
              @input=${(e2) => this.handleInput(e2, index)}
              @click=${(e2) => this.selectInput(e2)}
              @keydown=${(e2) => this.handleKeyDown(e2, index)}
              .disabled=${!this.shouldInputBeEnabled(index)}
              .value=${this.values[index] || ""}
            >
            </wui-input-numeric>
          `)}
      </wui-flex>
    `;
  }
  updateInput(element, index, value) {
    const numeric = this.numerics[index];
    const input = element || (numeric ? this.getInputElement(numeric) : void 0);
    if (input) {
      input.value = value;
      this.values = this.values.map((val, i4) => i4 === index ? value : val);
    }
  }
  selectInput(e2) {
    const targetElement = e2.target;
    if (targetElement) {
      const inputElement = this.getInputElement(targetElement);
      inputElement == null ? void 0 : inputElement.select();
    }
  }
  handleInput(e2, index) {
    const inputElement = e2.target;
    const input = this.getInputElement(inputElement);
    if (input) {
      const inputValue = input.value;
      if (e2.inputType === "insertFromPaste") {
        this.handlePaste(input, inputValue, index);
      } else {
        const isValid2 = UiHelperUtil.isNumber(inputValue);
        if (isValid2 && e2.data) {
          this.updateInput(input, index, e2.data);
          this.focusInputField("next", index);
        } else {
          this.updateInput(input, index, "");
        }
      }
    }
    this.dispatchInputChangeEvent();
  }
  handlePaste(input, inputValue, index) {
    const value = inputValue[0];
    const isValid2 = value && UiHelperUtil.isNumber(value);
    if (isValid2) {
      this.updateInput(input, index, value);
      const inputString = inputValue.substring(1);
      if (index + 1 < this.length && inputString.length) {
        const nextNumeric = this.numerics[index + 1];
        const nextInput = nextNumeric ? this.getInputElement(nextNumeric) : void 0;
        if (nextInput) {
          this.handlePaste(nextInput, inputString, index + 1);
        }
      } else {
        this.focusInputField("next", index);
      }
    } else {
      this.updateInput(input, index, "");
    }
  }
  getInputElement(el) {
    var _a7;
    if ((_a7 = el.shadowRoot) == null ? void 0 : _a7.querySelector("input")) {
      return el.shadowRoot.querySelector("input");
    }
    return null;
  }
  dispatchInputChangeEvent() {
    const value = this.values.join("");
    this.dispatchEvent(new CustomEvent("inputChange", {
      detail: value,
      bubbles: true,
      composed: true
    }));
  }
};
WuiOtp.styles = [resetStyles, styles_default42];
__decorate42([
  property({ type: Number })
], WuiOtp.prototype, "length", void 0);
__decorate42([
  property({ type: String })
], WuiOtp.prototype, "otp", void 0);
__decorate42([
  state()
], WuiOtp.prototype, "values", void 0);
WuiOtp = __decorate42([
  customElement("wui-otp")
], WuiOtp);

// node_modules/@reown/appkit-ui/dist/esm/src/utils/QrCode.js
var import_qrcode = __toESM(require_browser2(), 1);
var CONNECTING_ERROR_MARGIN = 0.1;
var CIRCLE_SIZE_MODIFIER = 2.5;
var QRCODE_MATRIX_MARGIN = 7;
function isAdjecentDots(cy, otherCy, cellSize) {
  if (cy === otherCy) {
    return false;
  }
  const diff = cy - otherCy < 0 ? otherCy - cy : cy - otherCy;
  return diff <= cellSize + CONNECTING_ERROR_MARGIN;
}
function getMatrix(value, errorCorrectionLevel) {
  const arr = Array.prototype.slice.call(import_qrcode.default.create(value, { errorCorrectionLevel }).modules.data, 0);
  const sqrt = Math.sqrt(arr.length);
  return arr.reduce((rows, key2, index) => (index % sqrt === 0 ? rows.push([key2]) : rows[rows.length - 1].push(key2)) && rows, []);
}
var QrCodeUtil = {
  generate({ uri, size, logoSize, dotColor = "#141414" }) {
    const edgeColor = "transparent";
    const strokeWidth = 5;
    const dots = [];
    const matrix = getMatrix(uri, "Q");
    const cellSize = size / matrix.length;
    const qrList = [
      { x: 0, y: 0 },
      { x: 1, y: 0 },
      { x: 0, y: 1 }
    ];
    qrList.forEach(({ x: x7, y: y5 }) => {
      const x1 = (matrix.length - QRCODE_MATRIX_MARGIN) * cellSize * x7;
      const y1 = (matrix.length - QRCODE_MATRIX_MARGIN) * cellSize * y5;
      const borderRadius = 0.45;
      for (let i4 = 0; i4 < qrList.length; i4 += 1) {
        const dotSize = cellSize * (QRCODE_MATRIX_MARGIN - i4 * 2);
        dots.push(svg`
            <rect
              fill=${i4 === 2 ? dotColor : edgeColor}
              width=${i4 === 0 ? dotSize - strokeWidth : dotSize}
              rx= ${i4 === 0 ? (dotSize - strokeWidth) * borderRadius : dotSize * borderRadius}
              ry= ${i4 === 0 ? (dotSize - strokeWidth) * borderRadius : dotSize * borderRadius}
              stroke=${dotColor}
              stroke-width=${i4 === 0 ? strokeWidth : 0}
              height=${i4 === 0 ? dotSize - strokeWidth : dotSize}
              x= ${i4 === 0 ? y1 + cellSize * i4 + strokeWidth / 2 : y1 + cellSize * i4}
              y= ${i4 === 0 ? x1 + cellSize * i4 + strokeWidth / 2 : x1 + cellSize * i4}
            />
          `);
      }
    });
    const clearArenaSize = Math.floor((logoSize + 25) / cellSize);
    const matrixMiddleStart = matrix.length / 2 - clearArenaSize / 2;
    const matrixMiddleEnd = matrix.length / 2 + clearArenaSize / 2 - 1;
    const circles = [];
    matrix.forEach((row, i4) => {
      row.forEach((_3, j5) => {
        if (matrix[i4][j5]) {
          if (!(i4 < QRCODE_MATRIX_MARGIN && j5 < QRCODE_MATRIX_MARGIN || i4 > matrix.length - (QRCODE_MATRIX_MARGIN + 1) && j5 < QRCODE_MATRIX_MARGIN || i4 < QRCODE_MATRIX_MARGIN && j5 > matrix.length - (QRCODE_MATRIX_MARGIN + 1))) {
            if (!(i4 > matrixMiddleStart && i4 < matrixMiddleEnd && j5 > matrixMiddleStart && j5 < matrixMiddleEnd)) {
              const cx = i4 * cellSize + cellSize / 2;
              const cy = j5 * cellSize + cellSize / 2;
              circles.push([cx, cy]);
            }
          }
        }
      });
    });
    const circlesToConnect = {};
    circles.forEach(([cx, cy]) => {
      var _a7;
      if (circlesToConnect[cx]) {
        (_a7 = circlesToConnect[cx]) == null ? void 0 : _a7.push(cy);
      } else {
        circlesToConnect[cx] = [cy];
      }
    });
    Object.entries(circlesToConnect).map(([cx, cys]) => {
      const newCys = cys.filter((cy) => cys.every((otherCy) => !isAdjecentDots(cy, otherCy, cellSize)));
      return [Number(cx), newCys];
    }).forEach(([cx, cys]) => {
      cys.forEach((cy) => {
        dots.push(svg`<circle cx=${cx} cy=${cy} fill=${dotColor} r=${cellSize / CIRCLE_SIZE_MODIFIER} />`);
      });
    });
    Object.entries(circlesToConnect).filter(([_3, cys]) => cys.length > 1).map(([cx, cys]) => {
      const newCys = cys.filter((cy) => cys.some((otherCy) => isAdjecentDots(cy, otherCy, cellSize)));
      return [Number(cx), newCys];
    }).map(([cx, cys]) => {
      cys.sort((a2, b3) => a2 < b3 ? -1 : 1);
      const groups = [];
      for (const cy of cys) {
        const group = groups.find((item) => item.some((otherCy) => isAdjecentDots(cy, otherCy, cellSize)));
        if (group) {
          group.push(cy);
        } else {
          groups.push([cy]);
        }
      }
      return [cx, groups.map((item) => [item[0], item[item.length - 1]])];
    }).forEach(([cx, groups]) => {
      groups.forEach(([y1, y22]) => {
        dots.push(svg`
              <line
                x1=${cx}
                x2=${cx}
                y1=${y1}
                y2=${y22}
                stroke=${dotColor}
                stroke-width=${cellSize / (CIRCLE_SIZE_MODIFIER / 2)}
                stroke-linecap="round"
              />
            `);
      });
    });
    return dots;
  }
};

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-qr-code/styles.js
var styles_default43 = css`
  :host {
    position: relative;
    user-select: none;
    display: block;
    overflow: hidden;
    aspect-ratio: 1 / 1;
    width: var(--local-size);
  }

  :host([data-theme='dark']) {
    border-radius: clamp(0px, var(--wui-border-radius-l), 40px);
    background-color: var(--wui-color-inverse-100);
    padding: var(--wui-spacing-l);
  }

  :host([data-theme='light']) {
    box-shadow: 0 0 0 1px var(--wui-color-bg-125);
    background-color: var(--wui-color-bg-125);
  }

  :host([data-clear='true']) > wui-icon {
    display: none;
  }

  svg:first-child,
  wui-image,
  wui-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateY(-50%) translateX(-50%);
  }

  wui-image {
    width: 25%;
    height: 25%;
    border-radius: var(--wui-border-radius-xs);
  }

  wui-icon {
    width: 100%;
    height: 100%;
    color: var(--local-icon-color) !important;
    transform: translateY(-50%) translateX(-50%) scale(0.25);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-qr-code/index.js
var __decorate43 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var DEFAULT_ICON_COLOR = "#3396ff";
var WuiQrCode = class WuiQrCode2 extends LitElement {
  constructor() {
    super(...arguments);
    this.uri = "";
    this.size = 0;
    this.theme = "dark";
    this.imageSrc = void 0;
    this.alt = void 0;
    this.arenaClear = void 0;
    this.farcaster = void 0;
  }
  render() {
    this.dataset["theme"] = this.theme;
    this.dataset["clear"] = String(this.arenaClear);
    this.style.cssText = `
     --local-size: ${this.size}px;
     --local-icon-color: ${this.color ?? DEFAULT_ICON_COLOR}
    `;
    return html`${this.templateVisual()} ${this.templateSvg()}`;
  }
  templateSvg() {
    const size = this.theme === "light" ? this.size : this.size - 16 * 2;
    return svg`
      <svg height=${size} width=${size}>
        ${QrCodeUtil.generate({
      uri: this.uri,
      size,
      logoSize: this.arenaClear ? 0 : size / 4,
      dotColor: this.color
    })}
      </svg>
    `;
  }
  templateVisual() {
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc} alt=${this.alt ?? "logo"}></wui-image>`;
    }
    if (this.farcaster) {
      return html`<wui-icon
        class="farcaster"
        size="inherit"
        color="inherit"
        name="farcaster"
      ></wui-icon>`;
    }
    return html`<wui-icon size="inherit" color="inherit" name="walletConnect"></wui-icon>`;
  }
};
WuiQrCode.styles = [resetStyles, styles_default43];
__decorate43([
  property()
], WuiQrCode.prototype, "uri", void 0);
__decorate43([
  property({ type: Number })
], WuiQrCode.prototype, "size", void 0);
__decorate43([
  property()
], WuiQrCode.prototype, "theme", void 0);
__decorate43([
  property()
], WuiQrCode.prototype, "imageSrc", void 0);
__decorate43([
  property()
], WuiQrCode.prototype, "alt", void 0);
__decorate43([
  property()
], WuiQrCode.prototype, "color", void 0);
__decorate43([
  property({ type: Boolean })
], WuiQrCode.prototype, "arenaClear", void 0);
__decorate43([
  property({ type: Boolean })
], WuiQrCode.prototype, "farcaster", void 0);
WuiQrCode = __decorate43([
  customElement("wui-qr-code")
], WuiQrCode);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-search-bar/styles.js
var styles_default44 = css`
  :host {
    position: relative;
    display: inline-block;
    width: 100%;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-search-bar/index.js
var __decorate44 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiSearchBar = class WuiSearchBar2 extends LitElement {
  constructor() {
    super(...arguments);
    this.inputComponentRef = createRef();
  }
  render() {
    return html`
      <wui-input-text
        ${ref(this.inputComponentRef)}
        placeholder="Search wallet"
        icon="search"
        type="search"
        enterKeyHint="search"
        size="sm"
      >
        <wui-input-element @click=${this.clearValue} icon="close"></wui-input-element>
      </wui-input-text>
    `;
  }
  clearValue() {
    const inputComponent = this.inputComponentRef.value;
    const inputElement = inputComponent == null ? void 0 : inputComponent.inputElementRef.value;
    if (inputElement) {
      inputElement.value = "";
      inputElement.focus();
      inputElement.dispatchEvent(new Event("input"));
    }
  }
};
WuiSearchBar.styles = [resetStyles, styles_default44];
WuiSearchBar = __decorate44([
  customElement("wui-search-bar")
], WuiSearchBar);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-snackbar/styles.js
var styles_default45 = css`
  :host {
    display: flex;
    column-gap: var(--wui-spacing-s);
    align-items: center;
    padding: var(--wui-spacing-xs) var(--wui-spacing-m) var(--wui-spacing-xs) var(--wui-spacing-xs);
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-gray-glass-005);
    box-sizing: border-box;
    background-color: var(--wui-color-bg-175);
    box-shadow:
      0px 14px 64px -4px rgba(0, 0, 0, 0.15),
      0px 8px 22px -6px rgba(0, 0, 0, 0.15);

    max-width: 300px;
  }

  :host wui-loading-spinner {
    margin-left: var(--wui-spacing-3xs);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-snackbar/index.js
var __decorate45 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiSnackbar = class WuiSnackbar2 extends LitElement {
  constructor() {
    super(...arguments);
    this.backgroundColor = "accent-100";
    this.iconColor = "accent-100";
    this.icon = "checkmark";
    this.message = "";
    this.loading = false;
    this.iconType = "default";
  }
  render() {
    return html`
      ${this.templateIcon()}
      <wui-text variant="paragraph-500" color="fg-100" data-testid="wui-snackbar-message"
        >${this.message}</wui-text
      >
    `;
  }
  templateIcon() {
    if (this.loading) {
      return html`<wui-loading-spinner size="md" color="accent-100"></wui-loading-spinner>`;
    }
    if (this.iconType === "default") {
      return html`<wui-icon size="xl" color=${this.iconColor} name=${this.icon}></wui-icon>`;
    }
    return html`<wui-icon-box
      size="sm"
      iconSize="xs"
      iconColor=${this.iconColor}
      backgroundColor=${this.backgroundColor}
      icon=${this.icon}
      background="opaque"
    ></wui-icon-box>`;
  }
};
WuiSnackbar.styles = [resetStyles, styles_default45];
__decorate45([
  property()
], WuiSnackbar.prototype, "backgroundColor", void 0);
__decorate45([
  property()
], WuiSnackbar.prototype, "iconColor", void 0);
__decorate45([
  property()
], WuiSnackbar.prototype, "icon", void 0);
__decorate45([
  property()
], WuiSnackbar.prototype, "message", void 0);
__decorate45([
  property()
], WuiSnackbar.prototype, "loading", void 0);
__decorate45([
  property()
], WuiSnackbar.prototype, "iconType", void 0);
WuiSnackbar = __decorate45([
  customElement("wui-snackbar")
], WuiSnackbar);

// node_modules/proxy-compare/dist/index.modern.js
var e = Symbol();
var t = Symbol();
var s = Object.getPrototypeOf;
var c = /* @__PURE__ */ new WeakMap();
var l = (e2) => e2 && (c.has(e2) ? c.get(e2) : s(e2) === Object.prototype || s(e2) === Array.prototype);
var y2 = (e2) => l(e2) && e2[t] || null;
var h2 = (e2, t2 = true) => {
  c.set(e2, t2);
};

// node_modules/valtio/esm/vanilla.mjs
var isObject = (x7) => typeof x7 === "object" && x7 !== null;
var proxyStateMap = /* @__PURE__ */ new WeakMap();
var refSet = /* @__PURE__ */ new WeakSet();
var buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x7) => isObject(x7) && !refSet.has(x7) && (Array.isArray(x7) || !(Symbol.iterator in x7)) && !(x7 instanceof WeakMap) && !(x7 instanceof WeakSet) && !(x7 instanceof Error) && !(x7 instanceof Number) && !(x7 instanceof Date) && !(x7 instanceof String) && !(x7 instanceof RegExp) && !(x7 instanceof ArrayBuffer), defaultHandlePromise = (promise) => {
  switch (promise.status) {
    case "fulfilled":
      return promise.value;
    case "rejected":
      throw promise.reason;
    default:
      throw promise;
  }
}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version9, handlePromise = defaultHandlePromise) => {
  const cache = snapCache.get(target);
  if ((cache == null ? void 0 : cache[0]) === version9) {
    return cache[1];
  }
  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));
  h2(snap, true);
  snapCache.set(target, [version9, snap]);
  Reflect.ownKeys(target).forEach((key2) => {
    if (Object.getOwnPropertyDescriptor(snap, key2)) {
      return;
    }
    const value = Reflect.get(target, key2);
    const { enumerable } = Reflect.getOwnPropertyDescriptor(
      target,
      key2
    );
    const desc2 = {
      value,
      enumerable,
      // This is intentional to avoid copying with proxy-compare.
      // It's still non-writable, so it avoids assigning a value.
      configurable: true
    };
    if (refSet.has(value)) {
      h2(value, false);
    } else if (value instanceof Promise) {
      delete desc2.value;
      desc2.get = () => handlePromise(value);
    } else if (proxyStateMap.has(value)) {
      const [target2, ensureVersion] = proxyStateMap.get(
        value
      );
      desc2.value = createSnapshot(
        target2,
        ensureVersion(),
        handlePromise
      );
    }
    Object.defineProperty(snap, key2, desc2);
  });
  return Object.preventExtensions(snap);
}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction = (initialObject) => {
  if (!isObject(initialObject)) {
    throw new Error("object required");
  }
  const found = proxyCache.get(initialObject);
  if (found) {
    return found;
  }
  let version9 = versionHolder[0];
  const listeners = /* @__PURE__ */ new Set();
  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {
    if (version9 !== nextVersion) {
      version9 = nextVersion;
      listeners.forEach((listener) => listener(op, nextVersion));
    }
  };
  let checkVersion = versionHolder[1];
  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {
    if (checkVersion !== nextCheckVersion && !listeners.size) {
      checkVersion = nextCheckVersion;
      propProxyStates.forEach(([propProxyState]) => {
        const propVersion = propProxyState[1](nextCheckVersion);
        if (propVersion > version9) {
          version9 = propVersion;
        }
      });
    }
    return version9;
  };
  const createPropListener = (prop) => (op, nextVersion) => {
    const newOp = [...op];
    newOp[1] = [prop, ...newOp[1]];
    notifyUpdate(newOp, nextVersion);
  };
  const propProxyStates = /* @__PURE__ */ new Map();
  const addPropListener = (prop, propProxyState) => {
    if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && propProxyStates.has(prop)) {
      throw new Error("prop listener already exists");
    }
    if (listeners.size) {
      const remove = propProxyState[3](createPropListener(prop));
      propProxyStates.set(prop, [propProxyState, remove]);
    } else {
      propProxyStates.set(prop, [propProxyState]);
    }
  };
  const removePropListener = (prop) => {
    var _a7;
    const entry = propProxyStates.get(prop);
    if (entry) {
      propProxyStates.delete(prop);
      (_a7 = entry[1]) == null ? void 0 : _a7.call(entry);
    }
  };
  const addListener = (listener) => {
    listeners.add(listener);
    if (listeners.size === 1) {
      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {
        if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && prevRemove) {
          throw new Error("remove already exists");
        }
        const remove = propProxyState[3](createPropListener(prop));
        propProxyStates.set(prop, [propProxyState, remove]);
      });
    }
    const removeListener = () => {
      listeners.delete(listener);
      if (listeners.size === 0) {
        propProxyStates.forEach(([propProxyState, remove], prop) => {
          if (remove) {
            remove();
            propProxyStates.set(prop, [propProxyState]);
          }
        });
      }
    };
    return removeListener;
  };
  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));
  const handler = {
    deleteProperty(target, prop) {
      const prevValue = Reflect.get(target, prop);
      removePropListener(prop);
      const deleted = Reflect.deleteProperty(target, prop);
      if (deleted) {
        notifyUpdate(["delete", [prop], prevValue]);
      }
      return deleted;
    },
    set(target, prop, value, receiver) {
      const hasPrevValue = Reflect.has(target, prop);
      const prevValue = Reflect.get(target, prop, receiver);
      if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {
        return true;
      }
      removePropListener(prop);
      if (isObject(value)) {
        value = y2(value) || value;
      }
      let nextValue = value;
      if (value instanceof Promise) {
        value.then((v6) => {
          value.status = "fulfilled";
          value.value = v6;
          notifyUpdate(["resolve", [prop], v6]);
        }).catch((e2) => {
          value.status = "rejected";
          value.reason = e2;
          notifyUpdate(["reject", [prop], e2]);
        });
      } else {
        if (!proxyStateMap.has(value) && canProxy(value)) {
          nextValue = proxyFunction(value);
        }
        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);
        if (childProxyState) {
          addPropListener(prop, childProxyState);
        }
      }
      Reflect.set(target, prop, nextValue, receiver);
      notifyUpdate(["set", [prop], value, prevValue]);
      return true;
    }
  };
  const proxyObject = newProxy(baseObject, handler);
  proxyCache.set(initialObject, proxyObject);
  const proxyState = [
    baseObject,
    ensureVersion,
    createSnapshot,
    addListener
  ];
  proxyStateMap.set(proxyObject, proxyState);
  Reflect.ownKeys(initialObject).forEach((key2) => {
    const desc2 = Object.getOwnPropertyDescriptor(
      initialObject,
      key2
    );
    if ("value" in desc2) {
      proxyObject[key2] = initialObject[key2];
      delete desc2.value;
      delete desc2.writable;
    }
    Object.defineProperty(baseObject, key2, desc2);
  });
  return proxyObject;
}) => [
  // public functions
  proxyFunction,
  // shared state
  proxyStateMap,
  refSet,
  // internal things
  objectIs,
  newProxy,
  canProxy,
  defaultHandlePromise,
  snapCache,
  createSnapshot,
  proxyCache,
  versionHolder
];
var [defaultProxyFunction] = buildProxyFunction();
function proxy(initialObject = {}) {
  return defaultProxyFunction(initialObject);
}
function subscribe(proxyObject, callback, notifyInSync) {
  const proxyState = proxyStateMap.get(proxyObject);
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && !proxyState) {
    console.warn("Please use proxy object");
  }
  let promise;
  const ops = [];
  const addListener = proxyState[3];
  let isListenerActive = false;
  const listener = (op) => {
    ops.push(op);
    if (notifyInSync) {
      callback(ops.splice(0));
      return;
    }
    if (!promise) {
      promise = Promise.resolve().then(() => {
        promise = void 0;
        if (isListenerActive) {
          callback(ops.splice(0));
        }
      });
    }
  };
  const removeListener = addListener(listener);
  isListenerActive = true;
  return () => {
    isListenerActive = false;
    removeListener();
  };
}
function snapshot(proxyObject, handlePromise) {
  const proxyState = proxyStateMap.get(proxyObject);
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && !proxyState) {
    console.warn("Please use proxy object");
  }
  const [target, ensureVersion, createSnapshot] = proxyState;
  return createSnapshot(target, ensureVersion(), handlePromise);
}
function ref2(obj) {
  refSet.add(obj);
  return obj;
}

// node_modules/valtio/esm/vanilla/utils.mjs
function subscribeKey(proxyObject, key2, callback, notifyInSync) {
  let prevValue = proxyObject[key2];
  return subscribe(
    proxyObject,
    () => {
      const nextValue = proxyObject[key2];
      if (!Object.is(prevValue, nextValue)) {
        callback(prevValue = nextValue);
      }
    },
    notifyInSync
  );
}
var DEVTOOLS = Symbol();
function proxyMap(entries2) {
  const map = proxy({
    data: Array.from(entries2 || []),
    has(key2) {
      return this.data.some((p3) => p3[0] === key2);
    },
    set(key2, value) {
      const record = this.data.find((p3) => p3[0] === key2);
      if (record) {
        record[1] = value;
      } else {
        this.data.push([key2, value]);
      }
      return this;
    },
    get(key2) {
      var _a7;
      return (_a7 = this.data.find((p3) => p3[0] === key2)) == null ? void 0 : _a7[1];
    },
    delete(key2) {
      const index = this.data.findIndex((p3) => p3[0] === key2);
      if (index === -1) {
        return false;
      }
      this.data.splice(index, 1);
      return true;
    },
    clear() {
      this.data.splice(0);
    },
    get size() {
      return this.data.length;
    },
    toJSON() {
      return new Map(this.data);
    },
    forEach(cb) {
      this.data.forEach((p3) => {
        cb(p3[1], p3[0], this);
      });
    },
    keys() {
      return this.data.map((p3) => p3[0]).values();
    },
    values() {
      return this.data.map((p3) => p3[1]).values();
    },
    entries() {
      return new Map(this.data).entries();
    },
    get [Symbol.toStringTag]() {
      return "Map";
    },
    [Symbol.iterator]() {
      return this.entries();
    }
  });
  Object.defineProperties(map, {
    data: {
      enumerable: false
    },
    size: {
      enumerable: false
    },
    toJSON: {
      enumerable: false
    }
  });
  Object.seal(map);
  return map;
}

// node_modules/@reown/appkit-core/dist/esm/src/utils/ConstantsUtil.js
var SECURE_SITE = "https://secure.walletconnect.org";
var ONRAMP_PROVIDERS = [
  {
    label: "Coinbase",
    name: "coinbase",
    feeRange: "1-2%",
    url: "",
    supportedChains: ["eip155"]
  },
  {
    label: "Meld.io",
    name: "meld",
    feeRange: "1-2%",
    url: "https://meldcrypto.com",
    supportedChains: ["eip155", "solana"]
  }
];
var MELD_PUBLIC_KEY = "WXETMuFUQmqqybHuRkSgxv:25B8LJHSfpG6LVjR2ytU5Cwh7Z4Sch2ocoU";
var ConstantsUtil2 = {
  FOUR_MINUTES_MS: 24e4,
  TEN_SEC_MS: 1e4,
  FIVE_SEC_MS: 5e3,
  THREE_SEC_MS: 3e3,
  ONE_SEC_MS: 1e3,
  SECURE_SITE,
  SECURE_SITE_DASHBOARD: `${SECURE_SITE}/dashboard`,
  SECURE_SITE_FAVICON: `${SECURE_SITE}/images/favicon.png`,
  RESTRICTED_TIMEZONES: [
    "ASIA/SHANGHAI",
    "ASIA/URUMQI",
    "ASIA/CHONGQING",
    "ASIA/HARBIN",
    "ASIA/KASHGAR",
    "ASIA/MACAU",
    "ASIA/HONG_KONG",
    "ASIA/MACAO",
    "ASIA/BEIJING",
    "ASIA/HARBIN"
  ],
  /**
   * Network name to Coinbase Pay SDK chain name map object
   * @see supported chain names on Coinbase for Pay SDK: https://github.com/coinbase/cbpay-js/blob/d4bda2c05c4d5917c8db6a05476b603546046394/src/types/onramp.ts
   */
  WC_COINBASE_PAY_SDK_CHAINS: [
    "ethereum",
    "arbitrum",
    "polygon",
    "avalanche-c-chain",
    "optimism",
    "celo",
    "base"
  ],
  WC_COINBASE_PAY_SDK_FALLBACK_CHAIN: "ethereum",
  WC_COINBASE_PAY_SDK_CHAIN_NAME_MAP: {
    Ethereum: "ethereum",
    "Arbitrum One": "arbitrum",
    Polygon: "polygon",
    Avalanche: "avalanche-c-chain",
    "OP Mainnet": "optimism",
    Celo: "celo",
    Base: "base"
  },
  WC_COINBASE_ONRAMP_APP_ID: "bf18c88d-495a-463b-b249-0b9d3656cf5e",
  SWAP_SUGGESTED_TOKENS: [
    "ETH",
    "UNI",
    "1INCH",
    "AAVE",
    "SOL",
    "ADA",
    "AVAX",
    "DOT",
    "LINK",
    "NITRO",
    "GAIA",
    "MILK",
    "TRX",
    "NEAR",
    "GNO",
    "WBTC",
    "DAI",
    "WETH",
    "USDC",
    "USDT",
    "ARB",
    "BAL",
    "BICO",
    "CRV",
    "ENS",
    "MATIC",
    "OP"
  ],
  SWAP_POPULAR_TOKENS: [
    "ETH",
    "UNI",
    "1INCH",
    "AAVE",
    "SOL",
    "ADA",
    "AVAX",
    "DOT",
    "LINK",
    "NITRO",
    "GAIA",
    "MILK",
    "TRX",
    "NEAR",
    "GNO",
    "WBTC",
    "DAI",
    "WETH",
    "USDC",
    "USDT",
    "ARB",
    "BAL",
    "BICO",
    "CRV",
    "ENS",
    "MATIC",
    "OP",
    "METAL",
    "DAI",
    "CHAMP",
    "WOLF",
    "SALE",
    "BAL",
    "BUSD",
    "MUST",
    "BTCpx",
    "ROUTE",
    "HEX",
    "WELT",
    "amDAI",
    "VSQ",
    "VISION",
    "AURUM",
    "pSP",
    "SNX",
    "VC",
    "LINK",
    "CHP",
    "amUSDT",
    "SPHERE",
    "FOX",
    "GIDDY",
    "GFC",
    "OMEN",
    "OX_OLD",
    "DE",
    "WNT"
  ],
  BALANCE_SUPPORTED_CHAINS: ["eip155", "solana"],
  SWAP_SUPPORTED_NETWORKS: [
    // Ethereum'
    "eip155:1",
    // Arbitrum One'
    "eip155:42161",
    // Optimism'
    "eip155:10",
    // ZKSync Era'
    "eip155:324",
    // Base'
    "eip155:8453",
    // BNB Smart Chain'
    "eip155:56",
    // Polygon'
    "eip155:137",
    // Gnosis'
    "eip155:100",
    // Avalanche'
    "eip155:43114",
    // Fantom'
    "eip155:250",
    // Klaytn'
    "eip155:8217",
    // Aurora
    "eip155:1313161554"
  ],
  NAMES_SUPPORTED_CHAIN_NAMESPACES: ["eip155"],
  ONRAMP_SUPPORTED_CHAIN_NAMESPACES: ["eip155", "solana"],
  ACTIVITY_ENABLED_CHAIN_NAMESPACES: ["eip155", "solana"],
  NATIVE_TOKEN_ADDRESS: {
    eip155: "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
    solana: "So11111111111111111111111111111111111111111",
    polkadot: "0x",
    bip122: "0x"
  },
  CONVERT_SLIPPAGE_TOLERANCE: 1,
  CONNECT_LABELS: {
    MOBILE: "Open and continue in a new browser tab"
  },
  DEFAULT_FEATURES: {
    swaps: true,
    onramp: true,
    receive: true,
    send: true,
    email: true,
    emailShowWallets: true,
    socials: [
      "google",
      "x",
      "discord",
      "farcaster",
      "github",
      "apple",
      "facebook"
    ],
    history: true,
    analytics: true,
    allWallets: true,
    legalCheckbox: false,
    smartSessions: false,
    collapseWallets: false,
    walletFeaturesOrder: ["onramp", "swaps", "receive", "send"],
    connectMethodsOrder: void 0
  },
  DEFAULT_ACCOUNT_TYPES: {
    bip122: "payment",
    eip155: "smartAccount",
    polkadot: "eoa",
    solana: "eoa"
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/utils/CoreHelperUtil.js
var CoreHelperUtil = {
  isMobile() {
    if (this.isClient()) {
      return Boolean(window.matchMedia("(pointer:coarse)").matches || /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent));
    }
    return false;
  },
  checkCaipNetwork(network, networkName = "") {
    return network == null ? void 0 : network.caipNetworkId.toLocaleLowerCase().includes(networkName.toLowerCase());
  },
  isAndroid() {
    if (!this.isMobile()) {
      return false;
    }
    const ua2 = window.navigator.userAgent.toLowerCase();
    return CoreHelperUtil.isMobile() && ua2.includes("android");
  },
  isIos() {
    if (!this.isMobile()) {
      return false;
    }
    const ua2 = window.navigator.userAgent.toLowerCase();
    return ua2.includes("iphone") || ua2.includes("ipad");
  },
  isSafari() {
    if (!this.isClient()) {
      return false;
    }
    const ua2 = window.navigator.userAgent.toLowerCase();
    return ua2.includes("safari");
  },
  isClient() {
    return typeof window !== "undefined";
  },
  isPairingExpired(expiry) {
    return expiry ? expiry - Date.now() <= ConstantsUtil2.TEN_SEC_MS : true;
  },
  isAllowedRetry(lastRetry, differenceMs = ConstantsUtil2.ONE_SEC_MS) {
    return Date.now() - lastRetry >= differenceMs;
  },
  copyToClopboard(text) {
    navigator.clipboard.writeText(text);
  },
  isIframe() {
    try {
      return window.self !== window.top;
    } catch (e2) {
      return false;
    }
  },
  getPairingExpiry() {
    return Date.now() + ConstantsUtil2.FOUR_MINUTES_MS;
  },
  getNetworkId(caipAddress) {
    return caipAddress == null ? void 0 : caipAddress.split(":")[1];
  },
  getPlainAddress(caipAddress) {
    return caipAddress == null ? void 0 : caipAddress.split(":")[2];
  },
  async wait(milliseconds) {
    return new Promise((resolve) => {
      setTimeout(resolve, milliseconds);
    });
  },
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  debounce(func, timeout = 500) {
    let timer = void 0;
    return (...args) => {
      function next() {
        func(...args);
      }
      if (timer) {
        clearTimeout(timer);
      }
      timer = setTimeout(next, timeout);
    };
  },
  isHttpUrl(url) {
    return url.startsWith("http://") || url.startsWith("https://");
  },
  formatNativeUrl(appUrl, wcUri) {
    if (CoreHelperUtil.isHttpUrl(appUrl)) {
      return this.formatUniversalUrl(appUrl, wcUri);
    }
    let safeAppUrl = appUrl;
    if (!safeAppUrl.includes("://")) {
      safeAppUrl = appUrl.replaceAll("/", "").replaceAll(":", "");
      safeAppUrl = `${safeAppUrl}://`;
    }
    if (!safeAppUrl.endsWith("/")) {
      safeAppUrl = `${safeAppUrl}/`;
    }
    if (this.isTelegram() && this.isAndroid()) {
      wcUri = encodeURIComponent(wcUri);
    }
    const encodedWcUrl = encodeURIComponent(wcUri);
    return {
      redirect: `${safeAppUrl}wc?uri=${encodedWcUrl}`,
      href: safeAppUrl
    };
  },
  formatUniversalUrl(appUrl, wcUri) {
    if (!CoreHelperUtil.isHttpUrl(appUrl)) {
      return this.formatNativeUrl(appUrl, wcUri);
    }
    let safeAppUrl = appUrl;
    if (!safeAppUrl.endsWith("/")) {
      safeAppUrl = `${safeAppUrl}/`;
    }
    const encodedWcUrl = encodeURIComponent(wcUri);
    return {
      redirect: `${safeAppUrl}wc?uri=${encodedWcUrl}`,
      href: safeAppUrl
    };
  },
  getOpenTargetForPlatform(target) {
    if (this.isTelegram()) {
      return "_blank";
    }
    return target;
  },
  openHref(href, target, features) {
    window.open(href, this.getOpenTargetForPlatform(target), features || "noreferrer noopener");
  },
  returnOpenHref(href, target, features) {
    return window.open(href, this.getOpenTargetForPlatform(target), features || "noreferrer noopener");
  },
  isTelegram() {
    return typeof window !== "undefined" && // eslint-disable-next-line @typescript-eslint/no-explicit-any
    (Boolean(window.TelegramWebviewProxy) || // eslint-disable-next-line @typescript-eslint/no-explicit-any
    Boolean(window.Telegram) || // eslint-disable-next-line @typescript-eslint/no-explicit-any
    Boolean(window.TelegramWebviewProxyProto));
  },
  async preloadImage(src) {
    const imagePromise = new Promise((resolve, reject) => {
      const image = new Image();
      image.onload = resolve;
      image.onerror = reject;
      image.crossOrigin = "anonymous";
      image.src = src;
    });
    return Promise.race([imagePromise, CoreHelperUtil.wait(2e3)]);
  },
  formatBalance(balance, symbol) {
    let formattedBalance = "0.000";
    if (typeof balance === "string") {
      const number = Number(balance);
      if (number) {
        const formattedValue = Math.floor(number * 1e3) / 1e3;
        if (formattedValue) {
          formattedBalance = formattedValue.toString();
        }
      }
    }
    return `${formattedBalance}${symbol ? ` ${symbol}` : ""}`;
  },
  formatBalance2(balance, symbol) {
    var _a7;
    let formattedBalance = void 0;
    if (balance === "0") {
      formattedBalance = "0";
    } else if (typeof balance === "string") {
      const number = Number(balance);
      if (number) {
        formattedBalance = (_a7 = number.toString().match(/^-?\d+(?:\.\d{0,3})?/u)) == null ? void 0 : _a7[0];
      }
    }
    return {
      value: formattedBalance ?? "0",
      rest: formattedBalance === "0" ? "000" : "",
      symbol
    };
  },
  getApiUrl() {
    return ConstantsUtil.W3M_API_URL;
  },
  getBlockchainApiUrl() {
    return ConstantsUtil.BLOCKCHAIN_API_RPC_URL;
  },
  getAnalyticsUrl() {
    return ConstantsUtil.PULSE_API_URL;
  },
  getUUID() {
    if (crypto == null ? void 0 : crypto.randomUUID) {
      return crypto.randomUUID();
    }
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (c3) => {
      const r2 = Math.random() * 16 | 0;
      const v6 = c3 === "x" ? r2 : r2 & 3 | 8;
      return v6.toString(16);
    });
  },
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  parseError(error) {
    var _a7, _b3;
    if (typeof error === "string") {
      return error;
    } else if (typeof ((_b3 = (_a7 = error == null ? void 0 : error.issues) == null ? void 0 : _a7[0]) == null ? void 0 : _b3.message) === "string") {
      return error.issues[0].message;
    } else if (error instanceof Error) {
      return error.message;
    }
    return "Unknown error";
  },
  sortRequestedNetworks(approvedIds, requestedNetworks = []) {
    const approvedIndexMap = {};
    if (requestedNetworks && approvedIds) {
      approvedIds.forEach((id, index) => {
        approvedIndexMap[id] = index;
      });
      requestedNetworks.sort((a2, b3) => {
        const indexA = approvedIndexMap[a2.id];
        const indexB = approvedIndexMap[b3.id];
        if (indexA !== void 0 && indexB !== void 0) {
          return indexA - indexB;
        } else if (indexA !== void 0) {
          return -1;
        } else if (indexB !== void 0) {
          return 1;
        }
        return 0;
      });
    }
    return requestedNetworks;
  },
  calculateBalance(array) {
    let sum = 0;
    for (const item of array) {
      sum += item.value ?? 0;
    }
    return sum;
  },
  formatTokenBalance(number) {
    const roundedNumber = number.toFixed(2);
    const [dollars, pennies] = roundedNumber.split(".");
    return { dollars, pennies };
  },
  isAddress(address, chain = "eip155") {
    switch (chain) {
      case "eip155":
        if (!/^(?:0x)?[0-9a-f]{40}$/iu.test(address)) {
          return false;
        } else if (/^(?:0x)?[0-9a-f]{40}$/iu.test(address) || /^(?:0x)?[0-9A-F]{40}$/iu.test(address)) {
          return true;
        }
        return false;
      case "solana":
        return /[1-9A-HJ-NP-Za-km-z]{32,44}$/iu.test(address);
      default:
        return false;
    }
  },
  uniqueBy(arr, key2) {
    const set = /* @__PURE__ */ new Set();
    return arr.filter((item) => {
      const keyValue = item[key2];
      if (set.has(keyValue)) {
        return false;
      }
      set.add(keyValue);
      return true;
    });
  },
  generateSdkVersion(adapters, platform, version9) {
    const noAdapters = adapters.length === 0;
    const adapterNames = noAdapters ? "universal" : adapters.map((adapter) => adapter.adapterType).join(",");
    return `${platform}-${adapterNames}-${version9}`;
  },
  // eslint-disable-next-line max-params
  createAccount(namespace, address, type, publicKey, path) {
    return {
      namespace,
      address,
      type,
      publicKey,
      path
    };
  },
  isCaipAddress(address) {
    if (typeof address !== "string") {
      return false;
    }
    const sections = address.split(":");
    const namespace = sections[0];
    return sections.filter(Boolean).length === 3 && namespace in ConstantsUtil.CHAIN_NAME_MAP;
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/AssetController.js
var state2 = proxy({
  walletImages: {},
  networkImages: {},
  chainImages: {},
  connectorImages: {},
  tokenImages: {},
  currencyImages: {}
});
var AssetController = {
  state: state2,
  subscribeNetworkImages(callback) {
    return subscribe(state2.networkImages, () => callback(state2.networkImages));
  },
  subscribeKey(key2, callback) {
    return subscribeKey(state2, key2, callback);
  },
  subscribe(callback) {
    return subscribe(state2, () => callback(state2));
  },
  setWalletImage(key2, value) {
    state2.walletImages[key2] = value;
  },
  setNetworkImage(key2, value) {
    state2.networkImages[key2] = value;
  },
  setChainImage(key2, value) {
    state2.chainImages[key2] = value;
  },
  setConnectorImage(key2, value) {
    state2.connectorImages = { ...state2.connectorImages, [key2]: value };
  },
  setTokenImage(key2, value) {
    state2.tokenImages[key2] = value;
  },
  setCurrencyImage(key2, value) {
    state2.currencyImages[key2] = value;
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/utils/AssetUtil.js
var namespaceImageIds = {
  // Ethereum
  eip155: "ba0ba0cd-17c6-4806-ad93-f9d174f17900",
  // Solana
  solana: "a1b58899-f671-4276-6a5e-56ca5bd59700",
  // Polkadot
  polkadot: "",
  // Bitcoin
  bip122: ""
};
var AssetUtil = {
  async fetchWalletImage(imageId) {
    if (!imageId) {
      return void 0;
    }
    await ApiController._fetchWalletImage(imageId);
    return this.getWalletImageById(imageId);
  },
  async fetchNetworkImage(imageId) {
    if (!imageId) {
      return void 0;
    }
    const existingImage = this.getNetworkImageById(imageId);
    if (existingImage) {
      return existingImage;
    }
    await ApiController._fetchNetworkImage(imageId);
    return this.getNetworkImageById(imageId);
  },
  getWalletImageById(imageId) {
    if (!imageId) {
      return void 0;
    }
    return AssetController.state.walletImages[imageId];
  },
  getWalletImage(wallet) {
    if (wallet == null ? void 0 : wallet.image_url) {
      return wallet == null ? void 0 : wallet.image_url;
    }
    if (wallet == null ? void 0 : wallet.image_id) {
      return AssetController.state.walletImages[wallet.image_id];
    }
    return void 0;
  },
  getNetworkImage(network) {
    var _a7, _b3, _c2;
    if ((_a7 = network == null ? void 0 : network.assets) == null ? void 0 : _a7.imageUrl) {
      return (_b3 = network == null ? void 0 : network.assets) == null ? void 0 : _b3.imageUrl;
    }
    if ((_c2 = network == null ? void 0 : network.assets) == null ? void 0 : _c2.imageId) {
      return AssetController.state.networkImages[network.assets.imageId];
    }
    return void 0;
  },
  getNetworkImageById(imageId) {
    if (!imageId) {
      return void 0;
    }
    return AssetController.state.networkImages[imageId];
  },
  getConnectorImage(connector) {
    if (connector == null ? void 0 : connector.imageUrl) {
      return connector.imageUrl;
    }
    if (connector == null ? void 0 : connector.imageId) {
      return AssetController.state.connectorImages[connector.imageId];
    }
    return void 0;
  },
  getChainImage(chain) {
    return AssetController.state.networkImages[namespaceImageIds[chain]];
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/utils/FetchUtil.js
async function fetchData(...args) {
  const response = await fetch(...args);
  if (!response.ok) {
    const err = new Error(`HTTP status code: ${response.status}`, {
      cause: response
    });
    throw err;
  }
  return response;
}
var FetchUtil = class {
  constructor({ baseUrl: baseUrl4, clientId }) {
    this.baseUrl = baseUrl4;
    this.clientId = clientId;
  }
  async get({ headers, signal, cache, ...args }) {
    const url = this.createUrl(args);
    const response = await fetchData(url, { method: "GET", headers, signal, cache });
    return response.json();
  }
  async getBlob({ headers, signal, ...args }) {
    const url = this.createUrl(args);
    const response = await fetchData(url, { method: "GET", headers, signal });
    return response.blob();
  }
  async post({ body, headers, signal, ...args }) {
    const url = this.createUrl(args);
    const response = await fetchData(url, {
      method: "POST",
      headers,
      body: body ? JSON.stringify(body) : void 0,
      signal
    });
    return response.json();
  }
  async put({ body, headers, signal, ...args }) {
    const url = this.createUrl(args);
    const response = await fetchData(url, {
      method: "PUT",
      headers,
      body: body ? JSON.stringify(body) : void 0,
      signal
    });
    return response.json();
  }
  async delete({ body, headers, signal, ...args }) {
    const url = this.createUrl(args);
    const response = await fetchData(url, {
      method: "DELETE",
      headers,
      body: body ? JSON.stringify(body) : void 0,
      signal
    });
    return response.json();
  }
  createUrl({ path, params }) {
    const url = new URL(path, this.baseUrl);
    if (params) {
      Object.entries(params).forEach(([key2, value]) => {
        if (value) {
          url.searchParams.append(key2, value);
        }
      });
    }
    if (this.clientId) {
      url.searchParams.append("clientId", this.clientId);
    }
    return url;
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/utils/StorageUtil.js
var StorageUtil = {
  getActiveNetworkProps() {
    const namespace = StorageUtil.getActiveNamespace();
    const caipNetworkId = StorageUtil.getActiveCaipNetworkId();
    const stringChainId = caipNetworkId ? caipNetworkId.split(":")[1] : void 0;
    const chainId = stringChainId ? isNaN(Number(stringChainId)) ? stringChainId : Number(stringChainId) : void 0;
    return {
      namespace,
      caipNetworkId,
      chainId
    };
  },
  setWalletConnectDeepLink({ name, href }) {
    try {
      SafeLocalStorage.setItem(SafeLocalStorageKeys.DEEPLINK_CHOICE, JSON.stringify({ href, name }));
    } catch {
      console.info("Unable to set WalletConnect deep link");
    }
  },
  getWalletConnectDeepLink() {
    try {
      const deepLink = SafeLocalStorage.getItem(SafeLocalStorageKeys.DEEPLINK_CHOICE);
      if (deepLink) {
        return JSON.parse(deepLink);
      }
    } catch {
      console.info("Unable to get WalletConnect deep link");
    }
    return void 0;
  },
  deleteWalletConnectDeepLink() {
    try {
      SafeLocalStorage.removeItem(SafeLocalStorageKeys.DEEPLINK_CHOICE);
    } catch {
      console.info("Unable to delete WalletConnect deep link");
    }
  },
  setActiveNamespace(namespace) {
    try {
      SafeLocalStorage.setItem(SafeLocalStorageKeys.ACTIVE_NAMESPACE, namespace);
    } catch {
      console.info("Unable to set active namespace");
    }
  },
  setActiveCaipNetworkId(caipNetworkId) {
    try {
      SafeLocalStorage.setItem(SafeLocalStorageKeys.ACTIVE_CAIP_NETWORK_ID, caipNetworkId);
      StorageUtil.setActiveNamespace(caipNetworkId.split(":")[0]);
    } catch {
      console.info("Unable to set active caip network id");
    }
  },
  getActiveCaipNetworkId() {
    try {
      return SafeLocalStorage.getItem(SafeLocalStorageKeys.ACTIVE_CAIP_NETWORK_ID);
    } catch {
      console.info("Unable to get active caip network id");
      return void 0;
    }
  },
  deleteActiveCaipNetworkId() {
    try {
      SafeLocalStorage.removeItem(SafeLocalStorageKeys.ACTIVE_CAIP_NETWORK_ID);
    } catch {
      console.info("Unable to delete active caip network id");
    }
  },
  deleteConnectedConnectorId(namespace) {
    try {
      const key2 = getSafeConnectorIdKey(namespace);
      SafeLocalStorage.removeItem(key2);
    } catch {
      console.info("Unable to delete connected connector id");
    }
  },
  setAppKitRecent(wallet) {
    try {
      const recentWallets = StorageUtil.getRecentWallets();
      const exists = recentWallets.find((w3) => w3.id === wallet.id);
      if (!exists) {
        recentWallets.unshift(wallet);
        if (recentWallets.length > 2) {
          recentWallets.pop();
        }
        SafeLocalStorage.setItem(SafeLocalStorageKeys.RECENT_WALLETS, JSON.stringify(recentWallets));
      }
    } catch {
      console.info("Unable to set AppKit recent");
    }
  },
  getRecentWallets() {
    try {
      const recent = SafeLocalStorage.getItem(SafeLocalStorageKeys.RECENT_WALLETS);
      return recent ? JSON.parse(recent) : [];
    } catch {
      console.info("Unable to get AppKit recent");
    }
    return [];
  },
  setConnectedConnectorId(namespace, connectorId) {
    try {
      const key2 = getSafeConnectorIdKey(namespace);
      SafeLocalStorage.setItem(key2, connectorId);
    } catch {
      console.info("Unable to set Connected Connector Id");
    }
  },
  getActiveNamespace() {
    try {
      const activeNamespace = SafeLocalStorage.getItem(SafeLocalStorageKeys.ACTIVE_NAMESPACE);
      return activeNamespace;
    } catch {
      console.info("Unable to get active namespace");
    }
    return void 0;
  },
  getConnectedConnectorId(namespace) {
    if (!namespace) {
      return void 0;
    }
    try {
      const key2 = getSafeConnectorIdKey(namespace);
      return SafeLocalStorage.getItem(key2);
    } catch (e2) {
      console.info("Unable to get connected connector id in namespace ", namespace);
    }
    return void 0;
  },
  setConnectedSocialProvider(socialProvider) {
    try {
      SafeLocalStorage.setItem(SafeLocalStorageKeys.CONNECTED_SOCIAL, socialProvider);
    } catch {
      console.info("Unable to set connected social provider");
    }
  },
  getConnectedSocialProvider() {
    try {
      return SafeLocalStorage.getItem(SafeLocalStorageKeys.CONNECTED_SOCIAL);
    } catch {
      console.info("Unable to get connected social provider");
    }
    return void 0;
  },
  deleteConnectedSocialProvider() {
    try {
      SafeLocalStorage.removeItem(SafeLocalStorageKeys.CONNECTED_SOCIAL);
    } catch {
      console.info("Unable to delete connected social provider");
    }
  },
  getConnectedSocialUsername() {
    try {
      return SafeLocalStorage.getItem(SafeLocalStorageKeys.CONNECTED_SOCIAL_USERNAME);
    } catch {
      console.info("Unable to get connected social username");
    }
    return void 0;
  },
  getStoredActiveCaipNetworkId() {
    var _a7;
    const storedCaipNetworkId = SafeLocalStorage.getItem(SafeLocalStorageKeys.ACTIVE_CAIP_NETWORK_ID);
    const networkId = (_a7 = storedCaipNetworkId == null ? void 0 : storedCaipNetworkId.split(":")) == null ? void 0 : _a7[1];
    return networkId;
  },
  setConnectionStatus(status) {
    try {
      SafeLocalStorage.setItem(SafeLocalStorageKeys.CONNECTION_STATUS, status);
    } catch {
      console.info("Unable to set connection status");
    }
  },
  getConnectionStatus() {
    try {
      return SafeLocalStorage.getItem(SafeLocalStorageKeys.CONNECTION_STATUS);
    } catch {
      return void 0;
    }
  },
  getConnectedNamespaces() {
    try {
      const namespaces = SafeLocalStorage.getItem(SafeLocalStorageKeys.CONNECTED_NAMESPACES);
      if (!(namespaces == null ? void 0 : namespaces.length)) {
        return [];
      }
      return namespaces.split(",");
    } catch {
      return [];
    }
  },
  setConnectedNamespaces(namespaces) {
    try {
      const uniqueNamespaces = Array.from(new Set(namespaces));
      SafeLocalStorage.setItem(SafeLocalStorageKeys.CONNECTED_NAMESPACES, uniqueNamespaces.join(","));
    } catch {
      console.info("Unable to set namespaces in storage");
    }
  },
  addConnectedNamespace(namespace) {
    try {
      const namespaces = StorageUtil.getConnectedNamespaces();
      if (!namespaces.includes(namespace)) {
        namespaces.push(namespace);
        StorageUtil.setConnectedNamespaces(namespaces);
      }
    } catch {
      console.info("Unable to add connected namespace");
    }
  },
  removeConnectedNamespace(namespace) {
    try {
      const namespaces = StorageUtil.getConnectedNamespaces();
      const index = namespaces.indexOf(namespace);
      if (index > -1) {
        namespaces.splice(index, 1);
        StorageUtil.setConnectedNamespaces(namespaces);
      }
    } catch {
      console.info("Unable to remove connected namespace");
    }
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/OptionsController.js
var state3 = proxy({
  features: ConstantsUtil2.DEFAULT_FEATURES,
  projectId: "",
  sdkType: "appkit",
  sdkVersion: "html-wagmi-undefined",
  defaultAccountTypes: ConstantsUtil2.DEFAULT_ACCOUNT_TYPES
});
var OptionsController = {
  state: state3,
  subscribeKey(key2, callback) {
    return subscribeKey(state3, key2, callback);
  },
  setOptions(options) {
    Object.assign(state3, options);
  },
  setFeatures(features) {
    if (!features) {
      return;
    }
    if (!state3.features) {
      state3.features = ConstantsUtil2.DEFAULT_FEATURES;
      return;
    }
    const newFeatures = { ...state3.features, ...features };
    state3.features = newFeatures;
  },
  setProjectId(projectId) {
    state3.projectId = projectId;
  },
  setAllWallets(allWallets) {
    state3.allWallets = allWallets;
  },
  setIncludeWalletIds(includeWalletIds) {
    state3.includeWalletIds = includeWalletIds;
  },
  setExcludeWalletIds(excludeWalletIds) {
    state3.excludeWalletIds = excludeWalletIds;
  },
  setFeaturedWalletIds(featuredWalletIds) {
    state3.featuredWalletIds = featuredWalletIds;
  },
  setTokens(tokens) {
    state3.tokens = tokens;
  },
  setTermsConditionsUrl(termsConditionsUrl) {
    state3.termsConditionsUrl = termsConditionsUrl;
  },
  setPrivacyPolicyUrl(privacyPolicyUrl) {
    state3.privacyPolicyUrl = privacyPolicyUrl;
  },
  setCustomWallets(customWallets) {
    state3.customWallets = customWallets;
  },
  setIsSiweEnabled(isSiweEnabled) {
    state3.isSiweEnabled = isSiweEnabled;
  },
  setIsUniversalProvider(isUniversalProvider) {
    state3.isUniversalProvider = isUniversalProvider;
  },
  setSdkVersion(sdkVersion) {
    state3.sdkVersion = sdkVersion;
  },
  setMetadata(metadata) {
    state3.metadata = metadata;
  },
  setDisableAppend(disableAppend) {
    state3.disableAppend = disableAppend;
  },
  setEIP6963Enabled(enableEIP6963) {
    state3.enableEIP6963 = enableEIP6963;
  },
  setDebug(debug) {
    state3.debug = debug;
  },
  setEnableWalletConnect(enableWalletConnect) {
    state3.enableWalletConnect = enableWalletConnect;
  },
  setEnableWalletGuide(enableWalletGuide) {
    state3.enableWalletGuide = enableWalletGuide;
  },
  setEnableAuthLogger(enableAuthLogger) {
    state3.enableAuthLogger = enableAuthLogger;
  },
  setEnableWallets(enableWallets) {
    state3.enableWallets = enableWallets;
  },
  setHasMultipleAddresses(hasMultipleAddresses) {
    state3.hasMultipleAddresses = hasMultipleAddresses;
  },
  setSIWX(siwx) {
    state3.siwx = siwx;
  },
  setConnectMethodsOrder(connectMethodsOrder) {
    state3.features = {
      ...state3.features,
      connectMethodsOrder
    };
  },
  setWalletFeaturesOrder(walletFeaturesOrder) {
    state3.features = {
      ...state3.features,
      walletFeaturesOrder
    };
  },
  setSocialsOrder(socialsOrder) {
    state3.features = {
      ...state3.features,
      socials: socialsOrder
    };
  },
  setCollapseWallets(collapseWallets) {
    state3.features = {
      ...state3.features,
      collapseWallets
    };
  },
  setEnableEmbedded(enableEmbedded) {
    state3.enableEmbedded = enableEmbedded;
  },
  setAllowUnsupportedChain(allowUnsupportedChain) {
    state3.allowUnsupportedChain = allowUnsupportedChain;
  },
  setUsingInjectedUniversalProvider(useInjectedUniversalProvider) {
    state3.useInjectedUniversalProvider = useInjectedUniversalProvider;
  },
  setDefaultAccountTypes(defaultAccountType = {}) {
    Object.entries(defaultAccountType).forEach(([namespace, accountType]) => {
      if (accountType) {
        state3.defaultAccountTypes[namespace] = accountType;
      }
    });
  },
  getSnapshot() {
    return snapshot(state3);
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/BlockchainApiController.js
var DEFAULT_OPTIONS = {
  purchaseCurrencies: [
    {
      id: "2b92315d-eab7-5bef-84fa-089a131333f5",
      name: "USD Coin",
      symbol: "USDC",
      networks: [
        {
          name: "ethereum-mainnet",
          display_name: "Ethereum",
          chain_id: "1",
          contract_address: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
        },
        {
          name: "polygon-mainnet",
          display_name: "Polygon",
          chain_id: "137",
          contract_address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
        }
      ]
    },
    {
      id: "2b92315d-eab7-5bef-84fa-089a131333f5",
      name: "Ether",
      symbol: "ETH",
      networks: [
        {
          name: "ethereum-mainnet",
          display_name: "Ethereum",
          chain_id: "1",
          contract_address: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
        },
        {
          name: "polygon-mainnet",
          display_name: "Polygon",
          chain_id: "137",
          contract_address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
        }
      ]
    }
  ],
  paymentCurrencies: [
    {
      id: "USD",
      payment_method_limits: [
        {
          id: "card",
          min: "10.00",
          max: "7500.00"
        },
        {
          id: "ach_bank_account",
          min: "10.00",
          max: "25000.00"
        }
      ]
    },
    {
      id: "EUR",
      payment_method_limits: [
        {
          id: "card",
          min: "10.00",
          max: "7500.00"
        },
        {
          id: "ach_bank_account",
          min: "10.00",
          max: "25000.00"
        }
      ]
    }
  ]
};
var baseUrl = CoreHelperUtil.getBlockchainApiUrl();
var state4 = proxy({
  clientId: null,
  api: new FetchUtil({ baseUrl, clientId: null }),
  supportedChains: { http: [], ws: [] }
});
var BlockchainApiController = {
  state: state4,
  async isNetworkSupported(network) {
    if (!network) {
      return false;
    }
    try {
      if (!state4.supportedChains.http.length) {
        await BlockchainApiController.getSupportedNetworks({
          projectId: OptionsController.state.projectId
        });
      }
    } catch (e2) {
      return false;
    }
    return state4.supportedChains.http.includes(network);
  },
  async getSupportedNetworks({ projectId }) {
    const supportedChains = await state4.api.get({
      path: "v1/supported-chains",
      params: {
        projectId
      }
    });
    state4.supportedChains = supportedChains;
    return supportedChains;
  },
  async fetchIdentity({ address }) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { avatar: "", name: "" };
    }
    return state4.api.get({
      path: `/v1/identity/${address}`,
      params: {
        projectId: OptionsController.state.projectId,
        sender: ChainController.state.activeCaipAddress ? CoreHelperUtil.getPlainAddress(ChainController.state.activeCaipAddress) : void 0
      }
    });
  },
  async fetchTransactions({ account, projectId, cursor, onramp, signal, cache, chainId }) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { data: [], next: void 0 };
    }
    return state4.api.get({
      path: `/v1/account/${account}/history`,
      params: {
        projectId,
        cursor,
        onramp,
        chainId
      },
      signal,
      cache
    });
  },
  async fetchSwapQuote({ projectId, amount, userAddress, from, to: to4, gasPrice }) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { quotes: [] };
    }
    return state4.api.get({
      path: `/v1/convert/quotes`,
      headers: {
        "Content-Type": "application/json"
      },
      params: {
        projectId,
        amount,
        userAddress,
        from,
        to: to4,
        gasPrice
      }
    });
  },
  async fetchSwapTokens({ projectId, chainId }) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { tokens: [] };
    }
    return state4.api.get({
      path: `/v1/convert/tokens`,
      params: {
        projectId,
        chainId
      }
    });
  },
  async fetchTokenPrice({ projectId, addresses }) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { fungibles: [] };
    }
    return state4.api.post({
      path: "/v1/fungible/price",
      body: {
        projectId,
        currency: "usd",
        addresses
      },
      headers: {
        "Content-Type": "application/json"
      }
    });
  },
  async fetchSwapAllowance({ projectId, tokenAddress, userAddress }) {
    var _a7;
    const { sdkType, sdkVersion } = OptionsController.state;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { allowance: "0" };
    }
    return state4.api.get({
      path: `/v1/convert/allowance`,
      params: {
        projectId,
        tokenAddress,
        userAddress
      },
      headers: {
        "Content-Type": "application/json",
        "x-sdk-type": sdkType,
        "x-sdk-version": sdkVersion || "html-wagmi-4.2.2"
      }
    });
  },
  async fetchGasPrice({ projectId, chainId }) {
    var _a7;
    const { sdkType, sdkVersion } = OptionsController.state;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      throw new Error("Network not supported for Gas Price");
    }
    return state4.api.get({
      path: `/v1/convert/gas-price`,
      headers: {
        "Content-Type": "application/json",
        "x-sdk-type": sdkType,
        "x-sdk-version": sdkVersion || "html-wagmi-4.2.2"
      },
      params: {
        projectId,
        chainId
      }
    });
  },
  async generateSwapCalldata({ amount, from, projectId, to: to4, userAddress }) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      throw new Error("Network not supported for Swaps");
    }
    return state4.api.post({
      path: "/v1/convert/build-transaction",
      headers: {
        "Content-Type": "application/json"
      },
      body: {
        amount,
        eip155: {
          slippage: ConstantsUtil2.CONVERT_SLIPPAGE_TOLERANCE
        },
        from,
        projectId,
        to: to4,
        userAddress
      }
    });
  },
  async generateApproveCalldata({ from, projectId, to: to4, userAddress }) {
    var _a7;
    const { sdkType, sdkVersion } = OptionsController.state;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      throw new Error("Network not supported for Swaps");
    }
    return state4.api.get({
      path: `/v1/convert/build-approve`,
      headers: {
        "Content-Type": "application/json",
        "x-sdk-type": sdkType,
        "x-sdk-version": sdkVersion || "html-wagmi-4.2.2"
      },
      params: {
        projectId,
        userAddress,
        from,
        to: to4
      }
    });
  },
  async getBalance(address, chainId, forceUpdate) {
    var _a7;
    const { sdkType, sdkVersion } = OptionsController.state;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { balances: [] };
    }
    return state4.api.get({
      path: `/v1/account/${address}/balance`,
      headers: {
        "x-sdk-type": sdkType,
        "x-sdk-version": sdkVersion || "html-wagmi-4.2.2"
      },
      params: {
        currency: "usd",
        projectId: OptionsController.state.projectId,
        chainId,
        forceUpdate
      }
    });
  },
  async lookupEnsName(name) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { addresses: {}, attributes: [] };
    }
    return state4.api.get({
      path: `/v1/profile/account/${name}`,
      params: {
        projectId: OptionsController.state.projectId,
        apiVersion: "2"
      }
    });
  },
  async reverseLookupEnsName({ address }) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return [];
    }
    return state4.api.get({
      path: `/v1/profile/reverse/${address}`,
      params: {
        sender: AccountController.state.address,
        projectId: OptionsController.state.projectId,
        apiVersion: "2"
      }
    });
  },
  async getEnsNameSuggestions(name) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { suggestions: [] };
    }
    return state4.api.get({
      path: `/v1/profile/suggestions/${name}`,
      params: {
        projectId: OptionsController.state.projectId,
        zone: "reown.id"
      }
    });
  },
  async registerEnsName({ coinType, address, message, signature: signature2 }) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { success: false };
    }
    return state4.api.post({
      path: `/v1/profile/account`,
      body: { coin_type: coinType, address, message, signature: signature2 },
      headers: {
        "Content-Type": "application/json"
      }
    });
  },
  async generateOnRampURL({ destinationWallets, partnerUserId, defaultNetwork, purchaseAmount, paymentAmount }) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return "";
    }
    const response = await state4.api.post({
      path: `/v1/generators/onrampurl`,
      params: {
        projectId: OptionsController.state.projectId
      },
      body: {
        destinationWallets,
        defaultNetwork,
        partnerUserId,
        defaultExperience: "buy",
        presetCryptoAmount: purchaseAmount,
        presetFiatAmount: paymentAmount
      }
    });
    return response.url;
  },
  async getOnrampOptions() {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { paymentCurrencies: [], purchaseCurrencies: [] };
    }
    try {
      const response = await state4.api.get({
        path: `/v1/onramp/options`,
        params: {
          projectId: OptionsController.state.projectId
        }
      });
      return response;
    } catch (e2) {
      return DEFAULT_OPTIONS;
    }
  },
  async getOnrampQuote({ purchaseCurrency, paymentCurrency, amount, network }) {
    var _a7;
    try {
      const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
      if (!isSupported) {
        return null;
      }
      const response = await state4.api.post({
        path: `/v1/onramp/quote`,
        params: {
          projectId: OptionsController.state.projectId
        },
        body: {
          purchaseCurrency,
          paymentCurrency,
          amount,
          network
        }
      });
      return response;
    } catch (e2) {
      return {
        coinbaseFee: { amount, currency: paymentCurrency.id },
        networkFee: { amount, currency: paymentCurrency.id },
        paymentSubtotal: { amount, currency: paymentCurrency.id },
        paymentTotal: { amount, currency: paymentCurrency.id },
        purchaseAmount: { amount, currency: paymentCurrency.id },
        quoteId: "mocked-quote-id"
      };
    }
  },
  async getSmartSessions(caipAddress) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return [];
    }
    return state4.api.get({
      path: `/v1/sessions/${caipAddress}`,
      params: {
        projectId: OptionsController.state.projectId
      }
    });
  },
  async revokeSmartSession(address, pci, signature2) {
    var _a7;
    const isSupported = await BlockchainApiController.isNetworkSupported((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    if (!isSupported) {
      return { success: false };
    }
    return state4.api.post({
      path: `/v1/sessions/${address}/revoke`,
      params: {
        projectId: OptionsController.state.projectId
      },
      body: {
        pci,
        signature: signature2
      }
    });
  },
  setClientId(clientId) {
    state4.clientId = clientId;
    state4.api = new FetchUtil({ baseUrl, clientId });
  }
};

// node_modules/@reown/appkit-polyfills/dist/esm/index.js
var import_buffer = __toESM(require_buffer());
var _a5;
if (typeof window !== "undefined") {
  if (!window.Buffer) {
    window.Buffer = import_buffer.Buffer;
  }
  if (!window.global) {
    window.global = window;
  }
  if (!window.process) {
    window.process = {};
  }
  if (!((_a5 = window.process) == null ? void 0 : _a5.env)) {
    window.process = { env: {} };
  }
}

// node_modules/@reown/appkit-wallet/dist/esm/src/W3mFrameConstants.js
var SECURE_SITE_SDK = process.env["NEXT_PUBLIC_SECURE_SITE_SDK_URL"] || "https://secure.walletconnect.org/sdk";
var DEFAULT_LOG_LEVEL = process.env["NEXT_PUBLIC_DEFAULT_LOG_LEVEL"] || "error";
var SECURE_SITE_SDK_VERSION = process.env["NEXT_PUBLIC_SECURE_SITE_SDK_VERSION"] || 3;
var W3mFrameConstants = {
  APP_EVENT_KEY: "@w3m-app/",
  FRAME_EVENT_KEY: "@w3m-frame/",
  RPC_METHOD_KEY: "RPC_",
  STORAGE_KEY: "@appkit-wallet/",
  SESSION_TOKEN_KEY: "SESSION_TOKEN_KEY",
  EMAIL_LOGIN_USED_KEY: "EMAIL_LOGIN_USED_KEY",
  LAST_USED_CHAIN_KEY: "LAST_USED_CHAIN_KEY",
  LAST_EMAIL_LOGIN_TIME: "LAST_EMAIL_LOGIN_TIME",
  EMAIL: "EMAIL",
  PREFERRED_ACCOUNT_TYPE: "PREFERRED_ACCOUNT_TYPE",
  SMART_ACCOUNT_ENABLED: "SMART_ACCOUNT_ENABLED",
  SMART_ACCOUNT_ENABLED_NETWORKS: "SMART_ACCOUNT_ENABLED_NETWORKS",
  SOCIAL_USERNAME: "SOCIAL_USERNAME",
  APP_SWITCH_NETWORK: "@w3m-app/SWITCH_NETWORK",
  APP_CONNECT_EMAIL: "@w3m-app/CONNECT_EMAIL",
  APP_CONNECT_DEVICE: "@w3m-app/CONNECT_DEVICE",
  APP_CONNECT_OTP: "@w3m-app/CONNECT_OTP",
  APP_CONNECT_SOCIAL: "@w3m-app/CONNECT_SOCIAL",
  APP_GET_SOCIAL_REDIRECT_URI: "@w3m-app/GET_SOCIAL_REDIRECT_URI",
  APP_GET_USER: "@w3m-app/GET_USER",
  APP_SIGN_OUT: "@w3m-app/SIGN_OUT",
  APP_IS_CONNECTED: "@w3m-app/IS_CONNECTED",
  APP_GET_CHAIN_ID: "@w3m-app/GET_CHAIN_ID",
  APP_RPC_REQUEST: "@w3m-app/RPC_REQUEST",
  APP_UPDATE_EMAIL: "@w3m-app/UPDATE_EMAIL",
  APP_UPDATE_EMAIL_PRIMARY_OTP: "@w3m-app/UPDATE_EMAIL_PRIMARY_OTP",
  APP_UPDATE_EMAIL_SECONDARY_OTP: "@w3m-app/UPDATE_EMAIL_SECONDARY_OTP",
  APP_AWAIT_UPDATE_EMAIL: "@w3m-app/AWAIT_UPDATE_EMAIL",
  APP_SYNC_THEME: "@w3m-app/SYNC_THEME",
  APP_SYNC_DAPP_DATA: "@w3m-app/SYNC_DAPP_DATA",
  APP_GET_SMART_ACCOUNT_ENABLED_NETWORKS: "@w3m-app/GET_SMART_ACCOUNT_ENABLED_NETWORKS",
  APP_INIT_SMART_ACCOUNT: "@w3m-app/INIT_SMART_ACCOUNT",
  APP_SET_PREFERRED_ACCOUNT: "@w3m-app/SET_PREFERRED_ACCOUNT",
  APP_CONNECT_FARCASTER: "@w3m-app/CONNECT_FARCASTER",
  APP_GET_FARCASTER_URI: "@w3m-app/GET_FARCASTER_URI",
  APP_RELOAD: "@w3m-app/RELOAD",
  FRAME_SWITCH_NETWORK_ERROR: "@w3m-frame/SWITCH_NETWORK_ERROR",
  FRAME_SWITCH_NETWORK_SUCCESS: "@w3m-frame/SWITCH_NETWORK_SUCCESS",
  FRAME_CONNECT_EMAIL_ERROR: "@w3m-frame/CONNECT_EMAIL_ERROR",
  FRAME_CONNECT_EMAIL_SUCCESS: "@w3m-frame/CONNECT_EMAIL_SUCCESS",
  FRAME_CONNECT_DEVICE_ERROR: "@w3m-frame/CONNECT_DEVICE_ERROR",
  FRAME_CONNECT_DEVICE_SUCCESS: "@w3m-frame/CONNECT_DEVICE_SUCCESS",
  FRAME_CONNECT_OTP_SUCCESS: "@w3m-frame/CONNECT_OTP_SUCCESS",
  FRAME_CONNECT_OTP_ERROR: "@w3m-frame/CONNECT_OTP_ERROR",
  FRAME_CONNECT_SOCIAL_SUCCESS: "@w3m-frame/CONNECT_SOCIAL_SUCCESS",
  FRAME_CONNECT_SOCIAL_ERROR: "@w3m-frame/CONNECT_SOCIAL_ERROR",
  FRAME_CONNECT_FARCASTER_SUCCESS: "@w3m-frame/CONNECT_FARCASTER_SUCCESS",
  FRAME_CONNECT_FARCASTER_ERROR: "@w3m-frame/CONNECT_FARCASTER_ERROR",
  FRAME_GET_FARCASTER_URI_SUCCESS: "@w3m-frame/GET_FARCASTER_URI_SUCCESS",
  FRAME_GET_FARCASTER_URI_ERROR: "@w3m-frame/GET_FARCASTER_URI_ERROR",
  FRAME_GET_SOCIAL_REDIRECT_URI_SUCCESS: "@w3m-frame/GET_SOCIAL_REDIRECT_URI_SUCCESS",
  FRAME_GET_SOCIAL_REDIRECT_URI_ERROR: "@w3m-frame/GET_SOCIAL_REDIRECT_URI_ERROR",
  FRAME_GET_USER_SUCCESS: "@w3m-frame/GET_USER_SUCCESS",
  FRAME_GET_USER_ERROR: "@w3m-frame/GET_USER_ERROR",
  FRAME_SIGN_OUT_SUCCESS: "@w3m-frame/SIGN_OUT_SUCCESS",
  FRAME_SIGN_OUT_ERROR: "@w3m-frame/SIGN_OUT_ERROR",
  FRAME_IS_CONNECTED_SUCCESS: "@w3m-frame/IS_CONNECTED_SUCCESS",
  FRAME_IS_CONNECTED_ERROR: "@w3m-frame/IS_CONNECTED_ERROR",
  FRAME_GET_CHAIN_ID_SUCCESS: "@w3m-frame/GET_CHAIN_ID_SUCCESS",
  FRAME_GET_CHAIN_ID_ERROR: "@w3m-frame/GET_CHAIN_ID_ERROR",
  FRAME_RPC_REQUEST_SUCCESS: "@w3m-frame/RPC_REQUEST_SUCCESS",
  FRAME_RPC_REQUEST_ERROR: "@w3m-frame/RPC_REQUEST_ERROR",
  FRAME_SESSION_UPDATE: "@w3m-frame/SESSION_UPDATE",
  FRAME_UPDATE_EMAIL_SUCCESS: "@w3m-frame/UPDATE_EMAIL_SUCCESS",
  FRAME_UPDATE_EMAIL_ERROR: "@w3m-frame/UPDATE_EMAIL_ERROR",
  FRAME_UPDATE_EMAIL_PRIMARY_OTP_SUCCESS: "@w3m-frame/UPDATE_EMAIL_PRIMARY_OTP_SUCCESS",
  FRAME_UPDATE_EMAIL_PRIMARY_OTP_ERROR: "@w3m-frame/UPDATE_EMAIL_PRIMARY_OTP_ERROR",
  FRAME_UPDATE_EMAIL_SECONDARY_OTP_SUCCESS: "@w3m-frame/UPDATE_EMAIL_SECONDARY_OTP_SUCCESS",
  FRAME_UPDATE_EMAIL_SECONDARY_OTP_ERROR: "@w3m-frame/UPDATE_EMAIL_SECONDARY_OTP_ERROR",
  FRAME_SYNC_THEME_SUCCESS: "@w3m-frame/SYNC_THEME_SUCCESS",
  FRAME_SYNC_THEME_ERROR: "@w3m-frame/SYNC_THEME_ERROR",
  FRAME_SYNC_DAPP_DATA_SUCCESS: "@w3m-frame/SYNC_DAPP_DATA_SUCCESS",
  FRAME_SYNC_DAPP_DATA_ERROR: "@w3m-frame/SYNC_DAPP_DATA_ERROR",
  FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_SUCCESS: "@w3m-frame/GET_SMART_ACCOUNT_ENABLED_NETWORKS_SUCCESS",
  FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_ERROR: "@w3m-frame/GET_SMART_ACCOUNT_ENABLED_NETWORKS_ERROR",
  FRAME_INIT_SMART_ACCOUNT_SUCCESS: "@w3m-frame/INIT_SMART_ACCOUNT_SUCCESS",
  FRAME_INIT_SMART_ACCOUNT_ERROR: "@w3m-frame/INIT_SMART_ACCOUNT_ERROR",
  FRAME_SET_PREFERRED_ACCOUNT_SUCCESS: "@w3m-frame/SET_PREFERRED_ACCOUNT_SUCCESS",
  FRAME_SET_PREFERRED_ACCOUNT_ERROR: "@w3m-frame/SET_PREFERRED_ACCOUNT_ERROR",
  FRAME_READY: "@w3m-frame/READY",
  FRAME_RELOAD_SUCCESS: "@w3m-frame/RELOAD_SUCCESS",
  FRAME_RELOAD_ERROR: "@w3m-frame/RELOAD_ERROR",
  RPC_RESPONSE_TYPE_ERROR: "RPC_RESPONSE_ERROR",
  RPC_RESPONSE_TYPE_TX: "RPC_RESPONSE_TRANSACTION_HASH",
  RPC_RESPONSE_TYPE_OBJECT: "RPC_RESPONSE_OBJECT"
};
var W3mFrameRpcConstants = {
  SAFE_RPC_METHODS: [
    "eth_accounts",
    "eth_blockNumber",
    "eth_call",
    "eth_chainId",
    "eth_estimateGas",
    "eth_feeHistory",
    "eth_gasPrice",
    "eth_getAccount",
    "eth_getBalance",
    "eth_getBlockByHash",
    "eth_getBlockByNumber",
    "eth_getBlockReceipts",
    "eth_getBlockTransactionCountByHash",
    "eth_getBlockTransactionCountByNumber",
    "eth_getCode",
    "eth_getFilterChanges",
    "eth_getFilterLogs",
    "eth_getLogs",
    "eth_getProof",
    "eth_getStorageAt",
    "eth_getTransactionByBlockHashAndIndex",
    "eth_getTransactionByBlockNumberAndIndex",
    "eth_getTransactionByHash",
    "eth_getTransactionCount",
    "eth_getTransactionReceipt",
    "eth_getUncleCountByBlockHash",
    "eth_getUncleCountByBlockNumber",
    "eth_maxPriorityFeePerGas",
    "eth_newBlockFilter",
    "eth_newFilter",
    "eth_newPendingTransactionFilter",
    "eth_sendRawTransaction",
    "eth_syncing",
    "eth_uninstallFilter",
    "wallet_getCapabilities",
    "wallet_getCallsStatus",
    "eth_getUserOperationReceipt",
    "eth_estimateUserOperationGas",
    "eth_getUserOperationByHash",
    "eth_supportedEntryPoints",
    "wallet_getAssets"
  ],
  NOT_SAFE_RPC_METHODS: [
    "personal_sign",
    "eth_signTypedData_v4",
    "eth_sendTransaction",
    "solana_signMessage",
    "solana_signTransaction",
    "solana_signAllTransactions",
    "solana_signAndSendTransaction",
    "wallet_sendCalls",
    "wallet_grantPermissions",
    "wallet_revokePermissions",
    "eth_sendUserOperation"
  ],
  GET_CHAIN_ID: "eth_chainId",
  RPC_METHOD_NOT_ALLOWED_MESSAGE: "Requested RPC call is not allowed",
  RPC_METHOD_NOT_ALLOWED_UI_MESSAGE: "Action not allowed",
  ACCOUNT_TYPES: {
    EOA: "eoa",
    SMART_ACCOUNT: "smartAccount"
  }
};

// node_modules/@reown/appkit-wallet/dist/esm/src/RegexUtil.js
var RegexUtil = {
  address: /^0x(?:[A-Fa-f0-9]{40})$/u,
  transactionHash: /^0x(?:[A-Fa-f0-9]{64})$/u,
  signedMessage: /^0x(?:[a-fA-F0-9]{62,})$/u
};

// node_modules/@reown/appkit-wallet/dist/esm/src/W3mFrameStorage.js
var W3mFrameStorage = {
  set(key2, value) {
    if (W3mFrameHelpers.isClient) {
      localStorage.setItem(`${W3mFrameConstants.STORAGE_KEY}${key2}`, value);
    }
  },
  get(key2) {
    if (W3mFrameHelpers.isClient) {
      return localStorage.getItem(`${W3mFrameConstants.STORAGE_KEY}${key2}`);
    }
    return null;
  },
  delete(key2, social) {
    if (W3mFrameHelpers.isClient) {
      if (social) {
        localStorage.removeItem(key2);
      } else {
        localStorage.removeItem(`${W3mFrameConstants.STORAGE_KEY}${key2}`);
      }
    }
  }
};

// node_modules/@reown/appkit-wallet/dist/esm/src/W3mFrameHelpers.js
var EMAIL_MINIMUM_TIMEOUT = 30 * 1e3;
var W3mFrameHelpers = {
  checkIfAllowedToTriggerEmail() {
    const lastEmailLoginTime = W3mFrameStorage.get(W3mFrameConstants.LAST_EMAIL_LOGIN_TIME);
    if (lastEmailLoginTime) {
      const difference = Date.now() - Number(lastEmailLoginTime);
      if (difference < EMAIL_MINIMUM_TIMEOUT) {
        const cooldownSec = Math.ceil((EMAIL_MINIMUM_TIMEOUT - difference) / 1e3);
        throw new Error(`Please try again after ${cooldownSec} seconds`);
      }
    }
  },
  getTimeToNextEmailLogin() {
    const lastEmailLoginTime = W3mFrameStorage.get(W3mFrameConstants.LAST_EMAIL_LOGIN_TIME);
    if (lastEmailLoginTime) {
      const difference = Date.now() - Number(lastEmailLoginTime);
      if (difference < EMAIL_MINIMUM_TIMEOUT) {
        return Math.ceil((EMAIL_MINIMUM_TIMEOUT - difference) / 1e3);
      }
    }
    return 0;
  },
  checkIfRequestExists(request) {
    return W3mFrameRpcConstants.NOT_SAFE_RPC_METHODS.includes(request.method) || W3mFrameRpcConstants.SAFE_RPC_METHODS.includes(request.method);
  },
  getResponseType(response) {
    const isPayloadString = typeof response === "string";
    const isTransactionHash = isPayloadString && ((response == null ? void 0 : response.match(RegexUtil.transactionHash)) || (response == null ? void 0 : response.match(RegexUtil.signedMessage)));
    if (isTransactionHash) {
      return W3mFrameConstants.RPC_RESPONSE_TYPE_TX;
    }
    return W3mFrameConstants.RPC_RESPONSE_TYPE_OBJECT;
  },
  checkIfRequestIsSafe(request) {
    return W3mFrameRpcConstants.SAFE_RPC_METHODS.includes(request.method);
  },
  isClient: typeof window !== "undefined"
};

// node_modules/zod/lib/index.mjs
var util;
(function(util2) {
  util2.assertEqual = (val) => val;
  function assertIs(_arg) {
  }
  util2.assertIs = assertIs;
  function assertNever(_x) {
    throw new Error();
  }
  util2.assertNever = assertNever;
  util2.arrayToEnum = (items) => {
    const obj = {};
    for (const item of items) {
      obj[item] = item;
    }
    return obj;
  };
  util2.getValidEnumValues = (obj) => {
    const validKeys = util2.objectKeys(obj).filter((k6) => typeof obj[obj[k6]] !== "number");
    const filtered = {};
    for (const k6 of validKeys) {
      filtered[k6] = obj[k6];
    }
    return util2.objectValues(filtered);
  };
  util2.objectValues = (obj) => {
    return util2.objectKeys(obj).map(function(e2) {
      return obj[e2];
    });
  };
  util2.objectKeys = typeof Object.keys === "function" ? (obj) => Object.keys(obj) : (object) => {
    const keys = [];
    for (const key2 in object) {
      if (Object.prototype.hasOwnProperty.call(object, key2)) {
        keys.push(key2);
      }
    }
    return keys;
  };
  util2.find = (arr, checker) => {
    for (const item of arr) {
      if (checker(item))
        return item;
    }
    return void 0;
  };
  util2.isInteger = typeof Number.isInteger === "function" ? (val) => Number.isInteger(val) : (val) => typeof val === "number" && isFinite(val) && Math.floor(val) === val;
  function joinValues(array, separator = " | ") {
    return array.map((val) => typeof val === "string" ? `'${val}'` : val).join(separator);
  }
  util2.joinValues = joinValues;
  util2.jsonStringifyReplacer = (_3, value) => {
    if (typeof value === "bigint") {
      return value.toString();
    }
    return value;
  };
})(util || (util = {}));
var objectUtil;
(function(objectUtil2) {
  objectUtil2.mergeShapes = (first, second) => {
    return {
      ...first,
      ...second
      // second overwrites first
    };
  };
})(objectUtil || (objectUtil = {}));
var ZodParsedType = util.arrayToEnum([
  "string",
  "nan",
  "number",
  "integer",
  "float",
  "boolean",
  "date",
  "bigint",
  "symbol",
  "function",
  "undefined",
  "null",
  "array",
  "object",
  "unknown",
  "promise",
  "void",
  "never",
  "map",
  "set"
]);
var getParsedType = (data) => {
  const t2 = typeof data;
  switch (t2) {
    case "undefined":
      return ZodParsedType.undefined;
    case "string":
      return ZodParsedType.string;
    case "number":
      return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;
    case "boolean":
      return ZodParsedType.boolean;
    case "function":
      return ZodParsedType.function;
    case "bigint":
      return ZodParsedType.bigint;
    case "symbol":
      return ZodParsedType.symbol;
    case "object":
      if (Array.isArray(data)) {
        return ZodParsedType.array;
      }
      if (data === null) {
        return ZodParsedType.null;
      }
      if (data.then && typeof data.then === "function" && data.catch && typeof data.catch === "function") {
        return ZodParsedType.promise;
      }
      if (typeof Map !== "undefined" && data instanceof Map) {
        return ZodParsedType.map;
      }
      if (typeof Set !== "undefined" && data instanceof Set) {
        return ZodParsedType.set;
      }
      if (typeof Date !== "undefined" && data instanceof Date) {
        return ZodParsedType.date;
      }
      return ZodParsedType.object;
    default:
      return ZodParsedType.unknown;
  }
};
var ZodIssueCode = util.arrayToEnum([
  "invalid_type",
  "invalid_literal",
  "custom",
  "invalid_union",
  "invalid_union_discriminator",
  "invalid_enum_value",
  "unrecognized_keys",
  "invalid_arguments",
  "invalid_return_type",
  "invalid_date",
  "invalid_string",
  "too_small",
  "too_big",
  "invalid_intersection_types",
  "not_multiple_of",
  "not_finite"
]);
var quotelessJson = (obj) => {
  const json = JSON.stringify(obj, null, 2);
  return json.replace(/"([^"]+)":/g, "$1:");
};
var ZodError = class extends Error {
  constructor(issues) {
    super();
    this.issues = [];
    this.addIssue = (sub) => {
      this.issues = [...this.issues, sub];
    };
    this.addIssues = (subs = []) => {
      this.issues = [...this.issues, ...subs];
    };
    const actualProto = new.target.prototype;
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(this, actualProto);
    } else {
      this.__proto__ = actualProto;
    }
    this.name = "ZodError";
    this.issues = issues;
  }
  get errors() {
    return this.issues;
  }
  format(_mapper) {
    const mapper = _mapper || function(issue) {
      return issue.message;
    };
    const fieldErrors = { _errors: [] };
    const processError = (error) => {
      for (const issue of error.issues) {
        if (issue.code === "invalid_union") {
          issue.unionErrors.map(processError);
        } else if (issue.code === "invalid_return_type") {
          processError(issue.returnTypeError);
        } else if (issue.code === "invalid_arguments") {
          processError(issue.argumentsError);
        } else if (issue.path.length === 0) {
          fieldErrors._errors.push(mapper(issue));
        } else {
          let curr = fieldErrors;
          let i4 = 0;
          while (i4 < issue.path.length) {
            const el = issue.path[i4];
            const terminal = i4 === issue.path.length - 1;
            if (!terminal) {
              curr[el] = curr[el] || { _errors: [] };
            } else {
              curr[el] = curr[el] || { _errors: [] };
              curr[el]._errors.push(mapper(issue));
            }
            curr = curr[el];
            i4++;
          }
        }
      }
    };
    processError(this);
    return fieldErrors;
  }
  toString() {
    return this.message;
  }
  get message() {
    return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);
  }
  get isEmpty() {
    return this.issues.length === 0;
  }
  flatten(mapper = (issue) => issue.message) {
    const fieldErrors = {};
    const formErrors = [];
    for (const sub of this.issues) {
      if (sub.path.length > 0) {
        fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];
        fieldErrors[sub.path[0]].push(mapper(sub));
      } else {
        formErrors.push(mapper(sub));
      }
    }
    return { formErrors, fieldErrors };
  }
  get formErrors() {
    return this.flatten();
  }
};
ZodError.create = (issues) => {
  const error = new ZodError(issues);
  return error;
};
var errorMap = (issue, _ctx) => {
  let message;
  switch (issue.code) {
    case ZodIssueCode.invalid_type:
      if (issue.received === ZodParsedType.undefined) {
        message = "Required";
      } else {
        message = `Expected ${issue.expected}, received ${issue.received}`;
      }
      break;
    case ZodIssueCode.invalid_literal:
      message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;
      break;
    case ZodIssueCode.unrecognized_keys:
      message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, ", ")}`;
      break;
    case ZodIssueCode.invalid_union:
      message = `Invalid input`;
      break;
    case ZodIssueCode.invalid_union_discriminator:
      message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;
      break;
    case ZodIssueCode.invalid_enum_value:
      message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;
      break;
    case ZodIssueCode.invalid_arguments:
      message = `Invalid function arguments`;
      break;
    case ZodIssueCode.invalid_return_type:
      message = `Invalid function return type`;
      break;
    case ZodIssueCode.invalid_date:
      message = `Invalid date`;
      break;
    case ZodIssueCode.invalid_string:
      if (typeof issue.validation === "object") {
        if ("includes" in issue.validation) {
          message = `Invalid input: must include "${issue.validation.includes}"`;
          if (typeof issue.validation.position === "number") {
            message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;
          }
        } else if ("startsWith" in issue.validation) {
          message = `Invalid input: must start with "${issue.validation.startsWith}"`;
        } else if ("endsWith" in issue.validation) {
          message = `Invalid input: must end with "${issue.validation.endsWith}"`;
        } else {
          util.assertNever(issue.validation);
        }
      } else if (issue.validation !== "regex") {
        message = `Invalid ${issue.validation}`;
      } else {
        message = "Invalid";
      }
      break;
    case ZodIssueCode.too_small:
      if (issue.type === "array")
        message = `Array must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;
      else if (issue.type === "string")
        message = `String must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;
      else if (issue.type === "number")
        message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;
      else if (issue.type === "date")
        message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;
      else
        message = "Invalid input";
      break;
    case ZodIssueCode.too_big:
      if (issue.type === "array")
        message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;
      else if (issue.type === "string")
        message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;
      else if (issue.type === "number")
        message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
      else if (issue.type === "bigint")
        message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
      else if (issue.type === "date")
        message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;
      else
        message = "Invalid input";
      break;
    case ZodIssueCode.custom:
      message = `Invalid input`;
      break;
    case ZodIssueCode.invalid_intersection_types:
      message = `Intersection results could not be merged`;
      break;
    case ZodIssueCode.not_multiple_of:
      message = `Number must be a multiple of ${issue.multipleOf}`;
      break;
    case ZodIssueCode.not_finite:
      message = "Number must be finite";
      break;
    default:
      message = _ctx.defaultError;
      util.assertNever(issue);
  }
  return { message };
};
var overrideErrorMap = errorMap;
function setErrorMap(map) {
  overrideErrorMap = map;
}
function getErrorMap() {
  return overrideErrorMap;
}
var makeIssue = (params) => {
  const { data, path, errorMaps, issueData } = params;
  const fullPath = [...path, ...issueData.path || []];
  const fullIssue = {
    ...issueData,
    path: fullPath
  };
  let errorMessage = "";
  const maps = errorMaps.filter((m) => !!m).slice().reverse();
  for (const map of maps) {
    errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;
  }
  return {
    ...issueData,
    path: fullPath,
    message: issueData.message || errorMessage
  };
};
var EMPTY_PATH = [];
function addIssueToContext(ctx, issueData) {
  const issue = makeIssue({
    issueData,
    data: ctx.data,
    path: ctx.path,
    errorMaps: [
      ctx.common.contextualErrorMap,
      ctx.schemaErrorMap,
      getErrorMap(),
      errorMap
      // then global default map
    ].filter((x7) => !!x7)
  });
  ctx.common.issues.push(issue);
}
var ParseStatus = class _ParseStatus {
  constructor() {
    this.value = "valid";
  }
  dirty() {
    if (this.value === "valid")
      this.value = "dirty";
  }
  abort() {
    if (this.value !== "aborted")
      this.value = "aborted";
  }
  static mergeArray(status, results) {
    const arrayValue = [];
    for (const s2 of results) {
      if (s2.status === "aborted")
        return INVALID2;
      if (s2.status === "dirty")
        status.dirty();
      arrayValue.push(s2.value);
    }
    return { status: status.value, value: arrayValue };
  }
  static async mergeObjectAsync(status, pairs) {
    const syncPairs = [];
    for (const pair of pairs) {
      syncPairs.push({
        key: await pair.key,
        value: await pair.value
      });
    }
    return _ParseStatus.mergeObjectSync(status, syncPairs);
  }
  static mergeObjectSync(status, pairs) {
    const finalObject = {};
    for (const pair of pairs) {
      const { key: key2, value } = pair;
      if (key2.status === "aborted")
        return INVALID2;
      if (value.status === "aborted")
        return INVALID2;
      if (key2.status === "dirty")
        status.dirty();
      if (value.status === "dirty")
        status.dirty();
      if (key2.value !== "__proto__" && (typeof value.value !== "undefined" || pair.alwaysSet)) {
        finalObject[key2.value] = value.value;
      }
    }
    return { status: status.value, value: finalObject };
  }
};
var INVALID2 = Object.freeze({
  status: "aborted"
});
var DIRTY = (value) => ({ status: "dirty", value });
var OK = (value) => ({ status: "valid", value });
var isAborted = (x7) => x7.status === "aborted";
var isDirty = (x7) => x7.status === "dirty";
var isValid = (x7) => x7.status === "valid";
var isAsync = (x7) => typeof Promise !== "undefined" && x7 instanceof Promise;
var errorUtil;
(function(errorUtil2) {
  errorUtil2.errToObj = (message) => typeof message === "string" ? { message } : message || {};
  errorUtil2.toString = (message) => typeof message === "string" ? message : message === null || message === void 0 ? void 0 : message.message;
})(errorUtil || (errorUtil = {}));
var ParseInputLazyPath = class {
  constructor(parent2, value, path, key2) {
    this._cachedPath = [];
    this.parent = parent2;
    this.data = value;
    this._path = path;
    this._key = key2;
  }
  get path() {
    if (!this._cachedPath.length) {
      if (this._key instanceof Array) {
        this._cachedPath.push(...this._path, ...this._key);
      } else {
        this._cachedPath.push(...this._path, this._key);
      }
    }
    return this._cachedPath;
  }
};
var handleResult = (ctx, result) => {
  if (isValid(result)) {
    return { success: true, data: result.value };
  } else {
    if (!ctx.common.issues.length) {
      throw new Error("Validation failed but no issues detected.");
    }
    return {
      success: false,
      get error() {
        if (this._error)
          return this._error;
        const error = new ZodError(ctx.common.issues);
        this._error = error;
        return this._error;
      }
    };
  }
};
function processCreateParams(params) {
  if (!params)
    return {};
  const { errorMap: errorMap2, invalid_type_error, required_error, description } = params;
  if (errorMap2 && (invalid_type_error || required_error)) {
    throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
  }
  if (errorMap2)
    return { errorMap: errorMap2, description };
  const customMap = (iss, ctx) => {
    if (iss.code !== "invalid_type")
      return { message: ctx.defaultError };
    if (typeof ctx.data === "undefined") {
      return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };
    }
    return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };
  };
  return { errorMap: customMap, description };
}
var ZodType = class {
  constructor(def) {
    this.spa = this.safeParseAsync;
    this._def = def;
    this.parse = this.parse.bind(this);
    this.safeParse = this.safeParse.bind(this);
    this.parseAsync = this.parseAsync.bind(this);
    this.safeParseAsync = this.safeParseAsync.bind(this);
    this.spa = this.spa.bind(this);
    this.refine = this.refine.bind(this);
    this.refinement = this.refinement.bind(this);
    this.superRefine = this.superRefine.bind(this);
    this.optional = this.optional.bind(this);
    this.nullable = this.nullable.bind(this);
    this.nullish = this.nullish.bind(this);
    this.array = this.array.bind(this);
    this.promise = this.promise.bind(this);
    this.or = this.or.bind(this);
    this.and = this.and.bind(this);
    this.transform = this.transform.bind(this);
    this.brand = this.brand.bind(this);
    this.default = this.default.bind(this);
    this.catch = this.catch.bind(this);
    this.describe = this.describe.bind(this);
    this.pipe = this.pipe.bind(this);
    this.readonly = this.readonly.bind(this);
    this.isNullable = this.isNullable.bind(this);
    this.isOptional = this.isOptional.bind(this);
  }
  get description() {
    return this._def.description;
  }
  _getType(input) {
    return getParsedType(input.data);
  }
  _getOrReturnCtx(input, ctx) {
    return ctx || {
      common: input.parent.common,
      data: input.data,
      parsedType: getParsedType(input.data),
      schemaErrorMap: this._def.errorMap,
      path: input.path,
      parent: input.parent
    };
  }
  _processInputParams(input) {
    return {
      status: new ParseStatus(),
      ctx: {
        common: input.parent.common,
        data: input.data,
        parsedType: getParsedType(input.data),
        schemaErrorMap: this._def.errorMap,
        path: input.path,
        parent: input.parent
      }
    };
  }
  _parseSync(input) {
    const result = this._parse(input);
    if (isAsync(result)) {
      throw new Error("Synchronous parse encountered promise.");
    }
    return result;
  }
  _parseAsync(input) {
    const result = this._parse(input);
    return Promise.resolve(result);
  }
  parse(data, params) {
    const result = this.safeParse(data, params);
    if (result.success)
      return result.data;
    throw result.error;
  }
  safeParse(data, params) {
    var _a7;
    const ctx = {
      common: {
        issues: [],
        async: (_a7 = params === null || params === void 0 ? void 0 : params.async) !== null && _a7 !== void 0 ? _a7 : false,
        contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap
      },
      path: (params === null || params === void 0 ? void 0 : params.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data,
      parsedType: getParsedType(data)
    };
    const result = this._parseSync({ data, path: ctx.path, parent: ctx });
    return handleResult(ctx, result);
  }
  async parseAsync(data, params) {
    const result = await this.safeParseAsync(data, params);
    if (result.success)
      return result.data;
    throw result.error;
  }
  async safeParseAsync(data, params) {
    const ctx = {
      common: {
        issues: [],
        contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,
        async: true
      },
      path: (params === null || params === void 0 ? void 0 : params.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data,
      parsedType: getParsedType(data)
    };
    const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });
    const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));
    return handleResult(ctx, result);
  }
  refine(check, message) {
    const getIssueProperties = (val) => {
      if (typeof message === "string" || typeof message === "undefined") {
        return { message };
      } else if (typeof message === "function") {
        return message(val);
      } else {
        return message;
      }
    };
    return this._refinement((val, ctx) => {
      const result = check(val);
      const setError = () => ctx.addIssue({
        code: ZodIssueCode.custom,
        ...getIssueProperties(val)
      });
      if (typeof Promise !== "undefined" && result instanceof Promise) {
        return result.then((data) => {
          if (!data) {
            setError();
            return false;
          } else {
            return true;
          }
        });
      }
      if (!result) {
        setError();
        return false;
      } else {
        return true;
      }
    });
  }
  refinement(check, refinementData) {
    return this._refinement((val, ctx) => {
      if (!check(val)) {
        ctx.addIssue(typeof refinementData === "function" ? refinementData(val, ctx) : refinementData);
        return false;
      } else {
        return true;
      }
    });
  }
  _refinement(refinement) {
    return new ZodEffects({
      schema: this,
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      effect: { type: "refinement", refinement }
    });
  }
  superRefine(refinement) {
    return this._refinement(refinement);
  }
  optional() {
    return ZodOptional.create(this, this._def);
  }
  nullable() {
    return ZodNullable.create(this, this._def);
  }
  nullish() {
    return this.nullable().optional();
  }
  array() {
    return ZodArray.create(this, this._def);
  }
  promise() {
    return ZodPromise.create(this, this._def);
  }
  or(option) {
    return ZodUnion.create([this, option], this._def);
  }
  and(incoming) {
    return ZodIntersection.create(this, incoming, this._def);
  }
  transform(transform) {
    return new ZodEffects({
      ...processCreateParams(this._def),
      schema: this,
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      effect: { type: "transform", transform }
    });
  }
  default(def) {
    const defaultValueFunc = typeof def === "function" ? def : () => def;
    return new ZodDefault({
      ...processCreateParams(this._def),
      innerType: this,
      defaultValue: defaultValueFunc,
      typeName: ZodFirstPartyTypeKind.ZodDefault
    });
  }
  brand() {
    return new ZodBranded({
      typeName: ZodFirstPartyTypeKind.ZodBranded,
      type: this,
      ...processCreateParams(this._def)
    });
  }
  catch(def) {
    const catchValueFunc = typeof def === "function" ? def : () => def;
    return new ZodCatch({
      ...processCreateParams(this._def),
      innerType: this,
      catchValue: catchValueFunc,
      typeName: ZodFirstPartyTypeKind.ZodCatch
    });
  }
  describe(description) {
    const This = this.constructor;
    return new This({
      ...this._def,
      description
    });
  }
  pipe(target) {
    return ZodPipeline.create(this, target);
  }
  readonly() {
    return ZodReadonly.create(this);
  }
  isOptional() {
    return this.safeParse(void 0).success;
  }
  isNullable() {
    return this.safeParse(null).success;
  }
};
var cuidRegex = /^c[^\s-]{8,}$/i;
var cuid2Regex = /^[a-z][a-z0-9]*$/;
var ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;
var uuidRegex = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i;
var emailRegex = /^(?!\.)(?!.*\.\.)([A-Z0-9_+-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;
var _emojiRegex = `^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$`;
var emojiRegex;
var ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;
var ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;
var datetimeRegex = (args) => {
  if (args.precision) {
    if (args.offset) {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${args.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`);
    } else {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${args.precision}}Z$`);
    }
  } else if (args.precision === 0) {
    if (args.offset) {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$`);
    } else {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$`);
    }
  } else {
    if (args.offset) {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$`);
    } else {
      return new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$`);
    }
  }
};
function isValidIP(ip, version9) {
  if ((version9 === "v4" || !version9) && ipv4Regex.test(ip)) {
    return true;
  }
  if ((version9 === "v6" || !version9) && ipv6Regex.test(ip)) {
    return true;
  }
  return false;
}
var ZodString = class _ZodString extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = String(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.string) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(
        ctx2,
        {
          code: ZodIssueCode.invalid_type,
          expected: ZodParsedType.string,
          received: ctx2.parsedType
        }
        //
      );
      return INVALID2;
    }
    const status = new ParseStatus();
    let ctx = void 0;
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        if (input.data.length < check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: check.value,
            type: "string",
            inclusive: true,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        if (input.data.length > check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: check.value,
            type: "string",
            inclusive: true,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "length") {
        const tooBig = input.data.length > check.value;
        const tooSmall = input.data.length < check.value;
        if (tooBig || tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          if (tooBig) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_big,
              maximum: check.value,
              type: "string",
              inclusive: true,
              exact: true,
              message: check.message
            });
          } else if (tooSmall) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_small,
              minimum: check.value,
              type: "string",
              inclusive: true,
              exact: true,
              message: check.message
            });
          }
          status.dirty();
        }
      } else if (check.kind === "email") {
        if (!emailRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "email",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "emoji") {
        if (!emojiRegex) {
          emojiRegex = new RegExp(_emojiRegex, "u");
        }
        if (!emojiRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "emoji",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "uuid") {
        if (!uuidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "uuid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "cuid") {
        if (!cuidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "cuid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "cuid2") {
        if (!cuid2Regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "cuid2",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "ulid") {
        if (!ulidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "ulid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "url") {
        try {
          new URL(input.data);
        } catch (_a7) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "url",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "regex") {
        check.regex.lastIndex = 0;
        const testResult = check.regex.test(input.data);
        if (!testResult) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "regex",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "trim") {
        input.data = input.data.trim();
      } else if (check.kind === "includes") {
        if (!input.data.includes(check.value, check.position)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { includes: check.value, position: check.position },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "toLowerCase") {
        input.data = input.data.toLowerCase();
      } else if (check.kind === "toUpperCase") {
        input.data = input.data.toUpperCase();
      } else if (check.kind === "startsWith") {
        if (!input.data.startsWith(check.value)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { startsWith: check.value },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "endsWith") {
        if (!input.data.endsWith(check.value)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { endsWith: check.value },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "datetime") {
        const regex = datetimeRegex(check);
        if (!regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: "datetime",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "ip") {
        if (!isValidIP(input.data, check.version)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "ip",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  _regex(regex, validation, message) {
    return this.refinement((data) => regex.test(data), {
      validation,
      code: ZodIssueCode.invalid_string,
      ...errorUtil.errToObj(message)
    });
  }
  _addCheck(check) {
    return new _ZodString({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  email(message) {
    return this._addCheck({ kind: "email", ...errorUtil.errToObj(message) });
  }
  url(message) {
    return this._addCheck({ kind: "url", ...errorUtil.errToObj(message) });
  }
  emoji(message) {
    return this._addCheck({ kind: "emoji", ...errorUtil.errToObj(message) });
  }
  uuid(message) {
    return this._addCheck({ kind: "uuid", ...errorUtil.errToObj(message) });
  }
  cuid(message) {
    return this._addCheck({ kind: "cuid", ...errorUtil.errToObj(message) });
  }
  cuid2(message) {
    return this._addCheck({ kind: "cuid2", ...errorUtil.errToObj(message) });
  }
  ulid(message) {
    return this._addCheck({ kind: "ulid", ...errorUtil.errToObj(message) });
  }
  ip(options) {
    return this._addCheck({ kind: "ip", ...errorUtil.errToObj(options) });
  }
  datetime(options) {
    var _a7;
    if (typeof options === "string") {
      return this._addCheck({
        kind: "datetime",
        precision: null,
        offset: false,
        message: options
      });
    }
    return this._addCheck({
      kind: "datetime",
      precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === "undefined" ? null : options === null || options === void 0 ? void 0 : options.precision,
      offset: (_a7 = options === null || options === void 0 ? void 0 : options.offset) !== null && _a7 !== void 0 ? _a7 : false,
      ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
    });
  }
  regex(regex, message) {
    return this._addCheck({
      kind: "regex",
      regex,
      ...errorUtil.errToObj(message)
    });
  }
  includes(value, options) {
    return this._addCheck({
      kind: "includes",
      value,
      position: options === null || options === void 0 ? void 0 : options.position,
      ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
    });
  }
  startsWith(value, message) {
    return this._addCheck({
      kind: "startsWith",
      value,
      ...errorUtil.errToObj(message)
    });
  }
  endsWith(value, message) {
    return this._addCheck({
      kind: "endsWith",
      value,
      ...errorUtil.errToObj(message)
    });
  }
  min(minLength, message) {
    return this._addCheck({
      kind: "min",
      value: minLength,
      ...errorUtil.errToObj(message)
    });
  }
  max(maxLength, message) {
    return this._addCheck({
      kind: "max",
      value: maxLength,
      ...errorUtil.errToObj(message)
    });
  }
  length(len, message) {
    return this._addCheck({
      kind: "length",
      value: len,
      ...errorUtil.errToObj(message)
    });
  }
  /**
   * @deprecated Use z.string().min(1) instead.
   * @see {@link ZodString.min}
   */
  nonempty(message) {
    return this.min(1, errorUtil.errToObj(message));
  }
  trim() {
    return new _ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "trim" }]
    });
  }
  toLowerCase() {
    return new _ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "toLowerCase" }]
    });
  }
  toUpperCase() {
    return new _ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "toUpperCase" }]
    });
  }
  get isDatetime() {
    return !!this._def.checks.find((ch) => ch.kind === "datetime");
  }
  get isEmail() {
    return !!this._def.checks.find((ch) => ch.kind === "email");
  }
  get isURL() {
    return !!this._def.checks.find((ch) => ch.kind === "url");
  }
  get isEmoji() {
    return !!this._def.checks.find((ch) => ch.kind === "emoji");
  }
  get isUUID() {
    return !!this._def.checks.find((ch) => ch.kind === "uuid");
  }
  get isCUID() {
    return !!this._def.checks.find((ch) => ch.kind === "cuid");
  }
  get isCUID2() {
    return !!this._def.checks.find((ch) => ch.kind === "cuid2");
  }
  get isULID() {
    return !!this._def.checks.find((ch) => ch.kind === "ulid");
  }
  get isIP() {
    return !!this._def.checks.find((ch) => ch.kind === "ip");
  }
  get minLength() {
    let min = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "min") {
        if (min === null || ch.value > min)
          min = ch.value;
      }
    }
    return min;
  }
  get maxLength() {
    let max = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "max") {
        if (max === null || ch.value < max)
          max = ch.value;
      }
    }
    return max;
  }
};
ZodString.create = (params) => {
  var _a7;
  return new ZodString({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodString,
    coerce: (_a7 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a7 !== void 0 ? _a7 : false,
    ...processCreateParams(params)
  });
};
function floatSafeRemainder(val, step) {
  const valDecCount = (val.toString().split(".")[1] || "").length;
  const stepDecCount = (step.toString().split(".")[1] || "").length;
  const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;
  const valInt = parseInt(val.toFixed(decCount).replace(".", ""));
  const stepInt = parseInt(step.toFixed(decCount).replace(".", ""));
  return valInt % stepInt / Math.pow(10, decCount);
}
var ZodNumber = class _ZodNumber extends ZodType {
  constructor() {
    super(...arguments);
    this.min = this.gte;
    this.max = this.lte;
    this.step = this.multipleOf;
  }
  _parse(input) {
    if (this._def.coerce) {
      input.data = Number(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.number) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.number,
        received: ctx2.parsedType
      });
      return INVALID2;
    }
    let ctx = void 0;
    const status = new ParseStatus();
    for (const check of this._def.checks) {
      if (check.kind === "int") {
        if (!util.isInteger(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: "integer",
            received: "float",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "min") {
        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
        if (tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: check.value,
            type: "number",
            inclusive: check.inclusive,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
        if (tooBig) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: check.value,
            type: "number",
            inclusive: check.inclusive,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "multipleOf") {
        if (floatSafeRemainder(input.data, check.value) !== 0) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_multiple_of,
            multipleOf: check.value,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "finite") {
        if (!Number.isFinite(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_finite,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  gte(value, message) {
    return this.setLimit("min", value, true, errorUtil.toString(message));
  }
  gt(value, message) {
    return this.setLimit("min", value, false, errorUtil.toString(message));
  }
  lte(value, message) {
    return this.setLimit("max", value, true, errorUtil.toString(message));
  }
  lt(value, message) {
    return this.setLimit("max", value, false, errorUtil.toString(message));
  }
  setLimit(kind, value, inclusive, message) {
    return new _ZodNumber({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind,
          value,
          inclusive,
          message: errorUtil.toString(message)
        }
      ]
    });
  }
  _addCheck(check) {
    return new _ZodNumber({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  int(message) {
    return this._addCheck({
      kind: "int",
      message: errorUtil.toString(message)
    });
  }
  positive(message) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  negative(message) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  nonpositive(message) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  nonnegative(message) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  multipleOf(value, message) {
    return this._addCheck({
      kind: "multipleOf",
      value,
      message: errorUtil.toString(message)
    });
  }
  finite(message) {
    return this._addCheck({
      kind: "finite",
      message: errorUtil.toString(message)
    });
  }
  safe(message) {
    return this._addCheck({
      kind: "min",
      inclusive: true,
      value: Number.MIN_SAFE_INTEGER,
      message: errorUtil.toString(message)
    })._addCheck({
      kind: "max",
      inclusive: true,
      value: Number.MAX_SAFE_INTEGER,
      message: errorUtil.toString(message)
    });
  }
  get minValue() {
    let min = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "min") {
        if (min === null || ch.value > min)
          min = ch.value;
      }
    }
    return min;
  }
  get maxValue() {
    let max = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "max") {
        if (max === null || ch.value < max)
          max = ch.value;
      }
    }
    return max;
  }
  get isInt() {
    return !!this._def.checks.find((ch) => ch.kind === "int" || ch.kind === "multipleOf" && util.isInteger(ch.value));
  }
  get isFinite() {
    let max = null, min = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "finite" || ch.kind === "int" || ch.kind === "multipleOf") {
        return true;
      } else if (ch.kind === "min") {
        if (min === null || ch.value > min)
          min = ch.value;
      } else if (ch.kind === "max") {
        if (max === null || ch.value < max)
          max = ch.value;
      }
    }
    return Number.isFinite(min) && Number.isFinite(max);
  }
};
ZodNumber.create = (params) => {
  return new ZodNumber({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodNumber,
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    ...processCreateParams(params)
  });
};
var ZodBigInt = class _ZodBigInt extends ZodType {
  constructor() {
    super(...arguments);
    this.min = this.gte;
    this.max = this.lte;
  }
  _parse(input) {
    if (this._def.coerce) {
      input.data = BigInt(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.bigint) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.bigint,
        received: ctx2.parsedType
      });
      return INVALID2;
    }
    let ctx = void 0;
    const status = new ParseStatus();
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
        if (tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            type: "bigint",
            minimum: check.value,
            inclusive: check.inclusive,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
        if (tooBig) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            type: "bigint",
            maximum: check.value,
            inclusive: check.inclusive,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "multipleOf") {
        if (input.data % check.value !== BigInt(0)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_multiple_of,
            multipleOf: check.value,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  gte(value, message) {
    return this.setLimit("min", value, true, errorUtil.toString(message));
  }
  gt(value, message) {
    return this.setLimit("min", value, false, errorUtil.toString(message));
  }
  lte(value, message) {
    return this.setLimit("max", value, true, errorUtil.toString(message));
  }
  lt(value, message) {
    return this.setLimit("max", value, false, errorUtil.toString(message));
  }
  setLimit(kind, value, inclusive, message) {
    return new _ZodBigInt({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind,
          value,
          inclusive,
          message: errorUtil.toString(message)
        }
      ]
    });
  }
  _addCheck(check) {
    return new _ZodBigInt({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  positive(message) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  negative(message) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  nonpositive(message) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  nonnegative(message) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  multipleOf(value, message) {
    return this._addCheck({
      kind: "multipleOf",
      value,
      message: errorUtil.toString(message)
    });
  }
  get minValue() {
    let min = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "min") {
        if (min === null || ch.value > min)
          min = ch.value;
      }
    }
    return min;
  }
  get maxValue() {
    let max = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "max") {
        if (max === null || ch.value < max)
          max = ch.value;
      }
    }
    return max;
  }
};
ZodBigInt.create = (params) => {
  var _a7;
  return new ZodBigInt({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodBigInt,
    coerce: (_a7 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a7 !== void 0 ? _a7 : false,
    ...processCreateParams(params)
  });
};
var ZodBoolean = class extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = Boolean(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.boolean) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.boolean,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    return OK(input.data);
  }
};
ZodBoolean.create = (params) => {
  return new ZodBoolean({
    typeName: ZodFirstPartyTypeKind.ZodBoolean,
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    ...processCreateParams(params)
  });
};
var ZodDate = class _ZodDate extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = new Date(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.date) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.date,
        received: ctx2.parsedType
      });
      return INVALID2;
    }
    if (isNaN(input.data.getTime())) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_date
      });
      return INVALID2;
    }
    const status = new ParseStatus();
    let ctx = void 0;
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        if (input.data.getTime() < check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            message: check.message,
            inclusive: true,
            exact: false,
            minimum: check.value,
            type: "date"
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        if (input.data.getTime() > check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            message: check.message,
            inclusive: true,
            exact: false,
            maximum: check.value,
            type: "date"
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return {
      status: status.value,
      value: new Date(input.data.getTime())
    };
  }
  _addCheck(check) {
    return new _ZodDate({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  min(minDate, message) {
    return this._addCheck({
      kind: "min",
      value: minDate.getTime(),
      message: errorUtil.toString(message)
    });
  }
  max(maxDate, message) {
    return this._addCheck({
      kind: "max",
      value: maxDate.getTime(),
      message: errorUtil.toString(message)
    });
  }
  get minDate() {
    let min = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "min") {
        if (min === null || ch.value > min)
          min = ch.value;
      }
    }
    return min != null ? new Date(min) : null;
  }
  get maxDate() {
    let max = null;
    for (const ch of this._def.checks) {
      if (ch.kind === "max") {
        if (max === null || ch.value < max)
          max = ch.value;
      }
    }
    return max != null ? new Date(max) : null;
  }
};
ZodDate.create = (params) => {
  return new ZodDate({
    checks: [],
    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,
    typeName: ZodFirstPartyTypeKind.ZodDate,
    ...processCreateParams(params)
  });
};
var ZodSymbol = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.symbol) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.symbol,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    return OK(input.data);
  }
};
ZodSymbol.create = (params) => {
  return new ZodSymbol({
    typeName: ZodFirstPartyTypeKind.ZodSymbol,
    ...processCreateParams(params)
  });
};
var ZodUndefined = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.undefined) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.undefined,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    return OK(input.data);
  }
};
ZodUndefined.create = (params) => {
  return new ZodUndefined({
    typeName: ZodFirstPartyTypeKind.ZodUndefined,
    ...processCreateParams(params)
  });
};
var ZodNull = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.null) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.null,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    return OK(input.data);
  }
};
ZodNull.create = (params) => {
  return new ZodNull({
    typeName: ZodFirstPartyTypeKind.ZodNull,
    ...processCreateParams(params)
  });
};
var ZodAny = class extends ZodType {
  constructor() {
    super(...arguments);
    this._any = true;
  }
  _parse(input) {
    return OK(input.data);
  }
};
ZodAny.create = (params) => {
  return new ZodAny({
    typeName: ZodFirstPartyTypeKind.ZodAny,
    ...processCreateParams(params)
  });
};
var ZodUnknown = class extends ZodType {
  constructor() {
    super(...arguments);
    this._unknown = true;
  }
  _parse(input) {
    return OK(input.data);
  }
};
ZodUnknown.create = (params) => {
  return new ZodUnknown({
    typeName: ZodFirstPartyTypeKind.ZodUnknown,
    ...processCreateParams(params)
  });
};
var ZodNever = class extends ZodType {
  _parse(input) {
    const ctx = this._getOrReturnCtx(input);
    addIssueToContext(ctx, {
      code: ZodIssueCode.invalid_type,
      expected: ZodParsedType.never,
      received: ctx.parsedType
    });
    return INVALID2;
  }
};
ZodNever.create = (params) => {
  return new ZodNever({
    typeName: ZodFirstPartyTypeKind.ZodNever,
    ...processCreateParams(params)
  });
};
var ZodVoid = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.undefined) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.void,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    return OK(input.data);
  }
};
ZodVoid.create = (params) => {
  return new ZodVoid({
    typeName: ZodFirstPartyTypeKind.ZodVoid,
    ...processCreateParams(params)
  });
};
var ZodArray = class _ZodArray extends ZodType {
  _parse(input) {
    const { ctx, status } = this._processInputParams(input);
    const def = this._def;
    if (ctx.parsedType !== ZodParsedType.array) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.array,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    if (def.exactLength !== null) {
      const tooBig = ctx.data.length > def.exactLength.value;
      const tooSmall = ctx.data.length < def.exactLength.value;
      if (tooBig || tooSmall) {
        addIssueToContext(ctx, {
          code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,
          minimum: tooSmall ? def.exactLength.value : void 0,
          maximum: tooBig ? def.exactLength.value : void 0,
          type: "array",
          inclusive: true,
          exact: true,
          message: def.exactLength.message
        });
        status.dirty();
      }
    }
    if (def.minLength !== null) {
      if (ctx.data.length < def.minLength.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_small,
          minimum: def.minLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: def.minLength.message
        });
        status.dirty();
      }
    }
    if (def.maxLength !== null) {
      if (ctx.data.length > def.maxLength.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_big,
          maximum: def.maxLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: def.maxLength.message
        });
        status.dirty();
      }
    }
    if (ctx.common.async) {
      return Promise.all([...ctx.data].map((item, i4) => {
        return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i4));
      })).then((result2) => {
        return ParseStatus.mergeArray(status, result2);
      });
    }
    const result = [...ctx.data].map((item, i4) => {
      return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i4));
    });
    return ParseStatus.mergeArray(status, result);
  }
  get element() {
    return this._def.type;
  }
  min(minLength, message) {
    return new _ZodArray({
      ...this._def,
      minLength: { value: minLength, message: errorUtil.toString(message) }
    });
  }
  max(maxLength, message) {
    return new _ZodArray({
      ...this._def,
      maxLength: { value: maxLength, message: errorUtil.toString(message) }
    });
  }
  length(len, message) {
    return new _ZodArray({
      ...this._def,
      exactLength: { value: len, message: errorUtil.toString(message) }
    });
  }
  nonempty(message) {
    return this.min(1, message);
  }
};
ZodArray.create = (schema, params) => {
  return new ZodArray({
    type: schema,
    minLength: null,
    maxLength: null,
    exactLength: null,
    typeName: ZodFirstPartyTypeKind.ZodArray,
    ...processCreateParams(params)
  });
};
function deepPartialify(schema) {
  if (schema instanceof ZodObject) {
    const newShape = {};
    for (const key2 in schema.shape) {
      const fieldSchema = schema.shape[key2];
      newShape[key2] = ZodOptional.create(deepPartialify(fieldSchema));
    }
    return new ZodObject({
      ...schema._def,
      shape: () => newShape
    });
  } else if (schema instanceof ZodArray) {
    return new ZodArray({
      ...schema._def,
      type: deepPartialify(schema.element)
    });
  } else if (schema instanceof ZodOptional) {
    return ZodOptional.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodNullable) {
    return ZodNullable.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodTuple) {
    return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));
  } else {
    return schema;
  }
}
var ZodObject = class _ZodObject extends ZodType {
  constructor() {
    super(...arguments);
    this._cached = null;
    this.nonstrict = this.passthrough;
    this.augment = this.extend;
  }
  _getCached() {
    if (this._cached !== null)
      return this._cached;
    const shape = this._def.shape();
    const keys = util.objectKeys(shape);
    return this._cached = { shape, keys };
  }
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.object) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx2.parsedType
      });
      return INVALID2;
    }
    const { status, ctx } = this._processInputParams(input);
    const { shape, keys: shapeKeys } = this._getCached();
    const extraKeys = [];
    if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === "strip")) {
      for (const key2 in ctx.data) {
        if (!shapeKeys.includes(key2)) {
          extraKeys.push(key2);
        }
      }
    }
    const pairs = [];
    for (const key2 of shapeKeys) {
      const keyValidator = shape[key2];
      const value = ctx.data[key2];
      pairs.push({
        key: { status: "valid", value: key2 },
        value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key2)),
        alwaysSet: key2 in ctx.data
      });
    }
    if (this._def.catchall instanceof ZodNever) {
      const unknownKeys = this._def.unknownKeys;
      if (unknownKeys === "passthrough") {
        for (const key2 of extraKeys) {
          pairs.push({
            key: { status: "valid", value: key2 },
            value: { status: "valid", value: ctx.data[key2] }
          });
        }
      } else if (unknownKeys === "strict") {
        if (extraKeys.length > 0) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.unrecognized_keys,
            keys: extraKeys
          });
          status.dirty();
        }
      } else if (unknownKeys === "strip") ;
      else {
        throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);
      }
    } else {
      const catchall = this._def.catchall;
      for (const key2 of extraKeys) {
        const value = ctx.data[key2];
        pairs.push({
          key: { status: "valid", value: key2 },
          value: catchall._parse(
            new ParseInputLazyPath(ctx, value, ctx.path, key2)
            //, ctx.child(key), value, getParsedType(value)
          ),
          alwaysSet: key2 in ctx.data
        });
      }
    }
    if (ctx.common.async) {
      return Promise.resolve().then(async () => {
        const syncPairs = [];
        for (const pair of pairs) {
          const key2 = await pair.key;
          syncPairs.push({
            key: key2,
            value: await pair.value,
            alwaysSet: pair.alwaysSet
          });
        }
        return syncPairs;
      }).then((syncPairs) => {
        return ParseStatus.mergeObjectSync(status, syncPairs);
      });
    } else {
      return ParseStatus.mergeObjectSync(status, pairs);
    }
  }
  get shape() {
    return this._def.shape();
  }
  strict(message) {
    errorUtil.errToObj;
    return new _ZodObject({
      ...this._def,
      unknownKeys: "strict",
      ...message !== void 0 ? {
        errorMap: (issue, ctx) => {
          var _a7, _b3, _c2, _d;
          const defaultError = (_c2 = (_b3 = (_a7 = this._def).errorMap) === null || _b3 === void 0 ? void 0 : _b3.call(_a7, issue, ctx).message) !== null && _c2 !== void 0 ? _c2 : ctx.defaultError;
          if (issue.code === "unrecognized_keys")
            return {
              message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError
            };
          return {
            message: defaultError
          };
        }
      } : {}
    });
  }
  strip() {
    return new _ZodObject({
      ...this._def,
      unknownKeys: "strip"
    });
  }
  passthrough() {
    return new _ZodObject({
      ...this._def,
      unknownKeys: "passthrough"
    });
  }
  // const AugmentFactory =
  //   <Def extends ZodObjectDef>(def: Def) =>
  //   <Augmentation extends ZodRawShape>(
  //     augmentation: Augmentation
  //   ): ZodObject<
  //     extendShape<ReturnType<Def["shape"]>, Augmentation>,
  //     Def["unknownKeys"],
  //     Def["catchall"]
  //   > => {
  //     return new ZodObject({
  //       ...def,
  //       shape: () => ({
  //         ...def.shape(),
  //         ...augmentation,
  //       }),
  //     }) as any;
  //   };
  extend(augmentation) {
    return new _ZodObject({
      ...this._def,
      shape: () => ({
        ...this._def.shape(),
        ...augmentation
      })
    });
  }
  /**
   * Prior to zod@1.0.12 there was a bug in the
   * inferred type of merged objects. Please
   * upgrade if you are experiencing issues.
   */
  merge(merging) {
    const merged = new _ZodObject({
      unknownKeys: merging._def.unknownKeys,
      catchall: merging._def.catchall,
      shape: () => ({
        ...this._def.shape(),
        ...merging._def.shape()
      }),
      typeName: ZodFirstPartyTypeKind.ZodObject
    });
    return merged;
  }
  // merge<
  //   Incoming extends AnyZodObject,
  //   Augmentation extends Incoming["shape"],
  //   NewOutput extends {
  //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
  //       ? Augmentation[k]["_output"]
  //       : k extends keyof Output
  //       ? Output[k]
  //       : never;
  //   },
  //   NewInput extends {
  //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
  //       ? Augmentation[k]["_input"]
  //       : k extends keyof Input
  //       ? Input[k]
  //       : never;
  //   }
  // >(
  //   merging: Incoming
  // ): ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"],
  //   NewOutput,
  //   NewInput
  // > {
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  setKey(key2, schema) {
    return this.augment({ [key2]: schema });
  }
  // merge<Incoming extends AnyZodObject>(
  //   merging: Incoming
  // ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {
  // ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"]
  // > {
  //   // const mergedShape = objectUtil.mergeShapes(
  //   //   this._def.shape(),
  //   //   merging._def.shape()
  //   // );
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  catchall(index) {
    return new _ZodObject({
      ...this._def,
      catchall: index
    });
  }
  pick(mask) {
    const shape = {};
    util.objectKeys(mask).forEach((key2) => {
      if (mask[key2] && this.shape[key2]) {
        shape[key2] = this.shape[key2];
      }
    });
    return new _ZodObject({
      ...this._def,
      shape: () => shape
    });
  }
  omit(mask) {
    const shape = {};
    util.objectKeys(this.shape).forEach((key2) => {
      if (!mask[key2]) {
        shape[key2] = this.shape[key2];
      }
    });
    return new _ZodObject({
      ...this._def,
      shape: () => shape
    });
  }
  /**
   * @deprecated
   */
  deepPartial() {
    return deepPartialify(this);
  }
  partial(mask) {
    const newShape = {};
    util.objectKeys(this.shape).forEach((key2) => {
      const fieldSchema = this.shape[key2];
      if (mask && !mask[key2]) {
        newShape[key2] = fieldSchema;
      } else {
        newShape[key2] = fieldSchema.optional();
      }
    });
    return new _ZodObject({
      ...this._def,
      shape: () => newShape
    });
  }
  required(mask) {
    const newShape = {};
    util.objectKeys(this.shape).forEach((key2) => {
      if (mask && !mask[key2]) {
        newShape[key2] = this.shape[key2];
      } else {
        const fieldSchema = this.shape[key2];
        let newField = fieldSchema;
        while (newField instanceof ZodOptional) {
          newField = newField._def.innerType;
        }
        newShape[key2] = newField;
      }
    });
    return new _ZodObject({
      ...this._def,
      shape: () => newShape
    });
  }
  keyof() {
    return createZodEnum(util.objectKeys(this.shape));
  }
};
ZodObject.create = (shape, params) => {
  return new ZodObject({
    shape: () => shape,
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
ZodObject.strictCreate = (shape, params) => {
  return new ZodObject({
    shape: () => shape,
    unknownKeys: "strict",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
ZodObject.lazycreate = (shape, params) => {
  return new ZodObject({
    shape,
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
var ZodUnion = class extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const options = this._def.options;
    function handleResults(results) {
      for (const result of results) {
        if (result.result.status === "valid") {
          return result.result;
        }
      }
      for (const result of results) {
        if (result.result.status === "dirty") {
          ctx.common.issues.push(...result.ctx.common.issues);
          return result.result;
        }
      }
      const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union,
        unionErrors
      });
      return INVALID2;
    }
    if (ctx.common.async) {
      return Promise.all(options.map(async (option) => {
        const childCtx = {
          ...ctx,
          common: {
            ...ctx.common,
            issues: []
          },
          parent: null
        };
        return {
          result: await option._parseAsync({
            data: ctx.data,
            path: ctx.path,
            parent: childCtx
          }),
          ctx: childCtx
        };
      })).then(handleResults);
    } else {
      let dirty = void 0;
      const issues = [];
      for (const option of options) {
        const childCtx = {
          ...ctx,
          common: {
            ...ctx.common,
            issues: []
          },
          parent: null
        };
        const result = option._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: childCtx
        });
        if (result.status === "valid") {
          return result;
        } else if (result.status === "dirty" && !dirty) {
          dirty = { result, ctx: childCtx };
        }
        if (childCtx.common.issues.length) {
          issues.push(childCtx.common.issues);
        }
      }
      if (dirty) {
        ctx.common.issues.push(...dirty.ctx.common.issues);
        return dirty.result;
      }
      const unionErrors = issues.map((issues2) => new ZodError(issues2));
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union,
        unionErrors
      });
      return INVALID2;
    }
  }
  get options() {
    return this._def.options;
  }
};
ZodUnion.create = (types, params) => {
  return new ZodUnion({
    options: types,
    typeName: ZodFirstPartyTypeKind.ZodUnion,
    ...processCreateParams(params)
  });
};
var getDiscriminator = (type) => {
  if (type instanceof ZodLazy) {
    return getDiscriminator(type.schema);
  } else if (type instanceof ZodEffects) {
    return getDiscriminator(type.innerType());
  } else if (type instanceof ZodLiteral) {
    return [type.value];
  } else if (type instanceof ZodEnum) {
    return type.options;
  } else if (type instanceof ZodNativeEnum) {
    return Object.keys(type.enum);
  } else if (type instanceof ZodDefault) {
    return getDiscriminator(type._def.innerType);
  } else if (type instanceof ZodUndefined) {
    return [void 0];
  } else if (type instanceof ZodNull) {
    return [null];
  } else {
    return null;
  }
};
var ZodDiscriminatedUnion = class _ZodDiscriminatedUnion extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.object) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    const discriminator = this.discriminator;
    const discriminatorValue = ctx.data[discriminator];
    const option = this.optionsMap.get(discriminatorValue);
    if (!option) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union_discriminator,
        options: Array.from(this.optionsMap.keys()),
        path: [discriminator]
      });
      return INVALID2;
    }
    if (ctx.common.async) {
      return option._parseAsync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
    } else {
      return option._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
    }
  }
  get discriminator() {
    return this._def.discriminator;
  }
  get options() {
    return this._def.options;
  }
  get optionsMap() {
    return this._def.optionsMap;
  }
  /**
   * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
   * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
   * have a different value for each object in the union.
   * @param discriminator the name of the discriminator property
   * @param types an array of object schemas
   * @param params
   */
  static create(discriminator, options, params) {
    const optionsMap = /* @__PURE__ */ new Map();
    for (const type of options) {
      const discriminatorValues = getDiscriminator(type.shape[discriminator]);
      if (!discriminatorValues) {
        throw new Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);
      }
      for (const value of discriminatorValues) {
        if (optionsMap.has(value)) {
          throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);
        }
        optionsMap.set(value, type);
      }
    }
    return new _ZodDiscriminatedUnion({
      typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,
      discriminator,
      options,
      optionsMap,
      ...processCreateParams(params)
    });
  }
};
function mergeValues(a2, b3) {
  const aType = getParsedType(a2);
  const bType = getParsedType(b3);
  if (a2 === b3) {
    return { valid: true, data: a2 };
  } else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {
    const bKeys = util.objectKeys(b3);
    const sharedKeys = util.objectKeys(a2).filter((key2) => bKeys.indexOf(key2) !== -1);
    const newObj = { ...a2, ...b3 };
    for (const key2 of sharedKeys) {
      const sharedValue = mergeValues(a2[key2], b3[key2]);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newObj[key2] = sharedValue.data;
    }
    return { valid: true, data: newObj };
  } else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {
    if (a2.length !== b3.length) {
      return { valid: false };
    }
    const newArray = [];
    for (let index = 0; index < a2.length; index++) {
      const itemA = a2[index];
      const itemB = b3[index];
      const sharedValue = mergeValues(itemA, itemB);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newArray.push(sharedValue.data);
    }
    return { valid: true, data: newArray };
  } else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a2 === +b3) {
    return { valid: true, data: a2 };
  } else {
    return { valid: false };
  }
}
var ZodIntersection = class extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    const handleParsed = (parsedLeft, parsedRight) => {
      if (isAborted(parsedLeft) || isAborted(parsedRight)) {
        return INVALID2;
      }
      const merged = mergeValues(parsedLeft.value, parsedRight.value);
      if (!merged.valid) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_intersection_types
        });
        return INVALID2;
      }
      if (isDirty(parsedLeft) || isDirty(parsedRight)) {
        status.dirty();
      }
      return { status: status.value, value: merged.data };
    };
    if (ctx.common.async) {
      return Promise.all([
        this._def.left._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        }),
        this._def.right._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        })
      ]).then(([left, right]) => handleParsed(left, right));
    } else {
      return handleParsed(this._def.left._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      }), this._def.right._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      }));
    }
  }
};
ZodIntersection.create = (left, right, params) => {
  return new ZodIntersection({
    left,
    right,
    typeName: ZodFirstPartyTypeKind.ZodIntersection,
    ...processCreateParams(params)
  });
};
var ZodTuple = class _ZodTuple extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.array) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.array,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    if (ctx.data.length < this._def.items.length) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.too_small,
        minimum: this._def.items.length,
        inclusive: true,
        exact: false,
        type: "array"
      });
      return INVALID2;
    }
    const rest = this._def.rest;
    if (!rest && ctx.data.length > this._def.items.length) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.too_big,
        maximum: this._def.items.length,
        inclusive: true,
        exact: false,
        type: "array"
      });
      status.dirty();
    }
    const items = [...ctx.data].map((item, itemIndex) => {
      const schema = this._def.items[itemIndex] || this._def.rest;
      if (!schema)
        return null;
      return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));
    }).filter((x7) => !!x7);
    if (ctx.common.async) {
      return Promise.all(items).then((results) => {
        return ParseStatus.mergeArray(status, results);
      });
    } else {
      return ParseStatus.mergeArray(status, items);
    }
  }
  get items() {
    return this._def.items;
  }
  rest(rest) {
    return new _ZodTuple({
      ...this._def,
      rest
    });
  }
};
ZodTuple.create = (schemas, params) => {
  if (!Array.isArray(schemas)) {
    throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
  }
  return new ZodTuple({
    items: schemas,
    typeName: ZodFirstPartyTypeKind.ZodTuple,
    rest: null,
    ...processCreateParams(params)
  });
};
var ZodRecord = class _ZodRecord extends ZodType {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.object) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    const pairs = [];
    const keyType = this._def.keyType;
    const valueType = this._def.valueType;
    for (const key2 in ctx.data) {
      pairs.push({
        key: keyType._parse(new ParseInputLazyPath(ctx, key2, ctx.path, key2)),
        value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key2], ctx.path, key2))
      });
    }
    if (ctx.common.async) {
      return ParseStatus.mergeObjectAsync(status, pairs);
    } else {
      return ParseStatus.mergeObjectSync(status, pairs);
    }
  }
  get element() {
    return this._def.valueType;
  }
  static create(first, second, third) {
    if (second instanceof ZodType) {
      return new _ZodRecord({
        keyType: first,
        valueType: second,
        typeName: ZodFirstPartyTypeKind.ZodRecord,
        ...processCreateParams(third)
      });
    }
    return new _ZodRecord({
      keyType: ZodString.create(),
      valueType: first,
      typeName: ZodFirstPartyTypeKind.ZodRecord,
      ...processCreateParams(second)
    });
  }
};
var ZodMap = class extends ZodType {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.map) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.map,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    const keyType = this._def.keyType;
    const valueType = this._def.valueType;
    const pairs = [...ctx.data.entries()].map(([key2, value], index) => {
      return {
        key: keyType._parse(new ParseInputLazyPath(ctx, key2, ctx.path, [index, "key"])),
        value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, "value"]))
      };
    });
    if (ctx.common.async) {
      const finalMap = /* @__PURE__ */ new Map();
      return Promise.resolve().then(async () => {
        for (const pair of pairs) {
          const key2 = await pair.key;
          const value = await pair.value;
          if (key2.status === "aborted" || value.status === "aborted") {
            return INVALID2;
          }
          if (key2.status === "dirty" || value.status === "dirty") {
            status.dirty();
          }
          finalMap.set(key2.value, value.value);
        }
        return { status: status.value, value: finalMap };
      });
    } else {
      const finalMap = /* @__PURE__ */ new Map();
      for (const pair of pairs) {
        const key2 = pair.key;
        const value = pair.value;
        if (key2.status === "aborted" || value.status === "aborted") {
          return INVALID2;
        }
        if (key2.status === "dirty" || value.status === "dirty") {
          status.dirty();
        }
        finalMap.set(key2.value, value.value);
      }
      return { status: status.value, value: finalMap };
    }
  }
};
ZodMap.create = (keyType, valueType, params) => {
  return new ZodMap({
    valueType,
    keyType,
    typeName: ZodFirstPartyTypeKind.ZodMap,
    ...processCreateParams(params)
  });
};
var ZodSet = class _ZodSet extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.set) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.set,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    const def = this._def;
    if (def.minSize !== null) {
      if (ctx.data.size < def.minSize.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_small,
          minimum: def.minSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: def.minSize.message
        });
        status.dirty();
      }
    }
    if (def.maxSize !== null) {
      if (ctx.data.size > def.maxSize.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_big,
          maximum: def.maxSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: def.maxSize.message
        });
        status.dirty();
      }
    }
    const valueType = this._def.valueType;
    function finalizeSet(elements2) {
      const parsedSet = /* @__PURE__ */ new Set();
      for (const element of elements2) {
        if (element.status === "aborted")
          return INVALID2;
        if (element.status === "dirty")
          status.dirty();
        parsedSet.add(element.value);
      }
      return { status: status.value, value: parsedSet };
    }
    const elements = [...ctx.data.values()].map((item, i4) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i4)));
    if (ctx.common.async) {
      return Promise.all(elements).then((elements2) => finalizeSet(elements2));
    } else {
      return finalizeSet(elements);
    }
  }
  min(minSize, message) {
    return new _ZodSet({
      ...this._def,
      minSize: { value: minSize, message: errorUtil.toString(message) }
    });
  }
  max(maxSize, message) {
    return new _ZodSet({
      ...this._def,
      maxSize: { value: maxSize, message: errorUtil.toString(message) }
    });
  }
  size(size, message) {
    return this.min(size, message).max(size, message);
  }
  nonempty(message) {
    return this.min(1, message);
  }
};
ZodSet.create = (valueType, params) => {
  return new ZodSet({
    valueType,
    minSize: null,
    maxSize: null,
    typeName: ZodFirstPartyTypeKind.ZodSet,
    ...processCreateParams(params)
  });
};
var ZodFunction = class _ZodFunction extends ZodType {
  constructor() {
    super(...arguments);
    this.validate = this.implement;
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.function) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.function,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    function makeArgsIssue(args, error) {
      return makeIssue({
        data: args,
        path: ctx.path,
        errorMaps: [
          ctx.common.contextualErrorMap,
          ctx.schemaErrorMap,
          getErrorMap(),
          errorMap
        ].filter((x7) => !!x7),
        issueData: {
          code: ZodIssueCode.invalid_arguments,
          argumentsError: error
        }
      });
    }
    function makeReturnsIssue(returns, error) {
      return makeIssue({
        data: returns,
        path: ctx.path,
        errorMaps: [
          ctx.common.contextualErrorMap,
          ctx.schemaErrorMap,
          getErrorMap(),
          errorMap
        ].filter((x7) => !!x7),
        issueData: {
          code: ZodIssueCode.invalid_return_type,
          returnTypeError: error
        }
      });
    }
    const params = { errorMap: ctx.common.contextualErrorMap };
    const fn4 = ctx.data;
    if (this._def.returns instanceof ZodPromise) {
      const me7 = this;
      return OK(async function(...args) {
        const error = new ZodError([]);
        const parsedArgs = await me7._def.args.parseAsync(args, params).catch((e2) => {
          error.addIssue(makeArgsIssue(args, e2));
          throw error;
        });
        const result = await Reflect.apply(fn4, this, parsedArgs);
        const parsedReturns = await me7._def.returns._def.type.parseAsync(result, params).catch((e2) => {
          error.addIssue(makeReturnsIssue(result, e2));
          throw error;
        });
        return parsedReturns;
      });
    } else {
      const me7 = this;
      return OK(function(...args) {
        const parsedArgs = me7._def.args.safeParse(args, params);
        if (!parsedArgs.success) {
          throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);
        }
        const result = Reflect.apply(fn4, this, parsedArgs.data);
        const parsedReturns = me7._def.returns.safeParse(result, params);
        if (!parsedReturns.success) {
          throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);
        }
        return parsedReturns.data;
      });
    }
  }
  parameters() {
    return this._def.args;
  }
  returnType() {
    return this._def.returns;
  }
  args(...items) {
    return new _ZodFunction({
      ...this._def,
      args: ZodTuple.create(items).rest(ZodUnknown.create())
    });
  }
  returns(returnType) {
    return new _ZodFunction({
      ...this._def,
      returns: returnType
    });
  }
  implement(func) {
    const validatedFunc = this.parse(func);
    return validatedFunc;
  }
  strictImplement(func) {
    const validatedFunc = this.parse(func);
    return validatedFunc;
  }
  static create(args, returns, params) {
    return new _ZodFunction({
      args: args ? args : ZodTuple.create([]).rest(ZodUnknown.create()),
      returns: returns || ZodUnknown.create(),
      typeName: ZodFirstPartyTypeKind.ZodFunction,
      ...processCreateParams(params)
    });
  }
};
var ZodLazy = class extends ZodType {
  get schema() {
    return this._def.getter();
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const lazySchema = this._def.getter();
    return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });
  }
};
ZodLazy.create = (getter, params) => {
  return new ZodLazy({
    getter,
    typeName: ZodFirstPartyTypeKind.ZodLazy,
    ...processCreateParams(params)
  });
};
var ZodLiteral = class extends ZodType {
  _parse(input) {
    if (input.data !== this._def.value) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_literal,
        expected: this._def.value
      });
      return INVALID2;
    }
    return { status: "valid", value: input.data };
  }
  get value() {
    return this._def.value;
  }
};
ZodLiteral.create = (value, params) => {
  return new ZodLiteral({
    value,
    typeName: ZodFirstPartyTypeKind.ZodLiteral,
    ...processCreateParams(params)
  });
};
function createZodEnum(values, params) {
  return new ZodEnum({
    values,
    typeName: ZodFirstPartyTypeKind.ZodEnum,
    ...processCreateParams(params)
  });
}
var ZodEnum = class _ZodEnum extends ZodType {
  _parse(input) {
    if (typeof input.data !== "string") {
      const ctx = this._getOrReturnCtx(input);
      const expectedValues = this._def.values;
      addIssueToContext(ctx, {
        expected: util.joinValues(expectedValues),
        received: ctx.parsedType,
        code: ZodIssueCode.invalid_type
      });
      return INVALID2;
    }
    if (this._def.values.indexOf(input.data) === -1) {
      const ctx = this._getOrReturnCtx(input);
      const expectedValues = this._def.values;
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_enum_value,
        options: expectedValues
      });
      return INVALID2;
    }
    return OK(input.data);
  }
  get options() {
    return this._def.values;
  }
  get enum() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  get Values() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  get Enum() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  extract(values) {
    return _ZodEnum.create(values);
  }
  exclude(values) {
    return _ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));
  }
};
ZodEnum.create = createZodEnum;
var ZodNativeEnum = class extends ZodType {
  _parse(input) {
    const nativeEnumValues = util.getValidEnumValues(this._def.values);
    const ctx = this._getOrReturnCtx(input);
    if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {
      const expectedValues = util.objectValues(nativeEnumValues);
      addIssueToContext(ctx, {
        expected: util.joinValues(expectedValues),
        received: ctx.parsedType,
        code: ZodIssueCode.invalid_type
      });
      return INVALID2;
    }
    if (nativeEnumValues.indexOf(input.data) === -1) {
      const expectedValues = util.objectValues(nativeEnumValues);
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_enum_value,
        options: expectedValues
      });
      return INVALID2;
    }
    return OK(input.data);
  }
  get enum() {
    return this._def.values;
  }
};
ZodNativeEnum.create = (values, params) => {
  return new ZodNativeEnum({
    values,
    typeName: ZodFirstPartyTypeKind.ZodNativeEnum,
    ...processCreateParams(params)
  });
};
var ZodPromise = class extends ZodType {
  unwrap() {
    return this._def.type;
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.promise,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);
    return OK(promisified.then((data) => {
      return this._def.type.parseAsync(data, {
        path: ctx.path,
        errorMap: ctx.common.contextualErrorMap
      });
    }));
  }
};
ZodPromise.create = (schema, params) => {
  return new ZodPromise({
    type: schema,
    typeName: ZodFirstPartyTypeKind.ZodPromise,
    ...processCreateParams(params)
  });
};
var ZodEffects = class extends ZodType {
  innerType() {
    return this._def.schema;
  }
  sourceType() {
    return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    const effect = this._def.effect || null;
    const checkCtx = {
      addIssue: (arg) => {
        addIssueToContext(ctx, arg);
        if (arg.fatal) {
          status.abort();
        } else {
          status.dirty();
        }
      },
      get path() {
        return ctx.path;
      }
    };
    checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);
    if (effect.type === "preprocess") {
      const processed = effect.transform(ctx.data, checkCtx);
      if (ctx.common.issues.length) {
        return {
          status: "dirty",
          value: ctx.data
        };
      }
      if (ctx.common.async) {
        return Promise.resolve(processed).then((processed2) => {
          return this._def.schema._parseAsync({
            data: processed2,
            path: ctx.path,
            parent: ctx
          });
        });
      } else {
        return this._def.schema._parseSync({
          data: processed,
          path: ctx.path,
          parent: ctx
        });
      }
    }
    if (effect.type === "refinement") {
      const executeRefinement = (acc) => {
        const result = effect.refinement(acc, checkCtx);
        if (ctx.common.async) {
          return Promise.resolve(result);
        }
        if (result instanceof Promise) {
          throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
        }
        return acc;
      };
      if (ctx.common.async === false) {
        const inner = this._def.schema._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (inner.status === "aborted")
          return INVALID2;
        if (inner.status === "dirty")
          status.dirty();
        executeRefinement(inner.value);
        return { status: status.value, value: inner.value };
      } else {
        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {
          if (inner.status === "aborted")
            return INVALID2;
          if (inner.status === "dirty")
            status.dirty();
          return executeRefinement(inner.value).then(() => {
            return { status: status.value, value: inner.value };
          });
        });
      }
    }
    if (effect.type === "transform") {
      if (ctx.common.async === false) {
        const base2 = this._def.schema._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (!isValid(base2))
          return base2;
        const result = effect.transform(base2.value, checkCtx);
        if (result instanceof Promise) {
          throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);
        }
        return { status: status.value, value: result };
      } else {
        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base2) => {
          if (!isValid(base2))
            return base2;
          return Promise.resolve(effect.transform(base2.value, checkCtx)).then((result) => ({ status: status.value, value: result }));
        });
      }
    }
    util.assertNever(effect);
  }
};
ZodEffects.create = (schema, effect, params) => {
  return new ZodEffects({
    schema,
    typeName: ZodFirstPartyTypeKind.ZodEffects,
    effect,
    ...processCreateParams(params)
  });
};
ZodEffects.createWithPreprocess = (preprocess, schema, params) => {
  return new ZodEffects({
    schema,
    effect: { type: "preprocess", transform: preprocess },
    typeName: ZodFirstPartyTypeKind.ZodEffects,
    ...processCreateParams(params)
  });
};
var ZodOptional = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType === ZodParsedType.undefined) {
      return OK(void 0);
    }
    return this._def.innerType._parse(input);
  }
  unwrap() {
    return this._def.innerType;
  }
};
ZodOptional.create = (type, params) => {
  return new ZodOptional({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodOptional,
    ...processCreateParams(params)
  });
};
var ZodNullable = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType === ZodParsedType.null) {
      return OK(null);
    }
    return this._def.innerType._parse(input);
  }
  unwrap() {
    return this._def.innerType;
  }
};
ZodNullable.create = (type, params) => {
  return new ZodNullable({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodNullable,
    ...processCreateParams(params)
  });
};
var ZodDefault = class extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    let data = ctx.data;
    if (ctx.parsedType === ZodParsedType.undefined) {
      data = this._def.defaultValue();
    }
    return this._def.innerType._parse({
      data,
      path: ctx.path,
      parent: ctx
    });
  }
  removeDefault() {
    return this._def.innerType;
  }
};
ZodDefault.create = (type, params) => {
  return new ZodDefault({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodDefault,
    defaultValue: typeof params.default === "function" ? params.default : () => params.default,
    ...processCreateParams(params)
  });
};
var ZodCatch = class extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const newCtx = {
      ...ctx,
      common: {
        ...ctx.common,
        issues: []
      }
    };
    const result = this._def.innerType._parse({
      data: newCtx.data,
      path: newCtx.path,
      parent: {
        ...newCtx
      }
    });
    if (isAsync(result)) {
      return result.then((result2) => {
        return {
          status: "valid",
          value: result2.status === "valid" ? result2.value : this._def.catchValue({
            get error() {
              return new ZodError(newCtx.common.issues);
            },
            input: newCtx.data
          })
        };
      });
    } else {
      return {
        status: "valid",
        value: result.status === "valid" ? result.value : this._def.catchValue({
          get error() {
            return new ZodError(newCtx.common.issues);
          },
          input: newCtx.data
        })
      };
    }
  }
  removeCatch() {
    return this._def.innerType;
  }
};
ZodCatch.create = (type, params) => {
  return new ZodCatch({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodCatch,
    catchValue: typeof params.catch === "function" ? params.catch : () => params.catch,
    ...processCreateParams(params)
  });
};
var ZodNaN = class extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.nan) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.nan,
        received: ctx.parsedType
      });
      return INVALID2;
    }
    return { status: "valid", value: input.data };
  }
};
ZodNaN.create = (params) => {
  return new ZodNaN({
    typeName: ZodFirstPartyTypeKind.ZodNaN,
    ...processCreateParams(params)
  });
};
var BRAND = Symbol("zod_brand");
var ZodBranded = class extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const data = ctx.data;
    return this._def.type._parse({
      data,
      path: ctx.path,
      parent: ctx
    });
  }
  unwrap() {
    return this._def.type;
  }
};
var ZodPipeline = class _ZodPipeline extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.common.async) {
      const handleAsync = async () => {
        const inResult = await this._def.in._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (inResult.status === "aborted")
          return INVALID2;
        if (inResult.status === "dirty") {
          status.dirty();
          return DIRTY(inResult.value);
        } else {
          return this._def.out._parseAsync({
            data: inResult.value,
            path: ctx.path,
            parent: ctx
          });
        }
      };
      return handleAsync();
    } else {
      const inResult = this._def.in._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
      if (inResult.status === "aborted")
        return INVALID2;
      if (inResult.status === "dirty") {
        status.dirty();
        return {
          status: "dirty",
          value: inResult.value
        };
      } else {
        return this._def.out._parseSync({
          data: inResult.value,
          path: ctx.path,
          parent: ctx
        });
      }
    }
  }
  static create(a2, b3) {
    return new _ZodPipeline({
      in: a2,
      out: b3,
      typeName: ZodFirstPartyTypeKind.ZodPipeline
    });
  }
};
var ZodReadonly = class extends ZodType {
  _parse(input) {
    const result = this._def.innerType._parse(input);
    if (isValid(result)) {
      result.value = Object.freeze(result.value);
    }
    return result;
  }
};
ZodReadonly.create = (type, params) => {
  return new ZodReadonly({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodReadonly,
    ...processCreateParams(params)
  });
};
var custom = (check, params = {}, fatal) => {
  if (check)
    return ZodAny.create().superRefine((data, ctx) => {
      var _a7, _b3;
      if (!check(data)) {
        const p3 = typeof params === "function" ? params(data) : typeof params === "string" ? { message: params } : params;
        const _fatal = (_b3 = (_a7 = p3.fatal) !== null && _a7 !== void 0 ? _a7 : fatal) !== null && _b3 !== void 0 ? _b3 : true;
        const p22 = typeof p3 === "string" ? { message: p3 } : p3;
        ctx.addIssue({ code: "custom", ...p22, fatal: _fatal });
      }
    });
  return ZodAny.create();
};
var late = {
  object: ZodObject.lazycreate
};
var ZodFirstPartyTypeKind;
(function(ZodFirstPartyTypeKind2) {
  ZodFirstPartyTypeKind2["ZodString"] = "ZodString";
  ZodFirstPartyTypeKind2["ZodNumber"] = "ZodNumber";
  ZodFirstPartyTypeKind2["ZodNaN"] = "ZodNaN";
  ZodFirstPartyTypeKind2["ZodBigInt"] = "ZodBigInt";
  ZodFirstPartyTypeKind2["ZodBoolean"] = "ZodBoolean";
  ZodFirstPartyTypeKind2["ZodDate"] = "ZodDate";
  ZodFirstPartyTypeKind2["ZodSymbol"] = "ZodSymbol";
  ZodFirstPartyTypeKind2["ZodUndefined"] = "ZodUndefined";
  ZodFirstPartyTypeKind2["ZodNull"] = "ZodNull";
  ZodFirstPartyTypeKind2["ZodAny"] = "ZodAny";
  ZodFirstPartyTypeKind2["ZodUnknown"] = "ZodUnknown";
  ZodFirstPartyTypeKind2["ZodNever"] = "ZodNever";
  ZodFirstPartyTypeKind2["ZodVoid"] = "ZodVoid";
  ZodFirstPartyTypeKind2["ZodArray"] = "ZodArray";
  ZodFirstPartyTypeKind2["ZodObject"] = "ZodObject";
  ZodFirstPartyTypeKind2["ZodUnion"] = "ZodUnion";
  ZodFirstPartyTypeKind2["ZodDiscriminatedUnion"] = "ZodDiscriminatedUnion";
  ZodFirstPartyTypeKind2["ZodIntersection"] = "ZodIntersection";
  ZodFirstPartyTypeKind2["ZodTuple"] = "ZodTuple";
  ZodFirstPartyTypeKind2["ZodRecord"] = "ZodRecord";
  ZodFirstPartyTypeKind2["ZodMap"] = "ZodMap";
  ZodFirstPartyTypeKind2["ZodSet"] = "ZodSet";
  ZodFirstPartyTypeKind2["ZodFunction"] = "ZodFunction";
  ZodFirstPartyTypeKind2["ZodLazy"] = "ZodLazy";
  ZodFirstPartyTypeKind2["ZodLiteral"] = "ZodLiteral";
  ZodFirstPartyTypeKind2["ZodEnum"] = "ZodEnum";
  ZodFirstPartyTypeKind2["ZodEffects"] = "ZodEffects";
  ZodFirstPartyTypeKind2["ZodNativeEnum"] = "ZodNativeEnum";
  ZodFirstPartyTypeKind2["ZodOptional"] = "ZodOptional";
  ZodFirstPartyTypeKind2["ZodNullable"] = "ZodNullable";
  ZodFirstPartyTypeKind2["ZodDefault"] = "ZodDefault";
  ZodFirstPartyTypeKind2["ZodCatch"] = "ZodCatch";
  ZodFirstPartyTypeKind2["ZodPromise"] = "ZodPromise";
  ZodFirstPartyTypeKind2["ZodBranded"] = "ZodBranded";
  ZodFirstPartyTypeKind2["ZodPipeline"] = "ZodPipeline";
  ZodFirstPartyTypeKind2["ZodReadonly"] = "ZodReadonly";
})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));
var instanceOfType = (cls, params = {
  message: `Input not instance of ${cls.name}`
}) => custom((data) => data instanceof cls, params);
var stringType = ZodString.create;
var numberType = ZodNumber.create;
var nanType = ZodNaN.create;
var bigIntType = ZodBigInt.create;
var booleanType = ZodBoolean.create;
var dateType = ZodDate.create;
var symbolType = ZodSymbol.create;
var undefinedType = ZodUndefined.create;
var nullType = ZodNull.create;
var anyType = ZodAny.create;
var unknownType = ZodUnknown.create;
var neverType = ZodNever.create;
var voidType = ZodVoid.create;
var arrayType = ZodArray.create;
var objectType = ZodObject.create;
var strictObjectType = ZodObject.strictCreate;
var unionType = ZodUnion.create;
var discriminatedUnionType = ZodDiscriminatedUnion.create;
var intersectionType = ZodIntersection.create;
var tupleType = ZodTuple.create;
var recordType = ZodRecord.create;
var mapType = ZodMap.create;
var setType = ZodSet.create;
var functionType = ZodFunction.create;
var lazyType = ZodLazy.create;
var literalType = ZodLiteral.create;
var enumType = ZodEnum.create;
var nativeEnumType = ZodNativeEnum.create;
var promiseType = ZodPromise.create;
var effectsType = ZodEffects.create;
var optionalType = ZodOptional.create;
var nullableType = ZodNullable.create;
var preprocessType = ZodEffects.createWithPreprocess;
var pipelineType = ZodPipeline.create;
var ostring = () => stringType().optional();
var onumber = () => numberType().optional();
var oboolean = () => booleanType().optional();
var coerce = {
  string: (arg) => ZodString.create({ ...arg, coerce: true }),
  number: (arg) => ZodNumber.create({ ...arg, coerce: true }),
  boolean: (arg) => ZodBoolean.create({
    ...arg,
    coerce: true
  }),
  bigint: (arg) => ZodBigInt.create({ ...arg, coerce: true }),
  date: (arg) => ZodDate.create({ ...arg, coerce: true })
};
var NEVER = INVALID2;
var z = Object.freeze({
  __proto__: null,
  defaultErrorMap: errorMap,
  setErrorMap,
  getErrorMap,
  makeIssue,
  EMPTY_PATH,
  addIssueToContext,
  ParseStatus,
  INVALID: INVALID2,
  DIRTY,
  OK,
  isAborted,
  isDirty,
  isValid,
  isAsync,
  get util() {
    return util;
  },
  get objectUtil() {
    return objectUtil;
  },
  ZodParsedType,
  getParsedType,
  ZodType,
  ZodString,
  ZodNumber,
  ZodBigInt,
  ZodBoolean,
  ZodDate,
  ZodSymbol,
  ZodUndefined,
  ZodNull,
  ZodAny,
  ZodUnknown,
  ZodNever,
  ZodVoid,
  ZodArray,
  ZodObject,
  ZodUnion,
  ZodDiscriminatedUnion,
  ZodIntersection,
  ZodTuple,
  ZodRecord,
  ZodMap,
  ZodSet,
  ZodFunction,
  ZodLazy,
  ZodLiteral,
  ZodEnum,
  ZodNativeEnum,
  ZodPromise,
  ZodEffects,
  ZodTransformer: ZodEffects,
  ZodOptional,
  ZodNullable,
  ZodDefault,
  ZodCatch,
  ZodNaN,
  BRAND,
  ZodBranded,
  ZodPipeline,
  ZodReadonly,
  custom,
  Schema: ZodType,
  ZodSchema: ZodType,
  late,
  get ZodFirstPartyTypeKind() {
    return ZodFirstPartyTypeKind;
  },
  coerce,
  any: anyType,
  array: arrayType,
  bigint: bigIntType,
  boolean: booleanType,
  date: dateType,
  discriminatedUnion: discriminatedUnionType,
  effect: effectsType,
  "enum": enumType,
  "function": functionType,
  "instanceof": instanceOfType,
  intersection: intersectionType,
  lazy: lazyType,
  literal: literalType,
  map: mapType,
  nan: nanType,
  nativeEnum: nativeEnumType,
  never: neverType,
  "null": nullType,
  nullable: nullableType,
  number: numberType,
  object: objectType,
  oboolean,
  onumber,
  optional: optionalType,
  ostring,
  pipeline: pipelineType,
  preprocess: preprocessType,
  promise: promiseType,
  record: recordType,
  set: setType,
  strictObject: strictObjectType,
  string: stringType,
  symbol: symbolType,
  transformer: effectsType,
  tuple: tupleType,
  "undefined": undefinedType,
  union: unionType,
  unknown: unknownType,
  "void": voidType,
  NEVER,
  ZodIssueCode,
  quotelessJson,
  ZodError
});

// node_modules/@reown/appkit-wallet/dist/esm/src/W3mFrameSchema.js
var zError = z.object({ message: z.string() });
function zType(key2) {
  return z.literal(W3mFrameConstants[key2]);
}
var GetTransactionByHashResponse = z.object({
  accessList: z.array(z.string()),
  blockHash: z.string().nullable(),
  blockNumber: z.string().nullable(),
  chainId: z.string().or(z.number()),
  from: z.string(),
  gas: z.string(),
  hash: z.string(),
  input: z.string().nullable(),
  maxFeePerGas: z.string(),
  maxPriorityFeePerGas: z.string(),
  nonce: z.string(),
  r: z.string(),
  s: z.string(),
  to: z.string(),
  transactionIndex: z.string().nullable(),
  type: z.string(),
  v: z.string(),
  value: z.string()
});
var AppSwitchNetworkRequest = z.object({ chainId: z.string().or(z.number()) });
var AppConnectEmailRequest = z.object({ email: z.string().email() });
var AppConnectOtpRequest = z.object({ otp: z.string() });
var AppConnectSocialRequest = z.object({ uri: z.string() });
var AppGetUserRequest = z.object({
  chainId: z.optional(z.string().or(z.number())),
  preferredAccountType: z.optional(z.string())
});
var AppGetSocialRedirectUriRequest = z.object({
  provider: z.enum(["google", "github", "apple", "facebook", "x", "discord"])
});
var AppUpdateEmailRequest = z.object({ email: z.string().email() });
var AppUpdateEmailPrimaryOtpRequest = z.object({ otp: z.string() });
var AppUpdateEmailSecondaryOtpRequest = z.object({ otp: z.string() });
var AppSyncThemeRequest = z.object({
  themeMode: z.optional(z.enum(["light", "dark"])),
  themeVariables: z.optional(z.record(z.string(), z.string().or(z.number()))),
  w3mThemeVariables: z.optional(z.record(z.string(), z.string()))
});
var AppSyncDappDataRequest = z.object({
  metadata: z.object({
    name: z.string(),
    description: z.string(),
    url: z.string(),
    icons: z.array(z.string())
  }).optional(),
  sdkVersion: z.string().optional(),
  sdkType: z.string().optional(),
  projectId: z.string()
});
var AppSetPreferredAccountRequest = z.object({ type: z.string() });
var FrameConnectEmailResponse = z.object({
  action: z.enum(["VERIFY_DEVICE", "VERIFY_OTP", "CONNECT"])
});
var FrameGetFarcasterUriResponse = z.object({
  url: z.string()
});
var FrameConnectFarcasterResponse = z.object({
  userName: z.string()
});
var FrameConnectSocialResponse = z.object({
  email: z.string(),
  address: z.string(),
  chainId: z.string().or(z.number()),
  accounts: z.array(z.object({
    address: z.string(),
    type: z.enum([
      W3mFrameRpcConstants.ACCOUNT_TYPES.EOA,
      W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT
    ])
  })).optional(),
  userName: z.string().optional()
});
var FrameUpdateEmailResponse = z.object({
  action: z.enum(["VERIFY_PRIMARY_OTP", "VERIFY_SECONDARY_OTP"])
});
var FrameGetUserResponse = z.object({
  email: z.string().email().optional().nullable(),
  address: z.string(),
  chainId: z.string().or(z.number()),
  smartAccountDeployed: z.optional(z.boolean()),
  accounts: z.array(z.object({
    address: z.string(),
    type: z.enum([
      W3mFrameRpcConstants.ACCOUNT_TYPES.EOA,
      W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT
    ])
  })).optional(),
  preferredAccountType: z.optional(z.string())
});
var FrameGetSocialRedirectUriResponse = z.object({ uri: z.string() });
var FrameIsConnectedResponse = z.object({ isConnected: z.boolean() });
var FrameGetChainIdResponse = z.object({ chainId: z.string().or(z.number()) });
var FrameSwitchNetworkResponse = z.object({ chainId: z.string().or(z.number()) });
var FrameUpdateEmailSecondaryOtpResponse = z.object({ newEmail: z.string().email() });
var FrameGetSmartAccountEnabledNetworksResponse = z.object({
  smartAccountEnabledNetworks: z.array(z.number())
});
var FrameInitSmartAccountResponse = z.object({
  address: z.string(),
  isDeployed: z.boolean()
});
var FrameReadyResponse = z.object({
  version: z.string().optional()
});
var FrameSetPreferredAccountResponse = z.object({ type: z.string(), address: z.string() });
var RpcResponse = z.any();
var RpcEthAccountsRequest = z.object({
  method: z.literal("eth_accounts")
});
var RpcEthBlockNumber = z.object({
  method: z.literal("eth_blockNumber")
});
var RpcEthCall = z.object({
  method: z.literal("eth_call"),
  params: z.array(z.any())
});
var RpcEthChainId = z.object({
  method: z.literal("eth_chainId")
});
var RpcEthEstimateGas = z.object({
  method: z.literal("eth_estimateGas"),
  params: z.array(z.any())
});
var RpcEthFeeHistory = z.object({
  method: z.literal("eth_feeHistory"),
  params: z.array(z.any())
});
var RpcEthGasPrice = z.object({
  method: z.literal("eth_gasPrice")
});
var RpcEthGetAccount = z.object({
  method: z.literal("eth_getAccount"),
  params: z.array(z.any())
});
var RpcEthGetBalance = z.object({
  method: z.literal("eth_getBalance"),
  params: z.array(z.any())
});
var RpcEthGetBlockyByHash = z.object({
  method: z.literal("eth_getBlockByHash"),
  params: z.array(z.any())
});
var RpcEthGetBlockByNumber = z.object({
  method: z.literal("eth_getBlockByNumber"),
  params: z.array(z.any())
});
var RpcEthGetBlockReceipts = z.object({
  method: z.literal("eth_getBlockReceipts"),
  params: z.array(z.any())
});
var RcpEthGetBlockTransactionCountByHash = z.object({
  method: z.literal("eth_getBlockTransactionCountByHash"),
  params: z.array(z.any())
});
var RcpEthGetBlockTransactionCountByNumber = z.object({
  method: z.literal("eth_getBlockTransactionCountByNumber"),
  params: z.array(z.any())
});
var RpcEthGetCode = z.object({
  method: z.literal("eth_getCode"),
  params: z.array(z.any())
});
var RpcEthGetFilter = z.object({
  method: z.literal("eth_getFilterChanges"),
  params: z.array(z.any())
});
var RpcEthGetFilterLogs = z.object({
  method: z.literal("eth_getFilterLogs"),
  params: z.array(z.any())
});
var RpcEthGetLogs = z.object({
  method: z.literal("eth_getLogs"),
  params: z.array(z.any())
});
var RpcEthGetProof = z.object({
  method: z.literal("eth_getProof"),
  params: z.array(z.any())
});
var RpcEthGetStorageAt = z.object({
  method: z.literal("eth_getStorageAt"),
  params: z.array(z.any())
});
var RpcEthGetTransactionByBlockHashAndIndex = z.object({
  method: z.literal("eth_getTransactionByBlockHashAndIndex"),
  params: z.array(z.any())
});
var RpcEthGetTransactionByBlockNumberAndIndex = z.object({
  method: z.literal("eth_getTransactionByBlockNumberAndIndex"),
  params: z.array(z.any())
});
var RpcEthGetTransactionByHash = z.object({
  method: z.literal("eth_getTransactionByHash"),
  params: z.array(z.any())
});
var RpcEthGetTransactionCount = z.object({
  method: z.literal("eth_getTransactionCount"),
  params: z.array(z.any())
});
var RpcEthGetTransactionReceipt = z.object({
  method: z.literal("eth_getTransactionReceipt"),
  params: z.array(z.any())
});
var RpcEthGetUncleCountByBlockHash = z.object({
  method: z.literal("eth_getUncleCountByBlockHash"),
  params: z.array(z.any())
});
var RpcEthGetUncleCountByBlockNumber = z.object({
  method: z.literal("eth_getUncleCountByBlockNumber"),
  params: z.array(z.any())
});
var RpcEthMaxPriorityFeePerGas = z.object({
  method: z.literal("eth_maxPriorityFeePerGas")
});
var RpcEthNewBlockFilter = z.object({
  method: z.literal("eth_newBlockFilter")
});
var RpcEthNewFilter = z.object({
  method: z.literal("eth_newFilter"),
  params: z.array(z.any())
});
var RpcEthNewPendingTransactionFilter = z.object({
  method: z.literal("eth_newPendingTransactionFilter")
});
var RpcEthSendRawTransaction = z.object({
  method: z.literal("eth_sendRawTransaction"),
  params: z.array(z.any())
});
var RpcEthSyncing = z.object({
  method: z.literal("eth_syncing"),
  params: z.array(z.any())
});
var RpcUnistallFilter = z.object({
  method: z.literal("eth_uninstallFilter"),
  params: z.array(z.any())
});
var RpcPersonalSignRequest = z.object({
  method: z.literal("personal_sign"),
  params: z.array(z.any())
});
var RpcEthSignTypedDataV4 = z.object({
  method: z.literal("eth_signTypedData_v4"),
  params: z.array(z.any())
});
var RpcEthSendTransactionRequest = z.object({
  method: z.literal("eth_sendTransaction"),
  params: z.array(z.any())
});
var RpcSolanaSignMessageRequest = z.object({
  method: z.literal("solana_signMessage"),
  params: z.object({
    message: z.string(),
    pubkey: z.string()
  })
});
var RpcSolanaSignTransactionRequest = z.object({
  method: z.literal("solana_signTransaction"),
  params: z.object({
    transaction: z.string()
  })
});
var RpcSolanaSignAllTransactionsRequest = z.object({
  method: z.literal("solana_signAllTransactions"),
  params: z.object({
    transactions: z.array(z.string())
  })
});
var RpcSolanaSignAndSendTransactionRequest = z.object({
  method: z.literal("solana_signAndSendTransaction"),
  params: z.object({
    transaction: z.string(),
    options: z.object({
      skipPreflight: z.boolean().optional(),
      preflightCommitment: z.enum([
        "processed",
        "confirmed",
        "finalized",
        "recent",
        "single",
        "singleGossip",
        "root",
        "max"
      ]).optional(),
      maxRetries: z.number().optional(),
      minContextSlot: z.number().optional()
    }).optional()
  })
});
var WalletSendCallsRequest = z.object({
  method: z.literal("wallet_sendCalls"),
  params: z.array(z.object({
    chainId: z.string().or(z.number()).optional(),
    from: z.string().optional(),
    version: z.string().optional(),
    capabilities: z.any().optional(),
    calls: z.array(z.object({
      to: z.string().startsWith("0x"),
      data: z.string().startsWith("0x").optional(),
      value: z.string().optional()
    }))
  }))
});
var WalletGetCallsReceiptRequest = z.object({
  method: z.literal("wallet_getCallsStatus"),
  params: z.array(z.string())
});
var WalletGetCapabilitiesRequest = z.object({
  method: z.literal("wallet_getCapabilities")
});
var WalletGrantPermissionsRequest = z.object({
  method: z.literal("wallet_grantPermissions"),
  params: z.array(z.any())
});
var WalletRevokePermissionsRequest = z.object({
  method: z.literal("wallet_revokePermissions"),
  params: z.any()
});
var WalletGetAssetsRequest = z.object({
  method: z.literal("wallet_getAssets"),
  params: z.array(z.any())
});
var FrameSession = z.object({
  token: z.string()
});
var EventSchema = z.object({
  id: z.string().optional()
});
var W3mFrameSchema = {
  appEvent: EventSchema.extend({
    type: zType("APP_SWITCH_NETWORK"),
    payload: AppSwitchNetworkRequest
  }).or(EventSchema.extend({
    type: zType("APP_CONNECT_EMAIL"),
    payload: AppConnectEmailRequest
  })).or(EventSchema.extend({ type: zType("APP_CONNECT_DEVICE") })).or(EventSchema.extend({ type: zType("APP_CONNECT_OTP"), payload: AppConnectOtpRequest })).or(EventSchema.extend({
    type: zType("APP_CONNECT_SOCIAL"),
    payload: AppConnectSocialRequest
  })).or(EventSchema.extend({ type: zType("APP_GET_FARCASTER_URI") })).or(EventSchema.extend({ type: zType("APP_CONNECT_FARCASTER") })).or(EventSchema.extend({
    type: zType("APP_GET_USER"),
    payload: z.optional(AppGetUserRequest)
  })).or(EventSchema.extend({
    type: zType("APP_GET_SOCIAL_REDIRECT_URI"),
    payload: AppGetSocialRedirectUriRequest
  })).or(EventSchema.extend({ type: zType("APP_SIGN_OUT") })).or(EventSchema.extend({
    type: zType("APP_IS_CONNECTED"),
    payload: z.optional(FrameSession)
  })).or(EventSchema.extend({ type: zType("APP_GET_CHAIN_ID") })).or(EventSchema.extend({ type: zType("APP_GET_SMART_ACCOUNT_ENABLED_NETWORKS") })).or(EventSchema.extend({ type: zType("APP_INIT_SMART_ACCOUNT") })).or(EventSchema.extend({
    type: zType("APP_SET_PREFERRED_ACCOUNT"),
    payload: AppSetPreferredAccountRequest
  })).or(EventSchema.extend({
    type: zType("APP_RPC_REQUEST"),
    payload: RpcPersonalSignRequest.or(WalletGetAssetsRequest).or(RpcEthAccountsRequest).or(RpcEthBlockNumber).or(RpcEthCall).or(RpcEthChainId).or(RpcEthEstimateGas).or(RpcEthFeeHistory).or(RpcEthGasPrice).or(RpcEthGetAccount).or(RpcEthGetBalance).or(RpcEthGetBlockyByHash).or(RpcEthGetBlockByNumber).or(RpcEthGetBlockReceipts).or(RcpEthGetBlockTransactionCountByHash).or(RcpEthGetBlockTransactionCountByNumber).or(RpcEthGetCode).or(RpcEthGetFilter).or(RpcEthGetFilterLogs).or(RpcEthGetLogs).or(RpcEthGetProof).or(RpcEthGetStorageAt).or(RpcEthGetTransactionByBlockHashAndIndex).or(RpcEthGetTransactionByBlockNumberAndIndex).or(RpcEthGetTransactionByHash).or(RpcEthGetTransactionCount).or(RpcEthGetTransactionReceipt).or(RpcEthGetUncleCountByBlockHash).or(RpcEthGetUncleCountByBlockNumber).or(RpcEthMaxPriorityFeePerGas).or(RpcEthNewBlockFilter).or(RpcEthNewFilter).or(RpcEthNewPendingTransactionFilter).or(RpcEthSendRawTransaction).or(RpcEthSyncing).or(RpcUnistallFilter).or(RpcPersonalSignRequest).or(RpcEthSignTypedDataV4).or(RpcEthSendTransactionRequest).or(RpcSolanaSignMessageRequest).or(RpcSolanaSignTransactionRequest).or(RpcSolanaSignAllTransactionsRequest).or(RpcSolanaSignAndSendTransactionRequest).or(WalletGetCallsReceiptRequest).or(WalletSendCallsRequest).or(WalletGetCapabilitiesRequest).or(WalletGrantPermissionsRequest).or(WalletRevokePermissionsRequest)
  })).or(EventSchema.extend({ type: zType("APP_UPDATE_EMAIL"), payload: AppUpdateEmailRequest })).or(EventSchema.extend({
    type: zType("APP_UPDATE_EMAIL_PRIMARY_OTP"),
    payload: AppUpdateEmailPrimaryOtpRequest
  })).or(EventSchema.extend({
    type: zType("APP_UPDATE_EMAIL_SECONDARY_OTP"),
    payload: AppUpdateEmailSecondaryOtpRequest
  })).or(EventSchema.extend({ type: zType("APP_SYNC_THEME"), payload: AppSyncThemeRequest })).or(EventSchema.extend({
    type: zType("APP_SYNC_DAPP_DATA"),
    payload: AppSyncDappDataRequest
  })).or(EventSchema.extend({
    type: zType("APP_RELOAD")
  })),
  frameEvent: EventSchema.extend({ type: zType("FRAME_SWITCH_NETWORK_ERROR"), payload: zError }).or(EventSchema.extend({
    type: zType("FRAME_SWITCH_NETWORK_SUCCESS"),
    payload: FrameSwitchNetworkResponse
  })).or(EventSchema.extend({
    type: zType("FRAME_CONNECT_EMAIL_SUCCESS"),
    payload: FrameConnectEmailResponse
  })).or(EventSchema.extend({ type: zType("FRAME_CONNECT_EMAIL_ERROR"), payload: zError })).or(EventSchema.extend({
    type: zType("FRAME_GET_FARCASTER_URI_SUCCESS"),
    payload: FrameGetFarcasterUriResponse
  })).or(EventSchema.extend({ type: zType("FRAME_GET_FARCASTER_URI_ERROR"), payload: zError })).or(EventSchema.extend({
    type: zType("FRAME_CONNECT_FARCASTER_SUCCESS"),
    payload: FrameConnectFarcasterResponse
  })).or(EventSchema.extend({ type: zType("FRAME_CONNECT_FARCASTER_ERROR"), payload: zError })).or(EventSchema.extend({ type: zType("FRAME_CONNECT_OTP_ERROR"), payload: zError })).or(EventSchema.extend({ type: zType("FRAME_CONNECT_OTP_SUCCESS") })).or(EventSchema.extend({ type: zType("FRAME_CONNECT_DEVICE_ERROR"), payload: zError })).or(EventSchema.extend({ type: zType("FRAME_CONNECT_DEVICE_SUCCESS") })).or(EventSchema.extend({
    type: zType("FRAME_CONNECT_SOCIAL_SUCCESS"),
    payload: FrameConnectSocialResponse
  })).or(EventSchema.extend({
    type: zType("FRAME_CONNECT_SOCIAL_ERROR"),
    payload: zError
  })).or(EventSchema.extend({ type: zType("FRAME_GET_USER_ERROR"), payload: zError })).or(EventSchema.extend({
    type: zType("FRAME_GET_USER_SUCCESS"),
    payload: FrameGetUserResponse
  })).or(EventSchema.extend({
    type: zType("FRAME_GET_SOCIAL_REDIRECT_URI_ERROR"),
    payload: zError
  })).or(EventSchema.extend({
    type: zType("FRAME_GET_SOCIAL_REDIRECT_URI_SUCCESS"),
    payload: FrameGetSocialRedirectUriResponse
  })).or(EventSchema.extend({ type: zType("FRAME_SIGN_OUT_ERROR"), payload: zError })).or(EventSchema.extend({ type: zType("FRAME_SIGN_OUT_SUCCESS") })).or(EventSchema.extend({ type: zType("FRAME_IS_CONNECTED_ERROR"), payload: zError })).or(EventSchema.extend({
    type: zType("FRAME_IS_CONNECTED_SUCCESS"),
    payload: FrameIsConnectedResponse
  })).or(EventSchema.extend({ type: zType("FRAME_GET_CHAIN_ID_ERROR"), payload: zError })).or(EventSchema.extend({
    type: zType("FRAME_GET_CHAIN_ID_SUCCESS"),
    payload: FrameGetChainIdResponse
  })).or(EventSchema.extend({ type: zType("FRAME_RPC_REQUEST_ERROR"), payload: zError })).or(EventSchema.extend({ type: zType("FRAME_RPC_REQUEST_SUCCESS"), payload: RpcResponse })).or(EventSchema.extend({ type: zType("FRAME_SESSION_UPDATE"), payload: FrameSession })).or(EventSchema.extend({ type: zType("FRAME_UPDATE_EMAIL_ERROR"), payload: zError })).or(EventSchema.extend({
    type: zType("FRAME_UPDATE_EMAIL_SUCCESS"),
    payload: FrameUpdateEmailResponse
  })).or(EventSchema.extend({
    type: zType("FRAME_UPDATE_EMAIL_PRIMARY_OTP_ERROR"),
    payload: zError
  })).or(EventSchema.extend({ type: zType("FRAME_UPDATE_EMAIL_PRIMARY_OTP_SUCCESS") })).or(EventSchema.extend({
    type: zType("FRAME_UPDATE_EMAIL_SECONDARY_OTP_ERROR"),
    payload: zError
  })).or(EventSchema.extend({
    type: zType("FRAME_UPDATE_EMAIL_SECONDARY_OTP_SUCCESS"),
    payload: FrameUpdateEmailSecondaryOtpResponse
  })).or(EventSchema.extend({ type: zType("FRAME_SYNC_THEME_ERROR"), payload: zError })).or(EventSchema.extend({ type: zType("FRAME_SYNC_THEME_SUCCESS") })).or(EventSchema.extend({ type: zType("FRAME_SYNC_DAPP_DATA_ERROR"), payload: zError })).or(EventSchema.extend({ type: zType("FRAME_SYNC_DAPP_DATA_SUCCESS") })).or(EventSchema.extend({
    type: zType("FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_SUCCESS"),
    payload: FrameGetSmartAccountEnabledNetworksResponse
  })).or(EventSchema.extend({
    type: zType("FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_ERROR"),
    payload: zError
  })).or(EventSchema.extend({ type: zType("FRAME_INIT_SMART_ACCOUNT_ERROR"), payload: zError })).or(EventSchema.extend({
    type: zType("FRAME_SET_PREFERRED_ACCOUNT_SUCCESS"),
    payload: FrameSetPreferredAccountResponse
  })).or(EventSchema.extend({
    type: zType("FRAME_SET_PREFERRED_ACCOUNT_ERROR"),
    payload: zError
  })).or(EventSchema.extend({ type: zType("FRAME_READY"), payload: FrameReadyResponse })).or(EventSchema.extend({
    type: zType("FRAME_RELOAD_ERROR"),
    payload: zError
  })).or(EventSchema.extend({ type: zType("FRAME_RELOAD_SUCCESS") }))
};

// node_modules/@reown/appkit-wallet/dist/esm/src/W3mFrame.js
function shouldHandleEvent(eventKey, data = {}) {
  var _a7;
  return typeof (data == null ? void 0 : data.type) === "string" && ((_a7 = data == null ? void 0 : data.type) == null ? void 0 : _a7.includes(eventKey));
}
var W3mFrame = class {
  constructor({ projectId, isAppClient = false, chainId = "eip155:1", enableLogger = true }) {
    this.iframe = null;
    this.rpcUrl = ConstantsUtil.BLOCKCHAIN_API_RPC_URL;
    this.initFrame = () => {
      const isFrameInitialized = document.getElementById("w3m-iframe");
      if (this.iframe && !isFrameInitialized) {
        document.body.appendChild(this.iframe);
      }
    };
    this.events = {
      registerFrameEventHandler: (id, callback, signal) => {
        function eventHandler({ data }) {
          if (!shouldHandleEvent(W3mFrameConstants.FRAME_EVENT_KEY, data)) {
            return;
          }
          const frameEvent = W3mFrameSchema.frameEvent.parse(data);
          if (frameEvent.id === id) {
            callback(frameEvent);
            window.removeEventListener("message", eventHandler);
          }
        }
        if (W3mFrameHelpers.isClient) {
          window.addEventListener("message", eventHandler);
          signal.addEventListener("abort", () => {
            window.removeEventListener("message", eventHandler);
          });
        }
      },
      onFrameEvent: (callback) => {
        if (W3mFrameHelpers.isClient) {
          window.addEventListener("message", ({ data }) => {
            if (!shouldHandleEvent(W3mFrameConstants.FRAME_EVENT_KEY, data)) {
              return;
            }
            const frameEvent = W3mFrameSchema.frameEvent.parse(data);
            callback(frameEvent);
          });
        }
      },
      onAppEvent: (callback) => {
        if (W3mFrameHelpers.isClient) {
          window.addEventListener("message", ({ data }) => {
            if (!shouldHandleEvent(W3mFrameConstants.APP_EVENT_KEY, data)) {
              return;
            }
            const appEvent = W3mFrameSchema.appEvent.parse(data);
            callback(appEvent);
          });
        }
      },
      postAppEvent: (event) => {
        var _a7;
        if (W3mFrameHelpers.isClient) {
          if (!((_a7 = this.iframe) == null ? void 0 : _a7.contentWindow)) {
            throw new Error("W3mFrame: iframe is not set");
          }
          W3mFrameSchema.appEvent.parse(event);
          this.iframe.contentWindow.postMessage(event, "*");
        }
      },
      postFrameEvent: (event) => {
        if (W3mFrameHelpers.isClient) {
          if (!parent) {
            throw new Error("W3mFrame: parent is not set");
          }
          W3mFrameSchema.frameEvent.parse(event);
          parent.postMessage(event, "*");
        }
      }
    };
    this.projectId = projectId;
    this.frameLoadPromise = new Promise((resolve, reject) => {
      this.frameLoadPromiseResolver = { resolve, reject };
    });
    if (isAppClient) {
      this.frameLoadPromise = new Promise((resolve, reject) => {
        this.frameLoadPromiseResolver = { resolve, reject };
      });
      if (W3mFrameHelpers.isClient) {
        const iframe = document.createElement("iframe");
        iframe.id = "w3m-iframe";
        iframe.src = `${SECURE_SITE_SDK}?projectId=${projectId}&chainId=${chainId}&version=${SECURE_SITE_SDK_VERSION}&enableLogger=${enableLogger}`;
        iframe.name = "w3m-secure-iframe";
        iframe.style.position = "fixed";
        iframe.style.zIndex = "999999";
        iframe.style.display = "none";
        iframe.style.animationDelay = "0s, 50ms";
        iframe.style.borderBottomLeftRadius = `clamp(0px, var(--wui-border-radius-l), 44px)`;
        iframe.style.borderBottomRightRadius = `clamp(0px, var(--wui-border-radius-l), 44px)`;
        this.iframe = iframe;
        this.iframe.onerror = () => {
          var _a7;
          (_a7 = this.frameLoadPromiseResolver) == null ? void 0 : _a7.reject("Unable to load email login dependency");
        };
        this.events.onFrameEvent((event) => {
          var _a7;
          if (event.type === "@w3m-frame/READY") {
            (_a7 = this.frameLoadPromiseResolver) == null ? void 0 : _a7.resolve(void 0);
          }
        });
      }
    }
  }
  get networks() {
    const data = [
      "eip155:1",
      "eip155:5",
      "eip155:11155111",
      "eip155:10",
      "eip155:420",
      "eip155:42161",
      "eip155:421613",
      "eip155:137",
      "eip155:80001",
      "eip155:42220",
      "eip155:1313161554",
      "eip155:1313161555",
      "eip155:56",
      "eip155:97",
      "eip155:43114",
      "eip155:43113",
      "eip155:324",
      "eip155:280",
      "eip155:100",
      "eip155:8453",
      "eip155:84531",
      "eip155:84532",
      "eip155:7777777",
      "eip155:999",
      "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
      "solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
      "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1"
    ].map((id) => ({
      [id]: {
        rpcUrl: `${this.rpcUrl}/v1/?chainId=${id}&projectId=${this.projectId}`,
        chainId: id
      }
    }));
    return Object.assign({}, ...data);
  }
};

// node_modules/@reown/appkit-wallet/dist/esm/src/W3mFrameLogger.js
var W3mFrameLogger = class {
  constructor(projectId) {
    var _a7;
    const loggerOptions = k({
      level: DEFAULT_LOG_LEVEL
    });
    const { logger: logger9, chunkLoggerController } = A({
      opts: loggerOptions
    });
    this.logger = E(logger9, this.constructor.name);
    this.chunkLoggerController = chunkLoggerController;
    if (typeof window !== "undefined" && ((_a7 = this.chunkLoggerController) == null ? void 0 : _a7.downloadLogsBlobInBrowser)) {
      if (!window.downloadAppKitLogsBlob) {
        window.downloadAppKitLogsBlob = {};
      }
      window.downloadAppKitLogsBlob["sdk"] = () => {
        var _a8;
        if ((_a8 = this.chunkLoggerController) == null ? void 0 : _a8.downloadLogsBlobInBrowser) {
          this.chunkLoggerController.downloadLogsBlobInBrowser({
            projectId
          });
        }
      };
    }
  }
};

// node_modules/@reown/appkit-wallet/dist/esm/src/W3mFrameProvider.js
var W3mFrameProvider = class {
  constructor({ projectId, chainId, enableLogger = true, onTimeout }) {
    this.openRpcRequests = [];
    if (enableLogger) {
      this.w3mLogger = new W3mFrameLogger(projectId);
    }
    this.w3mFrame = new W3mFrame({ projectId, isAppClient: true, chainId, enableLogger });
    this.onTimeout = onTimeout;
    if (this.getLoginEmailUsed()) {
      this.w3mFrame.initFrame();
    }
    this.w3mFrame.events.onFrameEvent((event) => {
      if (event.type === W3mFrameConstants.FRAME_GET_USER_SUCCESS) {
        this.user = event.payload;
      }
    });
  }
  getLoginEmailUsed() {
    return Boolean(W3mFrameStorage.get(W3mFrameConstants.EMAIL_LOGIN_USED_KEY));
  }
  getEmail() {
    return W3mFrameStorage.get(W3mFrameConstants.EMAIL);
  }
  getUsername() {
    return W3mFrameStorage.get(W3mFrameConstants.SOCIAL_USERNAME);
  }
  async reload() {
    var _a7;
    try {
      this.w3mFrame.initFrame();
      await this.appEvent({
        type: W3mFrameConstants.APP_RELOAD
      });
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error reloading iframe");
      throw error;
    }
  }
  async connectEmail(payload) {
    var _a7;
    try {
      W3mFrameHelpers.checkIfAllowedToTriggerEmail();
      this.w3mFrame.initFrame();
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_CONNECT_EMAIL,
        payload
      });
      this.setNewLastEmailLoginTime();
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error connecting email");
      throw error;
    }
  }
  async connectDevice() {
    var _a7;
    try {
      return this.appEvent({
        type: W3mFrameConstants.APP_CONNECT_DEVICE
      });
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error connecting device");
      throw error;
    }
  }
  async connectOtp(payload) {
    var _a7;
    try {
      return this.appEvent({
        type: W3mFrameConstants.APP_CONNECT_OTP,
        payload
      });
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error connecting otp");
      throw error;
    }
  }
  async isConnected() {
    var _a7;
    try {
      if (!this.getLoginEmailUsed()) {
        return { isConnected: false };
      }
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_IS_CONNECTED
      });
      if (!response.isConnected) {
        this.deleteAuthLoginCache();
      }
      return response;
    } catch (error) {
      this.deleteAuthLoginCache();
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error checking connection");
      throw error;
    }
  }
  async getChainId() {
    var _a7;
    try {
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_GET_CHAIN_ID
      });
      this.setLastUsedChainId(response.chainId);
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error getting chain id");
      throw error;
    }
  }
  async getSocialRedirectUri(payload) {
    var _a7;
    try {
      this.w3mFrame.initFrame();
      return this.appEvent({
        type: W3mFrameConstants.APP_GET_SOCIAL_REDIRECT_URI,
        payload
      });
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error getting social redirect uri");
      throw error;
    }
  }
  async updateEmail(payload) {
    var _a7;
    try {
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_UPDATE_EMAIL,
        payload
      });
      this.setNewLastEmailLoginTime();
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error updating email");
      throw error;
    }
  }
  async updateEmailPrimaryOtp(payload) {
    var _a7;
    try {
      return this.appEvent({
        type: W3mFrameConstants.APP_UPDATE_EMAIL_PRIMARY_OTP,
        payload
      });
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error updating email primary otp");
      throw error;
    }
  }
  async updateEmailSecondaryOtp(payload) {
    var _a7;
    try {
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_UPDATE_EMAIL_SECONDARY_OTP,
        payload
      });
      this.setLoginSuccess(response.newEmail);
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error updating email secondary otp");
      throw error;
    }
  }
  async syncTheme(payload) {
    var _a7;
    try {
      return this.appEvent({
        type: W3mFrameConstants.APP_SYNC_THEME,
        payload
      });
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error syncing theme");
      throw error;
    }
  }
  async syncDappData(payload) {
    var _a7;
    try {
      return this.appEvent({
        type: W3mFrameConstants.APP_SYNC_DAPP_DATA,
        payload
      });
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error syncing dapp data");
      throw error;
    }
  }
  async getSmartAccountEnabledNetworks() {
    var _a7;
    try {
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_GET_SMART_ACCOUNT_ENABLED_NETWORKS
      });
      this.persistSmartAccountEnabledNetworks(response.smartAccountEnabledNetworks);
      return response;
    } catch (error) {
      this.persistSmartAccountEnabledNetworks([]);
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error getting smart account enabled networks");
      throw error;
    }
  }
  async setPreferredAccount(type) {
    var _a7;
    try {
      return this.appEvent({
        type: W3mFrameConstants.APP_SET_PREFERRED_ACCOUNT,
        payload: { type }
      });
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error setting preferred account");
      throw error;
    }
  }
  async connect(payload) {
    var _a7;
    try {
      const chainId = (payload == null ? void 0 : payload.chainId) || this.getLastUsedChainId() || 1;
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_GET_USER,
        payload: { ...payload, chainId }
      });
      this.setLoginSuccess(response.email);
      this.setLastUsedChainId(response.chainId);
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error connecting");
      throw error;
    }
  }
  async getUser(payload) {
    var _a7;
    try {
      const chainId = (payload == null ? void 0 : payload.chainId) || this.getLastUsedChainId() || 1;
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_GET_USER,
        payload: { ...payload, chainId }
      });
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error connecting");
      throw error;
    }
  }
  async connectSocial(uri) {
    var _a7;
    try {
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_CONNECT_SOCIAL,
        payload: { uri }
      });
      if (response.userName) {
        this.setSocialLoginSuccess(response.userName);
      }
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error connecting social");
      throw error;
    }
  }
  async getFarcasterUri() {
    var _a7;
    try {
      this.w3mFrame.initFrame();
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_GET_FARCASTER_URI
      });
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error getting farcaster uri");
      throw error;
    }
  }
  async connectFarcaster() {
    var _a7;
    try {
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_CONNECT_FARCASTER
      });
      if (response.userName) {
        this.setSocialLoginSuccess(response.userName);
      }
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error connecting farcaster");
      throw error;
    }
  }
  async switchNetwork(chainId) {
    var _a7;
    try {
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_SWITCH_NETWORK,
        payload: { chainId }
      });
      this.setLastUsedChainId(response.chainId);
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error switching network");
      throw error;
    }
  }
  async disconnect() {
    var _a7;
    try {
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_SIGN_OUT
      });
      this.deleteAuthLoginCache();
      return response;
    } catch (error) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error }, "Error disconnecting");
      throw error;
    }
  }
  async request(req) {
    var _a7, _b3, _c2, _d;
    try {
      if (W3mFrameRpcConstants.GET_CHAIN_ID === req.method) {
        return this.getLastUsedChainId();
      }
      (_a7 = this.rpcRequestHandler) == null ? void 0 : _a7.call(this, req);
      const response = await this.appEvent({
        type: W3mFrameConstants.APP_RPC_REQUEST,
        payload: req
      });
      (_b3 = this.rpcSuccessHandler) == null ? void 0 : _b3.call(this, response, req);
      return response;
    } catch (error) {
      (_c2 = this.rpcErrorHandler) == null ? void 0 : _c2.call(this, error, req);
      (_d = this.w3mLogger) == null ? void 0 : _d.logger.error({ error }, "Error requesting");
      throw error;
    }
  }
  onRpcRequest(callback) {
    this.rpcRequestHandler = callback;
  }
  onRpcSuccess(callback) {
    this.rpcSuccessHandler = callback;
  }
  onRpcError(callback) {
    this.rpcErrorHandler = callback;
  }
  onIsConnected(callback) {
    this.w3mFrame.events.onFrameEvent((event) => {
      if (event.type === W3mFrameConstants.FRAME_IS_CONNECTED_SUCCESS && event.payload.isConnected) {
        callback();
      }
    });
  }
  onNotConnected(callback) {
    this.w3mFrame.events.onFrameEvent((event) => {
      if (event.type === W3mFrameConstants.FRAME_IS_CONNECTED_ERROR) {
        callback();
      }
      if (event.type === W3mFrameConstants.FRAME_IS_CONNECTED_SUCCESS && !event.payload.isConnected) {
        callback();
      }
    });
  }
  onConnect(callback) {
    this.w3mFrame.events.onFrameEvent((event) => {
      if (event.type === W3mFrameConstants.FRAME_GET_USER_SUCCESS) {
        callback(event.payload);
      }
    });
  }
  onSocialConnected(callback) {
    this.w3mFrame.events.onFrameEvent((event) => {
      if (event.type === W3mFrameConstants.FRAME_CONNECT_SOCIAL_SUCCESS) {
        callback(event.payload);
      }
    });
  }
  async getCapabilities() {
    try {
      const capabilities = await this.request({
        method: "wallet_getCapabilities"
      });
      return capabilities || {};
    } catch {
      return {};
    }
  }
  onSetPreferredAccount(callback) {
    this.w3mFrame.events.onFrameEvent((event) => {
      if (event.type === W3mFrameConstants.FRAME_SET_PREFERRED_ACCOUNT_SUCCESS) {
        callback(event.payload);
      } else if (event.type === W3mFrameConstants.FRAME_SET_PREFERRED_ACCOUNT_ERROR) {
        callback({ type: W3mFrameRpcConstants.ACCOUNT_TYPES.EOA });
      }
    });
  }
  onGetSmartAccountEnabledNetworks(callback) {
    this.w3mFrame.events.onFrameEvent((event) => {
      if (event.type === W3mFrameConstants.FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_SUCCESS) {
        callback(event.payload.smartAccountEnabledNetworks);
      } else if (event.type === W3mFrameConstants.FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_ERROR) {
        callback([]);
      }
    });
  }
  getAvailableChainIds() {
    return Object.keys(this.w3mFrame.networks);
  }
  rejectRpcRequests() {
    var _a7;
    try {
      this.openRpcRequests.forEach(({ abortController, method }) => {
        if (!W3mFrameRpcConstants.SAFE_RPC_METHODS.includes(method)) {
          abortController.abort();
        }
      });
      this.openRpcRequests = [];
    } catch (e2) {
      (_a7 = this.w3mLogger) == null ? void 0 : _a7.logger.error({ error: e2 }, "Error aborting RPC request");
    }
  }
  async appEvent(event) {
    await this.w3mFrame.frameLoadPromise;
    let timer = void 0;
    function replaceEventType(type2) {
      return type2.replace("@w3m-app/", "");
    }
    const abortController = new AbortController();
    const type = replaceEventType(event.type);
    const shouldCheckForTimeout = [
      W3mFrameConstants.APP_CONNECT_EMAIL,
      W3mFrameConstants.APP_CONNECT_DEVICE,
      W3mFrameConstants.APP_CONNECT_OTP,
      W3mFrameConstants.APP_CONNECT_SOCIAL,
      W3mFrameConstants.APP_GET_SOCIAL_REDIRECT_URI
    ].map(replaceEventType).includes(type);
    if (shouldCheckForTimeout) {
      timer = setTimeout(() => {
        var _a7;
        (_a7 = this.onTimeout) == null ? void 0 : _a7.call(this);
        abortController.abort();
      }, 3e4);
    }
    return new Promise((resolve, reject) => {
      var _a7, _b3, _c2;
      const id = Math.random().toString(36).substring(7);
      (_c2 = (_a7 = this.w3mLogger) == null ? void 0 : (_b3 = _a7.logger).info) == null ? void 0 : _c2.call(_b3, { event, id }, "Sending app event");
      this.w3mFrame.events.postAppEvent({ ...event, id });
      if (type === "RPC_REQUEST") {
        const rpcEvent = event;
        this.openRpcRequests = [...this.openRpcRequests, { ...rpcEvent.payload, abortController }];
      }
      abortController.signal.addEventListener("abort", () => {
        if (type === "RPC_REQUEST") {
          reject(new Error("Request was aborted"));
        } else if (type !== "GET_FARCASTER_URI") {
          reject(new Error("Something went wrong"));
        }
      });
      function handler(framEvent, logger9) {
        var _a8, _b4, _c3;
        if (framEvent.id !== id) {
          return;
        }
        (_b4 = logger9 == null ? void 0 : (_a8 = logger9.logger).info) == null ? void 0 : _b4.call(_a8, { framEvent, id }, "Received frame response");
        if (framEvent.type === `@w3m-frame/${type}_SUCCESS`) {
          if (timer) {
            clearTimeout(timer);
          }
          if ("payload" in framEvent) {
            resolve(framEvent.payload);
          }
          resolve(void 0);
        } else if (framEvent.type === `@w3m-frame/${type}_ERROR`) {
          if (timer) {
            clearTimeout(timer);
          }
          if ("payload" in framEvent) {
            reject(new Error(((_c3 = framEvent.payload) == null ? void 0 : _c3.message) || "An error occurred"));
          }
          reject(new Error("An error occurred"));
        }
      }
      this.w3mFrame.events.registerFrameEventHandler(id, (frameEvent) => handler(frameEvent, this.w3mLogger), abortController.signal);
    });
  }
  setNewLastEmailLoginTime() {
    W3mFrameStorage.set(W3mFrameConstants.LAST_EMAIL_LOGIN_TIME, Date.now().toString());
  }
  setSocialLoginSuccess(username) {
    W3mFrameStorage.set(W3mFrameConstants.SOCIAL_USERNAME, username);
  }
  setLoginSuccess(email) {
    if (email) {
      W3mFrameStorage.set(W3mFrameConstants.EMAIL, email);
    }
    W3mFrameStorage.set(W3mFrameConstants.EMAIL_LOGIN_USED_KEY, "true");
    W3mFrameStorage.delete(W3mFrameConstants.LAST_EMAIL_LOGIN_TIME);
  }
  deleteAuthLoginCache() {
    W3mFrameStorage.delete(W3mFrameConstants.EMAIL_LOGIN_USED_KEY);
    W3mFrameStorage.delete(W3mFrameConstants.EMAIL);
    W3mFrameStorage.delete(W3mFrameConstants.LAST_USED_CHAIN_KEY);
    W3mFrameStorage.delete(W3mFrameConstants.SOCIAL_USERNAME);
  }
  setLastUsedChainId(chainId) {
    if (chainId) {
      W3mFrameStorage.set(W3mFrameConstants.LAST_USED_CHAIN_KEY, String(chainId));
    }
  }
  getLastUsedChainId() {
    const chainId = W3mFrameStorage.get(W3mFrameConstants.LAST_USED_CHAIN_KEY) ?? void 0;
    const numberChainId = Number(chainId);
    return isNaN(numberChainId) ? chainId : numberChainId;
  }
  persistSmartAccountEnabledNetworks(networks) {
    W3mFrameStorage.set(W3mFrameConstants.SMART_ACCOUNT_ENABLED_NETWORKS, networks.join(","));
  }
};

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/core/dist/index.es.js
var import_events4 = __toESM(require_events());

// node_modules/@walletconnect/types/dist/index.es.js
var import_events2 = __toESM(require_events());
var n = class extends IEvents {
  constructor(s2) {
    super(), this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var h3 = class extends IEvents {
  constructor(s2, t2) {
    super(), this.core = s2, this.logger = t2, this.records = /* @__PURE__ */ new Map();
  }
};
var a = class {
  constructor(s2, t2) {
    this.logger = s2, this.core = t2;
  }
};
var g = class extends IEvents {
  constructor(s2, t2) {
    super(), this.relayer = s2, this.logger = t2;
  }
};
var u2 = class extends IEvents {
  constructor(s2) {
    super();
  }
};
var p = class {
  constructor(s2, t2, e2, f5) {
    this.core = s2, this.logger = t2, this.name = e2;
  }
};
var d2 = class extends IEvents {
  constructor(s2, t2) {
    super(), this.relayer = s2, this.logger = t2;
  }
};
var x = class extends IEvents {
  constructor(s2, t2) {
    super(), this.core = s2, this.logger = t2;
  }
};
var y3 = class {
  constructor(s2, t2, e2) {
    this.core = s2, this.logger = t2, this.store = e2;
  }
};
var v = class {
  constructor(s2, t2) {
    this.projectId = s2, this.logger = t2;
  }
};
var C2 = class {
  constructor(s2, t2, e2) {
    this.core = s2, this.logger = t2, this.telemetryEnabled = e2;
  }
};
var S = class {
  constructor(s2) {
    this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var M = class {
  constructor(s2) {
    this.client = s2;
  }
};

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/core/dist/index.es.js
var import_time4 = __toESM(require_cjs());

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/relay-auth/dist/index.es.js
var import_time = __toESM(require_cjs());
function En(t2) {
  return t2 instanceof Uint8Array || ArrayBuffer.isView(t2) && t2.constructor.name === "Uint8Array";
}
function fe(t2, ...e2) {
  if (!En(t2)) throw new Error("Uint8Array expected");
  if (e2.length > 0 && !e2.includes(t2.length)) throw new Error("Uint8Array expected of length " + e2 + ", got length=" + t2.length);
}
function De(t2, e2 = true) {
  if (t2.destroyed) throw new Error("Hash instance has been destroyed");
  if (e2 && t2.finished) throw new Error("Hash#digest() has already been called");
}
function gn(t2, e2) {
  fe(t2);
  const n2 = e2.outputLen;
  if (t2.length < n2) throw new Error("digestInto() expects output buffer of length at least " + n2);
}
var it = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
var _t = (t2) => new DataView(t2.buffer, t2.byteOffset, t2.byteLength);
function yn(t2) {
  if (typeof t2 != "string") throw new Error("utf8ToBytes expected string, got " + typeof t2);
  return new Uint8Array(new TextEncoder().encode(t2));
}
function de(t2) {
  return typeof t2 == "string" && (t2 = yn(t2)), fe(t2), t2;
}
var xn = class {
  clone() {
    return this._cloneInto();
  }
};
function Bn(t2) {
  const e2 = (r2) => t2().update(de(r2)).digest(), n2 = t2();
  return e2.outputLen = n2.outputLen, e2.blockLen = n2.blockLen, e2.create = () => t2(), e2;
}
function he(t2 = 32) {
  if (it && typeof it.getRandomValues == "function") return it.getRandomValues(new Uint8Array(t2));
  if (it && typeof it.randomBytes == "function") return it.randomBytes(t2);
  throw new Error("crypto.getRandomValues must be defined");
}
function Cn(t2, e2, n2, r2) {
  if (typeof t2.setBigUint64 == "function") return t2.setBigUint64(e2, n2, r2);
  const o2 = BigInt(32), s2 = BigInt(4294967295), a2 = Number(n2 >> o2 & s2), u3 = Number(n2 & s2), i4 = r2 ? 4 : 0, D3 = r2 ? 0 : 4;
  t2.setUint32(e2 + i4, a2, r2), t2.setUint32(e2 + D3, u3, r2);
}
var An = class extends xn {
  constructor(e2, n2, r2, o2) {
    super(), this.blockLen = e2, this.outputLen = n2, this.padOffset = r2, this.isLE = o2, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e2), this.view = _t(this.buffer);
  }
  update(e2) {
    De(this);
    const { view: n2, buffer: r2, blockLen: o2 } = this;
    e2 = de(e2);
    const s2 = e2.length;
    for (let a2 = 0; a2 < s2; ) {
      const u3 = Math.min(o2 - this.pos, s2 - a2);
      if (u3 === o2) {
        const i4 = _t(e2);
        for (; o2 <= s2 - a2; a2 += o2) this.process(i4, a2);
        continue;
      }
      r2.set(e2.subarray(a2, a2 + u3), this.pos), this.pos += u3, a2 += u3, this.pos === o2 && (this.process(n2, 0), this.pos = 0);
    }
    return this.length += e2.length, this.roundClean(), this;
  }
  digestInto(e2) {
    De(this), gn(e2, this), this.finished = true;
    const { buffer: n2, view: r2, blockLen: o2, isLE: s2 } = this;
    let { pos: a2 } = this;
    n2[a2++] = 128, this.buffer.subarray(a2).fill(0), this.padOffset > o2 - a2 && (this.process(r2, 0), a2 = 0);
    for (let l3 = a2; l3 < o2; l3++) n2[l3] = 0;
    Cn(r2, o2 - 8, BigInt(this.length * 8), s2), this.process(r2, 0);
    const u3 = _t(e2), i4 = this.outputLen;
    if (i4 % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const D3 = i4 / 4, c3 = this.get();
    if (D3 > c3.length) throw new Error("_sha2: outputLen bigger than state");
    for (let l3 = 0; l3 < D3; l3++) u3.setUint32(4 * l3, c3[l3], s2);
  }
  digest() {
    const { buffer: e2, outputLen: n2 } = this;
    this.digestInto(e2);
    const r2 = e2.slice(0, n2);
    return this.destroy(), r2;
  }
  _cloneInto(e2) {
    e2 || (e2 = new this.constructor()), e2.set(...this.get());
    const { blockLen: n2, buffer: r2, length: o2, finished: s2, destroyed: a2, pos: u3 } = this;
    return e2.length = o2, e2.pos = u3, e2.finished = s2, e2.destroyed = a2, o2 % n2 && e2.buffer.set(r2), e2;
  }
};
var wt = BigInt(2 ** 32 - 1);
var St = BigInt(32);
function le(t2, e2 = false) {
  return e2 ? { h: Number(t2 & wt), l: Number(t2 >> St & wt) } : { h: Number(t2 >> St & wt) | 0, l: Number(t2 & wt) | 0 };
}
function mn(t2, e2 = false) {
  let n2 = new Uint32Array(t2.length), r2 = new Uint32Array(t2.length);
  for (let o2 = 0; o2 < t2.length; o2++) {
    const { h: s2, l: a2 } = le(t2[o2], e2);
    [n2[o2], r2[o2]] = [s2, a2];
  }
  return [n2, r2];
}
var _n = (t2, e2) => BigInt(t2 >>> 0) << St | BigInt(e2 >>> 0);
var Sn = (t2, e2, n2) => t2 >>> n2;
var vn = (t2, e2, n2) => t2 << 32 - n2 | e2 >>> n2;
var In = (t2, e2, n2) => t2 >>> n2 | e2 << 32 - n2;
var Un = (t2, e2, n2) => t2 << 32 - n2 | e2 >>> n2;
var Tn = (t2, e2, n2) => t2 << 64 - n2 | e2 >>> n2 - 32;
var Fn = (t2, e2, n2) => t2 >>> n2 - 32 | e2 << 64 - n2;
var Nn = (t2, e2) => e2;
var Ln = (t2, e2) => t2;
var On = (t2, e2, n2) => t2 << n2 | e2 >>> 32 - n2;
var Hn = (t2, e2, n2) => e2 << n2 | t2 >>> 32 - n2;
var zn = (t2, e2, n2) => e2 << n2 - 32 | t2 >>> 64 - n2;
var Mn = (t2, e2, n2) => t2 << n2 - 32 | e2 >>> 64 - n2;
function qn(t2, e2, n2, r2) {
  const o2 = (e2 >>> 0) + (r2 >>> 0);
  return { h: t2 + n2 + (o2 / 2 ** 32 | 0) | 0, l: o2 | 0 };
}
var $n = (t2, e2, n2) => (t2 >>> 0) + (e2 >>> 0) + (n2 >>> 0);
var kn = (t2, e2, n2, r2) => e2 + n2 + r2 + (t2 / 2 ** 32 | 0) | 0;
var Rn = (t2, e2, n2, r2) => (t2 >>> 0) + (e2 >>> 0) + (n2 >>> 0) + (r2 >>> 0);
var jn = (t2, e2, n2, r2, o2) => e2 + n2 + r2 + o2 + (t2 / 2 ** 32 | 0) | 0;
var Zn = (t2, e2, n2, r2, o2) => (t2 >>> 0) + (e2 >>> 0) + (n2 >>> 0) + (r2 >>> 0) + (o2 >>> 0);
var Gn = (t2, e2, n2, r2, o2, s2) => e2 + n2 + r2 + o2 + s2 + (t2 / 2 ** 32 | 0) | 0;
var x2 = { fromBig: le, split: mn, toBig: _n, shrSH: Sn, shrSL: vn, rotrSH: In, rotrSL: Un, rotrBH: Tn, rotrBL: Fn, rotr32H: Nn, rotr32L: Ln, rotlSH: On, rotlSL: Hn, rotlBH: zn, rotlBL: Mn, add: qn, add3L: $n, add3H: kn, add4L: Rn, add4H: jn, add5H: Gn, add5L: Zn };
var [Vn, Yn] = (() => x2.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t2) => BigInt(t2))))();
var P2 = new Uint32Array(80);
var Q = new Uint32Array(80);
var Jn = class extends An {
  constructor() {
    super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: e2, Al: n2, Bh: r2, Bl: o2, Ch: s2, Cl: a2, Dh: u3, Dl: i4, Eh: D3, El: c3, Fh: l3, Fl: p3, Gh: w3, Gl: h6, Hh: g3, Hl: S3 } = this;
    return [e2, n2, r2, o2, s2, a2, u3, i4, D3, c3, l3, p3, w3, h6, g3, S3];
  }
  set(e2, n2, r2, o2, s2, a2, u3, i4, D3, c3, l3, p3, w3, h6, g3, S3) {
    this.Ah = e2 | 0, this.Al = n2 | 0, this.Bh = r2 | 0, this.Bl = o2 | 0, this.Ch = s2 | 0, this.Cl = a2 | 0, this.Dh = u3 | 0, this.Dl = i4 | 0, this.Eh = D3 | 0, this.El = c3 | 0, this.Fh = l3 | 0, this.Fl = p3 | 0, this.Gh = w3 | 0, this.Gl = h6 | 0, this.Hh = g3 | 0, this.Hl = S3 | 0;
  }
  process(e2, n2) {
    for (let d4 = 0; d4 < 16; d4++, n2 += 4) P2[d4] = e2.getUint32(n2), Q[d4] = e2.getUint32(n2 += 4);
    for (let d4 = 16; d4 < 80; d4++) {
      const m = P2[d4 - 15] | 0, F3 = Q[d4 - 15] | 0, q3 = x2.rotrSH(m, F3, 1) ^ x2.rotrSH(m, F3, 8) ^ x2.shrSH(m, F3, 7), z5 = x2.rotrSL(m, F3, 1) ^ x2.rotrSL(m, F3, 8) ^ x2.shrSL(m, F3, 7), I3 = P2[d4 - 2] | 0, O2 = Q[d4 - 2] | 0, ot4 = x2.rotrSH(I3, O2, 19) ^ x2.rotrBH(I3, O2, 61) ^ x2.shrSH(I3, O2, 6), tt4 = x2.rotrSL(I3, O2, 19) ^ x2.rotrBL(I3, O2, 61) ^ x2.shrSL(I3, O2, 6), st3 = x2.add4L(z5, tt4, Q[d4 - 7], Q[d4 - 16]), at4 = x2.add4H(st3, q3, ot4, P2[d4 - 7], P2[d4 - 16]);
      P2[d4] = at4 | 0, Q[d4] = st3 | 0;
    }
    let { Ah: r2, Al: o2, Bh: s2, Bl: a2, Ch: u3, Cl: i4, Dh: D3, Dl: c3, Eh: l3, El: p3, Fh: w3, Fl: h6, Gh: g3, Gl: S3, Hh: v6, Hl: L3 } = this;
    for (let d4 = 0; d4 < 80; d4++) {
      const m = x2.rotrSH(l3, p3, 14) ^ x2.rotrSH(l3, p3, 18) ^ x2.rotrBH(l3, p3, 41), F3 = x2.rotrSL(l3, p3, 14) ^ x2.rotrSL(l3, p3, 18) ^ x2.rotrBL(l3, p3, 41), q3 = l3 & w3 ^ ~l3 & g3, z5 = p3 & h6 ^ ~p3 & S3, I3 = x2.add5L(L3, F3, z5, Yn[d4], Q[d4]), O2 = x2.add5H(I3, v6, m, q3, Vn[d4], P2[d4]), ot4 = I3 | 0, tt4 = x2.rotrSH(r2, o2, 28) ^ x2.rotrBH(r2, o2, 34) ^ x2.rotrBH(r2, o2, 39), st3 = x2.rotrSL(r2, o2, 28) ^ x2.rotrBL(r2, o2, 34) ^ x2.rotrBL(r2, o2, 39), at4 = r2 & s2 ^ r2 & u3 ^ s2 & u3, Ct5 = o2 & a2 ^ o2 & i4 ^ a2 & i4;
      v6 = g3 | 0, L3 = S3 | 0, g3 = w3 | 0, S3 = h6 | 0, w3 = l3 | 0, h6 = p3 | 0, { h: l3, l: p3 } = x2.add(D3 | 0, c3 | 0, O2 | 0, ot4 | 0), D3 = u3 | 0, c3 = i4 | 0, u3 = s2 | 0, i4 = a2 | 0, s2 = r2 | 0, a2 = o2 | 0;
      const At4 = x2.add3L(ot4, st3, Ct5);
      r2 = x2.add3H(At4, O2, tt4, at4), o2 = At4 | 0;
    }
    ({ h: r2, l: o2 } = x2.add(this.Ah | 0, this.Al | 0, r2 | 0, o2 | 0)), { h: s2, l: a2 } = x2.add(this.Bh | 0, this.Bl | 0, s2 | 0, a2 | 0), { h: u3, l: i4 } = x2.add(this.Ch | 0, this.Cl | 0, u3 | 0, i4 | 0), { h: D3, l: c3 } = x2.add(this.Dh | 0, this.Dl | 0, D3 | 0, c3 | 0), { h: l3, l: p3 } = x2.add(this.Eh | 0, this.El | 0, l3 | 0, p3 | 0), { h: w3, l: h6 } = x2.add(this.Fh | 0, this.Fl | 0, w3 | 0, h6 | 0), { h: g3, l: S3 } = x2.add(this.Gh | 0, this.Gl | 0, g3 | 0, S3 | 0), { h: v6, l: L3 } = x2.add(this.Hh | 0, this.Hl | 0, v6 | 0, L3 | 0), this.set(r2, o2, s2, a2, u3, i4, D3, c3, l3, p3, w3, h6, g3, S3, v6, L3);
  }
  roundClean() {
    P2.fill(0), Q.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var Kn = Bn(() => new Jn());
var vt = BigInt(0);
var be = BigInt(1);
var Wn = BigInt(2);
function It(t2) {
  return t2 instanceof Uint8Array || ArrayBuffer.isView(t2) && t2.constructor.name === "Uint8Array";
}
function Ut(t2) {
  if (!It(t2)) throw new Error("Uint8Array expected");
}
function Tt(t2, e2) {
  if (typeof e2 != "boolean") throw new Error(t2 + " boolean expected, got " + e2);
}
var Xn = Array.from({ length: 256 }, (t2, e2) => e2.toString(16).padStart(2, "0"));
function Ft(t2) {
  Ut(t2);
  let e2 = "";
  for (let n2 = 0; n2 < t2.length; n2++) e2 += Xn[t2[n2]];
  return e2;
}
function pe(t2) {
  if (typeof t2 != "string") throw new Error("hex string expected, got " + typeof t2);
  return t2 === "" ? vt : BigInt("0x" + t2);
}
var K = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function we(t2) {
  if (t2 >= K._0 && t2 <= K._9) return t2 - K._0;
  if (t2 >= K.A && t2 <= K.F) return t2 - (K.A - 10);
  if (t2 >= K.a && t2 <= K.f) return t2 - (K.a - 10);
}
function Ee(t2) {
  if (typeof t2 != "string") throw new Error("hex string expected, got " + typeof t2);
  const e2 = t2.length, n2 = e2 / 2;
  if (e2 % 2) throw new Error("hex string expected, got unpadded hex of length " + e2);
  const r2 = new Uint8Array(n2);
  for (let o2 = 0, s2 = 0; o2 < n2; o2++, s2 += 2) {
    const a2 = we(t2.charCodeAt(s2)), u3 = we(t2.charCodeAt(s2 + 1));
    if (a2 === void 0 || u3 === void 0) {
      const i4 = t2[s2] + t2[s2 + 1];
      throw new Error('hex string expected, got non-hex character "' + i4 + '" at index ' + s2);
    }
    r2[o2] = a2 * 16 + u3;
  }
  return r2;
}
function Pn(t2) {
  return pe(Ft(t2));
}
function Et(t2) {
  return Ut(t2), pe(Ft(Uint8Array.from(t2).reverse()));
}
function ge(t2, e2) {
  return Ee(t2.toString(16).padStart(e2 * 2, "0"));
}
function Nt(t2, e2) {
  return ge(t2, e2).reverse();
}
function W(t2, e2, n2) {
  let r2;
  if (typeof e2 == "string") try {
    r2 = Ee(e2);
  } catch (s2) {
    throw new Error(t2 + " must be hex string or Uint8Array, cause: " + s2);
  }
  else if (It(e2)) r2 = Uint8Array.from(e2);
  else throw new Error(t2 + " must be hex string or Uint8Array");
  const o2 = r2.length;
  if (typeof n2 == "number" && o2 !== n2) throw new Error(t2 + " of length " + n2 + " expected, got " + o2);
  return r2;
}
function ye(...t2) {
  let e2 = 0;
  for (let r2 = 0; r2 < t2.length; r2++) {
    const o2 = t2[r2];
    Ut(o2), e2 += o2.length;
  }
  const n2 = new Uint8Array(e2);
  for (let r2 = 0, o2 = 0; r2 < t2.length; r2++) {
    const s2 = t2[r2];
    n2.set(s2, o2), o2 += s2.length;
  }
  return n2;
}
var Lt = (t2) => typeof t2 == "bigint" && vt <= t2;
function Qn(t2, e2, n2) {
  return Lt(t2) && Lt(e2) && Lt(n2) && e2 <= t2 && t2 < n2;
}
function ft(t2, e2, n2, r2) {
  if (!Qn(e2, n2, r2)) throw new Error("expected valid " + t2 + ": " + n2 + " <= n < " + r2 + ", got " + e2);
}
function tr(t2) {
  let e2;
  for (e2 = 0; t2 > vt; t2 >>= be, e2 += 1) ;
  return e2;
}
var er = (t2) => (Wn << BigInt(t2 - 1)) - be;
var nr = { bigint: (t2) => typeof t2 == "bigint", function: (t2) => typeof t2 == "function", boolean: (t2) => typeof t2 == "boolean", string: (t2) => typeof t2 == "string", stringOrUint8Array: (t2) => typeof t2 == "string" || It(t2), isSafeInteger: (t2) => Number.isSafeInteger(t2), array: (t2) => Array.isArray(t2), field: (t2, e2) => e2.Fp.isValid(t2), hash: (t2) => typeof t2 == "function" && Number.isSafeInteger(t2.outputLen) };
function Ot(t2, e2, n2 = {}) {
  const r2 = (o2, s2, a2) => {
    const u3 = nr[s2];
    if (typeof u3 != "function") throw new Error("invalid validator function");
    const i4 = t2[o2];
    if (!(a2 && i4 === void 0) && !u3(i4, t2)) throw new Error("param " + String(o2) + " is invalid. Expected " + s2 + ", got " + i4);
  };
  for (const [o2, s2] of Object.entries(e2)) r2(o2, s2, false);
  for (const [o2, s2] of Object.entries(n2)) r2(o2, s2, true);
  return t2;
}
function xe(t2) {
  const e2 = /* @__PURE__ */ new WeakMap();
  return (n2, ...r2) => {
    const o2 = e2.get(n2);
    if (o2 !== void 0) return o2;
    const s2 = t2(n2, ...r2);
    return e2.set(n2, s2), s2;
  };
}
var M2 = BigInt(0);
var N = BigInt(1);
var nt = BigInt(2);
var rr = BigInt(3);
var Ht = BigInt(4);
var Be = BigInt(5);
var Ce = BigInt(8);
function H(t2, e2) {
  const n2 = t2 % e2;
  return n2 >= M2 ? n2 : e2 + n2;
}
function or(t2, e2, n2) {
  if (e2 < M2) throw new Error("invalid exponent, negatives unsupported");
  if (n2 <= M2) throw new Error("invalid modulus");
  if (n2 === N) return M2;
  let r2 = N;
  for (; e2 > M2; ) e2 & N && (r2 = r2 * t2 % n2), t2 = t2 * t2 % n2, e2 >>= N;
  return r2;
}
function J(t2, e2, n2) {
  let r2 = t2;
  for (; e2-- > M2; ) r2 *= r2, r2 %= n2;
  return r2;
}
function Ae(t2, e2) {
  if (t2 === M2) throw new Error("invert: expected non-zero number");
  if (e2 <= M2) throw new Error("invert: expected positive modulus, got " + e2);
  let n2 = H(t2, e2), r2 = e2, o2 = M2, s2 = N;
  for (; n2 !== M2; ) {
    const u3 = r2 / n2, i4 = r2 % n2, D3 = o2 - s2 * u3;
    r2 = n2, n2 = i4, o2 = s2, s2 = D3;
  }
  if (r2 !== N) throw new Error("invert: does not exist");
  return H(o2, e2);
}
function sr(t2) {
  const e2 = (t2 - N) / nt;
  let n2, r2, o2;
  for (n2 = t2 - N, r2 = 0; n2 % nt === M2; n2 /= nt, r2++) ;
  for (o2 = nt; o2 < t2 && or(o2, e2, t2) !== t2 - N; o2++) if (o2 > 1e3) throw new Error("Cannot find square root: likely non-prime P");
  if (r2 === 1) {
    const a2 = (t2 + N) / Ht;
    return function(i4, D3) {
      const c3 = i4.pow(D3, a2);
      if (!i4.eql(i4.sqr(c3), D3)) throw new Error("Cannot find square root");
      return c3;
    };
  }
  const s2 = (n2 + N) / nt;
  return function(u3, i4) {
    if (u3.pow(i4, e2) === u3.neg(u3.ONE)) throw new Error("Cannot find square root");
    let D3 = r2, c3 = u3.pow(u3.mul(u3.ONE, o2), n2), l3 = u3.pow(i4, s2), p3 = u3.pow(i4, n2);
    for (; !u3.eql(p3, u3.ONE); ) {
      if (u3.eql(p3, u3.ZERO)) return u3.ZERO;
      let w3 = 1;
      for (let g3 = u3.sqr(p3); w3 < D3 && !u3.eql(g3, u3.ONE); w3++) g3 = u3.sqr(g3);
      const h6 = u3.pow(c3, N << BigInt(D3 - w3 - 1));
      c3 = u3.sqr(h6), l3 = u3.mul(l3, h6), p3 = u3.mul(p3, c3), D3 = w3;
    }
    return l3;
  };
}
function ir(t2) {
  if (t2 % Ht === rr) {
    const e2 = (t2 + N) / Ht;
    return function(r2, o2) {
      const s2 = r2.pow(o2, e2);
      if (!r2.eql(r2.sqr(s2), o2)) throw new Error("Cannot find square root");
      return s2;
    };
  }
  if (t2 % Ce === Be) {
    const e2 = (t2 - Be) / Ce;
    return function(r2, o2) {
      const s2 = r2.mul(o2, nt), a2 = r2.pow(s2, e2), u3 = r2.mul(o2, a2), i4 = r2.mul(r2.mul(u3, nt), a2), D3 = r2.mul(u3, r2.sub(i4, r2.ONE));
      if (!r2.eql(r2.sqr(D3), o2)) throw new Error("Cannot find square root");
      return D3;
    };
  }
  return sr(t2);
}
var ur = (t2, e2) => (H(t2, e2) & N) === N;
var cr = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
function ar(t2) {
  const e2 = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, n2 = cr.reduce((r2, o2) => (r2[o2] = "function", r2), e2);
  return Ot(t2, n2);
}
function fr(t2, e2, n2) {
  if (n2 < M2) throw new Error("invalid exponent, negatives unsupported");
  if (n2 === M2) return t2.ONE;
  if (n2 === N) return e2;
  let r2 = t2.ONE, o2 = e2;
  for (; n2 > M2; ) n2 & N && (r2 = t2.mul(r2, o2)), o2 = t2.sqr(o2), n2 >>= N;
  return r2;
}
function Dr(t2, e2) {
  const n2 = new Array(e2.length), r2 = e2.reduce((s2, a2, u3) => t2.is0(a2) ? s2 : (n2[u3] = s2, t2.mul(s2, a2)), t2.ONE), o2 = t2.inv(r2);
  return e2.reduceRight((s2, a2, u3) => t2.is0(a2) ? s2 : (n2[u3] = t2.mul(s2, n2[u3]), t2.mul(s2, a2)), o2), n2;
}
function me(t2, e2) {
  const n2 = e2 !== void 0 ? e2 : t2.toString(2).length, r2 = Math.ceil(n2 / 8);
  return { nBitLength: n2, nByteLength: r2 };
}
function _e(t2, e2, n2 = false, r2 = {}) {
  if (t2 <= M2) throw new Error("invalid field: expected ORDER > 0, got " + t2);
  const { nBitLength: o2, nByteLength: s2 } = me(t2, e2);
  if (s2 > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
  let a2;
  const u3 = Object.freeze({ ORDER: t2, isLE: n2, BITS: o2, BYTES: s2, MASK: er(o2), ZERO: M2, ONE: N, create: (i4) => H(i4, t2), isValid: (i4) => {
    if (typeof i4 != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof i4);
    return M2 <= i4 && i4 < t2;
  }, is0: (i4) => i4 === M2, isOdd: (i4) => (i4 & N) === N, neg: (i4) => H(-i4, t2), eql: (i4, D3) => i4 === D3, sqr: (i4) => H(i4 * i4, t2), add: (i4, D3) => H(i4 + D3, t2), sub: (i4, D3) => H(i4 - D3, t2), mul: (i4, D3) => H(i4 * D3, t2), pow: (i4, D3) => fr(u3, i4, D3), div: (i4, D3) => H(i4 * Ae(D3, t2), t2), sqrN: (i4) => i4 * i4, addN: (i4, D3) => i4 + D3, subN: (i4, D3) => i4 - D3, mulN: (i4, D3) => i4 * D3, inv: (i4) => Ae(i4, t2), sqrt: r2.sqrt || ((i4) => (a2 || (a2 = ir(t2)), a2(u3, i4))), invertBatch: (i4) => Dr(u3, i4), cmov: (i4, D3, c3) => c3 ? D3 : i4, toBytes: (i4) => n2 ? Nt(i4, s2) : ge(i4, s2), fromBytes: (i4) => {
    if (i4.length !== s2) throw new Error("Field.fromBytes: expected " + s2 + " bytes, got " + i4.length);
    return n2 ? Et(i4) : Pn(i4);
  } });
  return Object.freeze(u3);
}
var Se = BigInt(0);
var gt = BigInt(1);
function zt(t2, e2) {
  const n2 = e2.negate();
  return t2 ? n2 : e2;
}
function ve(t2, e2) {
  if (!Number.isSafeInteger(t2) || t2 <= 0 || t2 > e2) throw new Error("invalid window size, expected [1.." + e2 + "], got W=" + t2);
}
function Mt(t2, e2) {
  ve(t2, e2);
  const n2 = Math.ceil(e2 / t2) + 1, r2 = 2 ** (t2 - 1);
  return { windows: n2, windowSize: r2 };
}
function dr(t2, e2) {
  if (!Array.isArray(t2)) throw new Error("array expected");
  t2.forEach((n2, r2) => {
    if (!(n2 instanceof e2)) throw new Error("invalid point at index " + r2);
  });
}
function hr(t2, e2) {
  if (!Array.isArray(t2)) throw new Error("array of scalars expected");
  t2.forEach((n2, r2) => {
    if (!e2.isValid(n2)) throw new Error("invalid scalar at index " + r2);
  });
}
var qt = /* @__PURE__ */ new WeakMap();
var Ie = /* @__PURE__ */ new WeakMap();
function $t(t2) {
  return Ie.get(t2) || 1;
}
function lr(t2, e2) {
  return { constTimeNegate: zt, hasPrecomputes(n2) {
    return $t(n2) !== 1;
  }, unsafeLadder(n2, r2, o2 = t2.ZERO) {
    let s2 = n2;
    for (; r2 > Se; ) r2 & gt && (o2 = o2.add(s2)), s2 = s2.double(), r2 >>= gt;
    return o2;
  }, precomputeWindow(n2, r2) {
    const { windows: o2, windowSize: s2 } = Mt(r2, e2), a2 = [];
    let u3 = n2, i4 = u3;
    for (let D3 = 0; D3 < o2; D3++) {
      i4 = u3, a2.push(i4);
      for (let c3 = 1; c3 < s2; c3++) i4 = i4.add(u3), a2.push(i4);
      u3 = i4.double();
    }
    return a2;
  }, wNAF(n2, r2, o2) {
    const { windows: s2, windowSize: a2 } = Mt(n2, e2);
    let u3 = t2.ZERO, i4 = t2.BASE;
    const D3 = BigInt(2 ** n2 - 1), c3 = 2 ** n2, l3 = BigInt(n2);
    for (let p3 = 0; p3 < s2; p3++) {
      const w3 = p3 * a2;
      let h6 = Number(o2 & D3);
      o2 >>= l3, h6 > a2 && (h6 -= c3, o2 += gt);
      const g3 = w3, S3 = w3 + Math.abs(h6) - 1, v6 = p3 % 2 !== 0, L3 = h6 < 0;
      h6 === 0 ? i4 = i4.add(zt(v6, r2[g3])) : u3 = u3.add(zt(L3, r2[S3]));
    }
    return { p: u3, f: i4 };
  }, wNAFUnsafe(n2, r2, o2, s2 = t2.ZERO) {
    const { windows: a2, windowSize: u3 } = Mt(n2, e2), i4 = BigInt(2 ** n2 - 1), D3 = 2 ** n2, c3 = BigInt(n2);
    for (let l3 = 0; l3 < a2; l3++) {
      const p3 = l3 * u3;
      if (o2 === Se) break;
      let w3 = Number(o2 & i4);
      if (o2 >>= c3, w3 > u3 && (w3 -= D3, o2 += gt), w3 === 0) continue;
      let h6 = r2[p3 + Math.abs(w3) - 1];
      w3 < 0 && (h6 = h6.negate()), s2 = s2.add(h6);
    }
    return s2;
  }, getPrecomputes(n2, r2, o2) {
    let s2 = qt.get(r2);
    return s2 || (s2 = this.precomputeWindow(r2, n2), n2 !== 1 && qt.set(r2, o2(s2))), s2;
  }, wNAFCached(n2, r2, o2) {
    const s2 = $t(n2);
    return this.wNAF(s2, this.getPrecomputes(s2, n2, o2), r2);
  }, wNAFCachedUnsafe(n2, r2, o2, s2) {
    const a2 = $t(n2);
    return a2 === 1 ? this.unsafeLadder(n2, r2, s2) : this.wNAFUnsafe(a2, this.getPrecomputes(a2, n2, o2), r2, s2);
  }, setWindowSize(n2, r2) {
    ve(r2, e2), Ie.set(n2, r2), qt.delete(n2);
  } };
}
function br(t2, e2, n2, r2) {
  if (dr(n2, t2), hr(r2, e2), n2.length !== r2.length) throw new Error("arrays of points and scalars must have equal length");
  const o2 = t2.ZERO, s2 = tr(BigInt(n2.length)), a2 = s2 > 12 ? s2 - 3 : s2 > 4 ? s2 - 2 : s2 ? 2 : 1, u3 = (1 << a2) - 1, i4 = new Array(u3 + 1).fill(o2), D3 = Math.floor((e2.BITS - 1) / a2) * a2;
  let c3 = o2;
  for (let l3 = D3; l3 >= 0; l3 -= a2) {
    i4.fill(o2);
    for (let w3 = 0; w3 < r2.length; w3++) {
      const h6 = r2[w3], g3 = Number(h6 >> BigInt(l3) & BigInt(u3));
      i4[g3] = i4[g3].add(n2[w3]);
    }
    let p3 = o2;
    for (let w3 = i4.length - 1, h6 = o2; w3 > 0; w3--) h6 = h6.add(i4[w3]), p3 = p3.add(h6);
    if (c3 = c3.add(p3), l3 !== 0) for (let w3 = 0; w3 < a2; w3++) c3 = c3.double();
  }
  return c3;
}
function pr(t2) {
  return ar(t2.Fp), Ot(t2, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...me(t2.n, t2.nBitLength), ...t2, p: t2.Fp.ORDER });
}
var G = BigInt(0);
var j = BigInt(1);
var yt = BigInt(2);
var wr = BigInt(8);
var Er = { zip215: true };
function gr(t2) {
  const e2 = pr(t2);
  return Ot(t2, { hash: "function", a: "bigint", d: "bigint", randomBytes: "function" }, { adjustScalarBytes: "function", domain: "function", uvRatio: "function", mapToCurve: "function" }), Object.freeze({ ...e2 });
}
function yr(t2) {
  const e2 = gr(t2), { Fp: n2, n: r2, prehash: o2, hash: s2, randomBytes: a2, nByteLength: u3, h: i4 } = e2, D3 = yt << BigInt(u3 * 8) - j, c3 = n2.create, l3 = _e(e2.n, e2.nBitLength), p3 = e2.uvRatio || ((y5, f5) => {
    try {
      return { isValid: true, value: n2.sqrt(y5 * n2.inv(f5)) };
    } catch {
      return { isValid: false, value: G };
    }
  }), w3 = e2.adjustScalarBytes || ((y5) => y5), h6 = e2.domain || ((y5, f5, b3) => {
    if (Tt("phflag", b3), f5.length || b3) throw new Error("Contexts/pre-hash are not supported");
    return y5;
  });
  function g3(y5, f5) {
    ft("coordinate " + y5, f5, G, D3);
  }
  function S3(y5) {
    if (!(y5 instanceof d4)) throw new Error("ExtendedPoint expected");
  }
  const v6 = xe((y5, f5) => {
    const { ex: b3, ey: E4, ez: B3 } = y5, C5 = y5.is0();
    f5 == null && (f5 = C5 ? wr : n2.inv(B3));
    const A4 = c3(b3 * f5), U3 = c3(E4 * f5), _3 = c3(B3 * f5);
    if (C5) return { x: G, y: j };
    if (_3 !== j) throw new Error("invZ was invalid");
    return { x: A4, y: U3 };
  }), L3 = xe((y5) => {
    const { a: f5, d: b3 } = e2;
    if (y5.is0()) throw new Error("bad point: ZERO");
    const { ex: E4, ey: B3, ez: C5, et: A4 } = y5, U3 = c3(E4 * E4), _3 = c3(B3 * B3), T3 = c3(C5 * C5), $3 = c3(T3 * T3), R3 = c3(U3 * f5), V4 = c3(T3 * c3(R3 + _3)), Y3 = c3($3 + c3(b3 * c3(U3 * _3)));
    if (V4 !== Y3) throw new Error("bad point: equation left != right (1)");
    const Z3 = c3(E4 * B3), X3 = c3(C5 * A4);
    if (Z3 !== X3) throw new Error("bad point: equation left != right (2)");
    return true;
  });
  class d4 {
    constructor(f5, b3, E4, B3) {
      this.ex = f5, this.ey = b3, this.ez = E4, this.et = B3, g3("x", f5), g3("y", b3), g3("z", E4), g3("t", B3), Object.freeze(this);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static fromAffine(f5) {
      if (f5 instanceof d4) throw new Error("extended point not allowed");
      const { x: b3, y: E4 } = f5 || {};
      return g3("x", b3), g3("y", E4), new d4(b3, E4, j, c3(b3 * E4));
    }
    static normalizeZ(f5) {
      const b3 = n2.invertBatch(f5.map((E4) => E4.ez));
      return f5.map((E4, B3) => E4.toAffine(b3[B3])).map(d4.fromAffine);
    }
    static msm(f5, b3) {
      return br(d4, l3, f5, b3);
    }
    _setWindowSize(f5) {
      q3.setWindowSize(this, f5);
    }
    assertValidity() {
      L3(this);
    }
    equals(f5) {
      S3(f5);
      const { ex: b3, ey: E4, ez: B3 } = this, { ex: C5, ey: A4, ez: U3 } = f5, _3 = c3(b3 * U3), T3 = c3(C5 * B3), $3 = c3(E4 * U3), R3 = c3(A4 * B3);
      return _3 === T3 && $3 === R3;
    }
    is0() {
      return this.equals(d4.ZERO);
    }
    negate() {
      return new d4(c3(-this.ex), this.ey, this.ez, c3(-this.et));
    }
    double() {
      const { a: f5 } = e2, { ex: b3, ey: E4, ez: B3 } = this, C5 = c3(b3 * b3), A4 = c3(E4 * E4), U3 = c3(yt * c3(B3 * B3)), _3 = c3(f5 * C5), T3 = b3 + E4, $3 = c3(c3(T3 * T3) - C5 - A4), R3 = _3 + A4, V4 = R3 - U3, Y3 = _3 - A4, Z3 = c3($3 * V4), X3 = c3(R3 * Y3), et4 = c3($3 * Y3), pt4 = c3(V4 * R3);
      return new d4(Z3, X3, pt4, et4);
    }
    add(f5) {
      S3(f5);
      const { a: b3, d: E4 } = e2, { ex: B3, ey: C5, ez: A4, et: U3 } = this, { ex: _3, ey: T3, ez: $3, et: R3 } = f5;
      if (b3 === BigInt(-1)) {
        const re3 = c3((C5 - B3) * (T3 + _3)), oe5 = c3((C5 + B3) * (T3 - _3)), mt4 = c3(oe5 - re3);
        if (mt4 === G) return this.double();
        const se2 = c3(A4 * yt * R3), ie2 = c3(U3 * yt * $3), ue3 = ie2 + se2, ce4 = oe5 + re3, ae5 = ie2 - se2, Dn4 = c3(ue3 * mt4), dn4 = c3(ce4 * ae5), hn4 = c3(ue3 * ae5), ln4 = c3(mt4 * ce4);
        return new d4(Dn4, dn4, ln4, hn4);
      }
      const V4 = c3(B3 * _3), Y3 = c3(C5 * T3), Z3 = c3(U3 * E4 * R3), X3 = c3(A4 * $3), et4 = c3((B3 + C5) * (_3 + T3) - V4 - Y3), pt4 = X3 - Z3, ee2 = X3 + Z3, ne4 = c3(Y3 - b3 * V4), un4 = c3(et4 * pt4), cn4 = c3(ee2 * ne4), an4 = c3(et4 * ne4), fn4 = c3(pt4 * ee2);
      return new d4(un4, cn4, fn4, an4);
    }
    subtract(f5) {
      return this.add(f5.negate());
    }
    wNAF(f5) {
      return q3.wNAFCached(this, f5, d4.normalizeZ);
    }
    multiply(f5) {
      const b3 = f5;
      ft("scalar", b3, j, r2);
      const { p: E4, f: B3 } = this.wNAF(b3);
      return d4.normalizeZ([E4, B3])[0];
    }
    multiplyUnsafe(f5, b3 = d4.ZERO) {
      const E4 = f5;
      return ft("scalar", E4, G, r2), E4 === G ? F3 : this.is0() || E4 === j ? this : q3.wNAFCachedUnsafe(this, E4, d4.normalizeZ, b3);
    }
    isSmallOrder() {
      return this.multiplyUnsafe(i4).is0();
    }
    isTorsionFree() {
      return q3.unsafeLadder(this, r2).is0();
    }
    toAffine(f5) {
      return v6(this, f5);
    }
    clearCofactor() {
      const { h: f5 } = e2;
      return f5 === j ? this : this.multiplyUnsafe(f5);
    }
    static fromHex(f5, b3 = false) {
      const { d: E4, a: B3 } = e2, C5 = n2.BYTES;
      f5 = W("pointHex", f5, C5), Tt("zip215", b3);
      const A4 = f5.slice(), U3 = f5[C5 - 1];
      A4[C5 - 1] = U3 & -129;
      const _3 = Et(A4), T3 = b3 ? D3 : n2.ORDER;
      ft("pointHex.y", _3, G, T3);
      const $3 = c3(_3 * _3), R3 = c3($3 - j), V4 = c3(E4 * $3 - B3);
      let { isValid: Y3, value: Z3 } = p3(R3, V4);
      if (!Y3) throw new Error("Point.fromHex: invalid y coordinate");
      const X3 = (Z3 & j) === j, et4 = (U3 & 128) !== 0;
      if (!b3 && Z3 === G && et4) throw new Error("Point.fromHex: x=0 and x_0=1");
      return et4 !== X3 && (Z3 = c3(-Z3)), d4.fromAffine({ x: Z3, y: _3 });
    }
    static fromPrivateKey(f5) {
      return O2(f5).point;
    }
    toRawBytes() {
      const { x: f5, y: b3 } = this.toAffine(), E4 = Nt(b3, n2.BYTES);
      return E4[E4.length - 1] |= f5 & j ? 128 : 0, E4;
    }
    toHex() {
      return Ft(this.toRawBytes());
    }
  }
  d4.BASE = new d4(e2.Gx, e2.Gy, j, c3(e2.Gx * e2.Gy)), d4.ZERO = new d4(G, j, j, G);
  const { BASE: m, ZERO: F3 } = d4, q3 = lr(d4, u3 * 8);
  function z5(y5) {
    return H(y5, r2);
  }
  function I3(y5) {
    return z5(Et(y5));
  }
  function O2(y5) {
    const f5 = n2.BYTES;
    y5 = W("private key", y5, f5);
    const b3 = W("hashed private key", s2(y5), 2 * f5), E4 = w3(b3.slice(0, f5)), B3 = b3.slice(f5, 2 * f5), C5 = I3(E4), A4 = m.multiply(C5), U3 = A4.toRawBytes();
    return { head: E4, prefix: B3, scalar: C5, point: A4, pointBytes: U3 };
  }
  function ot4(y5) {
    return O2(y5).pointBytes;
  }
  function tt4(y5 = new Uint8Array(), ...f5) {
    const b3 = ye(...f5);
    return I3(s2(h6(b3, W("context", y5), !!o2)));
  }
  function st3(y5, f5, b3 = {}) {
    y5 = W("message", y5), o2 && (y5 = o2(y5));
    const { prefix: E4, scalar: B3, pointBytes: C5 } = O2(f5), A4 = tt4(b3.context, E4, y5), U3 = m.multiply(A4).toRawBytes(), _3 = tt4(b3.context, U3, C5, y5), T3 = z5(A4 + _3 * B3);
    ft("signature.s", T3, G, r2);
    const $3 = ye(U3, Nt(T3, n2.BYTES));
    return W("result", $3, n2.BYTES * 2);
  }
  const at4 = Er;
  function Ct5(y5, f5, b3, E4 = at4) {
    const { context: B3, zip215: C5 } = E4, A4 = n2.BYTES;
    y5 = W("signature", y5, 2 * A4), f5 = W("message", f5), b3 = W("publicKey", b3, A4), C5 !== void 0 && Tt("zip215", C5), o2 && (f5 = o2(f5));
    const U3 = Et(y5.slice(A4, 2 * A4));
    let _3, T3, $3;
    try {
      _3 = d4.fromHex(b3, C5), T3 = d4.fromHex(y5.slice(0, A4), C5), $3 = m.multiplyUnsafe(U3);
    } catch {
      return false;
    }
    if (!C5 && _3.isSmallOrder()) return false;
    const R3 = tt4(B3, T3.toRawBytes(), _3.toRawBytes(), f5);
    return T3.add(_3.multiplyUnsafe(R3)).subtract($3).clearCofactor().equals(d4.ZERO);
  }
  return m._setWindowSize(8), { CURVE: e2, getPublicKey: ot4, sign: st3, verify: Ct5, ExtendedPoint: d4, utils: { getExtendedPublicKey: O2, randomPrivateKey: () => a2(n2.BYTES), precompute(y5 = 8, f5 = d4.BASE) {
    return f5._setWindowSize(y5), f5.multiply(BigInt(3)), f5;
  } } };
}
BigInt(0), BigInt(1);
var kt = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
var Ue = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
BigInt(0);
var xr = BigInt(1);
var Te = BigInt(2);
BigInt(3);
var Br = BigInt(5);
var Cr = BigInt(8);
function Ar(t2) {
  const e2 = BigInt(10), n2 = BigInt(20), r2 = BigInt(40), o2 = BigInt(80), s2 = kt, u3 = t2 * t2 % s2 * t2 % s2, i4 = J(u3, Te, s2) * u3 % s2, D3 = J(i4, xr, s2) * t2 % s2, c3 = J(D3, Br, s2) * D3 % s2, l3 = J(c3, e2, s2) * c3 % s2, p3 = J(l3, n2, s2) * l3 % s2, w3 = J(p3, r2, s2) * p3 % s2, h6 = J(w3, o2, s2) * w3 % s2, g3 = J(h6, o2, s2) * w3 % s2, S3 = J(g3, e2, s2) * c3 % s2;
  return { pow_p_5_8: J(S3, Te, s2) * t2 % s2, b2: u3 };
}
function mr(t2) {
  return t2[0] &= 248, t2[31] &= 127, t2[31] |= 64, t2;
}
function _r(t2, e2) {
  const n2 = kt, r2 = H(e2 * e2 * e2, n2), o2 = H(r2 * r2 * e2, n2), s2 = Ar(t2 * o2).pow_p_5_8;
  let a2 = H(t2 * r2 * s2, n2);
  const u3 = H(e2 * a2 * a2, n2), i4 = a2, D3 = H(a2 * Ue, n2), c3 = u3 === t2, l3 = u3 === H(-t2, n2), p3 = u3 === H(-t2 * Ue, n2);
  return c3 && (a2 = i4), (l3 || p3) && (a2 = D3), ur(a2, n2) && (a2 = H(-a2, n2)), { isValid: c3 || l3, value: a2 };
}
var Sr = (() => _e(kt, void 0, true))();
var vr = (() => ({ a: BigInt(-1), d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"), Fp: Sr, n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"), h: Cr, Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"), Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"), hash: Kn, randomBytes: he, adjustScalarBytes: mr, uvRatio: _r }))();
var Rt = (() => yr(vr))();
var jt = "EdDSA";
var Zt = "JWT";
var ut = ".";
var Dt = "base64url";
var Gt = "utf8";
var xt = "utf8";
var Vt = ":";
var Yt = "did";
var Jt = "key";
var dt = "base58btc";
var Kt = "z";
var Wt = "K36";
var Ne = 32;
function Xt(t2) {
  return globalThis.Buffer != null ? new Uint8Array(t2.buffer, t2.byteOffset, t2.byteLength) : t2;
}
function Le(t2 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Xt(globalThis.Buffer.allocUnsafe(t2)) : new Uint8Array(t2);
}
function Oe(t2, e2) {
  e2 || (e2 = t2.reduce((o2, s2) => o2 + s2.length, 0));
  const n2 = Le(e2);
  let r2 = 0;
  for (const o2 of t2) n2.set(o2, r2), r2 += o2.length;
  return Xt(n2);
}
function Ir(t2, e2) {
  if (t2.length >= 255) throw new TypeError("Alphabet too long");
  for (var n2 = new Uint8Array(256), r2 = 0; r2 < n2.length; r2++) n2[r2] = 255;
  for (var o2 = 0; o2 < t2.length; o2++) {
    var s2 = t2.charAt(o2), a2 = s2.charCodeAt(0);
    if (n2[a2] !== 255) throw new TypeError(s2 + " is ambiguous");
    n2[a2] = o2;
  }
  var u3 = t2.length, i4 = t2.charAt(0), D3 = Math.log(u3) / Math.log(256), c3 = Math.log(256) / Math.log(u3);
  function l3(h6) {
    if (h6 instanceof Uint8Array || (ArrayBuffer.isView(h6) ? h6 = new Uint8Array(h6.buffer, h6.byteOffset, h6.byteLength) : Array.isArray(h6) && (h6 = Uint8Array.from(h6))), !(h6 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (h6.length === 0) return "";
    for (var g3 = 0, S3 = 0, v6 = 0, L3 = h6.length; v6 !== L3 && h6[v6] === 0; ) v6++, g3++;
    for (var d4 = (L3 - v6) * c3 + 1 >>> 0, m = new Uint8Array(d4); v6 !== L3; ) {
      for (var F3 = h6[v6], q3 = 0, z5 = d4 - 1; (F3 !== 0 || q3 < S3) && z5 !== -1; z5--, q3++) F3 += 256 * m[z5] >>> 0, m[z5] = F3 % u3 >>> 0, F3 = F3 / u3 >>> 0;
      if (F3 !== 0) throw new Error("Non-zero carry");
      S3 = q3, v6++;
    }
    for (var I3 = d4 - S3; I3 !== d4 && m[I3] === 0; ) I3++;
    for (var O2 = i4.repeat(g3); I3 < d4; ++I3) O2 += t2.charAt(m[I3]);
    return O2;
  }
  function p3(h6) {
    if (typeof h6 != "string") throw new TypeError("Expected String");
    if (h6.length === 0) return new Uint8Array();
    var g3 = 0;
    if (h6[g3] !== " ") {
      for (var S3 = 0, v6 = 0; h6[g3] === i4; ) S3++, g3++;
      for (var L3 = (h6.length - g3) * D3 + 1 >>> 0, d4 = new Uint8Array(L3); h6[g3]; ) {
        var m = n2[h6.charCodeAt(g3)];
        if (m === 255) return;
        for (var F3 = 0, q3 = L3 - 1; (m !== 0 || F3 < v6) && q3 !== -1; q3--, F3++) m += u3 * d4[q3] >>> 0, d4[q3] = m % 256 >>> 0, m = m / 256 >>> 0;
        if (m !== 0) throw new Error("Non-zero carry");
        v6 = F3, g3++;
      }
      if (h6[g3] !== " ") {
        for (var z5 = L3 - v6; z5 !== L3 && d4[z5] === 0; ) z5++;
        for (var I3 = new Uint8Array(S3 + (L3 - z5)), O2 = S3; z5 !== L3; ) I3[O2++] = d4[z5++];
        return I3;
      }
    }
  }
  function w3(h6) {
    var g3 = p3(h6);
    if (g3) return g3;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: l3, decodeUnsafe: p3, decode: w3 };
}
var Ur = Ir;
var Tr = Ur;
var He = (t2) => {
  if (t2 instanceof Uint8Array && t2.constructor.name === "Uint8Array") return t2;
  if (t2 instanceof ArrayBuffer) return new Uint8Array(t2);
  if (ArrayBuffer.isView(t2)) return new Uint8Array(t2.buffer, t2.byteOffset, t2.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Fr = (t2) => new TextEncoder().encode(t2);
var Nr = (t2) => new TextDecoder().decode(t2);
var Lr = class {
  constructor(e2, n2, r2) {
    this.name = e2, this.prefix = n2, this.baseEncode = r2;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Or = class {
  constructor(e2, n2, r2) {
    if (this.name = e2, this.prefix = n2, n2.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = n2.codePointAt(0), this.baseDecode = r2;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return ze(this, e2);
  }
};
var Hr = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return ze(this, e2);
  }
  decode(e2) {
    const n2 = e2[0], r2 = this.decoders[n2];
    if (r2) return r2.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var ze = (t2, e2) => new Hr({ ...t2.decoders || { [t2.prefix]: t2 }, ...e2.decoders || { [e2.prefix]: e2 } });
var zr = class {
  constructor(e2, n2, r2, o2) {
    this.name = e2, this.prefix = n2, this.baseEncode = r2, this.baseDecode = o2, this.encoder = new Lr(e2, n2, r2), this.decoder = new Or(e2, n2, o2);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var Bt = ({ name: t2, prefix: e2, encode: n2, decode: r2 }) => new zr(t2, e2, n2, r2);
var ht = ({ prefix: t2, name: e2, alphabet: n2 }) => {
  const { encode: r2, decode: o2 } = Tr(n2, e2);
  return Bt({ prefix: t2, name: e2, encode: r2, decode: (s2) => He(o2(s2)) });
};
var Mr = (t2, e2, n2, r2) => {
  const o2 = {};
  for (let c3 = 0; c3 < e2.length; ++c3) o2[e2[c3]] = c3;
  let s2 = t2.length;
  for (; t2[s2 - 1] === "="; ) --s2;
  const a2 = new Uint8Array(s2 * n2 / 8 | 0);
  let u3 = 0, i4 = 0, D3 = 0;
  for (let c3 = 0; c3 < s2; ++c3) {
    const l3 = o2[t2[c3]];
    if (l3 === void 0) throw new SyntaxError(`Non-${r2} character`);
    i4 = i4 << n2 | l3, u3 += n2, u3 >= 8 && (u3 -= 8, a2[D3++] = 255 & i4 >> u3);
  }
  if (u3 >= n2 || 255 & i4 << 8 - u3) throw new SyntaxError("Unexpected end of data");
  return a2;
};
var qr = (t2, e2, n2) => {
  const r2 = e2[e2.length - 1] === "=", o2 = (1 << n2) - 1;
  let s2 = "", a2 = 0, u3 = 0;
  for (let i4 = 0; i4 < t2.length; ++i4) for (u3 = u3 << 8 | t2[i4], a2 += 8; a2 > n2; ) a2 -= n2, s2 += e2[o2 & u3 >> a2];
  if (a2 && (s2 += e2[o2 & u3 << n2 - a2]), r2) for (; s2.length * n2 & 7; ) s2 += "=";
  return s2;
};
var k2 = ({ name: t2, prefix: e2, bitsPerChar: n2, alphabet: r2 }) => Bt({ prefix: e2, name: t2, encode(o2) {
  return qr(o2, r2, n2);
}, decode(o2) {
  return Mr(o2, r2, n2, t2);
} });
var $r = Bt({ prefix: "\0", name: "identity", encode: (t2) => Nr(t2), decode: (t2) => Fr(t2) });
var kr = Object.freeze({ __proto__: null, identity: $r });
var Rr = k2({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var jr = Object.freeze({ __proto__: null, base2: Rr });
var Zr = k2({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Gr = Object.freeze({ __proto__: null, base8: Zr });
var Vr = ht({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Yr = Object.freeze({ __proto__: null, base10: Vr });
var Jr = k2({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Kr = k2({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var Wr = Object.freeze({ __proto__: null, base16: Jr, base16upper: Kr });
var Xr = k2({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var Pr = k2({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var Qr = k2({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var to = k2({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var eo = k2({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var no = k2({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ro = k2({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var oo = k2({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var so = k2({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var io = Object.freeze({ __proto__: null, base32: Xr, base32upper: Pr, base32pad: Qr, base32padupper: to, base32hex: eo, base32hexupper: no, base32hexpad: ro, base32hexpadupper: oo, base32z: so });
var uo = ht({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var co = ht({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var ao = Object.freeze({ __proto__: null, base36: uo, base36upper: co });
var fo = ht({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Do = ht({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var ho = Object.freeze({ __proto__: null, base58btc: fo, base58flickr: Do });
var lo = k2({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var bo = k2({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var po = k2({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var wo = k2({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Eo = Object.freeze({ __proto__: null, base64: lo, base64pad: bo, base64url: po, base64urlpad: wo });
var Me = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var go = Me.reduce((t2, e2, n2) => (t2[n2] = e2, t2), []);
var yo = Me.reduce((t2, e2, n2) => (t2[e2.codePointAt(0)] = n2, t2), []);
function xo(t2) {
  return t2.reduce((e2, n2) => (e2 += go[n2], e2), "");
}
function Bo(t2) {
  const e2 = [];
  for (const n2 of t2) {
    const r2 = yo[n2.codePointAt(0)];
    if (r2 === void 0) throw new Error(`Non-base256emoji character: ${n2}`);
    e2.push(r2);
  }
  return new Uint8Array(e2);
}
var Co = Bt({ prefix: "🚀", name: "base256emoji", encode: xo, decode: Bo });
var Ao = Object.freeze({ __proto__: null, base256emoji: Co });
var mo = $e;
var qe = 128;
var _o = 127;
var So = ~_o;
var vo = Math.pow(2, 31);
function $e(t2, e2, n2) {
  e2 = e2 || [], n2 = n2 || 0;
  for (var r2 = n2; t2 >= vo; ) e2[n2++] = t2 & 255 | qe, t2 /= 128;
  for (; t2 & So; ) e2[n2++] = t2 & 255 | qe, t2 >>>= 7;
  return e2[n2] = t2 | 0, $e.bytes = n2 - r2 + 1, e2;
}
var Io = Pt;
var Uo = 128;
var ke = 127;
function Pt(t2, r2) {
  var n2 = 0, r2 = r2 || 0, o2 = 0, s2 = r2, a2, u3 = t2.length;
  do {
    if (s2 >= u3) throw Pt.bytes = 0, new RangeError("Could not decode varint");
    a2 = t2[s2++], n2 += o2 < 28 ? (a2 & ke) << o2 : (a2 & ke) * Math.pow(2, o2), o2 += 7;
  } while (a2 >= Uo);
  return Pt.bytes = s2 - r2, n2;
}
var To = Math.pow(2, 7);
var Fo = Math.pow(2, 14);
var No = Math.pow(2, 21);
var Lo = Math.pow(2, 28);
var Oo = Math.pow(2, 35);
var Ho = Math.pow(2, 42);
var zo = Math.pow(2, 49);
var Mo = Math.pow(2, 56);
var qo = Math.pow(2, 63);
var $o = function(t2) {
  return t2 < To ? 1 : t2 < Fo ? 2 : t2 < No ? 3 : t2 < Lo ? 4 : t2 < Oo ? 5 : t2 < Ho ? 6 : t2 < zo ? 7 : t2 < Mo ? 8 : t2 < qo ? 9 : 10;
};
var ko = { encode: mo, decode: Io, encodingLength: $o };
var Re = ko;
var je = (t2, e2, n2 = 0) => (Re.encode(t2, e2, n2), e2);
var Ze = (t2) => Re.encodingLength(t2);
var Qt = (t2, e2) => {
  const n2 = e2.byteLength, r2 = Ze(t2), o2 = r2 + Ze(n2), s2 = new Uint8Array(o2 + n2);
  return je(t2, s2, 0), je(n2, s2, r2), s2.set(e2, o2), new Ro(t2, n2, e2, s2);
};
var Ro = class {
  constructor(e2, n2, r2, o2) {
    this.code = e2, this.size = n2, this.digest = r2, this.bytes = o2;
  }
};
var Ge = ({ name: t2, code: e2, encode: n2 }) => new jo(t2, e2, n2);
var jo = class {
  constructor(e2, n2, r2) {
    this.name = e2, this.code = n2, this.encode = r2;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const n2 = this.encode(e2);
      return n2 instanceof Uint8Array ? Qt(this.code, n2) : n2.then((r2) => Qt(this.code, r2));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Ve = (t2) => async (e2) => new Uint8Array(await crypto.subtle.digest(t2, e2));
var Zo = Ge({ name: "sha2-256", code: 18, encode: Ve("SHA-256") });
var Go = Ge({ name: "sha2-512", code: 19, encode: Ve("SHA-512") });
var Vo = Object.freeze({ __proto__: null, sha256: Zo, sha512: Go });
var Ye = 0;
var Yo = "identity";
var Je = He;
var Jo = (t2) => Qt(Ye, Je(t2));
var Ko = { code: Ye, name: Yo, encode: Je, digest: Jo };
var Wo = Object.freeze({ __proto__: null, identity: Ko });
new TextEncoder(), new TextDecoder();
var Ke = { ...kr, ...jr, ...Gr, ...Yr, ...Wr, ...io, ...ao, ...ho, ...Eo, ...Ao };
({ ...Vo, ...Wo });
function We(t2, e2, n2, r2) {
  return { name: t2, prefix: e2, encoder: { name: t2, prefix: e2, encode: n2 }, decoder: { decode: r2 } };
}
var Xe = We("utf8", "u", (t2) => "u" + new TextDecoder("utf8").decode(t2), (t2) => new TextEncoder().encode(t2.substring(1)));
var te = We("ascii", "a", (t2) => {
  let e2 = "a";
  for (let n2 = 0; n2 < t2.length; n2++) e2 += String.fromCharCode(t2[n2]);
  return e2;
}, (t2) => {
  t2 = t2.substring(1);
  const e2 = Le(t2.length);
  for (let n2 = 0; n2 < t2.length; n2++) e2[n2] = t2.charCodeAt(n2);
  return e2;
});
var Pe = { utf8: Xe, "utf-8": Xe, hex: Ke.base16, latin1: te, ascii: te, binary: te, ...Ke };
function ct(t2, e2 = "utf8") {
  const n2 = Pe[e2];
  if (!n2) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t2.buffer, t2.byteOffset, t2.byteLength).toString("utf8") : n2.encoder.encode(t2).substring(1);
}
function rt(t2, e2 = "utf8") {
  const n2 = Pe[e2];
  if (!n2) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Xt(globalThis.Buffer.from(t2, "utf-8")) : n2.decoder.decode(`${n2.prefix}${t2}`);
}
function lt(t2) {
  return safeJsonParse(ct(rt(t2, Dt), Gt));
}
function bt(t2) {
  return ct(rt(safeJsonStringify(t2), Gt), Dt);
}
function Qe(t2) {
  const e2 = rt(Wt, dt), n2 = Kt + ct(Oe([e2, t2]), dt);
  return [Yt, Jt, n2].join(Vt);
}
function en(t2) {
  return ct(t2, Dt);
}
function nn(t2) {
  return rt(t2, Dt);
}
function rn(t2) {
  return rt([bt(t2.header), bt(t2.payload)].join(ut), xt);
}
function on(t2) {
  return [bt(t2.header), bt(t2.payload), en(t2.signature)].join(ut);
}
function sn(t2) {
  const e2 = t2.split(ut), n2 = lt(e2[0]), r2 = lt(e2[1]), o2 = nn(e2[2]), s2 = rt(e2.slice(0, 2).join(ut), xt);
  return { header: n2, payload: r2, signature: o2, data: s2 };
}
function Po(t2 = he(Ne)) {
  const e2 = Rt.getPublicKey(t2);
  return { secretKey: Oe([t2, e2]), publicKey: e2 };
}
async function Qo(t2, e2, n2, r2, o2 = (0, import_time.fromMiliseconds)(Date.now())) {
  const s2 = { alg: jt, typ: Zt }, a2 = Qe(r2.publicKey), u3 = o2 + n2, i4 = { iss: a2, sub: t2, aud: e2, iat: o2, exp: u3 }, D3 = rn({ header: s2, payload: i4 }), c3 = Rt.sign(D3, r2.secretKey.slice(0, 32));
  return on({ header: s2, payload: i4, signature: c3 });
}

// node_modules/@walletconnect/utils/dist/index.es.js
var import_time3 = __toESM(require_cjs());
var import_window_getters = __toESM(require_cjs2());
var import_window_metadata = __toESM(require_cjs3());

// node_modules/@ethersproject/logger/lib.esm/_version.js
var version = "logger/5.7.0";

// node_modules/@ethersproject/logger/lib.esm/index.js
var _permanentCensorErrors = false;
var _censorErrors = false;
var LogLevels = { debug: 1, "default": 2, info: 2, warning: 3, error: 4, off: 5 };
var _logLevel = LogLevels["default"];
var _globalLogger = null;
function _checkNormalize() {
  try {
    const missing = [];
    ["NFD", "NFC", "NFKD", "NFKC"].forEach((form) => {
      try {
        if ("test".normalize(form) !== "test") {
          throw new Error("bad normalize");
        }
        ;
      } catch (error) {
        missing.push(form);
      }
    });
    if (missing.length) {
      throw new Error("missing " + missing.join(", "));
    }
    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) {
      throw new Error("broken implementation");
    }
  } catch (error) {
    return error.message;
  }
  return null;
}
var _normalizeError = _checkNormalize();
var LogLevel;
(function(LogLevel2) {
  LogLevel2["DEBUG"] = "DEBUG";
  LogLevel2["INFO"] = "INFO";
  LogLevel2["WARNING"] = "WARNING";
  LogLevel2["ERROR"] = "ERROR";
  LogLevel2["OFF"] = "OFF";
})(LogLevel || (LogLevel = {}));
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
  ErrorCode2["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
  ErrorCode2["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
  ErrorCode2["NETWORK_ERROR"] = "NETWORK_ERROR";
  ErrorCode2["SERVER_ERROR"] = "SERVER_ERROR";
  ErrorCode2["TIMEOUT"] = "TIMEOUT";
  ErrorCode2["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
  ErrorCode2["NUMERIC_FAULT"] = "NUMERIC_FAULT";
  ErrorCode2["MISSING_NEW"] = "MISSING_NEW";
  ErrorCode2["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
  ErrorCode2["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
  ErrorCode2["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
  ErrorCode2["CALL_EXCEPTION"] = "CALL_EXCEPTION";
  ErrorCode2["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
  ErrorCode2["NONCE_EXPIRED"] = "NONCE_EXPIRED";
  ErrorCode2["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
  ErrorCode2["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
  ErrorCode2["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
  ErrorCode2["ACTION_REJECTED"] = "ACTION_REJECTED";
})(ErrorCode || (ErrorCode = {}));
var HEX = "0123456789abcdef";
var Logger = class _Logger {
  constructor(version9) {
    Object.defineProperty(this, "version", {
      enumerable: true,
      value: version9,
      writable: false
    });
  }
  _log(logLevel, args) {
    const level = logLevel.toLowerCase();
    if (LogLevels[level] == null) {
      this.throwArgumentError("invalid log level name", "logLevel", logLevel);
    }
    if (_logLevel > LogLevels[level]) {
      return;
    }
    console.log.apply(console, args);
  }
  debug(...args) {
    this._log(_Logger.levels.DEBUG, args);
  }
  info(...args) {
    this._log(_Logger.levels.INFO, args);
  }
  warn(...args) {
    this._log(_Logger.levels.WARNING, args);
  }
  makeError(message, code, params) {
    if (_censorErrors) {
      return this.makeError("censored error", code, {});
    }
    if (!code) {
      code = _Logger.errors.UNKNOWN_ERROR;
    }
    if (!params) {
      params = {};
    }
    const messageDetails = [];
    Object.keys(params).forEach((key2) => {
      const value = params[key2];
      try {
        if (value instanceof Uint8Array) {
          let hex = "";
          for (let i4 = 0; i4 < value.length; i4++) {
            hex += HEX[value[i4] >> 4];
            hex += HEX[value[i4] & 15];
          }
          messageDetails.push(key2 + "=Uint8Array(0x" + hex + ")");
        } else {
          messageDetails.push(key2 + "=" + JSON.stringify(value));
        }
      } catch (error2) {
        messageDetails.push(key2 + "=" + JSON.stringify(params[key2].toString()));
      }
    });
    messageDetails.push(`code=${code}`);
    messageDetails.push(`version=${this.version}`);
    const reason = message;
    let url = "";
    switch (code) {
      case ErrorCode.NUMERIC_FAULT: {
        url = "NUMERIC_FAULT";
        const fault = message;
        switch (fault) {
          case "overflow":
          case "underflow":
          case "division-by-zero":
            url += "-" + fault;
            break;
          case "negative-power":
          case "negative-width":
            url += "-unsupported";
            break;
          case "unbound-bitwise-result":
            url += "-unbound-result";
            break;
        }
        break;
      }
      case ErrorCode.CALL_EXCEPTION:
      case ErrorCode.INSUFFICIENT_FUNDS:
      case ErrorCode.MISSING_NEW:
      case ErrorCode.NONCE_EXPIRED:
      case ErrorCode.REPLACEMENT_UNDERPRICED:
      case ErrorCode.TRANSACTION_REPLACED:
      case ErrorCode.UNPREDICTABLE_GAS_LIMIT:
        url = code;
        break;
    }
    if (url) {
      message += " [ See: https://links.ethers.org/v5-errors-" + url + " ]";
    }
    if (messageDetails.length) {
      message += " (" + messageDetails.join(", ") + ")";
    }
    const error = new Error(message);
    error.reason = reason;
    error.code = code;
    Object.keys(params).forEach(function(key2) {
      error[key2] = params[key2];
    });
    return error;
  }
  throwError(message, code, params) {
    throw this.makeError(message, code, params);
  }
  throwArgumentError(message, name, value) {
    return this.throwError(message, _Logger.errors.INVALID_ARGUMENT, {
      argument: name,
      value
    });
  }
  assert(condition, message, code, params) {
    if (!!condition) {
      return;
    }
    this.throwError(message, code, params);
  }
  assertArgument(condition, message, name, value) {
    if (!!condition) {
      return;
    }
    this.throwArgumentError(message, name, value);
  }
  checkNormalize(message) {
    if (message == null) {
      message = "platform missing String.prototype.normalize";
    }
    if (_normalizeError) {
      this.throwError("platform missing String.prototype.normalize", _Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "String.prototype.normalize",
        form: _normalizeError
      });
    }
  }
  checkSafeUint53(value, message) {
    if (typeof value !== "number") {
      return;
    }
    if (message == null) {
      message = "value not safe";
    }
    if (value < 0 || value >= 9007199254740991) {
      this.throwError(message, _Logger.errors.NUMERIC_FAULT, {
        operation: "checkSafeInteger",
        fault: "out-of-safe-range",
        value
      });
    }
    if (value % 1) {
      this.throwError(message, _Logger.errors.NUMERIC_FAULT, {
        operation: "checkSafeInteger",
        fault: "non-integer",
        value
      });
    }
  }
  checkArgumentCount(count, expectedCount, message) {
    if (message) {
      message = ": " + message;
    } else {
      message = "";
    }
    if (count < expectedCount) {
      this.throwError("missing argument" + message, _Logger.errors.MISSING_ARGUMENT, {
        count,
        expectedCount
      });
    }
    if (count > expectedCount) {
      this.throwError("too many arguments" + message, _Logger.errors.UNEXPECTED_ARGUMENT, {
        count,
        expectedCount
      });
    }
  }
  checkNew(target, kind) {
    if (target === Object || target == null) {
      this.throwError("missing new", _Logger.errors.MISSING_NEW, { name: kind.name });
    }
  }
  checkAbstract(target, kind) {
    if (target === kind) {
      this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", _Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: "new" });
    } else if (target === Object || target == null) {
      this.throwError("missing new", _Logger.errors.MISSING_NEW, { name: kind.name });
    }
  }
  static globalLogger() {
    if (!_globalLogger) {
      _globalLogger = new _Logger(version);
    }
    return _globalLogger;
  }
  static setCensorship(censorship, permanent) {
    if (!censorship && permanent) {
      this.globalLogger().throwError("cannot permanently disable censorship", _Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "setCensorship"
      });
    }
    if (_permanentCensorErrors) {
      if (!censorship) {
        return;
      }
      this.globalLogger().throwError("error censorship permanent", _Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "setCensorship"
      });
    }
    _censorErrors = !!censorship;
    _permanentCensorErrors = !!permanent;
  }
  static setLogLevel(logLevel) {
    const level = LogLevels[logLevel.toLowerCase()];
    if (level == null) {
      _Logger.globalLogger().warn("invalid log level - " + logLevel);
      return;
    }
    _logLevel = level;
  }
  static from(version9) {
    return new _Logger(version9);
  }
};
Logger.errors = ErrorCode;
Logger.levels = LogLevel;

// node_modules/@ethersproject/bytes/lib.esm/_version.js
var version2 = "bytes/5.7.0";

// node_modules/@ethersproject/bytes/lib.esm/index.js
var logger = new Logger(version2);
function isHexable(value) {
  return !!value.toHexString;
}
function addSlice(array) {
  if (array.slice) {
    return array;
  }
  array.slice = function() {
    const args = Array.prototype.slice.call(arguments);
    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
  };
  return array;
}
function isBytesLike(value) {
  return isHexString(value) && !(value.length % 2) || isBytes(value);
}
function isInteger(value) {
  return typeof value === "number" && value == value && value % 1 === 0;
}
function isBytes(value) {
  if (value == null) {
    return false;
  }
  if (value.constructor === Uint8Array) {
    return true;
  }
  if (typeof value === "string") {
    return false;
  }
  if (!isInteger(value.length) || value.length < 0) {
    return false;
  }
  for (let i4 = 0; i4 < value.length; i4++) {
    const v6 = value[i4];
    if (!isInteger(v6) || v6 < 0 || v6 >= 256) {
      return false;
    }
  }
  return true;
}
function arrayify(value, options) {
  if (!options) {
    options = {};
  }
  if (typeof value === "number") {
    logger.checkSafeUint53(value, "invalid arrayify value");
    const result = [];
    while (value) {
      result.unshift(value & 255);
      value = parseInt(String(value / 256));
    }
    if (result.length === 0) {
      result.push(0);
    }
    return addSlice(new Uint8Array(result));
  }
  if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (isHexable(value)) {
    value = value.toHexString();
  }
  if (isHexString(value)) {
    let hex = value.substring(2);
    if (hex.length % 2) {
      if (options.hexPad === "left") {
        hex = "0" + hex;
      } else if (options.hexPad === "right") {
        hex += "0";
      } else {
        logger.throwArgumentError("hex data is odd-length", "value", value);
      }
    }
    const result = [];
    for (let i4 = 0; i4 < hex.length; i4 += 2) {
      result.push(parseInt(hex.substring(i4, i4 + 2), 16));
    }
    return addSlice(new Uint8Array(result));
  }
  if (isBytes(value)) {
    return addSlice(new Uint8Array(value));
  }
  return logger.throwArgumentError("invalid arrayify value", "value", value);
}
function zeroPad(value, length) {
  value = arrayify(value);
  if (value.length > length) {
    logger.throwArgumentError("value out of range", "value", arguments[0]);
  }
  const result = new Uint8Array(length);
  result.set(value, length - value.length);
  return addSlice(result);
}
function isHexString(value, length) {
  if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
    return false;
  }
  if (length && value.length !== 2 + 2 * length) {
    return false;
  }
  return true;
}
var HexCharacters = "0123456789abcdef";
function hexlify(value, options) {
  if (!options) {
    options = {};
  }
  if (typeof value === "number") {
    logger.checkSafeUint53(value, "invalid hexlify value");
    let hex = "";
    while (value) {
      hex = HexCharacters[value & 15] + hex;
      value = Math.floor(value / 16);
    }
    if (hex.length) {
      if (hex.length % 2) {
        hex = "0" + hex;
      }
      return "0x" + hex;
    }
    return "0x00";
  }
  if (typeof value === "bigint") {
    value = value.toString(16);
    if (value.length % 2) {
      return "0x0" + value;
    }
    return "0x" + value;
  }
  if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (isHexable(value)) {
    return value.toHexString();
  }
  if (isHexString(value)) {
    if (value.length % 2) {
      if (options.hexPad === "left") {
        value = "0x0" + value.substring(2);
      } else if (options.hexPad === "right") {
        value += "0";
      } else {
        logger.throwArgumentError("hex data is odd-length", "value", value);
      }
    }
    return value.toLowerCase();
  }
  if (isBytes(value)) {
    let result = "0x";
    for (let i4 = 0; i4 < value.length; i4++) {
      let v6 = value[i4];
      result += HexCharacters[(v6 & 240) >> 4] + HexCharacters[v6 & 15];
    }
    return result;
  }
  return logger.throwArgumentError("invalid hexlify value", "value", value);
}
function hexDataLength(data) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    return null;
  }
  return (data.length - 2) / 2;
}
function hexDataSlice(data, offset, endOffset) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    logger.throwArgumentError("invalid hexData", "value", data);
  }
  offset = 2 + 2 * offset;
  if (endOffset != null) {
    return "0x" + data.substring(offset, 2 + 2 * endOffset);
  }
  return "0x" + data.substring(offset);
}
function hexZeroPad(value, length) {
  if (typeof value !== "string") {
    value = hexlify(value);
  } else if (!isHexString(value)) {
    logger.throwArgumentError("invalid hex string", "value", value);
  }
  if (value.length > 2 * length + 2) {
    logger.throwArgumentError("value out of range", "value", arguments[1]);
  }
  while (value.length < 2 * length + 2) {
    value = "0x0" + value.substring(2);
  }
  return value;
}
function splitSignature(signature2) {
  const result = {
    r: "0x",
    s: "0x",
    _vs: "0x",
    recoveryParam: 0,
    v: 0,
    yParityAndS: "0x",
    compact: "0x"
  };
  if (isBytesLike(signature2)) {
    let bytes = arrayify(signature2);
    if (bytes.length === 64) {
      result.v = 27 + (bytes[32] >> 7);
      bytes[32] &= 127;
      result.r = hexlify(bytes.slice(0, 32));
      result.s = hexlify(bytes.slice(32, 64));
    } else if (bytes.length === 65) {
      result.r = hexlify(bytes.slice(0, 32));
      result.s = hexlify(bytes.slice(32, 64));
      result.v = bytes[64];
    } else {
      logger.throwArgumentError("invalid signature string", "signature", signature2);
    }
    if (result.v < 27) {
      if (result.v === 0 || result.v === 1) {
        result.v += 27;
      } else {
        logger.throwArgumentError("signature invalid v byte", "signature", signature2);
      }
    }
    result.recoveryParam = 1 - result.v % 2;
    if (result.recoveryParam) {
      bytes[32] |= 128;
    }
    result._vs = hexlify(bytes.slice(32, 64));
  } else {
    result.r = signature2.r;
    result.s = signature2.s;
    result.v = signature2.v;
    result.recoveryParam = signature2.recoveryParam;
    result._vs = signature2._vs;
    if (result._vs != null) {
      const vs5 = zeroPad(arrayify(result._vs), 32);
      result._vs = hexlify(vs5);
      const recoveryParam = vs5[0] >= 128 ? 1 : 0;
      if (result.recoveryParam == null) {
        result.recoveryParam = recoveryParam;
      } else if (result.recoveryParam !== recoveryParam) {
        logger.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature2);
      }
      vs5[0] &= 127;
      const s2 = hexlify(vs5);
      if (result.s == null) {
        result.s = s2;
      } else if (result.s !== s2) {
        logger.throwArgumentError("signature v mismatch _vs", "signature", signature2);
      }
    }
    if (result.recoveryParam == null) {
      if (result.v == null) {
        logger.throwArgumentError("signature missing v and recoveryParam", "signature", signature2);
      } else if (result.v === 0 || result.v === 1) {
        result.recoveryParam = result.v;
      } else {
        result.recoveryParam = 1 - result.v % 2;
      }
    } else {
      if (result.v == null) {
        result.v = 27 + result.recoveryParam;
      } else {
        const recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;
        if (result.recoveryParam !== recId) {
          logger.throwArgumentError("signature recoveryParam mismatch v", "signature", signature2);
        }
      }
    }
    if (result.r == null || !isHexString(result.r)) {
      logger.throwArgumentError("signature missing or invalid r", "signature", signature2);
    } else {
      result.r = hexZeroPad(result.r, 32);
    }
    if (result.s == null || !isHexString(result.s)) {
      logger.throwArgumentError("signature missing or invalid s", "signature", signature2);
    } else {
      result.s = hexZeroPad(result.s, 32);
    }
    const vs4 = arrayify(result.s);
    if (vs4[0] >= 128) {
      logger.throwArgumentError("signature s out of range", "signature", signature2);
    }
    if (result.recoveryParam) {
      vs4[0] |= 128;
    }
    const _vs = hexlify(vs4);
    if (result._vs) {
      if (!isHexString(result._vs)) {
        logger.throwArgumentError("signature invalid _vs", "signature", signature2);
      }
      result._vs = hexZeroPad(result._vs, 32);
    }
    if (result._vs == null) {
      result._vs = _vs;
    } else if (result._vs !== _vs) {
      logger.throwArgumentError("signature _vs mismatch v and s", "signature", signature2);
    }
  }
  result.yParityAndS = result._vs;
  result.compact = result.r + result.yParityAndS.substring(2);
  return result;
}

// node_modules/@ethersproject/bignumber/lib.esm/bignumber.js
var import_bn = __toESM(require_bn());

// node_modules/@ethersproject/bignumber/lib.esm/_version.js
var version3 = "bignumber/5.7.0";

// node_modules/@ethersproject/bignumber/lib.esm/bignumber.js
var BN = import_bn.default.BN;
var logger2 = new Logger(version3);
var _constructorGuard = {};
var MAX_SAFE = 9007199254740991;
function isBigNumberish(value) {
  return value != null && (BigNumber.isBigNumber(value) || typeof value === "number" && value % 1 === 0 || typeof value === "string" && !!value.match(/^-?[0-9]+$/) || isHexString(value) || typeof value === "bigint" || isBytes(value));
}
var _warnedToStringRadix = false;
var BigNumber = class _BigNumber {
  constructor(constructorGuard, hex) {
    if (constructorGuard !== _constructorGuard) {
      logger2.throwError("cannot call constructor directly; use BigNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new (BigNumber)"
      });
    }
    this._hex = hex;
    this._isBigNumber = true;
    Object.freeze(this);
  }
  fromTwos(value) {
    return toBigNumber(toBN(this).fromTwos(value));
  }
  toTwos(value) {
    return toBigNumber(toBN(this).toTwos(value));
  }
  abs() {
    if (this._hex[0] === "-") {
      return _BigNumber.from(this._hex.substring(1));
    }
    return this;
  }
  add(other) {
    return toBigNumber(toBN(this).add(toBN(other)));
  }
  sub(other) {
    return toBigNumber(toBN(this).sub(toBN(other)));
  }
  div(other) {
    const o2 = _BigNumber.from(other);
    if (o2.isZero()) {
      throwFault("division-by-zero", "div");
    }
    return toBigNumber(toBN(this).div(toBN(other)));
  }
  mul(other) {
    return toBigNumber(toBN(this).mul(toBN(other)));
  }
  mod(other) {
    const value = toBN(other);
    if (value.isNeg()) {
      throwFault("division-by-zero", "mod");
    }
    return toBigNumber(toBN(this).umod(value));
  }
  pow(other) {
    const value = toBN(other);
    if (value.isNeg()) {
      throwFault("negative-power", "pow");
    }
    return toBigNumber(toBN(this).pow(value));
  }
  and(other) {
    const value = toBN(other);
    if (this.isNegative() || value.isNeg()) {
      throwFault("unbound-bitwise-result", "and");
    }
    return toBigNumber(toBN(this).and(value));
  }
  or(other) {
    const value = toBN(other);
    if (this.isNegative() || value.isNeg()) {
      throwFault("unbound-bitwise-result", "or");
    }
    return toBigNumber(toBN(this).or(value));
  }
  xor(other) {
    const value = toBN(other);
    if (this.isNegative() || value.isNeg()) {
      throwFault("unbound-bitwise-result", "xor");
    }
    return toBigNumber(toBN(this).xor(value));
  }
  mask(value) {
    if (this.isNegative() || value < 0) {
      throwFault("negative-width", "mask");
    }
    return toBigNumber(toBN(this).maskn(value));
  }
  shl(value) {
    if (this.isNegative() || value < 0) {
      throwFault("negative-width", "shl");
    }
    return toBigNumber(toBN(this).shln(value));
  }
  shr(value) {
    if (this.isNegative() || value < 0) {
      throwFault("negative-width", "shr");
    }
    return toBigNumber(toBN(this).shrn(value));
  }
  eq(other) {
    return toBN(this).eq(toBN(other));
  }
  lt(other) {
    return toBN(this).lt(toBN(other));
  }
  lte(other) {
    return toBN(this).lte(toBN(other));
  }
  gt(other) {
    return toBN(this).gt(toBN(other));
  }
  gte(other) {
    return toBN(this).gte(toBN(other));
  }
  isNegative() {
    return this._hex[0] === "-";
  }
  isZero() {
    return toBN(this).isZero();
  }
  toNumber() {
    try {
      return toBN(this).toNumber();
    } catch (error) {
      throwFault("overflow", "toNumber", this.toString());
    }
    return null;
  }
  toBigInt() {
    try {
      return BigInt(this.toString());
    } catch (e2) {
    }
    return logger2.throwError("this platform does not support BigInt", Logger.errors.UNSUPPORTED_OPERATION, {
      value: this.toString()
    });
  }
  toString() {
    if (arguments.length > 0) {
      if (arguments[0] === 10) {
        if (!_warnedToStringRadix) {
          _warnedToStringRadix = true;
          logger2.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
        }
      } else if (arguments[0] === 16) {
        logger2.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Logger.errors.UNEXPECTED_ARGUMENT, {});
      } else {
        logger2.throwError("BigNumber.toString does not accept parameters", Logger.errors.UNEXPECTED_ARGUMENT, {});
      }
    }
    return toBN(this).toString(10);
  }
  toHexString() {
    return this._hex;
  }
  toJSON(key2) {
    return { type: "BigNumber", hex: this.toHexString() };
  }
  static from(value) {
    if (value instanceof _BigNumber) {
      return value;
    }
    if (typeof value === "string") {
      if (value.match(/^-?0x[0-9a-f]+$/i)) {
        return new _BigNumber(_constructorGuard, toHex(value));
      }
      if (value.match(/^-?[0-9]+$/)) {
        return new _BigNumber(_constructorGuard, toHex(new BN(value)));
      }
      return logger2.throwArgumentError("invalid BigNumber string", "value", value);
    }
    if (typeof value === "number") {
      if (value % 1) {
        throwFault("underflow", "BigNumber.from", value);
      }
      if (value >= MAX_SAFE || value <= -MAX_SAFE) {
        throwFault("overflow", "BigNumber.from", value);
      }
      return _BigNumber.from(String(value));
    }
    const anyValue = value;
    if (typeof anyValue === "bigint") {
      return _BigNumber.from(anyValue.toString());
    }
    if (isBytes(anyValue)) {
      return _BigNumber.from(hexlify(anyValue));
    }
    if (anyValue) {
      if (anyValue.toHexString) {
        const hex = anyValue.toHexString();
        if (typeof hex === "string") {
          return _BigNumber.from(hex);
        }
      } else {
        let hex = anyValue._hex;
        if (hex == null && anyValue.type === "BigNumber") {
          hex = anyValue.hex;
        }
        if (typeof hex === "string") {
          if (isHexString(hex) || hex[0] === "-" && isHexString(hex.substring(1))) {
            return _BigNumber.from(hex);
          }
        }
      }
    }
    return logger2.throwArgumentError("invalid BigNumber value", "value", value);
  }
  static isBigNumber(value) {
    return !!(value && value._isBigNumber);
  }
};
function toHex(value) {
  if (typeof value !== "string") {
    return toHex(value.toString(16));
  }
  if (value[0] === "-") {
    value = value.substring(1);
    if (value[0] === "-") {
      logger2.throwArgumentError("invalid hex", "value", value);
    }
    value = toHex(value);
    if (value === "0x00") {
      return value;
    }
    return "-" + value;
  }
  if (value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (value === "0x") {
    return "0x00";
  }
  if (value.length % 2) {
    value = "0x0" + value.substring(2);
  }
  while (value.length > 4 && value.substring(0, 4) === "0x00") {
    value = "0x" + value.substring(4);
  }
  return value;
}
function toBigNumber(value) {
  return BigNumber.from(toHex(value));
}
function toBN(value) {
  const hex = BigNumber.from(value).toHexString();
  if (hex[0] === "-") {
    return new BN("-" + hex.substring(3), 16);
  }
  return new BN(hex.substring(2), 16);
}
function throwFault(fault, operation, value) {
  const params = { fault, operation };
  if (value != null) {
    params.value = value;
  }
  return logger2.throwError(fault, Logger.errors.NUMERIC_FAULT, params);
}
function _base36To16(value) {
  return new BN(value, 36).toString(16);
}

// node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js
var logger3 = new Logger(version3);
var _constructorGuard2 = {};
var Zero = BigNumber.from(0);
var NegativeOne = BigNumber.from(-1);
function throwFault2(message, fault, operation, value) {
  const params = { fault, operation };
  if (value !== void 0) {
    params.value = value;
  }
  return logger3.throwError(message, Logger.errors.NUMERIC_FAULT, params);
}
var zeros = "0";
while (zeros.length < 256) {
  zeros += zeros;
}
function getMultiplier(decimals) {
  if (typeof decimals !== "number") {
    try {
      decimals = BigNumber.from(decimals).toNumber();
    } catch (e2) {
    }
  }
  if (typeof decimals === "number" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {
    return "1" + zeros.substring(0, decimals);
  }
  return logger3.throwArgumentError("invalid decimal size", "decimals", decimals);
}
function formatFixed(value, decimals) {
  if (decimals == null) {
    decimals = 0;
  }
  const multiplier = getMultiplier(decimals);
  value = BigNumber.from(value);
  const negative = value.lt(Zero);
  if (negative) {
    value = value.mul(NegativeOne);
  }
  let fraction = value.mod(multiplier).toString();
  while (fraction.length < multiplier.length - 1) {
    fraction = "0" + fraction;
  }
  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  const whole = value.div(multiplier).toString();
  if (multiplier.length === 1) {
    value = whole;
  } else {
    value = whole + "." + fraction;
  }
  if (negative) {
    value = "-" + value;
  }
  return value;
}
function parseFixed(value, decimals) {
  if (decimals == null) {
    decimals = 0;
  }
  const multiplier = getMultiplier(decimals);
  if (typeof value !== "string" || !value.match(/^-?[0-9.]+$/)) {
    logger3.throwArgumentError("invalid decimal value", "value", value);
  }
  const negative = value.substring(0, 1) === "-";
  if (negative) {
    value = value.substring(1);
  }
  if (value === ".") {
    logger3.throwArgumentError("missing value", "value", value);
  }
  const comps = value.split(".");
  if (comps.length > 2) {
    logger3.throwArgumentError("too many decimal points", "value", value);
  }
  let whole = comps[0], fraction = comps[1];
  if (!whole) {
    whole = "0";
  }
  if (!fraction) {
    fraction = "0";
  }
  while (fraction[fraction.length - 1] === "0") {
    fraction = fraction.substring(0, fraction.length - 1);
  }
  if (fraction.length > multiplier.length - 1) {
    throwFault2("fractional component exceeds decimals", "underflow", "parseFixed");
  }
  if (fraction === "") {
    fraction = "0";
  }
  while (fraction.length < multiplier.length - 1) {
    fraction += "0";
  }
  const wholeValue = BigNumber.from(whole);
  const fractionValue = BigNumber.from(fraction);
  let wei = wholeValue.mul(multiplier).add(fractionValue);
  if (negative) {
    wei = wei.mul(NegativeOne);
  }
  return wei;
}
var FixedFormat = class _FixedFormat {
  constructor(constructorGuard, signed, width, decimals) {
    if (constructorGuard !== _constructorGuard2) {
      logger3.throwError("cannot use FixedFormat constructor; use FixedFormat.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new FixedFormat"
      });
    }
    this.signed = signed;
    this.width = width;
    this.decimals = decimals;
    this.name = (signed ? "" : "u") + "fixed" + String(width) + "x" + String(decimals);
    this._multiplier = getMultiplier(decimals);
    Object.freeze(this);
  }
  static from(value) {
    if (value instanceof _FixedFormat) {
      return value;
    }
    if (typeof value === "number") {
      value = `fixed128x${value}`;
    }
    let signed = true;
    let width = 128;
    let decimals = 18;
    if (typeof value === "string") {
      if (value === "fixed") {
      } else if (value === "ufixed") {
        signed = false;
      } else {
        const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
        if (!match) {
          logger3.throwArgumentError("invalid fixed format", "format", value);
        }
        signed = match[1] !== "u";
        width = parseInt(match[2]);
        decimals = parseInt(match[3]);
      }
    } else if (value) {
      const check = (key2, type, defaultValue) => {
        if (value[key2] == null) {
          return defaultValue;
        }
        if (typeof value[key2] !== type) {
          logger3.throwArgumentError("invalid fixed format (" + key2 + " not " + type + ")", "format." + key2, value[key2]);
        }
        return value[key2];
      };
      signed = check("signed", "boolean", signed);
      width = check("width", "number", width);
      decimals = check("decimals", "number", decimals);
    }
    if (width % 8) {
      logger3.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width);
    }
    if (decimals > 80) {
      logger3.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals);
    }
    return new _FixedFormat(_constructorGuard2, signed, width, decimals);
  }
};
var FixedNumber = class _FixedNumber {
  constructor(constructorGuard, hex, value, format) {
    if (constructorGuard !== _constructorGuard2) {
      logger3.throwError("cannot use FixedNumber constructor; use FixedNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new FixedFormat"
      });
    }
    this.format = format;
    this._hex = hex;
    this._value = value;
    this._isFixedNumber = true;
    Object.freeze(this);
  }
  _checkFormat(other) {
    if (this.format.name !== other.format.name) {
      logger3.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
    }
  }
  addUnsafe(other) {
    this._checkFormat(other);
    const a2 = parseFixed(this._value, this.format.decimals);
    const b3 = parseFixed(other._value, other.format.decimals);
    return _FixedNumber.fromValue(a2.add(b3), this.format.decimals, this.format);
  }
  subUnsafe(other) {
    this._checkFormat(other);
    const a2 = parseFixed(this._value, this.format.decimals);
    const b3 = parseFixed(other._value, other.format.decimals);
    return _FixedNumber.fromValue(a2.sub(b3), this.format.decimals, this.format);
  }
  mulUnsafe(other) {
    this._checkFormat(other);
    const a2 = parseFixed(this._value, this.format.decimals);
    const b3 = parseFixed(other._value, other.format.decimals);
    return _FixedNumber.fromValue(a2.mul(b3).div(this.format._multiplier), this.format.decimals, this.format);
  }
  divUnsafe(other) {
    this._checkFormat(other);
    const a2 = parseFixed(this._value, this.format.decimals);
    const b3 = parseFixed(other._value, other.format.decimals);
    return _FixedNumber.fromValue(a2.mul(this.format._multiplier).div(b3), this.format.decimals, this.format);
  }
  floor() {
    const comps = this.toString().split(".");
    if (comps.length === 1) {
      comps.push("0");
    }
    let result = _FixedNumber.from(comps[0], this.format);
    const hasFraction = !comps[1].match(/^(0*)$/);
    if (this.isNegative() && hasFraction) {
      result = result.subUnsafe(ONE.toFormat(result.format));
    }
    return result;
  }
  ceiling() {
    const comps = this.toString().split(".");
    if (comps.length === 1) {
      comps.push("0");
    }
    let result = _FixedNumber.from(comps[0], this.format);
    const hasFraction = !comps[1].match(/^(0*)$/);
    if (!this.isNegative() && hasFraction) {
      result = result.addUnsafe(ONE.toFormat(result.format));
    }
    return result;
  }
  // @TODO: Support other rounding algorithms
  round(decimals) {
    if (decimals == null) {
      decimals = 0;
    }
    const comps = this.toString().split(".");
    if (comps.length === 1) {
      comps.push("0");
    }
    if (decimals < 0 || decimals > 80 || decimals % 1) {
      logger3.throwArgumentError("invalid decimal count", "decimals", decimals);
    }
    if (comps[1].length <= decimals) {
      return this;
    }
    const factor = _FixedNumber.from("1" + zeros.substring(0, decimals), this.format);
    const bump = BUMP.toFormat(this.format);
    return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);
  }
  isZero() {
    return this._value === "0.0" || this._value === "0";
  }
  isNegative() {
    return this._value[0] === "-";
  }
  toString() {
    return this._value;
  }
  toHexString(width) {
    if (width == null) {
      return this._hex;
    }
    if (width % 8) {
      logger3.throwArgumentError("invalid byte width", "width", width);
    }
    const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();
    return hexZeroPad(hex, width / 8);
  }
  toUnsafeFloat() {
    return parseFloat(this.toString());
  }
  toFormat(format) {
    return _FixedNumber.fromString(this._value, format);
  }
  static fromValue(value, decimals, format) {
    if (format == null && decimals != null && !isBigNumberish(decimals)) {
      format = decimals;
      decimals = null;
    }
    if (decimals == null) {
      decimals = 0;
    }
    if (format == null) {
      format = "fixed";
    }
    return _FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));
  }
  static fromString(value, format) {
    if (format == null) {
      format = "fixed";
    }
    const fixedFormat = FixedFormat.from(format);
    const numeric = parseFixed(value, fixedFormat.decimals);
    if (!fixedFormat.signed && numeric.lt(Zero)) {
      throwFault2("unsigned value cannot be negative", "overflow", "value", value);
    }
    let hex = null;
    if (fixedFormat.signed) {
      hex = numeric.toTwos(fixedFormat.width).toHexString();
    } else {
      hex = numeric.toHexString();
      hex = hexZeroPad(hex, fixedFormat.width / 8);
    }
    const decimal = formatFixed(numeric, fixedFormat.decimals);
    return new _FixedNumber(_constructorGuard2, hex, decimal, fixedFormat);
  }
  static fromBytes(value, format) {
    if (format == null) {
      format = "fixed";
    }
    const fixedFormat = FixedFormat.from(format);
    if (arrayify(value).length > fixedFormat.width / 8) {
      throw new Error("overflow");
    }
    let numeric = BigNumber.from(value);
    if (fixedFormat.signed) {
      numeric = numeric.fromTwos(fixedFormat.width);
    }
    const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();
    const decimal = formatFixed(numeric, fixedFormat.decimals);
    return new _FixedNumber(_constructorGuard2, hex, decimal, fixedFormat);
  }
  static from(value, format) {
    if (typeof value === "string") {
      return _FixedNumber.fromString(value, format);
    }
    if (isBytes(value)) {
      return _FixedNumber.fromBytes(value, format);
    }
    try {
      return _FixedNumber.fromValue(value, 0, format);
    } catch (error) {
      if (error.code !== Logger.errors.INVALID_ARGUMENT) {
        throw error;
      }
    }
    return logger3.throwArgumentError("invalid FixedNumber value", "value", value);
  }
  static isFixedNumber(value) {
    return !!(value && value._isFixedNumber);
  }
};
var ONE = FixedNumber.from(1);
var BUMP = FixedNumber.from("0.5");

// node_modules/@ethersproject/keccak256/lib.esm/index.js
var import_js_sha3 = __toESM(require_sha3());
function keccak256(data) {
  return "0x" + import_js_sha3.default.keccak_256(arrayify(data));
}

// node_modules/@ethersproject/rlp/lib.esm/_version.js
var version4 = "rlp/5.7.0";

// node_modules/@ethersproject/rlp/lib.esm/index.js
var logger4 = new Logger(version4);

// node_modules/@ethersproject/address/lib.esm/_version.js
var version5 = "address/5.7.0";

// node_modules/@ethersproject/address/lib.esm/index.js
var logger5 = new Logger(version5);
function getChecksumAddress(address) {
  if (!isHexString(address, 20)) {
    logger5.throwArgumentError("invalid address", "address", address);
  }
  address = address.toLowerCase();
  const chars = address.substring(2).split("");
  const expanded = new Uint8Array(40);
  for (let i4 = 0; i4 < 40; i4++) {
    expanded[i4] = chars[i4].charCodeAt(0);
  }
  const hashed = arrayify(keccak256(expanded));
  for (let i4 = 0; i4 < 40; i4 += 2) {
    if (hashed[i4 >> 1] >> 4 >= 8) {
      chars[i4] = chars[i4].toUpperCase();
    }
    if ((hashed[i4 >> 1] & 15) >= 8) {
      chars[i4 + 1] = chars[i4 + 1].toUpperCase();
    }
  }
  return "0x" + chars.join("");
}
var MAX_SAFE_INTEGER = 9007199254740991;
function log10(x7) {
  if (Math.log10) {
    return Math.log10(x7);
  }
  return Math.log(x7) / Math.LN10;
}
var ibanLookup = {};
for (let i4 = 0; i4 < 10; i4++) {
  ibanLookup[String(i4)] = String(i4);
}
for (let i4 = 0; i4 < 26; i4++) {
  ibanLookup[String.fromCharCode(65 + i4)] = String(10 + i4);
}
var safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));
function ibanChecksum(address) {
  address = address.toUpperCase();
  address = address.substring(4) + address.substring(0, 2) + "00";
  let expanded = address.split("").map((c3) => {
    return ibanLookup[c3];
  }).join("");
  while (expanded.length >= safeDigits) {
    let block = expanded.substring(0, safeDigits);
    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
  }
  let checksum = String(98 - parseInt(expanded, 10) % 97);
  while (checksum.length < 2) {
    checksum = "0" + checksum;
  }
  return checksum;
}
function getAddress(address) {
  let result = null;
  if (typeof address !== "string") {
    logger5.throwArgumentError("invalid address", "address", address);
  }
  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
    if (address.substring(0, 2) !== "0x") {
      address = "0x" + address;
    }
    result = getChecksumAddress(address);
    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
      logger5.throwArgumentError("bad address checksum", "address", address);
    }
  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    if (address.substring(2, 4) !== ibanChecksum(address)) {
      logger5.throwArgumentError("bad icap checksum", "address", address);
    }
    result = _base36To16(address.substring(4));
    while (result.length < 40) {
      result = "0" + result;
    }
    result = getChecksumAddress("0x" + result);
  } else {
    logger5.throwArgumentError("invalid address", "address", address);
  }
  return result;
}

// node_modules/@ethersproject/constants/lib.esm/bignumbers.js
var NegativeOne2 = BigNumber.from(-1);
var Zero2 = BigNumber.from(0);
var One = BigNumber.from(1);
var Two = BigNumber.from(2);
var WeiPerEther = BigNumber.from("1000000000000000000");
var MaxUint256 = BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
var MinInt256 = BigNumber.from("-0x8000000000000000000000000000000000000000000000000000000000000000");
var MaxInt256 = BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

// node_modules/@ethersproject/properties/lib.esm/_version.js
var version6 = "properties/5.7.0";

// node_modules/@ethersproject/properties/lib.esm/index.js
var logger6 = new Logger(version6);
function defineReadOnly(object, name, value) {
  Object.defineProperty(object, name, {
    enumerable: true,
    value,
    writable: false
  });
}

// node_modules/@ethersproject/signing-key/lib.esm/elliptic.js
var import_bn2 = __toESM(require_bn());
var import_hash = __toESM(require_hash());
function createCommonjsModule(fn4, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function(path, base2) {
      return commonjsRequire(path, base2 === void 0 || base2 === null ? module.path : base2);
    }
  }, fn4(module, module.exports), module.exports;
}
function commonjsRequire() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var minimalisticAssert = assert;
function assert(val, msg) {
  if (!val)
    throw new Error(msg || "Assertion failed");
}
assert.equal = function assertEqual(l3, r2, msg) {
  if (l3 != r2)
    throw new Error(msg || "Assertion failed: " + l3 + " != " + r2);
};
var utils_1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var utils = exports;
  function toArray(msg, enc) {
    if (Array.isArray(msg))
      return msg.slice();
    if (!msg)
      return [];
    var res = [];
    if (typeof msg !== "string") {
      for (var i4 = 0; i4 < msg.length; i4++)
        res[i4] = msg[i4] | 0;
      return res;
    }
    if (enc === "hex") {
      msg = msg.replace(/[^a-z0-9]+/ig, "");
      if (msg.length % 2 !== 0)
        msg = "0" + msg;
      for (var i4 = 0; i4 < msg.length; i4 += 2)
        res.push(parseInt(msg[i4] + msg[i4 + 1], 16));
    } else {
      for (var i4 = 0; i4 < msg.length; i4++) {
        var c3 = msg.charCodeAt(i4);
        var hi4 = c3 >> 8;
        var lo5 = c3 & 255;
        if (hi4)
          res.push(hi4, lo5);
        else
          res.push(lo5);
      }
    }
    return res;
  }
  utils.toArray = toArray;
  function zero2(word) {
    if (word.length === 1)
      return "0" + word;
    else
      return word;
  }
  utils.zero2 = zero2;
  function toHex2(msg) {
    var res = "";
    for (var i4 = 0; i4 < msg.length; i4++)
      res += zero2(msg[i4].toString(16));
    return res;
  }
  utils.toHex = toHex2;
  utils.encode = function encode3(arr, enc) {
    if (enc === "hex")
      return toHex2(arr);
    else
      return arr;
  };
});
var utils_1$1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var utils = exports;
  utils.assert = minimalisticAssert;
  utils.toArray = utils_1.toArray;
  utils.zero2 = utils_1.zero2;
  utils.toHex = utils_1.toHex;
  utils.encode = utils_1.encode;
  function getNAF2(num, w3, bits) {
    var naf = new Array(Math.max(num.bitLength(), bits) + 1);
    naf.fill(0);
    var ws4 = 1 << w3 + 1;
    var k6 = num.clone();
    for (var i4 = 0; i4 < naf.length; i4++) {
      var z5;
      var mod = k6.andln(ws4 - 1);
      if (k6.isOdd()) {
        if (mod > (ws4 >> 1) - 1)
          z5 = (ws4 >> 1) - mod;
        else
          z5 = mod;
        k6.isubn(z5);
      } else {
        z5 = 0;
      }
      naf[i4] = z5;
      k6.iushrn(1);
    }
    return naf;
  }
  utils.getNAF = getNAF2;
  function getJSF2(k1, k22) {
    var jsf = [
      [],
      []
    ];
    k1 = k1.clone();
    k22 = k22.clone();
    var d1 = 0;
    var d22 = 0;
    var m8;
    while (k1.cmpn(-d1) > 0 || k22.cmpn(-d22) > 0) {
      var m14 = k1.andln(3) + d1 & 3;
      var m24 = k22.andln(3) + d22 & 3;
      if (m14 === 3)
        m14 = -1;
      if (m24 === 3)
        m24 = -1;
      var u1;
      if ((m14 & 1) === 0) {
        u1 = 0;
      } else {
        m8 = k1.andln(7) + d1 & 7;
        if ((m8 === 3 || m8 === 5) && m24 === 2)
          u1 = -m14;
        else
          u1 = m14;
      }
      jsf[0].push(u1);
      var u22;
      if ((m24 & 1) === 0) {
        u22 = 0;
      } else {
        m8 = k22.andln(7) + d22 & 7;
        if ((m8 === 3 || m8 === 5) && m14 === 2)
          u22 = -m24;
        else
          u22 = m24;
      }
      jsf[1].push(u22);
      if (2 * d1 === u1 + 1)
        d1 = 1 - d1;
      if (2 * d22 === u22 + 1)
        d22 = 1 - d22;
      k1.iushrn(1);
      k22.iushrn(1);
    }
    return jsf;
  }
  utils.getJSF = getJSF2;
  function cachedProperty(obj, name, computer) {
    var key2 = "_" + name;
    obj.prototype[name] = function cachedProperty2() {
      return this[key2] !== void 0 ? this[key2] : this[key2] = computer.call(this);
    };
  }
  utils.cachedProperty = cachedProperty;
  function parseBytes(bytes) {
    return typeof bytes === "string" ? utils.toArray(bytes, "hex") : bytes;
  }
  utils.parseBytes = parseBytes;
  function intFromLE(bytes) {
    return new import_bn2.default(bytes, "hex", "le");
  }
  utils.intFromLE = intFromLE;
});
var getNAF = utils_1$1.getNAF;
var getJSF = utils_1$1.getJSF;
var assert$1 = utils_1$1.assert;
function BaseCurve(type, conf) {
  this.type = type;
  this.p = new import_bn2.default(conf.p, 16);
  this.red = conf.prime ? import_bn2.default.red(conf.prime) : import_bn2.default.mont(this.p);
  this.zero = new import_bn2.default(0).toRed(this.red);
  this.one = new import_bn2.default(1).toRed(this.red);
  this.two = new import_bn2.default(2).toRed(this.red);
  this.n = conf.n && new import_bn2.default(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
  this._bitLength = this.n ? this.n.bitLength() : 0;
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
var base = BaseCurve;
BaseCurve.prototype.point = function point() {
  throw new Error("Not implemented");
};
BaseCurve.prototype.validate = function validate() {
  throw new Error("Not implemented");
};
BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p3, k6) {
  assert$1(p3.precomputed);
  var doubles = p3._getDoubles();
  var naf = getNAF(k6, 1, this._bitLength);
  var I3 = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
  I3 /= 3;
  var repr = [];
  var j5;
  var nafW;
  for (j5 = 0; j5 < naf.length; j5 += doubles.step) {
    nafW = 0;
    for (var l3 = j5 + doubles.step - 1; l3 >= j5; l3--)
      nafW = (nafW << 1) + naf[l3];
    repr.push(nafW);
  }
  var a2 = this.jpoint(null, null, null);
  var b3 = this.jpoint(null, null, null);
  for (var i4 = I3; i4 > 0; i4--) {
    for (j5 = 0; j5 < repr.length; j5++) {
      nafW = repr[j5];
      if (nafW === i4)
        b3 = b3.mixedAdd(doubles.points[j5]);
      else if (nafW === -i4)
        b3 = b3.mixedAdd(doubles.points[j5].neg());
    }
    a2 = a2.add(b3);
  }
  return a2.toP();
};
BaseCurve.prototype._wnafMul = function _wnafMul(p3, k6) {
  var w3 = 4;
  var nafPoints = p3._getNAFPoints(w3);
  w3 = nafPoints.wnd;
  var wnd = nafPoints.points;
  var naf = getNAF(k6, w3, this._bitLength);
  var acc = this.jpoint(null, null, null);
  for (var i4 = naf.length - 1; i4 >= 0; i4--) {
    for (var l3 = 0; i4 >= 0 && naf[i4] === 0; i4--)
      l3++;
    if (i4 >= 0)
      l3++;
    acc = acc.dblp(l3);
    if (i4 < 0)
      break;
    var z5 = naf[i4];
    assert$1(z5 !== 0);
    if (p3.type === "affine") {
      if (z5 > 0)
        acc = acc.mixedAdd(wnd[z5 - 1 >> 1]);
      else
        acc = acc.mixedAdd(wnd[-z5 - 1 >> 1].neg());
    } else {
      if (z5 > 0)
        acc = acc.add(wnd[z5 - 1 >> 1]);
      else
        acc = acc.add(wnd[-z5 - 1 >> 1].neg());
    }
  }
  return p3.type === "affine" ? acc.toP() : acc;
};
BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;
  var max = 0;
  var i4;
  var j5;
  var p3;
  for (i4 = 0; i4 < len; i4++) {
    p3 = points[i4];
    var nafPoints = p3._getNAFPoints(defW);
    wndWidth[i4] = nafPoints.wnd;
    wnd[i4] = nafPoints.points;
  }
  for (i4 = len - 1; i4 >= 1; i4 -= 2) {
    var a2 = i4 - 1;
    var b3 = i4;
    if (wndWidth[a2] !== 1 || wndWidth[b3] !== 1) {
      naf[a2] = getNAF(coeffs[a2], wndWidth[a2], this._bitLength);
      naf[b3] = getNAF(coeffs[b3], wndWidth[b3], this._bitLength);
      max = Math.max(naf[a2].length, max);
      max = Math.max(naf[b3].length, max);
      continue;
    }
    var comb = [
      points[a2],
      /* 1 */
      null,
      /* 3 */
      null,
      /* 5 */
      points[b3]
      /* 7 */
    ];
    if (points[a2].y.cmp(points[b3].y) === 0) {
      comb[1] = points[a2].add(points[b3]);
      comb[2] = points[a2].toJ().mixedAdd(points[b3].neg());
    } else if (points[a2].y.cmp(points[b3].y.redNeg()) === 0) {
      comb[1] = points[a2].toJ().mixedAdd(points[b3]);
      comb[2] = points[a2].add(points[b3].neg());
    } else {
      comb[1] = points[a2].toJ().mixedAdd(points[b3]);
      comb[2] = points[a2].toJ().mixedAdd(points[b3].neg());
    }
    var index = [
      -3,
      /* -1 -1 */
      -1,
      /* -1 0 */
      -5,
      /* -1 1 */
      -7,
      /* 0 -1 */
      0,
      /* 0 0 */
      7,
      /* 0 1 */
      5,
      /* 1 -1 */
      1,
      /* 1 0 */
      3
      /* 1 1 */
    ];
    var jsf = getJSF(coeffs[a2], coeffs[b3]);
    max = Math.max(jsf[0].length, max);
    naf[a2] = new Array(max);
    naf[b3] = new Array(max);
    for (j5 = 0; j5 < max; j5++) {
      var ja2 = jsf[0][j5] | 0;
      var jb = jsf[1][j5] | 0;
      naf[a2][j5] = index[(ja2 + 1) * 3 + (jb + 1)];
      naf[b3][j5] = 0;
      wnd[a2] = comb;
    }
  }
  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i4 = max; i4 >= 0; i4--) {
    var k6 = 0;
    while (i4 >= 0) {
      var zero = true;
      for (j5 = 0; j5 < len; j5++) {
        tmp[j5] = naf[j5][i4] | 0;
        if (tmp[j5] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k6++;
      i4--;
    }
    if (i4 >= 0)
      k6++;
    acc = acc.dblp(k6);
    if (i4 < 0)
      break;
    for (j5 = 0; j5 < len; j5++) {
      var z5 = tmp[j5];
      p3;
      if (z5 === 0)
        continue;
      else if (z5 > 0)
        p3 = wnd[j5][z5 - 1 >> 1];
      else if (z5 < 0)
        p3 = wnd[j5][-z5 - 1 >> 1].neg();
      if (p3.type === "affine")
        acc = acc.mixedAdd(p3);
      else
        acc = acc.add(p3);
    }
  }
  for (i4 = 0; i4 < len; i4++)
    wnd[i4] = null;
  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};
function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;
BasePoint.prototype.eq = function eq() {
  throw new Error("Not implemented");
};
BasePoint.prototype.validate = function validate2() {
  return this.curve.validate(this);
};
BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils_1$1.toArray(bytes, enc);
  var len = this.p.byteLength();
  if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
    if (bytes[0] === 6)
      assert$1(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 7)
      assert$1(bytes[bytes.length - 1] % 2 === 1);
    var res = this.point(
      bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len)
    );
    return res;
  } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
  }
  throw new Error("Unknown point format");
};
BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};
BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x7 = this.getX().toArray("be", len);
  if (compact)
    return [this.getY().isEven() ? 2 : 3].concat(x7);
  return [4].concat(x7, this.getY().toArray("be", len));
};
BasePoint.prototype.encode = function encode2(enc, compact) {
  return utils_1$1.encode(this._encode(compact), enc);
};
BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;
  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;
  return this;
};
BasePoint.prototype._hasDoubles = function _hasDoubles(k6) {
  if (!this.precomputed)
    return false;
  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;
  return doubles.points.length >= Math.ceil((k6.bitLength() + 1) / doubles.step);
};
BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;
  var doubles = [this];
  var acc = this;
  for (var i4 = 0; i4 < power; i4 += step) {
    for (var j5 = 0; j5 < step; j5++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step,
    points: doubles
  };
};
BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;
  var res = [this];
  var max = (1 << wnd) - 1;
  var dbl3 = max === 1 ? null : this.dbl();
  for (var i4 = 1; i4 < max; i4++)
    res[i4] = res[i4 - 1].add(dbl3);
  return {
    wnd,
    points: res
  };
};
BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};
BasePoint.prototype.dblp = function dblp(k6) {
  var r2 = this;
  for (var i4 = 0; i4 < k6; i4++)
    r2 = r2.dbl();
  return r2;
};
var inherits_browser = createCommonjsModule(function(module) {
  if (typeof Object.create === "function") {
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
      }
    };
  } else {
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
    };
  }
});
var assert$2 = utils_1$1.assert;
function ShortCurve(conf) {
  base.call(this, "short", conf);
  this.a = new import_bn2.default(conf.a, 16).toRed(this.red);
  this.b = new import_bn2.default(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();
  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits_browser(ShortCurve, base);
var short_1 = ShortCurve;
ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new import_bn2.default(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new import_bn2.default(conf.lambda, 16);
  } else {
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new import_bn2.default(vec.a, 16),
        b: new import_bn2.default(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }
  return {
    beta,
    lambda,
    basis
  };
};
ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  var red = num === this.p ? this.red : import_bn2.default.mont(num);
  var tinv = new import_bn2.default(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();
  var s2 = new import_bn2.default(3).toRed(red).redNeg().redSqrt().redMul(tinv);
  var l1 = ntinv.redAdd(s2).fromRed();
  var l22 = ntinv.redSub(s2).fromRed();
  return [l1, l22];
};
ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
  var u3 = lambda;
  var v6 = this.n.clone();
  var x1 = new import_bn2.default(1);
  var y1 = new import_bn2.default(0);
  var x22 = new import_bn2.default(0);
  var y22 = new import_bn2.default(1);
  var a0;
  var b0;
  var a1;
  var b1;
  var a2;
  var b22;
  var prevR;
  var i4 = 0;
  var r2;
  var x7;
  while (u3.cmpn(0) !== 0) {
    var q3 = v6.div(u3);
    r2 = v6.sub(q3.mul(u3));
    x7 = x22.sub(q3.mul(x1));
    var y5 = y22.sub(q3.mul(y1));
    if (!a1 && r2.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r2.neg();
      b1 = x7;
    } else if (a1 && ++i4 === 2) {
      break;
    }
    prevR = r2;
    v6 = u3;
    u3 = r2;
    x22 = x1;
    x1 = x7;
    y22 = y1;
    y1 = y5;
  }
  a2 = r2.neg();
  b22 = x7;
  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b22.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b22 = b0;
  }
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b22 = b22.neg();
  }
  return [
    { a: a1, b: b1 },
    { a: a2, b: b22 }
  ];
};
ShortCurve.prototype._endoSplit = function _endoSplit(k6) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v22 = basis[1];
  var c1 = v22.b.mul(k6).divRound(this.n);
  var c22 = v1.b.neg().mul(k6).divRound(this.n);
  var p1 = c1.mul(v1.a);
  var p22 = c22.mul(v22.a);
  var q1 = c1.mul(v1.b);
  var q22 = c22.mul(v22.b);
  var k1 = k6.sub(p1).sub(p22);
  var k22 = q1.add(q22).neg();
  return { k1, k2: k22 };
};
ShortCurve.prototype.pointFromX = function pointFromX(x7, odd) {
  x7 = new import_bn2.default(x7, 16);
  if (!x7.red)
    x7 = x7.toRed(this.red);
  var y22 = x7.redSqr().redMul(x7).redIAdd(x7.redMul(this.a)).redIAdd(this.b);
  var y5 = y22.redSqrt();
  if (y5.redSqr().redSub(y22).cmp(this.zero) !== 0)
    throw new Error("invalid point");
  var isOdd = y5.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y5 = y5.redNeg();
  return this.point(x7, y5);
};
ShortCurve.prototype.validate = function validate3(point3) {
  if (point3.inf)
    return true;
  var x7 = point3.x;
  var y5 = point3.y;
  var ax = this.a.redMul(x7);
  var rhs = x7.redSqr().redMul(x7).redIAdd(ax).redIAdd(this.b);
  return y5.redSqr().redISub(rhs).cmpn(0) === 0;
};
ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i4 = 0; i4 < points.length; i4++) {
    var split = this._endoSplit(coeffs[i4]);
    var p3 = points[i4];
    var beta = p3._getBeta();
    if (split.k1.negative) {
      split.k1.ineg();
      p3 = p3.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }
    npoints[i4 * 2] = p3;
    npoints[i4 * 2 + 1] = beta;
    ncoeffs[i4 * 2] = split.k1;
    ncoeffs[i4 * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i4 * 2, jacobianResult);
  for (var j5 = 0; j5 < i4 * 2; j5++) {
    npoints[j5] = null;
    ncoeffs[j5] = null;
  }
  return res;
};
function Point(curve, x7, y5, isRed) {
  base.BasePoint.call(this, curve, "affine");
  if (x7 === null && y5 === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new import_bn2.default(x7, 16);
    this.y = new import_bn2.default(y5, 16);
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits_browser(Point, base.BasePoint);
ShortCurve.prototype.point = function point2(x7, y5, isRed) {
  return new Point(this, x7, y5, isRed);
};
ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};
Point.prototype._getBeta = function _getBeta2() {
  if (!this.curve.endo)
    return;
  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;
  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p3) {
      return curve.point(p3.x.redMul(curve.endo.beta), p3.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};
Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [this.x, this.y];
  return [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }];
};
Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === "string")
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;
  function obj2point(obj2) {
    return curve.point(obj2[0], obj2[1], red);
  }
  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [res].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [res].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};
Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return "<EC Point Infinity>";
  return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
};
Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};
Point.prototype.add = function add(p3) {
  if (this.inf)
    return p3;
  if (p3.inf)
    return this;
  if (this.eq(p3))
    return this.dbl();
  if (this.neg().eq(p3))
    return this.curve.point(null, null);
  if (this.x.cmp(p3.x) === 0)
    return this.curve.point(null, null);
  var c3 = this.y.redSub(p3.y);
  if (c3.cmpn(0) !== 0)
    c3 = c3.redMul(this.x.redSub(p3.x).redInvm());
  var nx = c3.redSqr().redISub(this.x).redISub(p3.x);
  var ny = c3.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);
  var a2 = this.curve.a;
  var x22 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c3 = x22.redAdd(x22).redIAdd(x22).redIAdd(a2).redMul(dyinv);
  var nx = c3.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c3.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point.prototype.getX = function getX() {
  return this.x.fromRed();
};
Point.prototype.getY = function getY() {
  return this.y.fromRed();
};
Point.prototype.mul = function mul(k6) {
  k6 = new import_bn2.default(k6, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k6))
    return this.curve._fixedNafMul(this, k6);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([this], [k6]);
  else
    return this.curve._wnafMul(this, k6);
};
Point.prototype.mulAdd = function mulAdd(k1, p22, k22) {
  var points = [this, p22];
  var coeffs = [k1, k22];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};
Point.prototype.jmulAdd = function jmulAdd(k1, p22, k22) {
  var points = [this, p22];
  var coeffs = [k1, k22];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};
Point.prototype.eq = function eq2(p3) {
  return this === p3 || this.inf === p3.inf && (this.inf || this.x.cmp(p3.x) === 0 && this.y.cmp(p3.y) === 0);
};
Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;
  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p3) {
      return p3.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};
Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);
  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};
function JPoint(curve, x7, y5, z5) {
  base.BasePoint.call(this, curve, "jacobian");
  if (x7 === null && y5 === null && z5 === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new import_bn2.default(0);
  } else {
    this.x = new import_bn2.default(x7, 16);
    this.y = new import_bn2.default(y5, 16);
    this.z = new import_bn2.default(z5, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);
  this.zOne = this.z === this.curve.one;
}
inherits_browser(JPoint, base.BasePoint);
ShortCurve.prototype.jpoint = function jpoint(x7, y5, z5) {
  return new JPoint(this, x7, y5, z5);
};
JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);
  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);
  return this.curve.point(ax, ay);
};
JPoint.prototype.neg = function neg2() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
JPoint.prototype.add = function add2(p3) {
  if (this.isInfinity())
    return p3;
  if (p3.isInfinity())
    return this;
  var pz2 = p3.z.redSqr();
  var z22 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u22 = p3.x.redMul(z22);
  var s1 = this.y.redMul(pz2.redMul(p3.z));
  var s2 = p3.y.redMul(z22.redMul(this.z));
  var h6 = u1.redSub(u22);
  var r2 = s1.redSub(s2);
  if (h6.cmpn(0) === 0) {
    if (r2.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }
  var h22 = h6.redSqr();
  var h32 = h22.redMul(h6);
  var v6 = u1.redMul(h22);
  var nx = r2.redSqr().redIAdd(h32).redISub(v6).redISub(v6);
  var ny = r2.redMul(v6.redISub(nx)).redISub(s1.redMul(h32));
  var nz = this.z.redMul(p3.z).redMul(h6);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mixedAdd = function mixedAdd(p3) {
  if (this.isInfinity())
    return p3.toJ();
  if (p3.isInfinity())
    return this;
  var z22 = this.z.redSqr();
  var u1 = this.x;
  var u22 = p3.x.redMul(z22);
  var s1 = this.y;
  var s2 = p3.y.redMul(z22).redMul(this.z);
  var h6 = u1.redSub(u22);
  var r2 = s1.redSub(s2);
  if (h6.cmpn(0) === 0) {
    if (r2.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }
  var h22 = h6.redSqr();
  var h32 = h22.redMul(h6);
  var v6 = u1.redMul(h22);
  var nx = r2.redSqr().redIAdd(h32).redISub(v6).redISub(v6);
  var ny = r2.redMul(v6.redISub(nx)).redISub(s1.redMul(h32));
  var nz = this.z.redMul(h6);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.dblp = function dblp2(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();
  var i4;
  if (this.curve.zeroA || this.curve.threeA) {
    var r2 = this;
    for (i4 = 0; i4 < pow; i4++)
      r2 = r2.dbl();
    return r2;
  }
  var a2 = this.curve.a;
  var tinv = this.curve.tinv;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jyd = jy.redAdd(jy);
  for (i4 = 0; i4 < pow; i4++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c3 = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a2.redMul(jz4));
    var t1 = jx.redMul(jyd2);
    var nx = c3.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c3.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i4 + 1 < pow)
      jz4 = jz4.redMul(jyd4);
    jx = nx;
    jz = nz;
    jyd = dny;
  }
  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};
JPoint.prototype.dbl = function dbl2() {
  if (this.isInfinity())
    return this;
  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};
JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  if (this.zOne) {
    var xx = this.x.redSqr();
    var yy = this.y.redSqr();
    var yyyy = yy.redSqr();
    var s2 = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s2 = s2.redIAdd(s2);
    var m = xx.redAdd(xx).redIAdd(xx);
    var t2 = m.redSqr().redISub(s2).redISub(s2);
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    nx = t2;
    ny = m.redMul(s2.redISub(t2)).redISub(yyyy8);
    nz = this.y.redAdd(this.y);
  } else {
    var a2 = this.x.redSqr();
    var b3 = this.y.redSqr();
    var c3 = b3.redSqr();
    var d4 = this.x.redAdd(b3).redSqr().redISub(a2).redISub(c3);
    d4 = d4.redIAdd(d4);
    var e2 = a2.redAdd(a2).redIAdd(a2);
    var f5 = e2.redSqr();
    var c8 = c3.redIAdd(c3);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);
    nx = f5.redISub(d4).redISub(d4);
    ny = e2.redMul(d4.redISub(nx)).redISub(c8);
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  if (this.zOne) {
    var xx = this.x.redSqr();
    var yy = this.y.redSqr();
    var yyyy = yy.redSqr();
    var s2 = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s2 = s2.redIAdd(s2);
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    var t2 = m.redSqr().redISub(s2).redISub(s2);
    nx = t2;
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s2.redISub(t2)).redISub(yyyy8);
    nz = this.y.redAdd(this.y);
  } else {
    var delta = this.z.redSqr();
    var gamma = this.y.redSqr();
    var beta = this.x.redMul(gamma);
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._dbl = function _dbl() {
  var a2 = this.curve.a;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();
  var c3 = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a2.redMul(jz4));
  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c3.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);
  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c3.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);
  var xx = this.x.redSqr();
  var yy = this.y.redSqr();
  var zz = this.z.redSqr();
  var yyyy = yy.redSqr();
  var m = xx.redAdd(xx).redIAdd(xx);
  var mm = m.redSqr();
  var e2 = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e2 = e2.redIAdd(e2);
  e2 = e2.redAdd(e2).redIAdd(e2);
  e2 = e2.redISub(mm);
  var ee2 = e2.redSqr();
  var t2 = yyyy.redIAdd(yyyy);
  t2 = t2.redIAdd(t2);
  t2 = t2.redIAdd(t2);
  t2 = t2.redIAdd(t2);
  var u3 = m.redIAdd(e2).redSqr().redISub(mm).redISub(ee2).redISub(t2);
  var yyu4 = yy.redMul(u3);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee2).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  var ny = this.y.redMul(u3.redMul(t2.redISub(u3)).redISub(e2.redMul(ee2)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  var nz = this.z.redAdd(e2).redSqr().redISub(zz).redISub(ee2);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mul = function mul2(k6, kbase) {
  k6 = new import_bn2.default(k6, kbase);
  return this.curve._wnafMul(this, k6);
};
JPoint.prototype.eq = function eq3(p3) {
  if (p3.type === "affine")
    return this.eq(p3.toJ());
  if (this === p3)
    return true;
  var z22 = this.z.redSqr();
  var pz2 = p3.z.redSqr();
  if (this.x.redMul(pz2).redISub(p3.x.redMul(z22)).cmpn(0) !== 0)
    return false;
  var z32 = z22.redMul(this.z);
  var pz3 = pz2.redMul(p3.z);
  return this.y.redMul(pz3).redISub(p3.y.redMul(z32)).cmpn(0) === 0;
};
JPoint.prototype.eqXToP = function eqXToP(x7) {
  var zs4 = this.z.redSqr();
  var rx = x7.toRed(this.curve.red).redMul(zs4);
  if (this.x.cmp(rx) === 0)
    return true;
  var xc = x7.clone();
  var t2 = this.curve.redN.redMul(zs4);
  for (; ; ) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;
    rx.redIAdd(t2);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};
JPoint.prototype.inspect = function inspect2() {
  if (this.isInfinity())
    return "<EC JPoint Infinity>";
  return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
};
JPoint.prototype.isInfinity = function isInfinity2() {
  return this.z.cmpn(0) === 0;
};
var curve_1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var curve = exports;
  curve.base = base;
  curve.short = short_1;
  curve.mont = /*RicMoo:ethers:require(./mont)*/
  null;
  curve.edwards = /*RicMoo:ethers:require(./edwards)*/
  null;
});
var curves_1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var curves = exports;
  var assert2 = utils_1$1.assert;
  function PresetCurve(options) {
    if (options.type === "short")
      this.curve = new curve_1.short(options);
    else if (options.type === "edwards")
      this.curve = new curve_1.edwards(options);
    else
      this.curve = new curve_1.mont(options);
    this.g = this.curve.g;
    this.n = this.curve.n;
    this.hash = options.hash;
    assert2(this.g.validate(), "Invalid curve");
    assert2(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  curves.PresetCurve = PresetCurve;
  function defineCurve(name, options) {
    Object.defineProperty(curves, name, {
      configurable: true,
      enumerable: true,
      get: function() {
        var curve = new PresetCurve(options);
        Object.defineProperty(curves, name, {
          configurable: true,
          enumerable: true,
          value: curve
        });
        return curve;
      }
    });
  }
  defineCurve("p192", {
    type: "short",
    prime: "p192",
    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
    hash: import_hash.default.sha256,
    gRed: false,
    g: [
      "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
      "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
    ]
  });
  defineCurve("p224", {
    type: "short",
    prime: "p224",
    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
    hash: import_hash.default.sha256,
    gRed: false,
    g: [
      "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
      "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
    ]
  });
  defineCurve("p256", {
    type: "short",
    prime: null,
    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
    hash: import_hash.default.sha256,
    gRed: false,
    g: [
      "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
      "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
    ]
  });
  defineCurve("p384", {
    type: "short",
    prime: null,
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
    hash: import_hash.default.sha384,
    gRed: false,
    g: [
      "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
      "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
    ]
  });
  defineCurve("p521", {
    type: "short",
    prime: null,
    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
    hash: import_hash.default.sha512,
    gRed: false,
    g: [
      "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
      "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
    ]
  });
  defineCurve("curve25519", {
    type: "mont",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "76d06",
    b: "1",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: import_hash.default.sha256,
    gRed: false,
    g: [
      "9"
    ]
  });
  defineCurve("ed25519", {
    type: "edwards",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "-1",
    c: "1",
    // -121665 * (121666^(-1)) (mod P)
    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: import_hash.default.sha256,
    gRed: false,
    g: [
      "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
      // 4/5
      "6666666666666666666666666666666666666666666666666666666666666658"
    ]
  });
  var pre;
  try {
    pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/
    null.crash();
  } catch (e2) {
    pre = void 0;
  }
  defineCurve("secp256k1", {
    type: "short",
    prime: "k256",
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
    a: "0",
    b: "7",
    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
    h: "1",
    hash: import_hash.default.sha256,
    // Precomputed endomorphism
    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
    basis: [
      {
        a: "3086d221a7d46bcde86c90e49284eb15",
        b: "-e4437ed6010e88286f547fa90abfe4c3"
      },
      {
        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
        b: "3086d221a7d46bcde86c90e49284eb15"
      }
    ],
    gRed: false,
    g: [
      "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
      "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
      pre
    ]
  });
});
function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;
  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;
  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;
  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || "hex");
  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || "hex");
  var pers = utils_1.toArray(options.pers, options.persEnc || "hex");
  minimalisticAssert(
    entropy.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  );
  this._init(entropy, nonce, pers);
}
var hmacDrbg = HmacDRBG;
HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);
  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i4 = 0; i4 < this.V.length; i4++) {
    this.K[i4] = 0;
    this.V[i4] = 1;
  }
  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 281474976710656;
};
HmacDRBG.prototype._hmac = function hmac() {
  return new import_hash.default.hmac(this.hash, this.K);
};
HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac().update(this.V).update([0]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;
  this.K = this._hmac().update(this.V).update([1]).update(seed).digest();
  this.V = this._hmac().update(this.V).digest();
};
HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add3, addEnc) {
  if (typeof entropyEnc !== "string") {
    addEnc = add3;
    add3 = entropyEnc;
    entropyEnc = null;
  }
  entropy = utils_1.toArray(entropy, entropyEnc);
  add3 = utils_1.toArray(add3, addEnc);
  minimalisticAssert(
    entropy.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  );
  this._update(entropy.concat(add3 || []));
  this._reseed = 1;
};
HmacDRBG.prototype.generate = function generate(len, enc, add3, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error("Reseed is required");
  if (typeof enc !== "string") {
    addEnc = add3;
    add3 = enc;
    enc = null;
  }
  if (add3) {
    add3 = utils_1.toArray(add3, addEnc || "hex");
    this._update(add3);
  }
  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }
  var res = temp.slice(0, len);
  this._update(add3);
  this._reseed++;
  return utils_1.encode(res, enc);
};
var assert$3 = utils_1$1.assert;
function KeyPair(ec3, options) {
  this.ec = ec3;
  this.priv = null;
  this.pub = null;
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
var key = KeyPair;
KeyPair.fromPublic = function fromPublic(ec3, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(ec3, {
    pub,
    pubEnc: enc
  });
};
KeyPair.fromPrivate = function fromPrivate(ec3, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;
  return new KeyPair(ec3, {
    priv,
    privEnc: enc
  });
};
KeyPair.prototype.validate = function validate4() {
  var pub = this.getPublic();
  if (pub.isInfinity())
    return { result: false, reason: "Invalid public key" };
  if (!pub.validate())
    return { result: false, reason: "Public key is not a point" };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: "Public key * N != O" };
  return { result: true, reason: null };
};
KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  if (typeof compact === "string") {
    enc = compact;
    compact = null;
  }
  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);
  if (!enc)
    return this.pub;
  return this.pub.encode(enc, compact);
};
KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === "hex")
    return this.priv.toString(16, 2);
  else
    return this.priv;
};
KeyPair.prototype._importPrivate = function _importPrivate(key2, enc) {
  this.priv = new import_bn2.default(key2, enc || 16);
  this.priv = this.priv.umod(this.ec.curve.n);
};
KeyPair.prototype._importPublic = function _importPublic(key2, enc) {
  if (key2.x || key2.y) {
    if (this.ec.curve.type === "mont") {
      assert$3(key2.x, "Need x coordinate");
    } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") {
      assert$3(key2.x && key2.y, "Need both x and y coordinate");
    }
    this.pub = this.ec.curve.point(key2.x, key2.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key2, enc);
};
KeyPair.prototype.derive = function derive(pub) {
  if (!pub.validate()) {
    assert$3(pub.validate(), "public point not validated");
  }
  return pub.mul(this.priv).getX();
};
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};
KeyPair.prototype.verify = function verify(msg, signature2) {
  return this.ec.verify(msg, signature2, this);
};
KeyPair.prototype.inspect = function inspect3() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var assert$4 = utils_1$1.assert;
function Signature(options, enc) {
  if (options instanceof Signature)
    return options;
  if (this._importDER(options, enc))
    return;
  assert$4(options.r && options.s, "Signature without r or s");
  this.r = new import_bn2.default(options.r, 16);
  this.s = new import_bn2.default(options.s, 16);
  if (options.recoveryParam === void 0)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
var signature = Signature;
function Position() {
  this.place = 0;
}
function getLength(buf, p3) {
  var initial = buf[p3.place++];
  if (!(initial & 128)) {
    return initial;
  }
  var octetLen = initial & 15;
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }
  var val = 0;
  for (var i4 = 0, off = p3.place; i4 < octetLen; i4++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }
  if (val <= 127) {
    return false;
  }
  p3.place = off;
  return val;
}
function rmPadding(buf) {
  var i4 = 0;
  var len = buf.length - 1;
  while (!buf[i4] && !(buf[i4 + 1] & 128) && i4 < len) {
    i4++;
  }
  if (i4 === 0) {
    return buf;
  }
  return buf.slice(i4);
}
Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils_1$1.toArray(data, enc);
  var p3 = new Position();
  if (data[p3.place++] !== 48) {
    return false;
  }
  var len = getLength(data, p3);
  if (len === false) {
    return false;
  }
  if (len + p3.place !== data.length) {
    return false;
  }
  if (data[p3.place++] !== 2) {
    return false;
  }
  var rlen = getLength(data, p3);
  if (rlen === false) {
    return false;
  }
  var r2 = data.slice(p3.place, rlen + p3.place);
  p3.place += rlen;
  if (data[p3.place++] !== 2) {
    return false;
  }
  var slen = getLength(data, p3);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p3.place) {
    return false;
  }
  var s2 = data.slice(p3.place, slen + p3.place);
  if (r2[0] === 0) {
    if (r2[1] & 128) {
      r2 = r2.slice(1);
    } else {
      return false;
    }
  }
  if (s2[0] === 0) {
    if (s2[1] & 128) {
      s2 = s2.slice(1);
    } else {
      return false;
    }
  }
  this.r = new import_bn2.default(r2);
  this.s = new import_bn2.default(s2);
  this.recoveryParam = null;
  return true;
};
function constructLength(arr, len) {
  if (len < 128) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 128);
  while (--octets) {
    arr.push(len >>> (octets << 3) & 255);
  }
  arr.push(len);
}
Signature.prototype.toDER = function toDER(enc) {
  var r2 = this.r.toArray();
  var s2 = this.s.toArray();
  if (r2[0] & 128)
    r2 = [0].concat(r2);
  if (s2[0] & 128)
    s2 = [0].concat(s2);
  r2 = rmPadding(r2);
  s2 = rmPadding(s2);
  while (!s2[0] && !(s2[1] & 128)) {
    s2 = s2.slice(1);
  }
  var arr = [2];
  constructLength(arr, r2.length);
  arr = arr.concat(r2);
  arr.push(2);
  constructLength(arr, s2.length);
  var backHalf = arr.concat(s2);
  var res = [48];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils_1$1.encode(res, enc);
};
var rand = (
  /*RicMoo:ethers:require(brorand)*/
  function() {
    throw new Error("unsupported");
  }
);
var assert$5 = utils_1$1.assert;
function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);
  if (typeof options === "string") {
    assert$5(
      Object.prototype.hasOwnProperty.call(curves_1, options),
      "Unknown curve " + options
    );
    options = curves_1[options];
  }
  if (options instanceof curves_1.PresetCurve)
    options = { curve: options };
  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);
  this.hash = options.hash || options.curve.hash;
}
var ec = EC;
EC.prototype.keyPair = function keyPair(options) {
  return new key(this, options);
};
EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return key.fromPrivate(this, priv, enc);
};
EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return key.fromPublic(this, pub, enc);
};
EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};
  var drbg = new hmacDrbg({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || "utf8",
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || "utf8",
    nonce: this.n.toArray()
  });
  var bytes = this.n.byteLength();
  var ns22 = this.n.sub(new import_bn2.default(2));
  for (; ; ) {
    var priv = new import_bn2.default(drbg.generate(bytes));
    if (priv.cmp(ns22) > 0)
      continue;
    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};
EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};
EC.prototype.sign = function sign2(msg, key2, enc, options) {
  if (typeof enc === "object") {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};
  key2 = this.keyFromPrivate(key2, enc);
  msg = this._truncateToN(new import_bn2.default(msg, 16));
  var bytes = this.n.byteLength();
  var bkey = key2.getPrivate().toArray("be", bytes);
  var nonce = msg.toArray("be", bytes);
  var drbg = new hmacDrbg({
    hash: this.hash,
    entropy: bkey,
    nonce,
    pers: options.pers,
    persEnc: options.persEnc || "utf8"
  });
  var ns1 = this.n.sub(new import_bn2.default(1));
  for (var iter = 0; ; iter++) {
    var k6 = options.k ? options.k(iter) : new import_bn2.default(drbg.generate(this.n.byteLength()));
    k6 = this._truncateToN(k6, true);
    if (k6.cmpn(1) <= 0 || k6.cmp(ns1) >= 0)
      continue;
    var kp = this.g.mul(k6);
    if (kp.isInfinity())
      continue;
    var kpX = kp.getX();
    var r2 = kpX.umod(this.n);
    if (r2.cmpn(0) === 0)
      continue;
    var s2 = k6.invm(this.n).mul(r2.mul(key2.getPrivate()).iadd(msg));
    s2 = s2.umod(this.n);
    if (s2.cmpn(0) === 0)
      continue;
    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r2) !== 0 ? 2 : 0);
    if (options.canonical && s2.cmp(this.nh) > 0) {
      s2 = this.n.sub(s2);
      recoveryParam ^= 1;
    }
    return new signature({ r: r2, s: s2, recoveryParam });
  }
};
EC.prototype.verify = function verify2(msg, signature$1, key2, enc) {
  msg = this._truncateToN(new import_bn2.default(msg, 16));
  key2 = this.keyFromPublic(key2, enc);
  signature$1 = new signature(signature$1, "hex");
  var r2 = signature$1.r;
  var s2 = signature$1.s;
  if (r2.cmpn(1) < 0 || r2.cmp(this.n) >= 0)
    return false;
  if (s2.cmpn(1) < 0 || s2.cmp(this.n) >= 0)
    return false;
  var sinv = s2.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u22 = sinv.mul(r2).umod(this.n);
  var p3;
  if (!this.curve._maxwellTrick) {
    p3 = this.g.mulAdd(u1, key2.getPublic(), u22);
    if (p3.isInfinity())
      return false;
    return p3.getX().umod(this.n).cmp(r2) === 0;
  }
  p3 = this.g.jmulAdd(u1, key2.getPublic(), u22);
  if (p3.isInfinity())
    return false;
  return p3.eqXToP(r2);
};
EC.prototype.recoverPubKey = function(msg, signature$1, j5, enc) {
  assert$5((3 & j5) === j5, "The recovery param is more than two bits");
  signature$1 = new signature(signature$1, enc);
  var n2 = this.n;
  var e2 = new import_bn2.default(msg);
  var r2 = signature$1.r;
  var s2 = signature$1.s;
  var isYOdd = j5 & 1;
  var isSecondKey = j5 >> 1;
  if (r2.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error("Unable to find sencond key candinate");
  if (isSecondKey)
    r2 = this.curve.pointFromX(r2.add(this.curve.n), isYOdd);
  else
    r2 = this.curve.pointFromX(r2, isYOdd);
  var rInv = signature$1.r.invm(n2);
  var s1 = n2.sub(e2).mul(rInv).umod(n2);
  var s22 = s2.mul(rInv).umod(n2);
  return this.g.mulAdd(s1, r2, s22);
};
EC.prototype.getKeyRecoveryParam = function(e2, signature$1, Q6, enc) {
  signature$1 = new signature(signature$1, enc);
  if (signature$1.recoveryParam !== null)
    return signature$1.recoveryParam;
  for (var i4 = 0; i4 < 4; i4++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e2, signature$1, i4);
    } catch (e3) {
      continue;
    }
    if (Qprime.eq(Q6))
      return i4;
  }
  throw new Error("Unable to find valid recovery factor");
};
var elliptic_1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var elliptic = exports;
  elliptic.version = /*RicMoo:ethers*/
  { version: "6.5.4" }.version;
  elliptic.utils = utils_1$1;
  elliptic.rand = /*RicMoo:ethers:require(brorand)*/
  function() {
    throw new Error("unsupported");
  };
  elliptic.curve = curve_1;
  elliptic.curves = curves_1;
  elliptic.ec = ec;
  elliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/
  null;
});
var EC$1 = elliptic_1.ec;

// node_modules/@ethersproject/signing-key/lib.esm/_version.js
var version7 = "signing-key/5.7.0";

// node_modules/@ethersproject/signing-key/lib.esm/index.js
var logger7 = new Logger(version7);
var _curve = null;
function getCurve() {
  if (!_curve) {
    _curve = new EC$1("secp256k1");
  }
  return _curve;
}
var SigningKey = class {
  constructor(privateKey) {
    defineReadOnly(this, "curve", "secp256k1");
    defineReadOnly(this, "privateKey", hexlify(privateKey));
    if (hexDataLength(this.privateKey) !== 32) {
      logger7.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
    }
    const keyPair2 = getCurve().keyFromPrivate(arrayify(this.privateKey));
    defineReadOnly(this, "publicKey", "0x" + keyPair2.getPublic(false, "hex"));
    defineReadOnly(this, "compressedPublicKey", "0x" + keyPair2.getPublic(true, "hex"));
    defineReadOnly(this, "_isSigningKey", true);
  }
  _addPoint(other) {
    const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));
    const p1 = getCurve().keyFromPublic(arrayify(other));
    return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
  }
  signDigest(digest) {
    const keyPair2 = getCurve().keyFromPrivate(arrayify(this.privateKey));
    const digestBytes = arrayify(digest);
    if (digestBytes.length !== 32) {
      logger7.throwArgumentError("bad digest length", "digest", digest);
    }
    const signature2 = keyPair2.sign(digestBytes, { canonical: true });
    return splitSignature({
      recoveryParam: signature2.recoveryParam,
      r: hexZeroPad("0x" + signature2.r.toString(16), 32),
      s: hexZeroPad("0x" + signature2.s.toString(16), 32)
    });
  }
  computeSharedSecret(otherKey) {
    const keyPair2 = getCurve().keyFromPrivate(arrayify(this.privateKey));
    const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));
    return hexZeroPad("0x" + keyPair2.derive(otherKeyPair.getPublic()).toString(16), 32);
  }
  static isSigningKey(value) {
    return !!(value && value._isSigningKey);
  }
};
function recoverPublicKey(digest, signature2) {
  const sig = splitSignature(signature2);
  const rs3 = { r: arrayify(sig.r), s: arrayify(sig.s) };
  return "0x" + getCurve().recoverPubKey(arrayify(digest), rs3, sig.recoveryParam).encode("hex", false);
}
function computePublicKey(key2, compressed) {
  const bytes = arrayify(key2);
  if (bytes.length === 32) {
    const signingKey = new SigningKey(bytes);
    if (compressed) {
      return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
    }
    return signingKey.publicKey;
  } else if (bytes.length === 33) {
    if (compressed) {
      return hexlify(bytes);
    }
    return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
  } else if (bytes.length === 65) {
    if (!compressed) {
      return hexlify(bytes);
    }
    return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
  }
  return logger7.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}

// node_modules/@ethersproject/transactions/lib.esm/_version.js
var version8 = "transactions/5.7.0";

// node_modules/@ethersproject/transactions/lib.esm/index.js
var logger8 = new Logger(version8);
var TransactionTypes;
(function(TransactionTypes2) {
  TransactionTypes2[TransactionTypes2["legacy"] = 0] = "legacy";
  TransactionTypes2[TransactionTypes2["eip2930"] = 1] = "eip2930";
  TransactionTypes2[TransactionTypes2["eip1559"] = 2] = "eip1559";
})(TransactionTypes || (TransactionTypes = {}));
function computeAddress(key2) {
  const publicKey = computePublicKey(key2);
  return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));
}
function recoverAddress(digest, signature2) {
  return computeAddress(recoverPublicKey(arrayify(digest), signature2));
}

// node_modules/@walletconnect/utils/node_modules/@walletconnect/relay-auth/dist/index.es.js
var import_time2 = __toESM(require_cjs());
function En2(t2) {
  return t2 instanceof Uint8Array || ArrayBuffer.isView(t2) && t2.constructor.name === "Uint8Array";
}
function fe2(t2, ...e2) {
  if (!En2(t2)) throw new Error("Uint8Array expected");
  if (e2.length > 0 && !e2.includes(t2.length)) throw new Error("Uint8Array expected of length " + e2 + ", got length=" + t2.length);
}
function De2(t2, e2 = true) {
  if (t2.destroyed) throw new Error("Hash instance has been destroyed");
  if (e2 && t2.finished) throw new Error("Hash#digest() has already been called");
}
function gn2(t2, e2) {
  fe2(t2);
  const n2 = e2.outputLen;
  if (t2.length < n2) throw new Error("digestInto() expects output buffer of length at least " + n2);
}
var it2 = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
var _t2 = (t2) => new DataView(t2.buffer, t2.byteOffset, t2.byteLength);
function yn2(t2) {
  if (typeof t2 != "string") throw new Error("utf8ToBytes expected string, got " + typeof t2);
  return new Uint8Array(new TextEncoder().encode(t2));
}
function de2(t2) {
  return typeof t2 == "string" && (t2 = yn2(t2)), fe2(t2), t2;
}
var xn2 = class {
  clone() {
    return this._cloneInto();
  }
};
function Bn2(t2) {
  const e2 = (r2) => t2().update(de2(r2)).digest(), n2 = t2();
  return e2.outputLen = n2.outputLen, e2.blockLen = n2.blockLen, e2.create = () => t2(), e2;
}
function he2(t2 = 32) {
  if (it2 && typeof it2.getRandomValues == "function") return it2.getRandomValues(new Uint8Array(t2));
  if (it2 && typeof it2.randomBytes == "function") return it2.randomBytes(t2);
  throw new Error("crypto.getRandomValues must be defined");
}
function Cn2(t2, e2, n2, r2) {
  if (typeof t2.setBigUint64 == "function") return t2.setBigUint64(e2, n2, r2);
  const o2 = BigInt(32), s2 = BigInt(4294967295), a2 = Number(n2 >> o2 & s2), u3 = Number(n2 & s2), i4 = r2 ? 4 : 0, D3 = r2 ? 0 : 4;
  t2.setUint32(e2 + i4, a2, r2), t2.setUint32(e2 + D3, u3, r2);
}
var An2 = class extends xn2 {
  constructor(e2, n2, r2, o2) {
    super(), this.blockLen = e2, this.outputLen = n2, this.padOffset = r2, this.isLE = o2, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e2), this.view = _t2(this.buffer);
  }
  update(e2) {
    De2(this);
    const { view: n2, buffer: r2, blockLen: o2 } = this;
    e2 = de2(e2);
    const s2 = e2.length;
    for (let a2 = 0; a2 < s2; ) {
      const u3 = Math.min(o2 - this.pos, s2 - a2);
      if (u3 === o2) {
        const i4 = _t2(e2);
        for (; o2 <= s2 - a2; a2 += o2) this.process(i4, a2);
        continue;
      }
      r2.set(e2.subarray(a2, a2 + u3), this.pos), this.pos += u3, a2 += u3, this.pos === o2 && (this.process(n2, 0), this.pos = 0);
    }
    return this.length += e2.length, this.roundClean(), this;
  }
  digestInto(e2) {
    De2(this), gn2(e2, this), this.finished = true;
    const { buffer: n2, view: r2, blockLen: o2, isLE: s2 } = this;
    let { pos: a2 } = this;
    n2[a2++] = 128, this.buffer.subarray(a2).fill(0), this.padOffset > o2 - a2 && (this.process(r2, 0), a2 = 0);
    for (let l3 = a2; l3 < o2; l3++) n2[l3] = 0;
    Cn2(r2, o2 - 8, BigInt(this.length * 8), s2), this.process(r2, 0);
    const u3 = _t2(e2), i4 = this.outputLen;
    if (i4 % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const D3 = i4 / 4, c3 = this.get();
    if (D3 > c3.length) throw new Error("_sha2: outputLen bigger than state");
    for (let l3 = 0; l3 < D3; l3++) u3.setUint32(4 * l3, c3[l3], s2);
  }
  digest() {
    const { buffer: e2, outputLen: n2 } = this;
    this.digestInto(e2);
    const r2 = e2.slice(0, n2);
    return this.destroy(), r2;
  }
  _cloneInto(e2) {
    e2 || (e2 = new this.constructor()), e2.set(...this.get());
    const { blockLen: n2, buffer: r2, length: o2, finished: s2, destroyed: a2, pos: u3 } = this;
    return e2.length = o2, e2.pos = u3, e2.finished = s2, e2.destroyed = a2, o2 % n2 && e2.buffer.set(r2), e2;
  }
};
var wt2 = BigInt(2 ** 32 - 1);
var St2 = BigInt(32);
function le2(t2, e2 = false) {
  return e2 ? { h: Number(t2 & wt2), l: Number(t2 >> St2 & wt2) } : { h: Number(t2 >> St2 & wt2) | 0, l: Number(t2 & wt2) | 0 };
}
function mn2(t2, e2 = false) {
  let n2 = new Uint32Array(t2.length), r2 = new Uint32Array(t2.length);
  for (let o2 = 0; o2 < t2.length; o2++) {
    const { h: s2, l: a2 } = le2(t2[o2], e2);
    [n2[o2], r2[o2]] = [s2, a2];
  }
  return [n2, r2];
}
var _n2 = (t2, e2) => BigInt(t2 >>> 0) << St2 | BigInt(e2 >>> 0);
var Sn2 = (t2, e2, n2) => t2 >>> n2;
var vn2 = (t2, e2, n2) => t2 << 32 - n2 | e2 >>> n2;
var In2 = (t2, e2, n2) => t2 >>> n2 | e2 << 32 - n2;
var Un2 = (t2, e2, n2) => t2 << 32 - n2 | e2 >>> n2;
var Tn2 = (t2, e2, n2) => t2 << 64 - n2 | e2 >>> n2 - 32;
var Fn2 = (t2, e2, n2) => t2 >>> n2 - 32 | e2 << 64 - n2;
var Nn2 = (t2, e2) => e2;
var Ln2 = (t2, e2) => t2;
var On2 = (t2, e2, n2) => t2 << n2 | e2 >>> 32 - n2;
var Hn2 = (t2, e2, n2) => e2 << n2 | t2 >>> 32 - n2;
var zn2 = (t2, e2, n2) => e2 << n2 - 32 | t2 >>> 64 - n2;
var Mn2 = (t2, e2, n2) => t2 << n2 - 32 | e2 >>> 64 - n2;
function qn2(t2, e2, n2, r2) {
  const o2 = (e2 >>> 0) + (r2 >>> 0);
  return { h: t2 + n2 + (o2 / 2 ** 32 | 0) | 0, l: o2 | 0 };
}
var $n2 = (t2, e2, n2) => (t2 >>> 0) + (e2 >>> 0) + (n2 >>> 0);
var kn2 = (t2, e2, n2, r2) => e2 + n2 + r2 + (t2 / 2 ** 32 | 0) | 0;
var Rn2 = (t2, e2, n2, r2) => (t2 >>> 0) + (e2 >>> 0) + (n2 >>> 0) + (r2 >>> 0);
var jn2 = (t2, e2, n2, r2, o2) => e2 + n2 + r2 + o2 + (t2 / 2 ** 32 | 0) | 0;
var Zn2 = (t2, e2, n2, r2, o2) => (t2 >>> 0) + (e2 >>> 0) + (n2 >>> 0) + (r2 >>> 0) + (o2 >>> 0);
var Gn2 = (t2, e2, n2, r2, o2, s2) => e2 + n2 + r2 + o2 + s2 + (t2 / 2 ** 32 | 0) | 0;
var x3 = { fromBig: le2, split: mn2, toBig: _n2, shrSH: Sn2, shrSL: vn2, rotrSH: In2, rotrSL: Un2, rotrBH: Tn2, rotrBL: Fn2, rotr32H: Nn2, rotr32L: Ln2, rotlSH: On2, rotlSL: Hn2, rotlBH: zn2, rotlBL: Mn2, add: qn2, add3L: $n2, add3H: kn2, add4L: Rn2, add4H: jn2, add5H: Gn2, add5L: Zn2 };
var [Vn2, Yn2] = (() => x3.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t2) => BigInt(t2))))();
var P3 = new Uint32Array(80);
var Q2 = new Uint32Array(80);
var Jn2 = class extends An2 {
  constructor() {
    super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: e2, Al: n2, Bh: r2, Bl: o2, Ch: s2, Cl: a2, Dh: u3, Dl: i4, Eh: D3, El: c3, Fh: l3, Fl: p3, Gh: w3, Gl: h6, Hh: g3, Hl: S3 } = this;
    return [e2, n2, r2, o2, s2, a2, u3, i4, D3, c3, l3, p3, w3, h6, g3, S3];
  }
  set(e2, n2, r2, o2, s2, a2, u3, i4, D3, c3, l3, p3, w3, h6, g3, S3) {
    this.Ah = e2 | 0, this.Al = n2 | 0, this.Bh = r2 | 0, this.Bl = o2 | 0, this.Ch = s2 | 0, this.Cl = a2 | 0, this.Dh = u3 | 0, this.Dl = i4 | 0, this.Eh = D3 | 0, this.El = c3 | 0, this.Fh = l3 | 0, this.Fl = p3 | 0, this.Gh = w3 | 0, this.Gl = h6 | 0, this.Hh = g3 | 0, this.Hl = S3 | 0;
  }
  process(e2, n2) {
    for (let d4 = 0; d4 < 16; d4++, n2 += 4) P3[d4] = e2.getUint32(n2), Q2[d4] = e2.getUint32(n2 += 4);
    for (let d4 = 16; d4 < 80; d4++) {
      const m = P3[d4 - 15] | 0, F3 = Q2[d4 - 15] | 0, q3 = x3.rotrSH(m, F3, 1) ^ x3.rotrSH(m, F3, 8) ^ x3.shrSH(m, F3, 7), z5 = x3.rotrSL(m, F3, 1) ^ x3.rotrSL(m, F3, 8) ^ x3.shrSL(m, F3, 7), I3 = P3[d4 - 2] | 0, O2 = Q2[d4 - 2] | 0, ot4 = x3.rotrSH(I3, O2, 19) ^ x3.rotrBH(I3, O2, 61) ^ x3.shrSH(I3, O2, 6), tt4 = x3.rotrSL(I3, O2, 19) ^ x3.rotrBL(I3, O2, 61) ^ x3.shrSL(I3, O2, 6), st3 = x3.add4L(z5, tt4, Q2[d4 - 7], Q2[d4 - 16]), at4 = x3.add4H(st3, q3, ot4, P3[d4 - 7], P3[d4 - 16]);
      P3[d4] = at4 | 0, Q2[d4] = st3 | 0;
    }
    let { Ah: r2, Al: o2, Bh: s2, Bl: a2, Ch: u3, Cl: i4, Dh: D3, Dl: c3, Eh: l3, El: p3, Fh: w3, Fl: h6, Gh: g3, Gl: S3, Hh: v6, Hl: L3 } = this;
    for (let d4 = 0; d4 < 80; d4++) {
      const m = x3.rotrSH(l3, p3, 14) ^ x3.rotrSH(l3, p3, 18) ^ x3.rotrBH(l3, p3, 41), F3 = x3.rotrSL(l3, p3, 14) ^ x3.rotrSL(l3, p3, 18) ^ x3.rotrBL(l3, p3, 41), q3 = l3 & w3 ^ ~l3 & g3, z5 = p3 & h6 ^ ~p3 & S3, I3 = x3.add5L(L3, F3, z5, Yn2[d4], Q2[d4]), O2 = x3.add5H(I3, v6, m, q3, Vn2[d4], P3[d4]), ot4 = I3 | 0, tt4 = x3.rotrSH(r2, o2, 28) ^ x3.rotrBH(r2, o2, 34) ^ x3.rotrBH(r2, o2, 39), st3 = x3.rotrSL(r2, o2, 28) ^ x3.rotrBL(r2, o2, 34) ^ x3.rotrBL(r2, o2, 39), at4 = r2 & s2 ^ r2 & u3 ^ s2 & u3, Ct5 = o2 & a2 ^ o2 & i4 ^ a2 & i4;
      v6 = g3 | 0, L3 = S3 | 0, g3 = w3 | 0, S3 = h6 | 0, w3 = l3 | 0, h6 = p3 | 0, { h: l3, l: p3 } = x3.add(D3 | 0, c3 | 0, O2 | 0, ot4 | 0), D3 = u3 | 0, c3 = i4 | 0, u3 = s2 | 0, i4 = a2 | 0, s2 = r2 | 0, a2 = o2 | 0;
      const At4 = x3.add3L(ot4, st3, Ct5);
      r2 = x3.add3H(At4, O2, tt4, at4), o2 = At4 | 0;
    }
    ({ h: r2, l: o2 } = x3.add(this.Ah | 0, this.Al | 0, r2 | 0, o2 | 0)), { h: s2, l: a2 } = x3.add(this.Bh | 0, this.Bl | 0, s2 | 0, a2 | 0), { h: u3, l: i4 } = x3.add(this.Ch | 0, this.Cl | 0, u3 | 0, i4 | 0), { h: D3, l: c3 } = x3.add(this.Dh | 0, this.Dl | 0, D3 | 0, c3 | 0), { h: l3, l: p3 } = x3.add(this.Eh | 0, this.El | 0, l3 | 0, p3 | 0), { h: w3, l: h6 } = x3.add(this.Fh | 0, this.Fl | 0, w3 | 0, h6 | 0), { h: g3, l: S3 } = x3.add(this.Gh | 0, this.Gl | 0, g3 | 0, S3 | 0), { h: v6, l: L3 } = x3.add(this.Hh | 0, this.Hl | 0, v6 | 0, L3 | 0), this.set(r2, o2, s2, a2, u3, i4, D3, c3, l3, p3, w3, h6, g3, S3, v6, L3);
  }
  roundClean() {
    P3.fill(0), Q2.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var Kn2 = Bn2(() => new Jn2());
var vt2 = BigInt(0);
var be2 = BigInt(1);
var Wn2 = BigInt(2);
function It2(t2) {
  return t2 instanceof Uint8Array || ArrayBuffer.isView(t2) && t2.constructor.name === "Uint8Array";
}
function Ut2(t2) {
  if (!It2(t2)) throw new Error("Uint8Array expected");
}
function Tt2(t2, e2) {
  if (typeof e2 != "boolean") throw new Error(t2 + " boolean expected, got " + e2);
}
var Xn2 = Array.from({ length: 256 }, (t2, e2) => e2.toString(16).padStart(2, "0"));
function Ft2(t2) {
  Ut2(t2);
  let e2 = "";
  for (let n2 = 0; n2 < t2.length; n2++) e2 += Xn2[t2[n2]];
  return e2;
}
function pe2(t2) {
  if (typeof t2 != "string") throw new Error("hex string expected, got " + typeof t2);
  return t2 === "" ? vt2 : BigInt("0x" + t2);
}
var K2 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function we2(t2) {
  if (t2 >= K2._0 && t2 <= K2._9) return t2 - K2._0;
  if (t2 >= K2.A && t2 <= K2.F) return t2 - (K2.A - 10);
  if (t2 >= K2.a && t2 <= K2.f) return t2 - (K2.a - 10);
}
function Ee2(t2) {
  if (typeof t2 != "string") throw new Error("hex string expected, got " + typeof t2);
  const e2 = t2.length, n2 = e2 / 2;
  if (e2 % 2) throw new Error("hex string expected, got unpadded hex of length " + e2);
  const r2 = new Uint8Array(n2);
  for (let o2 = 0, s2 = 0; o2 < n2; o2++, s2 += 2) {
    const a2 = we2(t2.charCodeAt(s2)), u3 = we2(t2.charCodeAt(s2 + 1));
    if (a2 === void 0 || u3 === void 0) {
      const i4 = t2[s2] + t2[s2 + 1];
      throw new Error('hex string expected, got non-hex character "' + i4 + '" at index ' + s2);
    }
    r2[o2] = a2 * 16 + u3;
  }
  return r2;
}
function Pn2(t2) {
  return pe2(Ft2(t2));
}
function Et2(t2) {
  return Ut2(t2), pe2(Ft2(Uint8Array.from(t2).reverse()));
}
function ge2(t2, e2) {
  return Ee2(t2.toString(16).padStart(e2 * 2, "0"));
}
function Nt2(t2, e2) {
  return ge2(t2, e2).reverse();
}
function W2(t2, e2, n2) {
  let r2;
  if (typeof e2 == "string") try {
    r2 = Ee2(e2);
  } catch (s2) {
    throw new Error(t2 + " must be hex string or Uint8Array, cause: " + s2);
  }
  else if (It2(e2)) r2 = Uint8Array.from(e2);
  else throw new Error(t2 + " must be hex string or Uint8Array");
  const o2 = r2.length;
  if (typeof n2 == "number" && o2 !== n2) throw new Error(t2 + " of length " + n2 + " expected, got " + o2);
  return r2;
}
function ye2(...t2) {
  let e2 = 0;
  for (let r2 = 0; r2 < t2.length; r2++) {
    const o2 = t2[r2];
    Ut2(o2), e2 += o2.length;
  }
  const n2 = new Uint8Array(e2);
  for (let r2 = 0, o2 = 0; r2 < t2.length; r2++) {
    const s2 = t2[r2];
    n2.set(s2, o2), o2 += s2.length;
  }
  return n2;
}
var Lt2 = (t2) => typeof t2 == "bigint" && vt2 <= t2;
function Qn2(t2, e2, n2) {
  return Lt2(t2) && Lt2(e2) && Lt2(n2) && e2 <= t2 && t2 < n2;
}
function ft2(t2, e2, n2, r2) {
  if (!Qn2(e2, n2, r2)) throw new Error("expected valid " + t2 + ": " + n2 + " <= n < " + r2 + ", got " + e2);
}
function tr2(t2) {
  let e2;
  for (e2 = 0; t2 > vt2; t2 >>= be2, e2 += 1) ;
  return e2;
}
var er2 = (t2) => (Wn2 << BigInt(t2 - 1)) - be2;
var nr2 = { bigint: (t2) => typeof t2 == "bigint", function: (t2) => typeof t2 == "function", boolean: (t2) => typeof t2 == "boolean", string: (t2) => typeof t2 == "string", stringOrUint8Array: (t2) => typeof t2 == "string" || It2(t2), isSafeInteger: (t2) => Number.isSafeInteger(t2), array: (t2) => Array.isArray(t2), field: (t2, e2) => e2.Fp.isValid(t2), hash: (t2) => typeof t2 == "function" && Number.isSafeInteger(t2.outputLen) };
function Ot2(t2, e2, n2 = {}) {
  const r2 = (o2, s2, a2) => {
    const u3 = nr2[s2];
    if (typeof u3 != "function") throw new Error("invalid validator function");
    const i4 = t2[o2];
    if (!(a2 && i4 === void 0) && !u3(i4, t2)) throw new Error("param " + String(o2) + " is invalid. Expected " + s2 + ", got " + i4);
  };
  for (const [o2, s2] of Object.entries(e2)) r2(o2, s2, false);
  for (const [o2, s2] of Object.entries(n2)) r2(o2, s2, true);
  return t2;
}
function xe2(t2) {
  const e2 = /* @__PURE__ */ new WeakMap();
  return (n2, ...r2) => {
    const o2 = e2.get(n2);
    if (o2 !== void 0) return o2;
    const s2 = t2(n2, ...r2);
    return e2.set(n2, s2), s2;
  };
}
var M3 = BigInt(0);
var N2 = BigInt(1);
var nt2 = BigInt(2);
var rr2 = BigInt(3);
var Ht2 = BigInt(4);
var Be2 = BigInt(5);
var Ce2 = BigInt(8);
function H2(t2, e2) {
  const n2 = t2 % e2;
  return n2 >= M3 ? n2 : e2 + n2;
}
function or2(t2, e2, n2) {
  if (e2 < M3) throw new Error("invalid exponent, negatives unsupported");
  if (n2 <= M3) throw new Error("invalid modulus");
  if (n2 === N2) return M3;
  let r2 = N2;
  for (; e2 > M3; ) e2 & N2 && (r2 = r2 * t2 % n2), t2 = t2 * t2 % n2, e2 >>= N2;
  return r2;
}
function J2(t2, e2, n2) {
  let r2 = t2;
  for (; e2-- > M3; ) r2 *= r2, r2 %= n2;
  return r2;
}
function Ae2(t2, e2) {
  if (t2 === M3) throw new Error("invert: expected non-zero number");
  if (e2 <= M3) throw new Error("invert: expected positive modulus, got " + e2);
  let n2 = H2(t2, e2), r2 = e2, o2 = M3, s2 = N2;
  for (; n2 !== M3; ) {
    const u3 = r2 / n2, i4 = r2 % n2, D3 = o2 - s2 * u3;
    r2 = n2, n2 = i4, o2 = s2, s2 = D3;
  }
  if (r2 !== N2) throw new Error("invert: does not exist");
  return H2(o2, e2);
}
function sr2(t2) {
  const e2 = (t2 - N2) / nt2;
  let n2, r2, o2;
  for (n2 = t2 - N2, r2 = 0; n2 % nt2 === M3; n2 /= nt2, r2++) ;
  for (o2 = nt2; o2 < t2 && or2(o2, e2, t2) !== t2 - N2; o2++) if (o2 > 1e3) throw new Error("Cannot find square root: likely non-prime P");
  if (r2 === 1) {
    const a2 = (t2 + N2) / Ht2;
    return function(i4, D3) {
      const c3 = i4.pow(D3, a2);
      if (!i4.eql(i4.sqr(c3), D3)) throw new Error("Cannot find square root");
      return c3;
    };
  }
  const s2 = (n2 + N2) / nt2;
  return function(u3, i4) {
    if (u3.pow(i4, e2) === u3.neg(u3.ONE)) throw new Error("Cannot find square root");
    let D3 = r2, c3 = u3.pow(u3.mul(u3.ONE, o2), n2), l3 = u3.pow(i4, s2), p3 = u3.pow(i4, n2);
    for (; !u3.eql(p3, u3.ONE); ) {
      if (u3.eql(p3, u3.ZERO)) return u3.ZERO;
      let w3 = 1;
      for (let g3 = u3.sqr(p3); w3 < D3 && !u3.eql(g3, u3.ONE); w3++) g3 = u3.sqr(g3);
      const h6 = u3.pow(c3, N2 << BigInt(D3 - w3 - 1));
      c3 = u3.sqr(h6), l3 = u3.mul(l3, h6), p3 = u3.mul(p3, c3), D3 = w3;
    }
    return l3;
  };
}
function ir2(t2) {
  if (t2 % Ht2 === rr2) {
    const e2 = (t2 + N2) / Ht2;
    return function(r2, o2) {
      const s2 = r2.pow(o2, e2);
      if (!r2.eql(r2.sqr(s2), o2)) throw new Error("Cannot find square root");
      return s2;
    };
  }
  if (t2 % Ce2 === Be2) {
    const e2 = (t2 - Be2) / Ce2;
    return function(r2, o2) {
      const s2 = r2.mul(o2, nt2), a2 = r2.pow(s2, e2), u3 = r2.mul(o2, a2), i4 = r2.mul(r2.mul(u3, nt2), a2), D3 = r2.mul(u3, r2.sub(i4, r2.ONE));
      if (!r2.eql(r2.sqr(D3), o2)) throw new Error("Cannot find square root");
      return D3;
    };
  }
  return sr2(t2);
}
var ur2 = (t2, e2) => (H2(t2, e2) & N2) === N2;
var cr2 = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
function ar2(t2) {
  const e2 = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, n2 = cr2.reduce((r2, o2) => (r2[o2] = "function", r2), e2);
  return Ot2(t2, n2);
}
function fr2(t2, e2, n2) {
  if (n2 < M3) throw new Error("invalid exponent, negatives unsupported");
  if (n2 === M3) return t2.ONE;
  if (n2 === N2) return e2;
  let r2 = t2.ONE, o2 = e2;
  for (; n2 > M3; ) n2 & N2 && (r2 = t2.mul(r2, o2)), o2 = t2.sqr(o2), n2 >>= N2;
  return r2;
}
function Dr2(t2, e2) {
  const n2 = new Array(e2.length), r2 = e2.reduce((s2, a2, u3) => t2.is0(a2) ? s2 : (n2[u3] = s2, t2.mul(s2, a2)), t2.ONE), o2 = t2.inv(r2);
  return e2.reduceRight((s2, a2, u3) => t2.is0(a2) ? s2 : (n2[u3] = t2.mul(s2, n2[u3]), t2.mul(s2, a2)), o2), n2;
}
function me2(t2, e2) {
  const n2 = e2 !== void 0 ? e2 : t2.toString(2).length, r2 = Math.ceil(n2 / 8);
  return { nBitLength: n2, nByteLength: r2 };
}
function _e2(t2, e2, n2 = false, r2 = {}) {
  if (t2 <= M3) throw new Error("invalid field: expected ORDER > 0, got " + t2);
  const { nBitLength: o2, nByteLength: s2 } = me2(t2, e2);
  if (s2 > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
  let a2;
  const u3 = Object.freeze({ ORDER: t2, isLE: n2, BITS: o2, BYTES: s2, MASK: er2(o2), ZERO: M3, ONE: N2, create: (i4) => H2(i4, t2), isValid: (i4) => {
    if (typeof i4 != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof i4);
    return M3 <= i4 && i4 < t2;
  }, is0: (i4) => i4 === M3, isOdd: (i4) => (i4 & N2) === N2, neg: (i4) => H2(-i4, t2), eql: (i4, D3) => i4 === D3, sqr: (i4) => H2(i4 * i4, t2), add: (i4, D3) => H2(i4 + D3, t2), sub: (i4, D3) => H2(i4 - D3, t2), mul: (i4, D3) => H2(i4 * D3, t2), pow: (i4, D3) => fr2(u3, i4, D3), div: (i4, D3) => H2(i4 * Ae2(D3, t2), t2), sqrN: (i4) => i4 * i4, addN: (i4, D3) => i4 + D3, subN: (i4, D3) => i4 - D3, mulN: (i4, D3) => i4 * D3, inv: (i4) => Ae2(i4, t2), sqrt: r2.sqrt || ((i4) => (a2 || (a2 = ir2(t2)), a2(u3, i4))), invertBatch: (i4) => Dr2(u3, i4), cmov: (i4, D3, c3) => c3 ? D3 : i4, toBytes: (i4) => n2 ? Nt2(i4, s2) : ge2(i4, s2), fromBytes: (i4) => {
    if (i4.length !== s2) throw new Error("Field.fromBytes: expected " + s2 + " bytes, got " + i4.length);
    return n2 ? Et2(i4) : Pn2(i4);
  } });
  return Object.freeze(u3);
}
var Se2 = BigInt(0);
var gt2 = BigInt(1);
function zt2(t2, e2) {
  const n2 = e2.negate();
  return t2 ? n2 : e2;
}
function ve2(t2, e2) {
  if (!Number.isSafeInteger(t2) || t2 <= 0 || t2 > e2) throw new Error("invalid window size, expected [1.." + e2 + "], got W=" + t2);
}
function Mt2(t2, e2) {
  ve2(t2, e2);
  const n2 = Math.ceil(e2 / t2) + 1, r2 = 2 ** (t2 - 1);
  return { windows: n2, windowSize: r2 };
}
function dr2(t2, e2) {
  if (!Array.isArray(t2)) throw new Error("array expected");
  t2.forEach((n2, r2) => {
    if (!(n2 instanceof e2)) throw new Error("invalid point at index " + r2);
  });
}
function hr2(t2, e2) {
  if (!Array.isArray(t2)) throw new Error("array of scalars expected");
  t2.forEach((n2, r2) => {
    if (!e2.isValid(n2)) throw new Error("invalid scalar at index " + r2);
  });
}
var qt2 = /* @__PURE__ */ new WeakMap();
var Ie2 = /* @__PURE__ */ new WeakMap();
function $t2(t2) {
  return Ie2.get(t2) || 1;
}
function lr2(t2, e2) {
  return { constTimeNegate: zt2, hasPrecomputes(n2) {
    return $t2(n2) !== 1;
  }, unsafeLadder(n2, r2, o2 = t2.ZERO) {
    let s2 = n2;
    for (; r2 > Se2; ) r2 & gt2 && (o2 = o2.add(s2)), s2 = s2.double(), r2 >>= gt2;
    return o2;
  }, precomputeWindow(n2, r2) {
    const { windows: o2, windowSize: s2 } = Mt2(r2, e2), a2 = [];
    let u3 = n2, i4 = u3;
    for (let D3 = 0; D3 < o2; D3++) {
      i4 = u3, a2.push(i4);
      for (let c3 = 1; c3 < s2; c3++) i4 = i4.add(u3), a2.push(i4);
      u3 = i4.double();
    }
    return a2;
  }, wNAF(n2, r2, o2) {
    const { windows: s2, windowSize: a2 } = Mt2(n2, e2);
    let u3 = t2.ZERO, i4 = t2.BASE;
    const D3 = BigInt(2 ** n2 - 1), c3 = 2 ** n2, l3 = BigInt(n2);
    for (let p3 = 0; p3 < s2; p3++) {
      const w3 = p3 * a2;
      let h6 = Number(o2 & D3);
      o2 >>= l3, h6 > a2 && (h6 -= c3, o2 += gt2);
      const g3 = w3, S3 = w3 + Math.abs(h6) - 1, v6 = p3 % 2 !== 0, L3 = h6 < 0;
      h6 === 0 ? i4 = i4.add(zt2(v6, r2[g3])) : u3 = u3.add(zt2(L3, r2[S3]));
    }
    return { p: u3, f: i4 };
  }, wNAFUnsafe(n2, r2, o2, s2 = t2.ZERO) {
    const { windows: a2, windowSize: u3 } = Mt2(n2, e2), i4 = BigInt(2 ** n2 - 1), D3 = 2 ** n2, c3 = BigInt(n2);
    for (let l3 = 0; l3 < a2; l3++) {
      const p3 = l3 * u3;
      if (o2 === Se2) break;
      let w3 = Number(o2 & i4);
      if (o2 >>= c3, w3 > u3 && (w3 -= D3, o2 += gt2), w3 === 0) continue;
      let h6 = r2[p3 + Math.abs(w3) - 1];
      w3 < 0 && (h6 = h6.negate()), s2 = s2.add(h6);
    }
    return s2;
  }, getPrecomputes(n2, r2, o2) {
    let s2 = qt2.get(r2);
    return s2 || (s2 = this.precomputeWindow(r2, n2), n2 !== 1 && qt2.set(r2, o2(s2))), s2;
  }, wNAFCached(n2, r2, o2) {
    const s2 = $t2(n2);
    return this.wNAF(s2, this.getPrecomputes(s2, n2, o2), r2);
  }, wNAFCachedUnsafe(n2, r2, o2, s2) {
    const a2 = $t2(n2);
    return a2 === 1 ? this.unsafeLadder(n2, r2, s2) : this.wNAFUnsafe(a2, this.getPrecomputes(a2, n2, o2), r2, s2);
  }, setWindowSize(n2, r2) {
    ve2(r2, e2), Ie2.set(n2, r2), qt2.delete(n2);
  } };
}
function br2(t2, e2, n2, r2) {
  if (dr2(n2, t2), hr2(r2, e2), n2.length !== r2.length) throw new Error("arrays of points and scalars must have equal length");
  const o2 = t2.ZERO, s2 = tr2(BigInt(n2.length)), a2 = s2 > 12 ? s2 - 3 : s2 > 4 ? s2 - 2 : s2 ? 2 : 1, u3 = (1 << a2) - 1, i4 = new Array(u3 + 1).fill(o2), D3 = Math.floor((e2.BITS - 1) / a2) * a2;
  let c3 = o2;
  for (let l3 = D3; l3 >= 0; l3 -= a2) {
    i4.fill(o2);
    for (let w3 = 0; w3 < r2.length; w3++) {
      const h6 = r2[w3], g3 = Number(h6 >> BigInt(l3) & BigInt(u3));
      i4[g3] = i4[g3].add(n2[w3]);
    }
    let p3 = o2;
    for (let w3 = i4.length - 1, h6 = o2; w3 > 0; w3--) h6 = h6.add(i4[w3]), p3 = p3.add(h6);
    if (c3 = c3.add(p3), l3 !== 0) for (let w3 = 0; w3 < a2; w3++) c3 = c3.double();
  }
  return c3;
}
function pr2(t2) {
  return ar2(t2.Fp), Ot2(t2, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...me2(t2.n, t2.nBitLength), ...t2, p: t2.Fp.ORDER });
}
var G2 = BigInt(0);
var j2 = BigInt(1);
var yt2 = BigInt(2);
var wr2 = BigInt(8);
var Er2 = { zip215: true };
function gr2(t2) {
  const e2 = pr2(t2);
  return Ot2(t2, { hash: "function", a: "bigint", d: "bigint", randomBytes: "function" }, { adjustScalarBytes: "function", domain: "function", uvRatio: "function", mapToCurve: "function" }), Object.freeze({ ...e2 });
}
function yr2(t2) {
  const e2 = gr2(t2), { Fp: n2, n: r2, prehash: o2, hash: s2, randomBytes: a2, nByteLength: u3, h: i4 } = e2, D3 = yt2 << BigInt(u3 * 8) - j2, c3 = n2.create, l3 = _e2(e2.n, e2.nBitLength), p3 = e2.uvRatio || ((y5, f5) => {
    try {
      return { isValid: true, value: n2.sqrt(y5 * n2.inv(f5)) };
    } catch {
      return { isValid: false, value: G2 };
    }
  }), w3 = e2.adjustScalarBytes || ((y5) => y5), h6 = e2.domain || ((y5, f5, b3) => {
    if (Tt2("phflag", b3), f5.length || b3) throw new Error("Contexts/pre-hash are not supported");
    return y5;
  });
  function g3(y5, f5) {
    ft2("coordinate " + y5, f5, G2, D3);
  }
  function S3(y5) {
    if (!(y5 instanceof d4)) throw new Error("ExtendedPoint expected");
  }
  const v6 = xe2((y5, f5) => {
    const { ex: b3, ey: E4, ez: B3 } = y5, C5 = y5.is0();
    f5 == null && (f5 = C5 ? wr2 : n2.inv(B3));
    const A4 = c3(b3 * f5), U3 = c3(E4 * f5), _3 = c3(B3 * f5);
    if (C5) return { x: G2, y: j2 };
    if (_3 !== j2) throw new Error("invZ was invalid");
    return { x: A4, y: U3 };
  }), L3 = xe2((y5) => {
    const { a: f5, d: b3 } = e2;
    if (y5.is0()) throw new Error("bad point: ZERO");
    const { ex: E4, ey: B3, ez: C5, et: A4 } = y5, U3 = c3(E4 * E4), _3 = c3(B3 * B3), T3 = c3(C5 * C5), $3 = c3(T3 * T3), R3 = c3(U3 * f5), V4 = c3(T3 * c3(R3 + _3)), Y3 = c3($3 + c3(b3 * c3(U3 * _3)));
    if (V4 !== Y3) throw new Error("bad point: equation left != right (1)");
    const Z3 = c3(E4 * B3), X3 = c3(C5 * A4);
    if (Z3 !== X3) throw new Error("bad point: equation left != right (2)");
    return true;
  });
  class d4 {
    constructor(f5, b3, E4, B3) {
      this.ex = f5, this.ey = b3, this.ez = E4, this.et = B3, g3("x", f5), g3("y", b3), g3("z", E4), g3("t", B3), Object.freeze(this);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static fromAffine(f5) {
      if (f5 instanceof d4) throw new Error("extended point not allowed");
      const { x: b3, y: E4 } = f5 || {};
      return g3("x", b3), g3("y", E4), new d4(b3, E4, j2, c3(b3 * E4));
    }
    static normalizeZ(f5) {
      const b3 = n2.invertBatch(f5.map((E4) => E4.ez));
      return f5.map((E4, B3) => E4.toAffine(b3[B3])).map(d4.fromAffine);
    }
    static msm(f5, b3) {
      return br2(d4, l3, f5, b3);
    }
    _setWindowSize(f5) {
      q3.setWindowSize(this, f5);
    }
    assertValidity() {
      L3(this);
    }
    equals(f5) {
      S3(f5);
      const { ex: b3, ey: E4, ez: B3 } = this, { ex: C5, ey: A4, ez: U3 } = f5, _3 = c3(b3 * U3), T3 = c3(C5 * B3), $3 = c3(E4 * U3), R3 = c3(A4 * B3);
      return _3 === T3 && $3 === R3;
    }
    is0() {
      return this.equals(d4.ZERO);
    }
    negate() {
      return new d4(c3(-this.ex), this.ey, this.ez, c3(-this.et));
    }
    double() {
      const { a: f5 } = e2, { ex: b3, ey: E4, ez: B3 } = this, C5 = c3(b3 * b3), A4 = c3(E4 * E4), U3 = c3(yt2 * c3(B3 * B3)), _3 = c3(f5 * C5), T3 = b3 + E4, $3 = c3(c3(T3 * T3) - C5 - A4), R3 = _3 + A4, V4 = R3 - U3, Y3 = _3 - A4, Z3 = c3($3 * V4), X3 = c3(R3 * Y3), et4 = c3($3 * Y3), pt4 = c3(V4 * R3);
      return new d4(Z3, X3, pt4, et4);
    }
    add(f5) {
      S3(f5);
      const { a: b3, d: E4 } = e2, { ex: B3, ey: C5, ez: A4, et: U3 } = this, { ex: _3, ey: T3, ez: $3, et: R3 } = f5;
      if (b3 === BigInt(-1)) {
        const re3 = c3((C5 - B3) * (T3 + _3)), oe5 = c3((C5 + B3) * (T3 - _3)), mt4 = c3(oe5 - re3);
        if (mt4 === G2) return this.double();
        const se2 = c3(A4 * yt2 * R3), ie2 = c3(U3 * yt2 * $3), ue3 = ie2 + se2, ce4 = oe5 + re3, ae5 = ie2 - se2, Dn4 = c3(ue3 * mt4), dn4 = c3(ce4 * ae5), hn4 = c3(ue3 * ae5), ln4 = c3(mt4 * ce4);
        return new d4(Dn4, dn4, ln4, hn4);
      }
      const V4 = c3(B3 * _3), Y3 = c3(C5 * T3), Z3 = c3(U3 * E4 * R3), X3 = c3(A4 * $3), et4 = c3((B3 + C5) * (_3 + T3) - V4 - Y3), pt4 = X3 - Z3, ee2 = X3 + Z3, ne4 = c3(Y3 - b3 * V4), un4 = c3(et4 * pt4), cn4 = c3(ee2 * ne4), an4 = c3(et4 * ne4), fn4 = c3(pt4 * ee2);
      return new d4(un4, cn4, fn4, an4);
    }
    subtract(f5) {
      return this.add(f5.negate());
    }
    wNAF(f5) {
      return q3.wNAFCached(this, f5, d4.normalizeZ);
    }
    multiply(f5) {
      const b3 = f5;
      ft2("scalar", b3, j2, r2);
      const { p: E4, f: B3 } = this.wNAF(b3);
      return d4.normalizeZ([E4, B3])[0];
    }
    multiplyUnsafe(f5, b3 = d4.ZERO) {
      const E4 = f5;
      return ft2("scalar", E4, G2, r2), E4 === G2 ? F3 : this.is0() || E4 === j2 ? this : q3.wNAFCachedUnsafe(this, E4, d4.normalizeZ, b3);
    }
    isSmallOrder() {
      return this.multiplyUnsafe(i4).is0();
    }
    isTorsionFree() {
      return q3.unsafeLadder(this, r2).is0();
    }
    toAffine(f5) {
      return v6(this, f5);
    }
    clearCofactor() {
      const { h: f5 } = e2;
      return f5 === j2 ? this : this.multiplyUnsafe(f5);
    }
    static fromHex(f5, b3 = false) {
      const { d: E4, a: B3 } = e2, C5 = n2.BYTES;
      f5 = W2("pointHex", f5, C5), Tt2("zip215", b3);
      const A4 = f5.slice(), U3 = f5[C5 - 1];
      A4[C5 - 1] = U3 & -129;
      const _3 = Et2(A4), T3 = b3 ? D3 : n2.ORDER;
      ft2("pointHex.y", _3, G2, T3);
      const $3 = c3(_3 * _3), R3 = c3($3 - j2), V4 = c3(E4 * $3 - B3);
      let { isValid: Y3, value: Z3 } = p3(R3, V4);
      if (!Y3) throw new Error("Point.fromHex: invalid y coordinate");
      const X3 = (Z3 & j2) === j2, et4 = (U3 & 128) !== 0;
      if (!b3 && Z3 === G2 && et4) throw new Error("Point.fromHex: x=0 and x_0=1");
      return et4 !== X3 && (Z3 = c3(-Z3)), d4.fromAffine({ x: Z3, y: _3 });
    }
    static fromPrivateKey(f5) {
      return O2(f5).point;
    }
    toRawBytes() {
      const { x: f5, y: b3 } = this.toAffine(), E4 = Nt2(b3, n2.BYTES);
      return E4[E4.length - 1] |= f5 & j2 ? 128 : 0, E4;
    }
    toHex() {
      return Ft2(this.toRawBytes());
    }
  }
  d4.BASE = new d4(e2.Gx, e2.Gy, j2, c3(e2.Gx * e2.Gy)), d4.ZERO = new d4(G2, j2, j2, G2);
  const { BASE: m, ZERO: F3 } = d4, q3 = lr2(d4, u3 * 8);
  function z5(y5) {
    return H2(y5, r2);
  }
  function I3(y5) {
    return z5(Et2(y5));
  }
  function O2(y5) {
    const f5 = n2.BYTES;
    y5 = W2("private key", y5, f5);
    const b3 = W2("hashed private key", s2(y5), 2 * f5), E4 = w3(b3.slice(0, f5)), B3 = b3.slice(f5, 2 * f5), C5 = I3(E4), A4 = m.multiply(C5), U3 = A4.toRawBytes();
    return { head: E4, prefix: B3, scalar: C5, point: A4, pointBytes: U3 };
  }
  function ot4(y5) {
    return O2(y5).pointBytes;
  }
  function tt4(y5 = new Uint8Array(), ...f5) {
    const b3 = ye2(...f5);
    return I3(s2(h6(b3, W2("context", y5), !!o2)));
  }
  function st3(y5, f5, b3 = {}) {
    y5 = W2("message", y5), o2 && (y5 = o2(y5));
    const { prefix: E4, scalar: B3, pointBytes: C5 } = O2(f5), A4 = tt4(b3.context, E4, y5), U3 = m.multiply(A4).toRawBytes(), _3 = tt4(b3.context, U3, C5, y5), T3 = z5(A4 + _3 * B3);
    ft2("signature.s", T3, G2, r2);
    const $3 = ye2(U3, Nt2(T3, n2.BYTES));
    return W2("result", $3, n2.BYTES * 2);
  }
  const at4 = Er2;
  function Ct5(y5, f5, b3, E4 = at4) {
    const { context: B3, zip215: C5 } = E4, A4 = n2.BYTES;
    y5 = W2("signature", y5, 2 * A4), f5 = W2("message", f5), b3 = W2("publicKey", b3, A4), C5 !== void 0 && Tt2("zip215", C5), o2 && (f5 = o2(f5));
    const U3 = Et2(y5.slice(A4, 2 * A4));
    let _3, T3, $3;
    try {
      _3 = d4.fromHex(b3, C5), T3 = d4.fromHex(y5.slice(0, A4), C5), $3 = m.multiplyUnsafe(U3);
    } catch {
      return false;
    }
    if (!C5 && _3.isSmallOrder()) return false;
    const R3 = tt4(B3, T3.toRawBytes(), _3.toRawBytes(), f5);
    return T3.add(_3.multiplyUnsafe(R3)).subtract($3).clearCofactor().equals(d4.ZERO);
  }
  return m._setWindowSize(8), { CURVE: e2, getPublicKey: ot4, sign: st3, verify: Ct5, ExtendedPoint: d4, utils: { getExtendedPublicKey: O2, randomPrivateKey: () => a2(n2.BYTES), precompute(y5 = 8, f5 = d4.BASE) {
    return f5._setWindowSize(y5), f5.multiply(BigInt(3)), f5;
  } } };
}
BigInt(0), BigInt(1);
var kt2 = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
var Ue2 = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
BigInt(0);
var xr2 = BigInt(1);
var Te2 = BigInt(2);
BigInt(3);
var Br2 = BigInt(5);
var Cr2 = BigInt(8);
function Ar2(t2) {
  const e2 = BigInt(10), n2 = BigInt(20), r2 = BigInt(40), o2 = BigInt(80), s2 = kt2, u3 = t2 * t2 % s2 * t2 % s2, i4 = J2(u3, Te2, s2) * u3 % s2, D3 = J2(i4, xr2, s2) * t2 % s2, c3 = J2(D3, Br2, s2) * D3 % s2, l3 = J2(c3, e2, s2) * c3 % s2, p3 = J2(l3, n2, s2) * l3 % s2, w3 = J2(p3, r2, s2) * p3 % s2, h6 = J2(w3, o2, s2) * w3 % s2, g3 = J2(h6, o2, s2) * w3 % s2, S3 = J2(g3, e2, s2) * c3 % s2;
  return { pow_p_5_8: J2(S3, Te2, s2) * t2 % s2, b2: u3 };
}
function mr2(t2) {
  return t2[0] &= 248, t2[31] &= 127, t2[31] |= 64, t2;
}
function _r2(t2, e2) {
  const n2 = kt2, r2 = H2(e2 * e2 * e2, n2), o2 = H2(r2 * r2 * e2, n2), s2 = Ar2(t2 * o2).pow_p_5_8;
  let a2 = H2(t2 * r2 * s2, n2);
  const u3 = H2(e2 * a2 * a2, n2), i4 = a2, D3 = H2(a2 * Ue2, n2), c3 = u3 === t2, l3 = u3 === H2(-t2, n2), p3 = u3 === H2(-t2 * Ue2, n2);
  return c3 && (a2 = i4), (l3 || p3) && (a2 = D3), ur2(a2, n2) && (a2 = H2(-a2, n2)), { isValid: c3 || l3, value: a2 };
}
var Sr2 = (() => _e2(kt2, void 0, true))();
var vr2 = (() => ({ a: BigInt(-1), d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"), Fp: Sr2, n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"), h: Cr2, Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"), Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"), hash: Kn2, randomBytes: he2, adjustScalarBytes: mr2, uvRatio: _r2 }))();
var Rt2 = (() => yr2(vr2))();
var ut2 = ".";
var Dt2 = "base64url";
var Gt2 = "utf8";
var xt2 = "utf8";
function Xt2(t2) {
  return globalThis.Buffer != null ? new Uint8Array(t2.buffer, t2.byteOffset, t2.byteLength) : t2;
}
function Le2(t2 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Xt2(globalThis.Buffer.allocUnsafe(t2)) : new Uint8Array(t2);
}
function Ir2(t2, e2) {
  if (t2.length >= 255) throw new TypeError("Alphabet too long");
  for (var n2 = new Uint8Array(256), r2 = 0; r2 < n2.length; r2++) n2[r2] = 255;
  for (var o2 = 0; o2 < t2.length; o2++) {
    var s2 = t2.charAt(o2), a2 = s2.charCodeAt(0);
    if (n2[a2] !== 255) throw new TypeError(s2 + " is ambiguous");
    n2[a2] = o2;
  }
  var u3 = t2.length, i4 = t2.charAt(0), D3 = Math.log(u3) / Math.log(256), c3 = Math.log(256) / Math.log(u3);
  function l3(h6) {
    if (h6 instanceof Uint8Array || (ArrayBuffer.isView(h6) ? h6 = new Uint8Array(h6.buffer, h6.byteOffset, h6.byteLength) : Array.isArray(h6) && (h6 = Uint8Array.from(h6))), !(h6 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (h6.length === 0) return "";
    for (var g3 = 0, S3 = 0, v6 = 0, L3 = h6.length; v6 !== L3 && h6[v6] === 0; ) v6++, g3++;
    for (var d4 = (L3 - v6) * c3 + 1 >>> 0, m = new Uint8Array(d4); v6 !== L3; ) {
      for (var F3 = h6[v6], q3 = 0, z5 = d4 - 1; (F3 !== 0 || q3 < S3) && z5 !== -1; z5--, q3++) F3 += 256 * m[z5] >>> 0, m[z5] = F3 % u3 >>> 0, F3 = F3 / u3 >>> 0;
      if (F3 !== 0) throw new Error("Non-zero carry");
      S3 = q3, v6++;
    }
    for (var I3 = d4 - S3; I3 !== d4 && m[I3] === 0; ) I3++;
    for (var O2 = i4.repeat(g3); I3 < d4; ++I3) O2 += t2.charAt(m[I3]);
    return O2;
  }
  function p3(h6) {
    if (typeof h6 != "string") throw new TypeError("Expected String");
    if (h6.length === 0) return new Uint8Array();
    var g3 = 0;
    if (h6[g3] !== " ") {
      for (var S3 = 0, v6 = 0; h6[g3] === i4; ) S3++, g3++;
      for (var L3 = (h6.length - g3) * D3 + 1 >>> 0, d4 = new Uint8Array(L3); h6[g3]; ) {
        var m = n2[h6.charCodeAt(g3)];
        if (m === 255) return;
        for (var F3 = 0, q3 = L3 - 1; (m !== 0 || F3 < v6) && q3 !== -1; q3--, F3++) m += u3 * d4[q3] >>> 0, d4[q3] = m % 256 >>> 0, m = m / 256 >>> 0;
        if (m !== 0) throw new Error("Non-zero carry");
        v6 = F3, g3++;
      }
      if (h6[g3] !== " ") {
        for (var z5 = L3 - v6; z5 !== L3 && d4[z5] === 0; ) z5++;
        for (var I3 = new Uint8Array(S3 + (L3 - z5)), O2 = S3; z5 !== L3; ) I3[O2++] = d4[z5++];
        return I3;
      }
    }
  }
  function w3(h6) {
    var g3 = p3(h6);
    if (g3) return g3;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: l3, decodeUnsafe: p3, decode: w3 };
}
var Ur2 = Ir2;
var Tr2 = Ur2;
var He2 = (t2) => {
  if (t2 instanceof Uint8Array && t2.constructor.name === "Uint8Array") return t2;
  if (t2 instanceof ArrayBuffer) return new Uint8Array(t2);
  if (ArrayBuffer.isView(t2)) return new Uint8Array(t2.buffer, t2.byteOffset, t2.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Fr2 = (t2) => new TextEncoder().encode(t2);
var Nr2 = (t2) => new TextDecoder().decode(t2);
var Lr2 = class {
  constructor(e2, n2, r2) {
    this.name = e2, this.prefix = n2, this.baseEncode = r2;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Or2 = class {
  constructor(e2, n2, r2) {
    if (this.name = e2, this.prefix = n2, n2.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = n2.codePointAt(0), this.baseDecode = r2;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return ze2(this, e2);
  }
};
var Hr2 = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return ze2(this, e2);
  }
  decode(e2) {
    const n2 = e2[0], r2 = this.decoders[n2];
    if (r2) return r2.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var ze2 = (t2, e2) => new Hr2({ ...t2.decoders || { [t2.prefix]: t2 }, ...e2.decoders || { [e2.prefix]: e2 } });
var zr2 = class {
  constructor(e2, n2, r2, o2) {
    this.name = e2, this.prefix = n2, this.baseEncode = r2, this.baseDecode = o2, this.encoder = new Lr2(e2, n2, r2), this.decoder = new Or2(e2, n2, o2);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var Bt2 = ({ name: t2, prefix: e2, encode: n2, decode: r2 }) => new zr2(t2, e2, n2, r2);
var ht2 = ({ prefix: t2, name: e2, alphabet: n2 }) => {
  const { encode: r2, decode: o2 } = Tr2(n2, e2);
  return Bt2({ prefix: t2, name: e2, encode: r2, decode: (s2) => He2(o2(s2)) });
};
var Mr2 = (t2, e2, n2, r2) => {
  const o2 = {};
  for (let c3 = 0; c3 < e2.length; ++c3) o2[e2[c3]] = c3;
  let s2 = t2.length;
  for (; t2[s2 - 1] === "="; ) --s2;
  const a2 = new Uint8Array(s2 * n2 / 8 | 0);
  let u3 = 0, i4 = 0, D3 = 0;
  for (let c3 = 0; c3 < s2; ++c3) {
    const l3 = o2[t2[c3]];
    if (l3 === void 0) throw new SyntaxError(`Non-${r2} character`);
    i4 = i4 << n2 | l3, u3 += n2, u3 >= 8 && (u3 -= 8, a2[D3++] = 255 & i4 >> u3);
  }
  if (u3 >= n2 || 255 & i4 << 8 - u3) throw new SyntaxError("Unexpected end of data");
  return a2;
};
var qr2 = (t2, e2, n2) => {
  const r2 = e2[e2.length - 1] === "=", o2 = (1 << n2) - 1;
  let s2 = "", a2 = 0, u3 = 0;
  for (let i4 = 0; i4 < t2.length; ++i4) for (u3 = u3 << 8 | t2[i4], a2 += 8; a2 > n2; ) a2 -= n2, s2 += e2[o2 & u3 >> a2];
  if (a2 && (s2 += e2[o2 & u3 << n2 - a2]), r2) for (; s2.length * n2 & 7; ) s2 += "=";
  return s2;
};
var k3 = ({ name: t2, prefix: e2, bitsPerChar: n2, alphabet: r2 }) => Bt2({ prefix: e2, name: t2, encode(o2) {
  return qr2(o2, r2, n2);
}, decode(o2) {
  return Mr2(o2, r2, n2, t2);
} });
var $r2 = Bt2({ prefix: "\0", name: "identity", encode: (t2) => Nr2(t2), decode: (t2) => Fr2(t2) });
var kr2 = Object.freeze({ __proto__: null, identity: $r2 });
var Rr2 = k3({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var jr2 = Object.freeze({ __proto__: null, base2: Rr2 });
var Zr2 = k3({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Gr2 = Object.freeze({ __proto__: null, base8: Zr2 });
var Vr2 = ht2({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Yr2 = Object.freeze({ __proto__: null, base10: Vr2 });
var Jr2 = k3({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Kr2 = k3({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var Wr2 = Object.freeze({ __proto__: null, base16: Jr2, base16upper: Kr2 });
var Xr2 = k3({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var Pr2 = k3({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var Qr2 = k3({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var to2 = k3({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var eo2 = k3({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var no2 = k3({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ro2 = k3({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var oo2 = k3({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var so2 = k3({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var io2 = Object.freeze({ __proto__: null, base32: Xr2, base32upper: Pr2, base32pad: Qr2, base32padupper: to2, base32hex: eo2, base32hexupper: no2, base32hexpad: ro2, base32hexpadupper: oo2, base32z: so2 });
var uo2 = ht2({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var co2 = ht2({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var ao2 = Object.freeze({ __proto__: null, base36: uo2, base36upper: co2 });
var fo2 = ht2({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Do2 = ht2({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var ho2 = Object.freeze({ __proto__: null, base58btc: fo2, base58flickr: Do2 });
var lo2 = k3({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var bo2 = k3({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var po2 = k3({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var wo2 = k3({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Eo2 = Object.freeze({ __proto__: null, base64: lo2, base64pad: bo2, base64url: po2, base64urlpad: wo2 });
var Me2 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var go2 = Me2.reduce((t2, e2, n2) => (t2[n2] = e2, t2), []);
var yo2 = Me2.reduce((t2, e2, n2) => (t2[e2.codePointAt(0)] = n2, t2), []);
function xo2(t2) {
  return t2.reduce((e2, n2) => (e2 += go2[n2], e2), "");
}
function Bo2(t2) {
  const e2 = [];
  for (const n2 of t2) {
    const r2 = yo2[n2.codePointAt(0)];
    if (r2 === void 0) throw new Error(`Non-base256emoji character: ${n2}`);
    e2.push(r2);
  }
  return new Uint8Array(e2);
}
var Co2 = Bt2({ prefix: "🚀", name: "base256emoji", encode: xo2, decode: Bo2 });
var Ao2 = Object.freeze({ __proto__: null, base256emoji: Co2 });
var mo2 = $e2;
var qe2 = 128;
var _o2 = 127;
var So2 = ~_o2;
var vo2 = Math.pow(2, 31);
function $e2(t2, e2, n2) {
  e2 = e2 || [], n2 = n2 || 0;
  for (var r2 = n2; t2 >= vo2; ) e2[n2++] = t2 & 255 | qe2, t2 /= 128;
  for (; t2 & So2; ) e2[n2++] = t2 & 255 | qe2, t2 >>>= 7;
  return e2[n2] = t2 | 0, $e2.bytes = n2 - r2 + 1, e2;
}
var Io2 = Pt2;
var Uo2 = 128;
var ke2 = 127;
function Pt2(t2, r2) {
  var n2 = 0, r2 = r2 || 0, o2 = 0, s2 = r2, a2, u3 = t2.length;
  do {
    if (s2 >= u3) throw Pt2.bytes = 0, new RangeError("Could not decode varint");
    a2 = t2[s2++], n2 += o2 < 28 ? (a2 & ke2) << o2 : (a2 & ke2) * Math.pow(2, o2), o2 += 7;
  } while (a2 >= Uo2);
  return Pt2.bytes = s2 - r2, n2;
}
var To2 = Math.pow(2, 7);
var Fo2 = Math.pow(2, 14);
var No2 = Math.pow(2, 21);
var Lo2 = Math.pow(2, 28);
var Oo2 = Math.pow(2, 35);
var Ho2 = Math.pow(2, 42);
var zo2 = Math.pow(2, 49);
var Mo2 = Math.pow(2, 56);
var qo2 = Math.pow(2, 63);
var $o2 = function(t2) {
  return t2 < To2 ? 1 : t2 < Fo2 ? 2 : t2 < No2 ? 3 : t2 < Lo2 ? 4 : t2 < Oo2 ? 5 : t2 < Ho2 ? 6 : t2 < zo2 ? 7 : t2 < Mo2 ? 8 : t2 < qo2 ? 9 : 10;
};
var ko2 = { encode: mo2, decode: Io2, encodingLength: $o2 };
var Re2 = ko2;
var je2 = (t2, e2, n2 = 0) => (Re2.encode(t2, e2, n2), e2);
var Ze2 = (t2) => Re2.encodingLength(t2);
var Qt2 = (t2, e2) => {
  const n2 = e2.byteLength, r2 = Ze2(t2), o2 = r2 + Ze2(n2), s2 = new Uint8Array(o2 + n2);
  return je2(t2, s2, 0), je2(n2, s2, r2), s2.set(e2, o2), new Ro2(t2, n2, e2, s2);
};
var Ro2 = class {
  constructor(e2, n2, r2, o2) {
    this.code = e2, this.size = n2, this.digest = r2, this.bytes = o2;
  }
};
var Ge2 = ({ name: t2, code: e2, encode: n2 }) => new jo2(t2, e2, n2);
var jo2 = class {
  constructor(e2, n2, r2) {
    this.name = e2, this.code = n2, this.encode = r2;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const n2 = this.encode(e2);
      return n2 instanceof Uint8Array ? Qt2(this.code, n2) : n2.then((r2) => Qt2(this.code, r2));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Ve2 = (t2) => async (e2) => new Uint8Array(await crypto.subtle.digest(t2, e2));
var Zo2 = Ge2({ name: "sha2-256", code: 18, encode: Ve2("SHA-256") });
var Go2 = Ge2({ name: "sha2-512", code: 19, encode: Ve2("SHA-512") });
var Vo2 = Object.freeze({ __proto__: null, sha256: Zo2, sha512: Go2 });
var Ye2 = 0;
var Yo2 = "identity";
var Je2 = He2;
var Jo2 = (t2) => Qt2(Ye2, Je2(t2));
var Ko2 = { code: Ye2, name: Yo2, encode: Je2, digest: Jo2 };
var Wo2 = Object.freeze({ __proto__: null, identity: Ko2 });
new TextEncoder(), new TextDecoder();
var Ke2 = { ...kr2, ...jr2, ...Gr2, ...Yr2, ...Wr2, ...io2, ...ao2, ...ho2, ...Eo2, ...Ao2 };
({ ...Vo2, ...Wo2 });
function We2(t2, e2, n2, r2) {
  return { name: t2, prefix: e2, encoder: { name: t2, prefix: e2, encode: n2 }, decoder: { decode: r2 } };
}
var Xe2 = We2("utf8", "u", (t2) => "u" + new TextDecoder("utf8").decode(t2), (t2) => new TextEncoder().encode(t2.substring(1)));
var te2 = We2("ascii", "a", (t2) => {
  let e2 = "a";
  for (let n2 = 0; n2 < t2.length; n2++) e2 += String.fromCharCode(t2[n2]);
  return e2;
}, (t2) => {
  t2 = t2.substring(1);
  const e2 = Le2(t2.length);
  for (let n2 = 0; n2 < t2.length; n2++) e2[n2] = t2.charCodeAt(n2);
  return e2;
});
var Pe2 = { utf8: Xe2, "utf-8": Xe2, hex: Ke2.base16, latin1: te2, ascii: te2, binary: te2, ...Ke2 };
function ct2(t2, e2 = "utf8") {
  const n2 = Pe2[e2];
  if (!n2) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t2.buffer, t2.byteOffset, t2.byteLength).toString("utf8") : n2.encoder.encode(t2).substring(1);
}
function rt2(t2, e2 = "utf8") {
  const n2 = Pe2[e2];
  if (!n2) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Xt2(globalThis.Buffer.from(t2, "utf-8")) : n2.decoder.decode(`${n2.prefix}${t2}`);
}
function lt2(t2) {
  return safeJsonParse(ct2(rt2(t2, Dt2), Gt2));
}
function nn2(t2) {
  return rt2(t2, Dt2);
}
function sn2(t2) {
  const e2 = t2.split(ut2), n2 = lt2(e2[0]), r2 = lt2(e2[1]), o2 = nn2(e2[2]), s2 = rt2(e2.slice(0, 2).join(ut2), xt2);
  return { header: n2, payload: r2, signature: o2, data: s2 };
}

// node_modules/@walletconnect/utils/dist/index.es.js
var import_elliptic2 = __toESM(require_elliptic());
var Pe3 = ":";
function Ye3(e2) {
  const [t2, n2] = e2.split(Pe3);
  return { namespace: t2, reference: n2 };
}
function Le3(e2, t2) {
  return e2.includes(":") ? [e2] : t2.chains || [];
}
var Ft3 = "ReactNative";
var H3 = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
var Gt3 = "js";
function et() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function ne() {
  return !(0, import_window_getters.getDocument)() && !!(0, import_window_getters.getNavigator)() && navigator.product === Ft3;
}
function Wr3() {
  return ne() && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u" && (global == null ? void 0 : global.Platform.OS) === "android";
}
function zr3() {
  return ne() && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u" && (global == null ? void 0 : global.Platform.OS) === "ios";
}
function Ae3() {
  return !et() && !!(0, import_window_getters.getNavigator)() && !!(0, import_window_getters.getDocument)();
}
function ue() {
  return ne() ? H3.reactNative : et() ? H3.node : Ae3() ? H3.browser : H3.unknown;
}
function Jr3() {
  var e2;
  try {
    return ne() && typeof global < "u" && typeof (global == null ? void 0 : global.Application) < "u" ? (e2 = global.Application) == null ? void 0 : e2.applicationId : void 0;
  } catch {
    return;
  }
}
function Wt2(e2, t2) {
  const n2 = new URLSearchParams(e2);
  for (const r2 of Object.keys(t2).sort()) if (t2.hasOwnProperty(r2)) {
    const o2 = t2[r2];
    o2 !== void 0 && n2.set(r2, o2);
  }
  return n2.toString();
}
function Yr3() {
  return (0, import_window_metadata.getWindowMetadata)() || { name: "", description: "", url: "", icons: [""] };
}
function zt3() {
  if (ue() === H3.reactNative && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u") {
    const { OS: n2, Version: r2 } = global.Platform;
    return [n2, r2].join("-");
  }
  const e2 = detect();
  if (e2 === null) return "unknown";
  const t2 = e2.os ? e2.os.replace(" ", "").toLowerCase() : "unknown";
  return e2.type === "browser" ? [t2, e2.name, e2.version].join("-") : [t2, e2.version].join("-");
}
function Jt2() {
  var e2;
  const t2 = ue();
  return t2 === H3.browser ? [t2, ((e2 = (0, import_window_getters.getLocation)()) == null ? void 0 : e2.host) || "unknown"].join(":") : t2;
}
function Yt2(e2, t2, n2) {
  const r2 = zt3(), o2 = Jt2();
  return [[e2, t2].join("-"), [Gt3, n2].join("-"), r2, o2].join("/");
}
function Zr3({ protocol: e2, version: t2, relayUrl: n2, sdkVersion: r2, auth: o2, projectId: s2, useOnCloseEvent: i4, bundleId: c3, packageName: u3 }) {
  const a2 = n2.split("?"), l3 = Yt2(e2, t2, r2), f5 = { auth: o2, ua: l3, projectId: s2, useOnCloseEvent: i4 || void 0, packageName: u3 || void 0, bundleId: c3 || void 0 }, d4 = Wt2(a2[1] || "", f5);
  return a2[0] + "?" + d4;
}
function re(e2, t2) {
  return e2.filter((n2) => t2.includes(n2)).length === e2.length;
}
function no3(e2) {
  return Object.fromEntries(e2.entries());
}
function ro3(e2) {
  return new Map(Object.entries(e2));
}
function co3(e2 = import_time3.FIVE_MINUTES, t2) {
  const n2 = (0, import_time3.toMiliseconds)(e2 || import_time3.FIVE_MINUTES);
  let r2, o2, s2, i4;
  return { resolve: (c3) => {
    s2 && r2 && (clearTimeout(s2), r2(c3), i4 = Promise.resolve(c3));
  }, reject: (c3) => {
    s2 && o2 && (clearTimeout(s2), o2(c3));
  }, done: () => new Promise((c3, u3) => {
    if (i4) return c3(i4);
    s2 = setTimeout(() => {
      const a2 = new Error(t2);
      i4 = Promise.reject(a2), u3(a2);
    }, n2), r2 = c3, o2 = u3;
  }) };
}
function ao3(e2, t2, n2) {
  return new Promise(async (r2, o2) => {
    const s2 = setTimeout(() => o2(new Error(n2)), t2);
    try {
      const i4 = await e2;
      r2(i4);
    } catch (i4) {
      o2(i4);
    }
    clearTimeout(s2);
  });
}
function tt(e2, t2) {
  if (typeof t2 == "string" && t2.startsWith(`${e2}:`)) return t2;
  if (e2.toLowerCase() === "topic") {
    if (typeof t2 != "string") throw new Error('Value must be "string" for expirer target type: topic');
    return `topic:${t2}`;
  } else if (e2.toLowerCase() === "id") {
    if (typeof t2 != "number") throw new Error('Value must be "number" for expirer target type: id');
    return `id:${t2}`;
  }
  throw new Error(`Unknown expirer target type: ${e2}`);
}
function uo3(e2) {
  return tt("topic", e2);
}
function fo3(e2) {
  return tt("id", e2);
}
function lo3(e2) {
  const [t2, n2] = e2.split(":"), r2 = { id: void 0, topic: void 0 };
  if (t2 === "topic" && typeof n2 == "string") r2.topic = n2;
  else if (t2 === "id" && Number.isInteger(Number(n2))) r2.id = Number(n2);
  else throw new Error(`Invalid target, expected id:number or topic:string, got ${t2}:${n2}`);
  return r2;
}
function ho3(e2, t2) {
  return (0, import_time3.fromMiliseconds)((t2 || Date.now()) + (0, import_time3.toMiliseconds)(e2));
}
function po3(e2) {
  return Date.now() >= (0, import_time3.toMiliseconds)(e2);
}
function go3(e2, t2) {
  return `${e2}${t2 ? `:${t2}` : ""}`;
}
function Q3(e2 = [], t2 = []) {
  return [.../* @__PURE__ */ new Set([...e2, ...t2])];
}
async function yo3({ id: e2, topic: t2, wcDeepLink: n2 }) {
  var r2;
  try {
    if (!n2) return;
    const o2 = typeof n2 == "string" ? JSON.parse(n2) : n2, s2 = o2 == null ? void 0 : o2.href;
    if (typeof s2 != "string") return;
    const i4 = en2(s2, e2, t2), c3 = ue();
    if (c3 === H3.browser) {
      if (!((r2 = (0, import_window_getters.getDocument)()) != null && r2.hasFocus())) {
        console.warn("Document does not have focus, skipping deeplink.");
        return;
      }
      tn(i4);
    } else c3 === H3.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(i4);
  } catch (o2) {
    console.error(o2);
  }
}
function en2(e2, t2, n2) {
  const r2 = `requestId=${t2}&sessionTopic=${n2}`;
  e2.endsWith("/") && (e2 = e2.slice(0, -1));
  let o2 = `${e2}`;
  if (e2.startsWith("https://t.me")) {
    const s2 = e2.includes("?") ? "&startapp=" : "?startapp=";
    o2 = `${o2}${s2}${on2(r2, true)}`;
  } else o2 = `${o2}/wc?${r2}`;
  return o2;
}
function tn(e2) {
  let t2 = "_self";
  rn2() ? t2 = "_top" : (nn3() || e2.startsWith("https://") || e2.startsWith("http://")) && (t2 = "_blank"), window.open(e2, t2, "noreferrer noopener");
}
async function mo3(e2, t2) {
  let n2 = "";
  try {
    if (Ae3() && (n2 = localStorage.getItem(t2), n2)) return n2;
    n2 = await e2.getItem(t2);
  } catch (r2) {
    console.error(r2);
  }
  return n2;
}
function bo3(e2, t2) {
  if (!e2.includes(t2)) return null;
  const n2 = e2.split(/([&,?,=])/), r2 = n2.indexOf(t2);
  return n2[r2 + 2];
}
function wo3() {
  return typeof crypto < "u" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (e2) => {
    const t2 = Math.random() * 16 | 0;
    return (e2 === "x" ? t2 : t2 & 3 | 8).toString(16);
  });
}
function Eo3() {
  return typeof process < "u" && process.env.IS_VITEST === "true";
}
function nn3() {
  return typeof window < "u" && (!!window.TelegramWebviewProxy || !!window.Telegram || !!window.TelegramWebviewProxyProto);
}
function rn2() {
  try {
    return window.self !== window.top;
  } catch {
    return false;
  }
}
function on2(e2, t2 = false) {
  const n2 = Buffer.from(e2).toString("base64");
  return t2 ? n2.replace(/[=]/g, "") : n2;
}
function rt3(e2) {
  return Buffer.from(e2, "base64").toString("utf-8");
}
function vo3(e2) {
  return new Promise((t2) => setTimeout(t2, e2));
}
function Ne2(e2) {
  if (!Number.isSafeInteger(e2) || e2 < 0) throw new Error("positive integer expected, got " + e2);
}
function xo3(e2) {
  return e2 instanceof Uint8Array || ArrayBuffer.isView(e2) && e2.constructor.name === "Uint8Array";
}
function je3(e2, ...t2) {
  if (!xo3(e2)) throw new Error("Uint8Array expected");
  if (t2.length > 0 && !t2.includes(e2.length)) throw new Error("Uint8Array expected of length " + t2 + ", got length=" + e2.length);
}
function ot(e2) {
  if (typeof e2 != "function" || typeof e2.create != "function") throw new Error("Hash should be wrapped by utils.wrapConstructor");
  Ne2(e2.outputLen), Ne2(e2.blockLen);
}
function me3(e2, t2 = true) {
  if (e2.destroyed) throw new Error("Hash instance has been destroyed");
  if (t2 && e2.finished) throw new Error("Hash#digest() has already been called");
}
function sn3(e2, t2) {
  je3(e2);
  const n2 = t2.outputLen;
  if (e2.length < n2) throw new Error("digestInto() expects output buffer of length at least " + n2);
}
var Ce3 = BigInt(2 ** 32 - 1);
var cn = BigInt(32);
function Oo3(e2, t2 = false) {
  return t2 ? { h: Number(e2 & Ce3), l: Number(e2 >> cn & Ce3) } : { h: Number(e2 >> cn & Ce3) | 0, l: Number(e2 & Ce3) | 0 };
}
function Io3(e2, t2 = false) {
  let n2 = new Uint32Array(e2.length), r2 = new Uint32Array(e2.length);
  for (let o2 = 0; o2 < e2.length; o2++) {
    const { h: s2, l: i4 } = Oo3(e2[o2], t2);
    [n2[o2], r2[o2]] = [s2, i4];
  }
  return [n2, r2];
}
var Ao3 = (e2, t2, n2) => e2 << n2 | t2 >>> 32 - n2;
var No3 = (e2, t2, n2) => t2 << n2 | e2 >>> 32 - n2;
var So3 = (e2, t2, n2) => t2 << n2 - 32 | e2 >>> 64 - n2;
var Uo3 = (e2, t2, n2) => e2 << n2 - 32 | t2 >>> 64 - n2;
var be3 = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
function _o3(e2) {
  return new Uint32Array(e2.buffer, e2.byteOffset, Math.floor(e2.byteLength / 4));
}
function st(e2) {
  return new DataView(e2.buffer, e2.byteOffset, e2.byteLength);
}
function J3(e2, t2) {
  return e2 << 32 - t2 | e2 >>> t2;
}
var an = (() => new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68)();
function To3(e2) {
  return e2 << 24 & 4278190080 | e2 << 8 & 16711680 | e2 >>> 8 & 65280 | e2 >>> 24 & 255;
}
function un(e2) {
  for (let t2 = 0; t2 < e2.length; t2++) e2[t2] = To3(e2[t2]);
}
function $o3(e2) {
  if (typeof e2 != "string") throw new Error("utf8ToBytes expected string, got " + typeof e2);
  return new Uint8Array(new TextEncoder().encode(e2));
}
function we3(e2) {
  return typeof e2 == "string" && (e2 = $o3(e2)), je3(e2), e2;
}
var it3 = class {
  clone() {
    return this._cloneInto();
  }
};
function fn(e2) {
  const t2 = (r2) => e2().update(we3(r2)).digest(), n2 = e2();
  return t2.outputLen = n2.outputLen, t2.blockLen = n2.blockLen, t2.create = () => e2(), t2;
}
function Se3(e2 = 32) {
  if (be3 && typeof be3.getRandomValues == "function") return be3.getRandomValues(new Uint8Array(e2));
  if (be3 && typeof be3.randomBytes == "function") return be3.randomBytes(e2);
  throw new Error("crypto.getRandomValues must be defined");
}
var ln = [];
var dn = [];
var hn = [];
var Ro3 = BigInt(0);
var Ue3 = BigInt(1);
var Po2 = BigInt(2);
var Lo3 = BigInt(7);
var Bo3 = BigInt(256);
var jo3 = BigInt(113);
for (let e2 = 0, t2 = Ue3, n2 = 1, r2 = 0; e2 < 24; e2++) {
  [n2, r2] = [r2, (2 * n2 + 3 * r2) % 5], ln.push(2 * (5 * r2 + n2)), dn.push((e2 + 1) * (e2 + 2) / 2 % 64);
  let o2 = Ro3;
  for (let s2 = 0; s2 < 7; s2++) t2 = (t2 << Ue3 ^ (t2 >> Lo3) * jo3) % Bo3, t2 & Po2 && (o2 ^= Ue3 << (Ue3 << BigInt(s2)) - Ue3);
  hn.push(o2);
}
var [Co3, ko3] = Io3(hn, true);
var pn = (e2, t2, n2) => n2 > 32 ? So3(e2, t2, n2) : Ao3(e2, t2, n2);
var gn3 = (e2, t2, n2) => n2 > 32 ? Uo3(e2, t2, n2) : No3(e2, t2, n2);
function Do3(e2, t2 = 24) {
  const n2 = new Uint32Array(10);
  for (let r2 = 24 - t2; r2 < 24; r2++) {
    for (let i4 = 0; i4 < 10; i4++) n2[i4] = e2[i4] ^ e2[i4 + 10] ^ e2[i4 + 20] ^ e2[i4 + 30] ^ e2[i4 + 40];
    for (let i4 = 0; i4 < 10; i4 += 2) {
      const c3 = (i4 + 8) % 10, u3 = (i4 + 2) % 10, a2 = n2[u3], l3 = n2[u3 + 1], f5 = pn(a2, l3, 1) ^ n2[c3], d4 = gn3(a2, l3, 1) ^ n2[c3 + 1];
      for (let g3 = 0; g3 < 50; g3 += 10) e2[i4 + g3] ^= f5, e2[i4 + g3 + 1] ^= d4;
    }
    let o2 = e2[2], s2 = e2[3];
    for (let i4 = 0; i4 < 24; i4++) {
      const c3 = dn[i4], u3 = pn(o2, s2, c3), a2 = gn3(o2, s2, c3), l3 = ln[i4];
      o2 = e2[l3], s2 = e2[l3 + 1], e2[l3] = u3, e2[l3 + 1] = a2;
    }
    for (let i4 = 0; i4 < 50; i4 += 10) {
      for (let c3 = 0; c3 < 10; c3++) n2[c3] = e2[i4 + c3];
      for (let c3 = 0; c3 < 10; c3++) e2[i4 + c3] ^= ~n2[(c3 + 2) % 10] & n2[(c3 + 4) % 10];
    }
    e2[0] ^= Co3[r2], e2[1] ^= ko3[r2];
  }
  n2.fill(0);
}
var Bt3 = class _Bt extends it3 {
  constructor(t2, n2, r2, o2 = false, s2 = 24) {
    if (super(), this.blockLen = t2, this.suffix = n2, this.outputLen = r2, this.enableXOF = o2, this.rounds = s2, this.pos = 0, this.posOut = 0, this.finished = false, this.destroyed = false, Ne2(r2), 0 >= this.blockLen || this.blockLen >= 200) throw new Error("Sha3 supports only keccak-f1600 function");
    this.state = new Uint8Array(200), this.state32 = _o3(this.state);
  }
  keccak() {
    an || un(this.state32), Do3(this.state32, this.rounds), an || un(this.state32), this.posOut = 0, this.pos = 0;
  }
  update(t2) {
    me3(this);
    const { blockLen: n2, state: r2 } = this;
    t2 = we3(t2);
    const o2 = t2.length;
    for (let s2 = 0; s2 < o2; ) {
      const i4 = Math.min(n2 - this.pos, o2 - s2);
      for (let c3 = 0; c3 < i4; c3++) r2[this.pos++] ^= t2[s2++];
      this.pos === n2 && this.keccak();
    }
    return this;
  }
  finish() {
    if (this.finished) return;
    this.finished = true;
    const { state: t2, suffix: n2, pos: r2, blockLen: o2 } = this;
    t2[r2] ^= n2, n2 & 128 && r2 === o2 - 1 && this.keccak(), t2[o2 - 1] ^= 128, this.keccak();
  }
  writeInto(t2) {
    me3(this, false), je3(t2), this.finish();
    const n2 = this.state, { blockLen: r2 } = this;
    for (let o2 = 0, s2 = t2.length; o2 < s2; ) {
      this.posOut >= r2 && this.keccak();
      const i4 = Math.min(r2 - this.posOut, s2 - o2);
      t2.set(n2.subarray(this.posOut, this.posOut + i4), o2), this.posOut += i4, o2 += i4;
    }
    return t2;
  }
  xofInto(t2) {
    if (!this.enableXOF) throw new Error("XOF is not possible for this instance");
    return this.writeInto(t2);
  }
  xof(t2) {
    return Ne2(t2), this.xofInto(new Uint8Array(t2));
  }
  digestInto(t2) {
    if (sn3(t2, this), this.finished) throw new Error("digest() was already called");
    return this.writeInto(t2), this.destroy(), t2;
  }
  digest() {
    return this.digestInto(new Uint8Array(this.outputLen));
  }
  destroy() {
    this.destroyed = true, this.state.fill(0);
  }
  _cloneInto(t2) {
    const { blockLen: n2, suffix: r2, outputLen: o2, rounds: s2, enableXOF: i4 } = this;
    return t2 || (t2 = new _Bt(n2, r2, o2, i4, s2)), t2.state32.set(this.state32), t2.pos = this.pos, t2.posOut = this.posOut, t2.finished = this.finished, t2.rounds = s2, t2.suffix = r2, t2.outputLen = o2, t2.enableXOF = i4, t2.destroyed = this.destroyed, t2;
  }
};
var Mo3 = (e2, t2, n2) => fn(() => new Bt3(t2, e2, n2));
var Vo3 = Mo3(1, 136, 256 / 8);
var Ho3 = "https://rpc.walletconnect.org/v1";
function ct3(e2) {
  const t2 = `Ethereum Signed Message:
${e2.length}`, n2 = new TextEncoder().encode(t2 + e2);
  return "0x" + Buffer.from(Vo3(n2)).toString("hex");
}
async function yn3(e2, t2, n2, r2, o2, s2) {
  switch (n2.t) {
    case "eip191":
      return mn3(e2, t2, n2.s);
    case "eip1271":
      return await bn3(e2, t2, n2.s, r2, o2, s2);
    default:
      throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${n2.t}`);
  }
}
function mn3(e2, t2, n2) {
  return recoverAddress(ct3(t2), n2).toLowerCase() === e2.toLowerCase();
}
async function bn3(e2, t2, n2, r2, o2, s2) {
  const i4 = Ye3(r2);
  if (!i4.namespace || !i4.reference) throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${r2}`);
  try {
    const c3 = "0x1626ba7e", u3 = "0000000000000000000000000000000000000000000000000000000000000040", a2 = "0000000000000000000000000000000000000000000000000000000000000041", l3 = n2.substring(2), f5 = ct3(t2).substring(2), d4 = c3 + f5 + u3 + a2 + l3, g3 = await fetch(`${s2 || Ho3}/?chainId=${r2}&projectId=${o2}`, { method: "POST", body: JSON.stringify({ id: Ko3(), jsonrpc: "2.0", method: "eth_call", params: [{ to: e2, data: d4 }, "latest"] }) }), { result: y5 } = await g3.json();
    return y5 ? y5.slice(0, c3.length).toLowerCase() === c3.toLowerCase() : false;
  } catch (c3) {
    return console.error("isValidEip1271Signature: ", c3), false;
  }
}
function Ko3() {
  return Date.now() + Math.floor(Math.random() * 1e3);
}
var Fo3 = Object.defineProperty;
var qo3 = Object.defineProperties;
var Go3 = Object.getOwnPropertyDescriptors;
var wn = Object.getOwnPropertySymbols;
var Wo3 = Object.prototype.hasOwnProperty;
var zo3 = Object.prototype.propertyIsEnumerable;
var En3 = (e2, t2, n2) => t2 in e2 ? Fo3(e2, t2, { enumerable: true, configurable: true, writable: true, value: n2 }) : e2[t2] = n2;
var at = (e2, t2) => {
  for (var n2 in t2 || (t2 = {})) Wo3.call(t2, n2) && En3(e2, n2, t2[n2]);
  if (wn) for (var n2 of wn(t2)) zo3.call(t2, n2) && En3(e2, n2, t2[n2]);
  return e2;
};
var vn3 = (e2, t2) => qo3(e2, Go3(t2));
var Jo3 = "did:pkh:";
var ke3 = (e2) => e2 == null ? void 0 : e2.split(":");
var xn3 = (e2) => {
  const t2 = e2 && ke3(e2);
  if (t2) return e2.includes(Jo3) ? t2[3] : t2[1];
};
var On3 = (e2) => {
  const t2 = e2 && ke3(e2);
  if (t2) return t2[2] + ":" + t2[3];
};
var ut3 = (e2) => {
  const t2 = e2 && ke3(e2);
  if (t2) return t2.pop();
};
async function Yo3(e2) {
  const { cacao: t2, projectId: n2 } = e2, { s: r2, p: o2 } = t2, s2 = In3(o2, o2.iss), i4 = ut3(o2.iss);
  return await yn3(i4, s2, r2, On3(o2.iss), n2);
}
var In3 = (e2, t2) => {
  const n2 = `${e2.domain} wants you to sign in with your Ethereum account:`, r2 = ut3(t2);
  if (!e2.aud && !e2.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
  let o2 = e2.statement || void 0;
  const s2 = `URI: ${e2.aud || e2.uri}`, i4 = `Version: ${e2.version}`, c3 = `Chain ID: ${xn3(t2)}`, u3 = `Nonce: ${e2.nonce}`, a2 = `Issued At: ${e2.iat}`, l3 = e2.exp ? `Expiration Time: ${e2.exp}` : void 0, f5 = e2.nbf ? `Not Before: ${e2.nbf}` : void 0, d4 = e2.requestId ? `Request ID: ${e2.requestId}` : void 0, g3 = e2.resources ? `Resources:${e2.resources.map((h6) => `
- ${h6}`).join("")}` : void 0, y5 = Me3(e2.resources);
  if (y5) {
    const h6 = oe(y5);
    o2 = dt2(o2, h6);
  }
  return [n2, r2, "", o2, "", s2, i4, c3, u3, a2, l3, f5, d4, g3].filter((h6) => h6 != null).join(`
`);
};
function Un3(e2) {
  return Buffer.from(JSON.stringify(e2)).toString("base64");
}
function _n3(e2) {
  return JSON.parse(Buffer.from(e2, "base64").toString("utf-8"));
}
function Y(e2) {
  if (!e2) throw new Error("No recap provided, value is undefined");
  if (!e2.att) throw new Error("No `att` property found");
  const t2 = Object.keys(e2.att);
  if (!(t2 != null && t2.length)) throw new Error("No resources found in `att` property");
  t2.forEach((n2) => {
    const r2 = e2.att[n2];
    if (Array.isArray(r2)) throw new Error(`Resource must be an object: ${n2}`);
    if (typeof r2 != "object") throw new Error(`Resource must be an object: ${n2}`);
    if (!Object.keys(r2).length) throw new Error(`Resource object is empty: ${n2}`);
    Object.keys(r2).forEach((o2) => {
      const s2 = r2[o2];
      if (!Array.isArray(s2)) throw new Error(`Ability limits ${o2} must be an array of objects, found: ${s2}`);
      if (!s2.length) throw new Error(`Value of ${o2} is empty array, must be an array with objects`);
      s2.forEach((i4) => {
        if (typeof i4 != "object") throw new Error(`Ability limits (${o2}) must be an array of objects, found: ${i4}`);
      });
    });
  });
}
function Tn3(e2, t2, n2, r2 = {}) {
  return n2 == null ? void 0 : n2.sort((o2, s2) => o2.localeCompare(s2)), { att: { [e2]: ft3(t2, n2, r2) } };
}
function ft3(e2, t2, n2 = {}) {
  t2 = t2 == null ? void 0 : t2.sort((o2, s2) => o2.localeCompare(s2));
  const r2 = t2.map((o2) => ({ [`${e2}/${o2}`]: [n2] }));
  return Object.assign({}, ...r2);
}
function De3(e2) {
  return Y(e2), `urn:recap:${Un3(e2).replace(/=/g, "")}`;
}
function oe(e2) {
  const t2 = _n3(e2.replace("urn:recap:", ""));
  return Y(t2), t2;
}
function ts(e2, t2, n2) {
  const r2 = Tn3(e2, t2, n2);
  return De3(r2);
}
function lt3(e2) {
  return e2 && e2.includes("urn:recap:");
}
function ns(e2, t2) {
  const n2 = oe(e2), r2 = oe(t2), o2 = Rn3(n2, r2);
  return De3(o2);
}
function Rn3(e2, t2) {
  Y(e2), Y(t2);
  const n2 = Object.keys(e2.att).concat(Object.keys(t2.att)).sort((o2, s2) => o2.localeCompare(s2)), r2 = { att: {} };
  return n2.forEach((o2) => {
    var s2, i4;
    Object.keys(((s2 = e2.att) == null ? void 0 : s2[o2]) || {}).concat(Object.keys(((i4 = t2.att) == null ? void 0 : i4[o2]) || {})).sort((c3, u3) => c3.localeCompare(u3)).forEach((c3) => {
      var u3, a2;
      r2.att[o2] = vn3(at({}, r2.att[o2]), { [c3]: ((u3 = e2.att[o2]) == null ? void 0 : u3[c3]) || ((a2 = t2.att[o2]) == null ? void 0 : a2[c3]) });
    });
  }), r2;
}
function dt2(e2 = "", t2) {
  Y(t2);
  const n2 = "I further authorize the stated URI to perform the following actions on my behalf: ";
  if (e2.includes(n2)) return e2;
  const r2 = [];
  let o2 = 0;
  Object.keys(t2.att).forEach((c3) => {
    const u3 = Object.keys(t2.att[c3]).map((f5) => ({ ability: f5.split("/")[0], action: f5.split("/")[1] }));
    u3.sort((f5, d4) => f5.action.localeCompare(d4.action));
    const a2 = {};
    u3.forEach((f5) => {
      a2[f5.ability] || (a2[f5.ability] = []), a2[f5.ability].push(f5.action);
    });
    const l3 = Object.keys(a2).map((f5) => (o2++, `(${o2}) '${f5}': '${a2[f5].join("', '")}' for '${c3}'.`));
    r2.push(l3.join(", ").replace(".,", "."));
  });
  const s2 = r2.join(" "), i4 = `${n2}${s2}`;
  return `${e2 ? e2 + " " : ""}${i4}`;
}
function rs(e2) {
  var t2;
  const n2 = oe(e2);
  Y(n2);
  const r2 = (t2 = n2.att) == null ? void 0 : t2.eip155;
  return r2 ? Object.keys(r2).map((o2) => o2.split("/")[1]) : [];
}
function os(e2) {
  const t2 = oe(e2);
  Y(t2);
  const n2 = [];
  return Object.values(t2.att).forEach((r2) => {
    Object.values(r2).forEach((o2) => {
      var s2;
      (s2 = o2 == null ? void 0 : o2[0]) != null && s2.chains && n2.push(o2[0].chains);
    });
  }), [...new Set(n2.flat())];
}
function Me3(e2) {
  if (!e2) return;
  const t2 = e2 == null ? void 0 : e2[e2.length - 1];
  return lt3(t2) ? t2 : void 0;
}
function ht3(e2) {
  if (!Number.isSafeInteger(e2) || e2 < 0) throw new Error("positive integer expected, got " + e2);
}
function Ln3(e2) {
  return e2 instanceof Uint8Array || ArrayBuffer.isView(e2) && e2.constructor.name === "Uint8Array";
}
function F(e2, ...t2) {
  if (!Ln3(e2)) throw new Error("Uint8Array expected");
  if (t2.length > 0 && !t2.includes(e2.length)) throw new Error("Uint8Array expected of length " + t2 + ", got length=" + e2.length);
}
function Bn3(e2, t2 = true) {
  if (e2.destroyed) throw new Error("Hash instance has been destroyed");
  if (t2 && e2.finished) throw new Error("Hash#digest() has already been called");
}
function ss(e2, t2) {
  F(e2);
  const n2 = t2.outputLen;
  if (e2.length < n2) throw new Error("digestInto() expects output buffer of length at least " + n2);
}
function jn3(e2) {
  if (typeof e2 != "boolean") throw new Error(`boolean expected, not ${e2}`);
}
var se = (e2) => new Uint32Array(e2.buffer, e2.byteOffset, Math.floor(e2.byteLength / 4));
var is2 = (e2) => new DataView(e2.buffer, e2.byteOffset, e2.byteLength);
var cs = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!cs) throw new Error("Non little-endian hardware is not supported");
function as(e2) {
  if (typeof e2 != "string") throw new Error("string expected");
  return new Uint8Array(new TextEncoder().encode(e2));
}
function pt(e2) {
  if (typeof e2 == "string") e2 = as(e2);
  else if (Ln3(e2)) e2 = gt3(e2);
  else throw new Error("Uint8Array expected, got " + typeof e2);
  return e2;
}
function us(e2, t2) {
  if (t2 == null || typeof t2 != "object") throw new Error("options must be defined");
  return Object.assign(e2, t2);
}
function fs(e2, t2) {
  if (e2.length !== t2.length) return false;
  let n2 = 0;
  for (let r2 = 0; r2 < e2.length; r2++) n2 |= e2[r2] ^ t2[r2];
  return n2 === 0;
}
var ls = (e2, t2) => {
  function n2(r2, ...o2) {
    if (F(r2), e2.nonceLength !== void 0) {
      const l3 = o2[0];
      if (!l3) throw new Error("nonce / iv required");
      e2.varSizeNonce ? F(l3) : F(l3, e2.nonceLength);
    }
    const s2 = e2.tagLength;
    s2 && o2[1] !== void 0 && F(o2[1]);
    const i4 = t2(r2, ...o2), c3 = (l3, f5) => {
      if (f5 !== void 0) {
        if (l3 !== 2) throw new Error("cipher output not supported");
        F(f5);
      }
    };
    let u3 = false;
    return { encrypt(l3, f5) {
      if (u3) throw new Error("cannot encrypt() twice with same key + nonce");
      return u3 = true, F(l3), c3(i4.encrypt.length, f5), i4.encrypt(l3, f5);
    }, decrypt(l3, f5) {
      if (F(l3), s2 && l3.length < s2) throw new Error("invalid ciphertext length: smaller than tagLength=" + s2);
      return c3(i4.decrypt.length, f5), i4.decrypt(l3, f5);
    } };
  }
  return Object.assign(n2, e2), n2;
};
function Cn3(e2, t2, n2 = true) {
  if (t2 === void 0) return new Uint8Array(e2);
  if (t2.length !== e2) throw new Error("invalid output length, expected " + e2 + ", got: " + t2.length);
  if (n2 && !ds(t2)) throw new Error("invalid output, must be aligned");
  return t2;
}
function kn3(e2, t2, n2, r2) {
  if (typeof e2.setBigUint64 == "function") return e2.setBigUint64(t2, n2, r2);
  const o2 = BigInt(32), s2 = BigInt(4294967295), i4 = Number(n2 >> o2 & s2), c3 = Number(n2 & s2), u3 = r2 ? 4 : 0, a2 = r2 ? 0 : 4;
  e2.setUint32(t2 + u3, i4, r2), e2.setUint32(t2 + a2, c3, r2);
}
function ds(e2) {
  return e2.byteOffset % 4 === 0;
}
function gt3(e2) {
  return Uint8Array.from(e2);
}
function Ee3(...e2) {
  for (let t2 = 0; t2 < e2.length; t2++) e2[t2].fill(0);
}
var Dn = (e2) => Uint8Array.from(e2.split("").map((t2) => t2.charCodeAt(0)));
var hs = Dn("expand 16-byte k");
var ps = Dn("expand 32-byte k");
var gs = se(hs);
var ys = se(ps);
function x4(e2, t2) {
  return e2 << t2 | e2 >>> 32 - t2;
}
function yt3(e2) {
  return e2.byteOffset % 4 === 0;
}
var Ve3 = 64;
var ms = 16;
var Mn3 = 2 ** 32 - 1;
var Vn3 = new Uint32Array();
function bs(e2, t2, n2, r2, o2, s2, i4, c3) {
  const u3 = o2.length, a2 = new Uint8Array(Ve3), l3 = se(a2), f5 = yt3(o2) && yt3(s2), d4 = f5 ? se(o2) : Vn3, g3 = f5 ? se(s2) : Vn3;
  for (let y5 = 0; y5 < u3; i4++) {
    if (e2(t2, n2, r2, l3, i4, c3), i4 >= Mn3) throw new Error("arx: counter overflow");
    const h6 = Math.min(Ve3, u3 - y5);
    if (f5 && h6 === Ve3) {
      const m = y5 / 4;
      if (y5 % 4 !== 0) throw new Error("arx: invalid block position");
      for (let B3 = 0, b3; B3 < ms; B3++) b3 = m + B3, g3[b3] = d4[b3] ^ l3[B3];
      y5 += Ve3;
      continue;
    }
    for (let m = 0, B3; m < h6; m++) B3 = y5 + m, s2[B3] = o2[B3] ^ a2[m];
    y5 += h6;
  }
}
function ws(e2, t2) {
  const { allowShortKeys: n2, extendNonceFn: r2, counterLength: o2, counterRight: s2, rounds: i4 } = us({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, t2);
  if (typeof e2 != "function") throw new Error("core must be a function");
  return ht3(o2), ht3(i4), jn3(s2), jn3(n2), (c3, u3, a2, l3, f5 = 0) => {
    F(c3), F(u3), F(a2);
    const d4 = a2.length;
    if (l3 === void 0 && (l3 = new Uint8Array(d4)), F(l3), ht3(f5), f5 < 0 || f5 >= Mn3) throw new Error("arx: counter overflow");
    if (l3.length < d4) throw new Error(`arx: output (${l3.length}) is shorter than data (${d4})`);
    const g3 = [];
    let y5 = c3.length, h6, m;
    if (y5 === 32) g3.push(h6 = gt3(c3)), m = ys;
    else if (y5 === 16 && n2) h6 = new Uint8Array(32), h6.set(c3), h6.set(c3, 16), m = gs, g3.push(h6);
    else throw new Error(`arx: invalid 32-byte key, got length=${y5}`);
    yt3(u3) || g3.push(u3 = gt3(u3));
    const B3 = se(h6);
    if (r2) {
      if (u3.length !== 24) throw new Error("arx: extended nonce must be 24 bytes");
      r2(m, B3, se(u3.subarray(0, 16)), B3), u3 = u3.subarray(16);
    }
    const b3 = 16 - o2;
    if (b3 !== u3.length) throw new Error(`arx: nonce must be ${b3} or 16 bytes`);
    if (b3 !== 12) {
      const I3 = new Uint8Array(12);
      I3.set(u3, s2 ? 0 : 12 - u3.length), u3 = I3, g3.push(u3);
    }
    const _3 = se(u3);
    return bs(e2, m, B3, _3, a2, l3, f5, i4), Ee3(...g3), l3;
  };
}
var M4 = (e2, t2) => e2[t2++] & 255 | (e2[t2++] & 255) << 8;
var Es = class {
  constructor(t2) {
    this.blockLen = 16, this.outputLen = 16, this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.pos = 0, this.finished = false, t2 = pt(t2), F(t2, 32);
    const n2 = M4(t2, 0), r2 = M4(t2, 2), o2 = M4(t2, 4), s2 = M4(t2, 6), i4 = M4(t2, 8), c3 = M4(t2, 10), u3 = M4(t2, 12), a2 = M4(t2, 14);
    this.r[0] = n2 & 8191, this.r[1] = (n2 >>> 13 | r2 << 3) & 8191, this.r[2] = (r2 >>> 10 | o2 << 6) & 7939, this.r[3] = (o2 >>> 7 | s2 << 9) & 8191, this.r[4] = (s2 >>> 4 | i4 << 12) & 255, this.r[5] = i4 >>> 1 & 8190, this.r[6] = (i4 >>> 14 | c3 << 2) & 8191, this.r[7] = (c3 >>> 11 | u3 << 5) & 8065, this.r[8] = (u3 >>> 8 | a2 << 8) & 8191, this.r[9] = a2 >>> 5 & 127;
    for (let l3 = 0; l3 < 8; l3++) this.pad[l3] = M4(t2, 16 + 2 * l3);
  }
  process(t2, n2, r2 = false) {
    const o2 = r2 ? 0 : 2048, { h: s2, r: i4 } = this, c3 = i4[0], u3 = i4[1], a2 = i4[2], l3 = i4[3], f5 = i4[4], d4 = i4[5], g3 = i4[6], y5 = i4[7], h6 = i4[8], m = i4[9], B3 = M4(t2, n2 + 0), b3 = M4(t2, n2 + 2), _3 = M4(t2, n2 + 4), I3 = M4(t2, n2 + 6), k6 = M4(t2, n2 + 8), E4 = M4(t2, n2 + 10), L3 = M4(t2, n2 + 12), j5 = M4(t2, n2 + 14);
    let v6 = s2[0] + (B3 & 8191), O2 = s2[1] + ((B3 >>> 13 | b3 << 3) & 8191), w3 = s2[2] + ((b3 >>> 10 | _3 << 6) & 8191), R3 = s2[3] + ((_3 >>> 7 | I3 << 9) & 8191), A4 = s2[4] + ((I3 >>> 4 | k6 << 12) & 8191), T3 = s2[5] + (k6 >>> 1 & 8191), N4 = s2[6] + ((k6 >>> 14 | E4 << 2) & 8191), S3 = s2[7] + ((E4 >>> 11 | L3 << 5) & 8191), U3 = s2[8] + ((L3 >>> 8 | j5 << 8) & 8191), $3 = s2[9] + (j5 >>> 5 | o2), p3 = 0, C5 = p3 + v6 * c3 + O2 * (5 * m) + w3 * (5 * h6) + R3 * (5 * y5) + A4 * (5 * g3);
    p3 = C5 >>> 13, C5 &= 8191, C5 += T3 * (5 * d4) + N4 * (5 * f5) + S3 * (5 * l3) + U3 * (5 * a2) + $3 * (5 * u3), p3 += C5 >>> 13, C5 &= 8191;
    let D3 = p3 + v6 * u3 + O2 * c3 + w3 * (5 * m) + R3 * (5 * h6) + A4 * (5 * y5);
    p3 = D3 >>> 13, D3 &= 8191, D3 += T3 * (5 * g3) + N4 * (5 * d4) + S3 * (5 * f5) + U3 * (5 * l3) + $3 * (5 * a2), p3 += D3 >>> 13, D3 &= 8191;
    let P4 = p3 + v6 * a2 + O2 * u3 + w3 * c3 + R3 * (5 * m) + A4 * (5 * h6);
    p3 = P4 >>> 13, P4 &= 8191, P4 += T3 * (5 * y5) + N4 * (5 * g3) + S3 * (5 * d4) + U3 * (5 * f5) + $3 * (5 * l3), p3 += P4 >>> 13, P4 &= 8191;
    let G3 = p3 + v6 * l3 + O2 * a2 + w3 * u3 + R3 * c3 + A4 * (5 * m);
    p3 = G3 >>> 13, G3 &= 8191, G3 += T3 * (5 * h6) + N4 * (5 * y5) + S3 * (5 * g3) + U3 * (5 * d4) + $3 * (5 * f5), p3 += G3 >>> 13, G3 &= 8191;
    let X3 = p3 + v6 * f5 + O2 * l3 + w3 * a2 + R3 * u3 + A4 * c3;
    p3 = X3 >>> 13, X3 &= 8191, X3 += T3 * (5 * m) + N4 * (5 * h6) + S3 * (5 * y5) + U3 * (5 * g3) + $3 * (5 * d4), p3 += X3 >>> 13, X3 &= 8191;
    let Z3 = p3 + v6 * d4 + O2 * f5 + w3 * l3 + R3 * a2 + A4 * u3;
    p3 = Z3 >>> 13, Z3 &= 8191, Z3 += T3 * c3 + N4 * (5 * m) + S3 * (5 * h6) + U3 * (5 * y5) + $3 * (5 * g3), p3 += Z3 >>> 13, Z3 &= 8191;
    let he5 = p3 + v6 * g3 + O2 * d4 + w3 * f5 + R3 * l3 + A4 * a2;
    p3 = he5 >>> 13, he5 &= 8191, he5 += T3 * u3 + N4 * c3 + S3 * (5 * m) + U3 * (5 * h6) + $3 * (5 * y5), p3 += he5 >>> 13, he5 &= 8191;
    let pe4 = p3 + v6 * y5 + O2 * g3 + w3 * d4 + R3 * f5 + A4 * l3;
    p3 = pe4 >>> 13, pe4 &= 8191, pe4 += T3 * a2 + N4 * u3 + S3 * c3 + U3 * (5 * m) + $3 * (5 * h6), p3 += pe4 >>> 13, pe4 &= 8191;
    let ge4 = p3 + v6 * h6 + O2 * y5 + w3 * g3 + R3 * d4 + A4 * f5;
    p3 = ge4 >>> 13, ge4 &= 8191, ge4 += T3 * l3 + N4 * a2 + S3 * u3 + U3 * c3 + $3 * (5 * m), p3 += ge4 >>> 13, ge4 &= 8191;
    let ye6 = p3 + v6 * m + O2 * h6 + w3 * y5 + R3 * g3 + A4 * d4;
    p3 = ye6 >>> 13, ye6 &= 8191, ye6 += T3 * f5 + N4 * l3 + S3 * a2 + U3 * u3 + $3 * c3, p3 += ye6 >>> 13, ye6 &= 8191, p3 = (p3 << 2) + p3 | 0, p3 = p3 + C5 | 0, C5 = p3 & 8191, p3 = p3 >>> 13, D3 += p3, s2[0] = C5, s2[1] = D3, s2[2] = P4, s2[3] = G3, s2[4] = X3, s2[5] = Z3, s2[6] = he5, s2[7] = pe4, s2[8] = ge4, s2[9] = ye6;
  }
  finalize() {
    const { h: t2, pad: n2 } = this, r2 = new Uint16Array(10);
    let o2 = t2[1] >>> 13;
    t2[1] &= 8191;
    for (let c3 = 2; c3 < 10; c3++) t2[c3] += o2, o2 = t2[c3] >>> 13, t2[c3] &= 8191;
    t2[0] += o2 * 5, o2 = t2[0] >>> 13, t2[0] &= 8191, t2[1] += o2, o2 = t2[1] >>> 13, t2[1] &= 8191, t2[2] += o2, r2[0] = t2[0] + 5, o2 = r2[0] >>> 13, r2[0] &= 8191;
    for (let c3 = 1; c3 < 10; c3++) r2[c3] = t2[c3] + o2, o2 = r2[c3] >>> 13, r2[c3] &= 8191;
    r2[9] -= 8192;
    let s2 = (o2 ^ 1) - 1;
    for (let c3 = 0; c3 < 10; c3++) r2[c3] &= s2;
    s2 = ~s2;
    for (let c3 = 0; c3 < 10; c3++) t2[c3] = t2[c3] & s2 | r2[c3];
    t2[0] = (t2[0] | t2[1] << 13) & 65535, t2[1] = (t2[1] >>> 3 | t2[2] << 10) & 65535, t2[2] = (t2[2] >>> 6 | t2[3] << 7) & 65535, t2[3] = (t2[3] >>> 9 | t2[4] << 4) & 65535, t2[4] = (t2[4] >>> 12 | t2[5] << 1 | t2[6] << 14) & 65535, t2[5] = (t2[6] >>> 2 | t2[7] << 11) & 65535, t2[6] = (t2[7] >>> 5 | t2[8] << 8) & 65535, t2[7] = (t2[8] >>> 8 | t2[9] << 5) & 65535;
    let i4 = t2[0] + n2[0];
    t2[0] = i4 & 65535;
    for (let c3 = 1; c3 < 8; c3++) i4 = (t2[c3] + n2[c3] | 0) + (i4 >>> 16) | 0, t2[c3] = i4 & 65535;
    Ee3(r2);
  }
  update(t2) {
    Bn3(this);
    const { buffer: n2, blockLen: r2 } = this;
    t2 = pt(t2);
    const o2 = t2.length;
    for (let s2 = 0; s2 < o2; ) {
      const i4 = Math.min(r2 - this.pos, o2 - s2);
      if (i4 === r2) {
        for (; r2 <= o2 - s2; s2 += r2) this.process(t2, s2);
        continue;
      }
      n2.set(t2.subarray(s2, s2 + i4), this.pos), this.pos += i4, s2 += i4, this.pos === r2 && (this.process(n2, 0, false), this.pos = 0);
    }
    return this;
  }
  destroy() {
    Ee3(this.h, this.r, this.buffer, this.pad);
  }
  digestInto(t2) {
    Bn3(this), ss(t2, this), this.finished = true;
    const { buffer: n2, h: r2 } = this;
    let { pos: o2 } = this;
    if (o2) {
      for (n2[o2++] = 1; o2 < 16; o2++) n2[o2] = 0;
      this.process(n2, 0, true);
    }
    this.finalize();
    let s2 = 0;
    for (let i4 = 0; i4 < 8; i4++) t2[s2++] = r2[i4] >>> 0, t2[s2++] = r2[i4] >>> 8;
    return t2;
  }
  digest() {
    const { buffer: t2, outputLen: n2 } = this;
    this.digestInto(t2);
    const r2 = t2.slice(0, n2);
    return this.destroy(), r2;
  }
};
function vs(e2) {
  const t2 = (r2, o2) => e2(o2).update(pt(r2)).digest(), n2 = e2(new Uint8Array(32));
  return t2.outputLen = n2.outputLen, t2.blockLen = n2.blockLen, t2.create = (r2) => e2(r2), t2;
}
var xs = vs((e2) => new Es(e2));
function Os(e2, t2, n2, r2, o2, s2 = 20) {
  let i4 = e2[0], c3 = e2[1], u3 = e2[2], a2 = e2[3], l3 = t2[0], f5 = t2[1], d4 = t2[2], g3 = t2[3], y5 = t2[4], h6 = t2[5], m = t2[6], B3 = t2[7], b3 = o2, _3 = n2[0], I3 = n2[1], k6 = n2[2], E4 = i4, L3 = c3, j5 = u3, v6 = a2, O2 = l3, w3 = f5, R3 = d4, A4 = g3, T3 = y5, N4 = h6, S3 = m, U3 = B3, $3 = b3, p3 = _3, C5 = I3, D3 = k6;
  for (let G3 = 0; G3 < s2; G3 += 2) E4 = E4 + O2 | 0, $3 = x4($3 ^ E4, 16), T3 = T3 + $3 | 0, O2 = x4(O2 ^ T3, 12), E4 = E4 + O2 | 0, $3 = x4($3 ^ E4, 8), T3 = T3 + $3 | 0, O2 = x4(O2 ^ T3, 7), L3 = L3 + w3 | 0, p3 = x4(p3 ^ L3, 16), N4 = N4 + p3 | 0, w3 = x4(w3 ^ N4, 12), L3 = L3 + w3 | 0, p3 = x4(p3 ^ L3, 8), N4 = N4 + p3 | 0, w3 = x4(w3 ^ N4, 7), j5 = j5 + R3 | 0, C5 = x4(C5 ^ j5, 16), S3 = S3 + C5 | 0, R3 = x4(R3 ^ S3, 12), j5 = j5 + R3 | 0, C5 = x4(C5 ^ j5, 8), S3 = S3 + C5 | 0, R3 = x4(R3 ^ S3, 7), v6 = v6 + A4 | 0, D3 = x4(D3 ^ v6, 16), U3 = U3 + D3 | 0, A4 = x4(A4 ^ U3, 12), v6 = v6 + A4 | 0, D3 = x4(D3 ^ v6, 8), U3 = U3 + D3 | 0, A4 = x4(A4 ^ U3, 7), E4 = E4 + w3 | 0, D3 = x4(D3 ^ E4, 16), S3 = S3 + D3 | 0, w3 = x4(w3 ^ S3, 12), E4 = E4 + w3 | 0, D3 = x4(D3 ^ E4, 8), S3 = S3 + D3 | 0, w3 = x4(w3 ^ S3, 7), L3 = L3 + R3 | 0, $3 = x4($3 ^ L3, 16), U3 = U3 + $3 | 0, R3 = x4(R3 ^ U3, 12), L3 = L3 + R3 | 0, $3 = x4($3 ^ L3, 8), U3 = U3 + $3 | 0, R3 = x4(R3 ^ U3, 7), j5 = j5 + A4 | 0, p3 = x4(p3 ^ j5, 16), T3 = T3 + p3 | 0, A4 = x4(A4 ^ T3, 12), j5 = j5 + A4 | 0, p3 = x4(p3 ^ j5, 8), T3 = T3 + p3 | 0, A4 = x4(A4 ^ T3, 7), v6 = v6 + O2 | 0, C5 = x4(C5 ^ v6, 16), N4 = N4 + C5 | 0, O2 = x4(O2 ^ N4, 12), v6 = v6 + O2 | 0, C5 = x4(C5 ^ v6, 8), N4 = N4 + C5 | 0, O2 = x4(O2 ^ N4, 7);
  let P4 = 0;
  r2[P4++] = i4 + E4 | 0, r2[P4++] = c3 + L3 | 0, r2[P4++] = u3 + j5 | 0, r2[P4++] = a2 + v6 | 0, r2[P4++] = l3 + O2 | 0, r2[P4++] = f5 + w3 | 0, r2[P4++] = d4 + R3 | 0, r2[P4++] = g3 + A4 | 0, r2[P4++] = y5 + T3 | 0, r2[P4++] = h6 + N4 | 0, r2[P4++] = m + S3 | 0, r2[P4++] = B3 + U3 | 0, r2[P4++] = b3 + $3 | 0, r2[P4++] = _3 + p3 | 0, r2[P4++] = I3 + C5 | 0, r2[P4++] = k6 + D3 | 0;
}
var Is = ws(Os, { counterRight: false, counterLength: 4, allowShortKeys: false });
var As = new Uint8Array(16);
var Hn3 = (e2, t2) => {
  e2.update(t2);
  const n2 = t2.length % 16;
  n2 && e2.update(As.subarray(n2));
};
var Ns = new Uint8Array(32);
function Kn3(e2, t2, n2, r2, o2) {
  const s2 = e2(t2, n2, Ns), i4 = xs.create(s2);
  o2 && Hn3(i4, o2), Hn3(i4, r2);
  const c3 = new Uint8Array(16), u3 = is2(c3);
  kn3(u3, 0, BigInt(o2 ? o2.length : 0), true), kn3(u3, 8, BigInt(r2.length), true), i4.update(c3);
  const a2 = i4.digest();
  return Ee3(s2, c3), a2;
}
var Ss = (e2) => (t2, n2, r2) => ({ encrypt(s2, i4) {
  const c3 = s2.length;
  i4 = Cn3(c3 + 16, i4, false), i4.set(s2);
  const u3 = i4.subarray(0, -16);
  e2(t2, n2, u3, u3, 1);
  const a2 = Kn3(e2, t2, n2, u3, r2);
  return i4.set(a2, c3), Ee3(a2), i4;
}, decrypt(s2, i4) {
  i4 = Cn3(s2.length - 16, i4, false);
  const c3 = s2.subarray(0, -16), u3 = s2.subarray(-16), a2 = Kn3(e2, t2, n2, c3, r2);
  if (!fs(u3, a2)) throw new Error("invalid tag");
  return i4.set(s2.subarray(0, -16)), e2(t2, n2, i4, i4, 1), Ee3(a2), i4;
} });
var Fn3 = ls({ blockSize: 64, nonceLength: 12, tagLength: 16 }, Ss(Is));
var qn3 = class extends it3 {
  constructor(t2, n2) {
    super(), this.finished = false, this.destroyed = false, ot(t2);
    const r2 = we3(n2);
    if (this.iHash = t2.create(), typeof this.iHash.update != "function") throw new Error("Expected instance of class which extends utils.Hash");
    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
    const o2 = this.blockLen, s2 = new Uint8Array(o2);
    s2.set(r2.length > o2 ? t2.create().update(r2).digest() : r2);
    for (let i4 = 0; i4 < s2.length; i4++) s2[i4] ^= 54;
    this.iHash.update(s2), this.oHash = t2.create();
    for (let i4 = 0; i4 < s2.length; i4++) s2[i4] ^= 106;
    this.oHash.update(s2), s2.fill(0);
  }
  update(t2) {
    return me3(this), this.iHash.update(t2), this;
  }
  digestInto(t2) {
    me3(this), je3(t2, this.outputLen), this.finished = true, this.iHash.digestInto(t2), this.oHash.update(t2), this.oHash.digestInto(t2), this.destroy();
  }
  digest() {
    const t2 = new Uint8Array(this.oHash.outputLen);
    return this.digestInto(t2), t2;
  }
  _cloneInto(t2) {
    t2 || (t2 = Object.create(Object.getPrototypeOf(this), {}));
    const { oHash: n2, iHash: r2, finished: o2, destroyed: s2, blockLen: i4, outputLen: c3 } = this;
    return t2 = t2, t2.finished = o2, t2.destroyed = s2, t2.blockLen = i4, t2.outputLen = c3, t2.oHash = n2._cloneInto(t2.oHash), t2.iHash = r2._cloneInto(t2.iHash), t2;
  }
  destroy() {
    this.destroyed = true, this.oHash.destroy(), this.iHash.destroy();
  }
};
var mt = (e2, t2, n2) => new qn3(e2, t2).update(n2).digest();
mt.create = (e2, t2) => new qn3(e2, t2);
function Us(e2, t2, n2) {
  return ot(e2), n2 === void 0 && (n2 = new Uint8Array(e2.outputLen)), mt(e2, we3(n2), we3(t2));
}
var bt2 = new Uint8Array([0]);
var Gn3 = new Uint8Array();
function _s(e2, t2, n2, r2 = 32) {
  if (ot(e2), Ne2(r2), r2 > 255 * e2.outputLen) throw new Error("Length should be <= 255*HashLen");
  const o2 = Math.ceil(r2 / e2.outputLen);
  n2 === void 0 && (n2 = Gn3);
  const s2 = new Uint8Array(o2 * e2.outputLen), i4 = mt.create(e2, t2), c3 = i4._cloneInto(), u3 = new Uint8Array(i4.outputLen);
  for (let a2 = 0; a2 < o2; a2++) bt2[0] = a2 + 1, c3.update(a2 === 0 ? Gn3 : u3).update(n2).update(bt2).digestInto(u3), s2.set(u3, e2.outputLen * a2), i4._cloneInto(c3);
  return i4.destroy(), c3.destroy(), u3.fill(0), bt2.fill(0), s2.slice(0, r2);
}
var Ts = (e2, t2, n2, r2, o2) => _s(e2, Us(e2, t2, n2), r2, o2);
function $s(e2, t2, n2, r2) {
  if (typeof e2.setBigUint64 == "function") return e2.setBigUint64(t2, n2, r2);
  const o2 = BigInt(32), s2 = BigInt(4294967295), i4 = Number(n2 >> o2 & s2), c3 = Number(n2 & s2), u3 = r2 ? 4 : 0, a2 = r2 ? 0 : 4;
  e2.setUint32(t2 + u3, i4, r2), e2.setUint32(t2 + a2, c3, r2);
}
function Rs(e2, t2, n2) {
  return e2 & t2 ^ ~e2 & n2;
}
function Ps(e2, t2, n2) {
  return e2 & t2 ^ e2 & n2 ^ t2 & n2;
}
var Ls = class extends it3 {
  constructor(t2, n2, r2, o2) {
    super(), this.blockLen = t2, this.outputLen = n2, this.padOffset = r2, this.isLE = o2, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(t2), this.view = st(this.buffer);
  }
  update(t2) {
    me3(this);
    const { view: n2, buffer: r2, blockLen: o2 } = this;
    t2 = we3(t2);
    const s2 = t2.length;
    for (let i4 = 0; i4 < s2; ) {
      const c3 = Math.min(o2 - this.pos, s2 - i4);
      if (c3 === o2) {
        const u3 = st(t2);
        for (; o2 <= s2 - i4; i4 += o2) this.process(u3, i4);
        continue;
      }
      r2.set(t2.subarray(i4, i4 + c3), this.pos), this.pos += c3, i4 += c3, this.pos === o2 && (this.process(n2, 0), this.pos = 0);
    }
    return this.length += t2.length, this.roundClean(), this;
  }
  digestInto(t2) {
    me3(this), sn3(t2, this), this.finished = true;
    const { buffer: n2, view: r2, blockLen: o2, isLE: s2 } = this;
    let { pos: i4 } = this;
    n2[i4++] = 128, this.buffer.subarray(i4).fill(0), this.padOffset > o2 - i4 && (this.process(r2, 0), i4 = 0);
    for (let f5 = i4; f5 < o2; f5++) n2[f5] = 0;
    $s(r2, o2 - 8, BigInt(this.length * 8), s2), this.process(r2, 0);
    const c3 = st(t2), u3 = this.outputLen;
    if (u3 % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const a2 = u3 / 4, l3 = this.get();
    if (a2 > l3.length) throw new Error("_sha2: outputLen bigger than state");
    for (let f5 = 0; f5 < a2; f5++) c3.setUint32(4 * f5, l3[f5], s2);
  }
  digest() {
    const { buffer: t2, outputLen: n2 } = this;
    this.digestInto(t2);
    const r2 = t2.slice(0, n2);
    return this.destroy(), r2;
  }
  _cloneInto(t2) {
    t2 || (t2 = new this.constructor()), t2.set(...this.get());
    const { blockLen: n2, buffer: r2, length: o2, finished: s2, destroyed: i4, pos: c3 } = this;
    return t2.length = o2, t2.pos = c3, t2.finished = s2, t2.destroyed = i4, o2 % n2 && t2.buffer.set(r2), t2;
  }
};
var Bs = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);
var ie = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]);
var ce = new Uint32Array(64);
var js = class extends Ls {
  constructor() {
    super(64, 32, 8, false), this.A = ie[0] | 0, this.B = ie[1] | 0, this.C = ie[2] | 0, this.D = ie[3] | 0, this.E = ie[4] | 0, this.F = ie[5] | 0, this.G = ie[6] | 0, this.H = ie[7] | 0;
  }
  get() {
    const { A: t2, B: n2, C: r2, D: o2, E: s2, F: i4, G: c3, H: u3 } = this;
    return [t2, n2, r2, o2, s2, i4, c3, u3];
  }
  set(t2, n2, r2, o2, s2, i4, c3, u3) {
    this.A = t2 | 0, this.B = n2 | 0, this.C = r2 | 0, this.D = o2 | 0, this.E = s2 | 0, this.F = i4 | 0, this.G = c3 | 0, this.H = u3 | 0;
  }
  process(t2, n2) {
    for (let f5 = 0; f5 < 16; f5++, n2 += 4) ce[f5] = t2.getUint32(n2, false);
    for (let f5 = 16; f5 < 64; f5++) {
      const d4 = ce[f5 - 15], g3 = ce[f5 - 2], y5 = J3(d4, 7) ^ J3(d4, 18) ^ d4 >>> 3, h6 = J3(g3, 17) ^ J3(g3, 19) ^ g3 >>> 10;
      ce[f5] = h6 + ce[f5 - 7] + y5 + ce[f5 - 16] | 0;
    }
    let { A: r2, B: o2, C: s2, D: i4, E: c3, F: u3, G: a2, H: l3 } = this;
    for (let f5 = 0; f5 < 64; f5++) {
      const d4 = J3(c3, 6) ^ J3(c3, 11) ^ J3(c3, 25), g3 = l3 + d4 + Rs(c3, u3, a2) + Bs[f5] + ce[f5] | 0, h6 = (J3(r2, 2) ^ J3(r2, 13) ^ J3(r2, 22)) + Ps(r2, o2, s2) | 0;
      l3 = a2, a2 = u3, u3 = c3, c3 = i4 + g3 | 0, i4 = s2, s2 = o2, o2 = r2, r2 = g3 + h6 | 0;
    }
    r2 = r2 + this.A | 0, o2 = o2 + this.B | 0, s2 = s2 + this.C | 0, i4 = i4 + this.D | 0, c3 = c3 + this.E | 0, u3 = u3 + this.F | 0, a2 = a2 + this.G | 0, l3 = l3 + this.H | 0, this.set(r2, o2, s2, i4, c3, u3, a2, l3);
  }
  roundClean() {
    ce.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
};
var He3 = fn(() => new js());
var Wn3 = BigInt(0);
function wt3(e2) {
  return e2 instanceof Uint8Array || ArrayBuffer.isView(e2) && e2.constructor.name === "Uint8Array";
}
function zn3(e2) {
  if (!wt3(e2)) throw new Error("Uint8Array expected");
}
var Cs = Array.from({ length: 256 }, (e2, t2) => t2.toString(16).padStart(2, "0"));
function ks(e2) {
  zn3(e2);
  let t2 = "";
  for (let n2 = 0; n2 < e2.length; n2++) t2 += Cs[e2[n2]];
  return t2;
}
function Ds(e2) {
  if (typeof e2 != "string") throw new Error("hex string expected, got " + typeof e2);
  return e2 === "" ? Wn3 : BigInt("0x" + e2);
}
var ee = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function Jn3(e2) {
  if (e2 >= ee._0 && e2 <= ee._9) return e2 - ee._0;
  if (e2 >= ee.A && e2 <= ee.F) return e2 - (ee.A - 10);
  if (e2 >= ee.a && e2 <= ee.f) return e2 - (ee.a - 10);
}
function Yn3(e2) {
  if (typeof e2 != "string") throw new Error("hex string expected, got " + typeof e2);
  const t2 = e2.length, n2 = t2 / 2;
  if (t2 % 2) throw new Error("hex string expected, got unpadded hex of length " + t2);
  const r2 = new Uint8Array(n2);
  for (let o2 = 0, s2 = 0; o2 < n2; o2++, s2 += 2) {
    const i4 = Jn3(e2.charCodeAt(s2)), c3 = Jn3(e2.charCodeAt(s2 + 1));
    if (i4 === void 0 || c3 === void 0) {
      const u3 = e2[s2] + e2[s2 + 1];
      throw new Error('hex string expected, got non-hex character "' + u3 + '" at index ' + s2);
    }
    r2[o2] = i4 * 16 + c3;
  }
  return r2;
}
function Xn3(e2) {
  return zn3(e2), Ds(ks(Uint8Array.from(e2).reverse()));
}
function Ms(e2, t2) {
  return Yn3(e2.toString(16).padStart(t2 * 2, "0"));
}
function Vs(e2, t2) {
  return Ms(e2, t2).reverse();
}
function Zn3(e2, t2, n2) {
  let r2;
  if (typeof t2 == "string") try {
    r2 = Yn3(t2);
  } catch (s2) {
    throw new Error(e2 + " must be hex string or Uint8Array, cause: " + s2);
  }
  else if (wt3(t2)) r2 = Uint8Array.from(t2);
  else throw new Error(e2 + " must be hex string or Uint8Array");
  const o2 = r2.length;
  if (typeof n2 == "number" && o2 !== n2) throw new Error(e2 + " of length " + n2 + " expected, got " + o2);
  return r2;
}
var Et3 = (e2) => typeof e2 == "bigint" && Wn3 <= e2;
function Hs(e2, t2, n2) {
  return Et3(e2) && Et3(t2) && Et3(n2) && t2 <= e2 && e2 < n2;
}
function Qn3(e2, t2, n2, r2) {
  if (!Hs(t2, n2, r2)) throw new Error("expected valid " + e2 + ": " + n2 + " <= n < " + r2 + ", got " + t2);
}
var Ks = { bigint: (e2) => typeof e2 == "bigint", function: (e2) => typeof e2 == "function", boolean: (e2) => typeof e2 == "boolean", string: (e2) => typeof e2 == "string", stringOrUint8Array: (e2) => typeof e2 == "string" || wt3(e2), isSafeInteger: (e2) => Number.isSafeInteger(e2), array: (e2) => Array.isArray(e2), field: (e2, t2) => t2.Fp.isValid(e2), hash: (e2) => typeof e2 == "function" && Number.isSafeInteger(e2.outputLen) };
function Fs(e2, t2, n2 = {}) {
  const r2 = (o2, s2, i4) => {
    const c3 = Ks[s2];
    if (typeof c3 != "function") throw new Error("invalid validator function");
    const u3 = e2[o2];
    if (!(i4 && u3 === void 0) && !c3(u3, e2)) throw new Error("param " + String(o2) + " is invalid. Expected " + s2 + ", got " + u3);
  };
  for (const [o2, s2] of Object.entries(t2)) r2(o2, s2, false);
  for (const [o2, s2] of Object.entries(n2)) r2(o2, s2, true);
  return e2;
}
var ve3 = BigInt(0);
var Ke3 = BigInt(1);
function er3(e2, t2) {
  const n2 = e2 % t2;
  return n2 >= ve3 ? n2 : t2 + n2;
}
function qs(e2, t2, n2) {
  if (t2 < ve3) throw new Error("invalid exponent, negatives unsupported");
  if (n2 <= ve3) throw new Error("invalid modulus");
  if (n2 === Ke3) return ve3;
  let r2 = Ke3;
  for (; t2 > ve3; ) t2 & Ke3 && (r2 = r2 * e2 % n2), e2 = e2 * e2 % n2, t2 >>= Ke3;
  return r2;
}
function z2(e2, t2, n2) {
  let r2 = e2;
  for (; t2-- > ve3; ) r2 *= r2, r2 %= n2;
  return r2;
}
BigInt(0), BigInt(1), BigInt(0), BigInt(1), BigInt(2), BigInt(8);
var xe3 = BigInt(0);
var vt3 = BigInt(1);
function Gs(e2) {
  return Fs(e2, { a: "bigint" }, { montgomeryBits: "isSafeInteger", nByteLength: "isSafeInteger", adjustScalarBytes: "function", domain: "function", powPminus2: "function", Gu: "bigint" }), Object.freeze({ ...e2 });
}
function Ws(e2) {
  const t2 = Gs(e2), { P: n2 } = t2, r2 = (b3) => er3(b3, n2), o2 = t2.montgomeryBits, s2 = Math.ceil(o2 / 8), i4 = t2.nByteLength, c3 = t2.adjustScalarBytes || ((b3) => b3), u3 = t2.powPminus2 || ((b3) => qs(b3, n2 - BigInt(2), n2));
  function a2(b3, _3, I3) {
    const k6 = r2(b3 * (_3 - I3));
    return _3 = r2(_3 - k6), I3 = r2(I3 + k6), [_3, I3];
  }
  const l3 = (t2.a - BigInt(2)) / BigInt(4);
  function f5(b3, _3) {
    Qn3("u", b3, xe3, n2), Qn3("scalar", _3, xe3, n2);
    const I3 = _3, k6 = b3;
    let E4 = vt3, L3 = xe3, j5 = b3, v6 = vt3, O2 = xe3, w3;
    for (let A4 = BigInt(o2 - 1); A4 >= xe3; A4--) {
      const T3 = I3 >> A4 & vt3;
      O2 ^= T3, w3 = a2(O2, E4, j5), E4 = w3[0], j5 = w3[1], w3 = a2(O2, L3, v6), L3 = w3[0], v6 = w3[1], O2 = T3;
      const N4 = E4 + L3, S3 = r2(N4 * N4), U3 = E4 - L3, $3 = r2(U3 * U3), p3 = S3 - $3, C5 = j5 + v6, D3 = j5 - v6, P4 = r2(D3 * N4), G3 = r2(C5 * U3), X3 = P4 + G3, Z3 = P4 - G3;
      j5 = r2(X3 * X3), v6 = r2(k6 * r2(Z3 * Z3)), E4 = r2(S3 * $3), L3 = r2(p3 * (S3 + r2(l3 * p3)));
    }
    w3 = a2(O2, E4, j5), E4 = w3[0], j5 = w3[1], w3 = a2(O2, L3, v6), L3 = w3[0], v6 = w3[1];
    const R3 = u3(L3);
    return r2(E4 * R3);
  }
  function d4(b3) {
    return Vs(r2(b3), s2);
  }
  function g3(b3) {
    const _3 = Zn3("u coordinate", b3, s2);
    return i4 === 32 && (_3[31] &= 127), Xn3(_3);
  }
  function y5(b3) {
    const _3 = Zn3("scalar", b3), I3 = _3.length;
    if (I3 !== s2 && I3 !== i4) {
      let k6 = "" + s2 + " or " + i4;
      throw new Error("invalid scalar, expected " + k6 + " bytes, got " + I3);
    }
    return Xn3(c3(_3));
  }
  function h6(b3, _3) {
    const I3 = g3(_3), k6 = y5(b3), E4 = f5(I3, k6);
    if (E4 === xe3) throw new Error("invalid private or public key received");
    return d4(E4);
  }
  const m = d4(t2.Gu);
  function B3(b3) {
    return h6(b3, m);
  }
  return { scalarMult: h6, scalarMultBase: B3, getSharedSecret: (b3, _3) => h6(b3, _3), getPublicKey: (b3) => B3(b3), utils: { randomPrivateKey: () => t2.randomBytes(t2.nByteLength) }, GuBytes: m };
}
var xt3 = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
BigInt(0);
var zs = BigInt(1);
var tr3 = BigInt(2);
var Js = BigInt(3);
var Ys = BigInt(5);
BigInt(8);
function Xs(e2) {
  const t2 = BigInt(10), n2 = BigInt(20), r2 = BigInt(40), o2 = BigInt(80), s2 = xt3, c3 = e2 * e2 % s2 * e2 % s2, u3 = z2(c3, tr3, s2) * c3 % s2, a2 = z2(u3, zs, s2) * e2 % s2, l3 = z2(a2, Ys, s2) * a2 % s2, f5 = z2(l3, t2, s2) * l3 % s2, d4 = z2(f5, n2, s2) * f5 % s2, g3 = z2(d4, r2, s2) * d4 % s2, y5 = z2(g3, o2, s2) * g3 % s2, h6 = z2(y5, o2, s2) * g3 % s2, m = z2(h6, t2, s2) * l3 % s2;
  return { pow_p_5_8: z2(m, tr3, s2) * e2 % s2, b2: c3 };
}
function Zs(e2) {
  return e2[0] &= 248, e2[31] &= 127, e2[31] |= 64, e2;
}
var Ot3 = (() => Ws({ P: xt3, a: BigInt(486662), montgomeryBits: 255, nByteLength: 32, Gu: BigInt(9), powPminus2: (e2) => {
  const t2 = xt3, { pow_p_5_8: n2, b2: r2 } = Xs(e2);
  return er3(z2(n2, Js, t2) * r2, t2);
}, adjustScalarBytes: Zs, randomBytes: Se3 }))();
var It3 = "base10";
var V = "base16";
var At = "base64pad";
var Qs = "base64url";
var Oe2 = "utf8";
var Nt3 = 0;
var Ie3 = 1;
var _e3 = 2;
var ei = 0;
var nr3 = 1;
var Te3 = 12;
var St3 = 32;
function ti() {
  const e2 = Ot3.utils.randomPrivateKey(), t2 = Ot3.getPublicKey(e2);
  return { privateKey: toString(e2, V), publicKey: toString(t2, V) };
}
function ni() {
  const e2 = Se3(St3);
  return toString(e2, V);
}
function ri(e2, t2) {
  const n2 = Ot3.getSharedSecret(fromString(e2, V), fromString(t2, V)), r2 = Ts(He3, n2, void 0, void 0, St3);
  return toString(r2, V);
}
function oi(e2) {
  const t2 = He3(fromString(e2, V));
  return toString(t2, V);
}
function si(e2) {
  const t2 = He3(fromString(e2, Oe2));
  return toString(t2, V);
}
function Ut3(e2) {
  return fromString(`${e2}`, It3);
}
function fe3(e2) {
  return Number(toString(e2, It3));
}
function ii(e2) {
  const t2 = Ut3(typeof e2.type < "u" ? e2.type : Nt3);
  if (fe3(t2) === Ie3 && typeof e2.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
  const n2 = typeof e2.senderPublicKey < "u" ? fromString(e2.senderPublicKey, V) : void 0, r2 = typeof e2.iv < "u" ? fromString(e2.iv, V) : Se3(Te3), o2 = fromString(e2.symKey, V), s2 = Fn3(o2, r2).encrypt(fromString(e2.message, Oe2));
  return _t3({ type: t2, sealed: s2, iv: r2, senderPublicKey: n2, encoding: e2.encoding });
}
function ci(e2) {
  const t2 = fromString(e2.symKey, V), { sealed: n2, iv: r2 } = Fe(e2), o2 = Fn3(t2, r2).decrypt(n2);
  if (o2 === null) throw new Error("Failed to decrypt");
  return toString(o2, Oe2);
}
function ai(e2, t2) {
  const n2 = Ut3(_e3), r2 = Se3(Te3), o2 = fromString(e2, Oe2);
  return _t3({ type: n2, sealed: o2, iv: r2, encoding: t2 });
}
function ui(e2, t2) {
  const { sealed: n2 } = Fe({ encoded: e2, encoding: t2 });
  return toString(n2, Oe2);
}
function _t3(e2) {
  const { encoding: t2 = At } = e2;
  if (fe3(e2.type) === _e3) return toString(concat([e2.type, e2.sealed]), t2);
  if (fe3(e2.type) === Ie3) {
    if (typeof e2.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
    return toString(concat([e2.type, e2.senderPublicKey, e2.iv, e2.sealed]), t2);
  }
  return toString(concat([e2.type, e2.iv, e2.sealed]), t2);
}
function Fe(e2) {
  const { encoded: t2, encoding: n2 = At } = e2, r2 = fromString(t2, n2), o2 = r2.slice(ei, nr3), s2 = nr3;
  if (fe3(o2) === Ie3) {
    const a2 = s2 + St3, l3 = a2 + Te3, f5 = r2.slice(s2, a2), d4 = r2.slice(a2, l3), g3 = r2.slice(l3);
    return { type: o2, sealed: g3, iv: d4, senderPublicKey: f5 };
  }
  if (fe3(o2) === _e3) {
    const a2 = r2.slice(s2), l3 = Se3(Te3);
    return { type: o2, sealed: a2, iv: l3 };
  }
  const i4 = s2 + Te3, c3 = r2.slice(s2, i4), u3 = r2.slice(i4);
  return { type: o2, sealed: u3, iv: c3 };
}
function fi(e2, t2) {
  const n2 = Fe({ encoded: e2, encoding: t2 == null ? void 0 : t2.encoding });
  return rr3({ type: fe3(n2.type), senderPublicKey: typeof n2.senderPublicKey < "u" ? toString(n2.senderPublicKey, V) : void 0, receiverPublicKey: t2 == null ? void 0 : t2.receiverPublicKey });
}
function rr3(e2) {
  const t2 = (e2 == null ? void 0 : e2.type) || Nt3;
  if (t2 === Ie3) {
    if (typeof (e2 == null ? void 0 : e2.senderPublicKey) > "u") throw new Error("missing sender public key");
    if (typeof (e2 == null ? void 0 : e2.receiverPublicKey) > "u") throw new Error("missing receiver public key");
  }
  return { type: t2, senderPublicKey: e2 == null ? void 0 : e2.senderPublicKey, receiverPublicKey: e2 == null ? void 0 : e2.receiverPublicKey };
}
function li(e2) {
  return e2.type === Ie3 && typeof e2.senderPublicKey == "string" && typeof e2.receiverPublicKey == "string";
}
function di(e2) {
  return e2.type === _e3;
}
function or3(e2) {
  return new import_elliptic2.ec("p256").keyFromPublic({ x: Buffer.from(e2.x, "base64").toString("hex"), y: Buffer.from(e2.y, "base64").toString("hex") }, "hex");
}
function hi(e2) {
  let t2 = e2.replace(/-/g, "+").replace(/_/g, "/");
  const n2 = t2.length % 4;
  return n2 > 0 && (t2 += "=".repeat(4 - n2)), t2;
}
function pi(e2) {
  return Buffer.from(hi(e2), "base64");
}
function gi(e2, t2) {
  const [n2, r2, o2] = e2.split("."), s2 = pi(o2);
  if (s2.length !== 64) throw new Error("Invalid signature length");
  const i4 = s2.slice(0, 32).toString("hex"), c3 = s2.slice(32, 64).toString("hex"), u3 = `${n2}.${r2}`, a2 = He3(u3), l3 = or3(t2), f5 = toString(a2, V);
  if (!l3.verify(f5, { r: i4, s: c3 })) throw new Error("Invalid signature");
  return sn2(e2).payload;
}
var sr3 = "irn";
function yi(e2) {
  return (e2 == null ? void 0 : e2.relay) || { protocol: sr3 };
}
function mi(e2) {
  const t2 = C[e2];
  if (typeof t2 > "u") throw new Error(`Relay Protocol not supported: ${e2}`);
  return t2;
}
function ir3(e2, t2 = "-") {
  const n2 = {}, r2 = "relay" + t2;
  return Object.keys(e2).forEach((o2) => {
    if (o2.startsWith(r2)) {
      const s2 = o2.replace(r2, ""), i4 = e2[o2];
      n2[s2] = i4;
    }
  }), n2;
}
function bi(e2) {
  if (!e2.includes("wc:")) {
    const a2 = rt3(e2);
    a2 != null && a2.includes("wc:") && (e2 = a2);
  }
  e2 = e2.includes("wc://") ? e2.replace("wc://", "") : e2, e2 = e2.includes("wc:") ? e2.replace("wc:", "") : e2;
  const t2 = e2.indexOf(":"), n2 = e2.indexOf("?") !== -1 ? e2.indexOf("?") : void 0, r2 = e2.substring(0, t2), o2 = e2.substring(t2 + 1, n2).split("@"), s2 = typeof n2 < "u" ? e2.substring(n2) : "", i4 = new URLSearchParams(s2), c3 = {};
  i4.forEach((a2, l3) => {
    c3[l3] = a2;
  });
  const u3 = typeof c3.methods == "string" ? c3.methods.split(",") : void 0;
  return { protocol: r2, topic: cr3(o2[0]), version: parseInt(o2[1], 10), symKey: c3.symKey, relay: ir3(c3), methods: u3, expiryTimestamp: c3.expiryTimestamp ? parseInt(c3.expiryTimestamp, 10) : void 0 };
}
function cr3(e2) {
  return e2.startsWith("//") ? e2.substring(2) : e2;
}
function ar3(e2, t2 = "-") {
  const n2 = "relay", r2 = {};
  return Object.keys(e2).forEach((o2) => {
    const s2 = n2 + t2 + o2;
    e2[o2] && (r2[s2] = e2[o2]);
  }), r2;
}
function wi(e2) {
  const t2 = new URLSearchParams(), n2 = ar3(e2.relay);
  Object.keys(n2).sort().forEach((o2) => {
    t2.set(o2, n2[o2]);
  }), t2.set("symKey", e2.symKey), e2.expiryTimestamp && t2.set("expiryTimestamp", e2.expiryTimestamp.toString()), e2.methods && t2.set("methods", e2.methods.join(","));
  const r2 = t2.toString();
  return `${e2.protocol}:${e2.topic}@${e2.version}?${r2}`;
}
function Ei(e2, t2, n2) {
  return `${e2}?wc_ev=${n2}&topic=${t2}`;
}
function le3(e2) {
  const t2 = [];
  return e2.forEach((n2) => {
    const [r2, o2] = n2.split(":");
    t2.push(`${r2}:${o2}`);
  }), t2;
}
function lr3(e2) {
  const t2 = [];
  return Object.values(e2).forEach((n2) => {
    t2.push(...le3(n2.accounts));
  }), t2;
}
function dr3(e2, t2) {
  const n2 = [];
  return Object.values(e2).forEach((r2) => {
    le3(r2.accounts).includes(t2) && n2.push(...r2.methods);
  }), n2;
}
function hr3(e2, t2) {
  const n2 = [];
  return Object.values(e2).forEach((r2) => {
    le3(r2.accounts).includes(t2) && n2.push(...r2.events);
  }), n2;
}
function Tt3(e2) {
  return e2.includes(":");
}
function pr3(e2) {
  return Tt3(e2) ? e2.split(":")[0] : e2;
}
function gr3(e2) {
  const t2 = {};
  return e2 == null ? void 0 : e2.forEach((n2) => {
    const [r2, o2] = n2.split(":");
    t2[r2] || (t2[r2] = { accounts: [], chains: [], events: [] }), t2[r2].accounts.push(n2), t2[r2].chains.push(`${r2}:${o2}`);
  }), t2;
}
function Ti(e2, t2) {
  t2 = t2.map((r2) => r2.replace("did:pkh:", ""));
  const n2 = gr3(t2);
  for (const [r2, o2] of Object.entries(n2)) o2.methods ? o2.methods = Q3(o2.methods, e2) : o2.methods = e2, o2.events = ["chainChanged", "accountsChanged"];
  return n2;
}
var yr3 = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var mr3 = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function te3(e2, t2) {
  const { message: n2, code: r2 } = mr3[e2];
  return { message: t2 ? `${n2} ${t2}` : n2, code: r2 };
}
function de3(e2, t2) {
  const { message: n2, code: r2 } = yr3[e2];
  return { message: t2 ? `${n2} ${t2}` : n2, code: r2 };
}
function $e3(e2, t2) {
  return Array.isArray(e2) ? typeof t2 < "u" && e2.length ? e2.every(t2) : true : false;
}
function qe3(e2) {
  return Object.getPrototypeOf(e2) === Object.prototype && Object.keys(e2).length;
}
function ae(e2) {
  return typeof e2 > "u";
}
function q(e2, t2) {
  return t2 && ae(e2) ? true : typeof e2 == "string" && !!e2.trim().length;
}
function Ge3(e2, t2) {
  return t2 && ae(e2) ? true : typeof e2 == "number" && !isNaN(e2);
}
function $i(e2, t2) {
  const { requiredNamespaces: n2 } = t2, r2 = Object.keys(e2.namespaces), o2 = Object.keys(n2);
  let s2 = true;
  return re(o2, r2) ? (r2.forEach((i4) => {
    const { accounts: c3, methods: u3, events: a2 } = e2.namespaces[i4], l3 = le3(c3), f5 = n2[i4];
    (!re(Le3(i4, f5), l3) || !re(f5.methods, u3) || !re(f5.events, a2)) && (s2 = false);
  }), s2) : false;
}
function Re3(e2) {
  return q(e2, false) && e2.includes(":") ? e2.split(":").length === 2 : false;
}
function br3(e2) {
  if (q(e2, false) && e2.includes(":")) {
    const t2 = e2.split(":");
    if (t2.length === 3) {
      const n2 = t2[0] + ":" + t2[1];
      return !!t2[2] && Re3(n2);
    }
  }
  return false;
}
function Ri(e2) {
  function t2(n2) {
    try {
      return typeof new URL(n2) < "u";
    } catch {
      return false;
    }
  }
  try {
    if (q(e2, false)) {
      if (t2(e2)) return true;
      const n2 = rt3(e2);
      return t2(n2);
    }
  } catch {
  }
  return false;
}
function Pi(e2) {
  var t2;
  return (t2 = e2 == null ? void 0 : e2.proposer) == null ? void 0 : t2.publicKey;
}
function Li(e2) {
  return e2 == null ? void 0 : e2.topic;
}
function Bi(e2, t2) {
  let n2 = null;
  return q(e2 == null ? void 0 : e2.publicKey, false) || (n2 = te3("MISSING_OR_INVALID", `${t2} controller public key should be a string`)), n2;
}
function Rt3(e2) {
  let t2 = true;
  return $e3(e2) ? e2.length && (t2 = e2.every((n2) => q(n2, false))) : t2 = false, t2;
}
function wr3(e2, t2, n2) {
  let r2 = null;
  return $e3(t2) && t2.length ? t2.forEach((o2) => {
    r2 || Re3(o2) || (r2 = de3("UNSUPPORTED_CHAINS", `${n2}, chain ${o2} should be a string and conform to "namespace:chainId" format`));
  }) : Re3(e2) || (r2 = de3("UNSUPPORTED_CHAINS", `${n2}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), r2;
}
function Er3(e2, t2, n2) {
  let r2 = null;
  return Object.entries(e2).forEach(([o2, s2]) => {
    if (r2) return;
    const i4 = wr3(o2, Le3(o2, s2), `${t2} ${n2}`);
    i4 && (r2 = i4);
  }), r2;
}
function vr3(e2, t2) {
  let n2 = null;
  return $e3(e2) ? e2.forEach((r2) => {
    n2 || br3(r2) || (n2 = de3("UNSUPPORTED_ACCOUNTS", `${t2}, account ${r2} should be a string and conform to "namespace:chainId:address" format`));
  }) : n2 = de3("UNSUPPORTED_ACCOUNTS", `${t2}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), n2;
}
function xr3(e2, t2) {
  let n2 = null;
  return Object.values(e2).forEach((r2) => {
    if (n2) return;
    const o2 = vr3(r2 == null ? void 0 : r2.accounts, `${t2} namespace`);
    o2 && (n2 = o2);
  }), n2;
}
function Or3(e2, t2) {
  let n2 = null;
  return Rt3(e2 == null ? void 0 : e2.methods) ? Rt3(e2 == null ? void 0 : e2.events) || (n2 = de3("UNSUPPORTED_EVENTS", `${t2}, events should be an array of strings or empty array for no events`)) : n2 = de3("UNSUPPORTED_METHODS", `${t2}, methods should be an array of strings or empty array for no methods`), n2;
}
function Pt3(e2, t2) {
  let n2 = null;
  return Object.values(e2).forEach((r2) => {
    if (n2) return;
    const o2 = Or3(r2, `${t2}, namespace`);
    o2 && (n2 = o2);
  }), n2;
}
function ji(e2, t2, n2) {
  let r2 = null;
  if (e2 && qe3(e2)) {
    const o2 = Pt3(e2, t2);
    o2 && (r2 = o2);
    const s2 = Er3(e2, t2, n2);
    s2 && (r2 = s2);
  } else r2 = te3("MISSING_OR_INVALID", `${t2}, ${n2} should be an object with data`);
  return r2;
}
function Ir3(e2, t2) {
  let n2 = null;
  if (e2 && qe3(e2)) {
    const r2 = Pt3(e2, t2);
    r2 && (n2 = r2);
    const o2 = xr3(e2, t2);
    o2 && (n2 = o2);
  } else n2 = te3("MISSING_OR_INVALID", `${t2}, namespaces should be an object with data`);
  return n2;
}
function Ar3(e2) {
  return q(e2.protocol, true);
}
function Ci(e2, t2) {
  let n2 = false;
  return t2 && !e2 ? n2 = true : e2 && $e3(e2) && e2.length && e2.forEach((r2) => {
    n2 = Ar3(r2);
  }), n2;
}
function ki(e2) {
  return typeof e2 == "number";
}
function Di(e2) {
  return typeof e2 < "u" && typeof e2 !== null;
}
function Mi(e2) {
  return !(!e2 || typeof e2 != "object" || !e2.code || !Ge3(e2.code, false) || !e2.message || !q(e2.message, false));
}
function Vi(e2) {
  return !(ae(e2) || !q(e2.method, false));
}
function Hi(e2) {
  return !(ae(e2) || ae(e2.result) && ae(e2.error) || !Ge3(e2.id, false) || !q(e2.jsonrpc, false));
}
function Ki(e2) {
  return !(ae(e2) || !q(e2.name, false));
}
function Fi(e2, t2) {
  return !(!Re3(t2) || !lr3(e2).includes(t2));
}
function qi(e2, t2, n2) {
  return q(n2, false) ? dr3(e2, t2).includes(n2) : false;
}
function Gi(e2, t2, n2) {
  return q(n2, false) ? hr3(e2, t2).includes(n2) : false;
}
function Nr3(e2, t2, n2) {
  let r2 = null;
  const o2 = Wi(e2), s2 = zi(t2), i4 = Object.keys(o2), c3 = Object.keys(s2), u3 = Sr3(Object.keys(e2)), a2 = Sr3(Object.keys(t2)), l3 = u3.filter((f5) => !a2.includes(f5));
  return l3.length && (r2 = te3("NON_CONFORMING_NAMESPACES", `${n2} namespaces keys don't satisfy requiredNamespaces.
      Required: ${l3.toString()}
      Received: ${Object.keys(t2).toString()}`)), re(i4, c3) || (r2 = te3("NON_CONFORMING_NAMESPACES", `${n2} namespaces chains don't satisfy required namespaces.
      Required: ${i4.toString()}
      Approved: ${c3.toString()}`)), Object.keys(t2).forEach((f5) => {
    if (!f5.includes(":") || r2) return;
    const d4 = le3(t2[f5].accounts);
    d4.includes(f5) || (r2 = te3("NON_CONFORMING_NAMESPACES", `${n2} namespaces accounts don't satisfy namespace accounts for ${f5}
        Required: ${f5}
        Approved: ${d4.toString()}`));
  }), i4.forEach((f5) => {
    r2 || (re(o2[f5].methods, s2[f5].methods) ? re(o2[f5].events, s2[f5].events) || (r2 = te3("NON_CONFORMING_NAMESPACES", `${n2} namespaces events don't satisfy namespace events for ${f5}`)) : r2 = te3("NON_CONFORMING_NAMESPACES", `${n2} namespaces methods don't satisfy namespace methods for ${f5}`));
  }), r2;
}
function Wi(e2) {
  const t2 = {};
  return Object.keys(e2).forEach((n2) => {
    var r2;
    n2.includes(":") ? t2[n2] = e2[n2] : (r2 = e2[n2].chains) == null || r2.forEach((o2) => {
      t2[o2] = { methods: e2[n2].methods, events: e2[n2].events };
    });
  }), t2;
}
function Sr3(e2) {
  return [...new Set(e2.map((t2) => t2.includes(":") ? t2.split(":")[0] : t2))];
}
function zi(e2) {
  const t2 = {};
  return Object.keys(e2).forEach((n2) => {
    if (n2.includes(":")) t2[n2] = e2[n2];
    else {
      const r2 = le3(e2[n2].accounts);
      r2 == null ? void 0 : r2.forEach((o2) => {
        t2[o2] = { accounts: e2[n2].accounts.filter((s2) => s2.includes(`${o2}:`)), methods: e2[n2].methods, events: e2[n2].events };
      });
    }
  }), t2;
}
function Ji(e2, t2) {
  return Ge3(e2, false) && e2 <= t2.max && e2 >= t2.min;
}
function Yi() {
  const e2 = ue();
  return new Promise((t2) => {
    switch (e2) {
      case H3.browser:
        t2(Ur3());
        break;
      case H3.reactNative:
        t2(_r3());
        break;
      case H3.node:
        t2(Tr3());
        break;
      default:
        t2(true);
    }
  });
}
function Ur3() {
  return Ae3() && (navigator == null ? void 0 : navigator.onLine);
}
async function _r3() {
  if (ne() && typeof global < "u" && global != null && global.NetInfo) {
    const e2 = await (global == null ? void 0 : global.NetInfo.fetch());
    return e2 == null ? void 0 : e2.isConnected;
  }
  return true;
}
function Tr3() {
  return true;
}
function Xi(e2) {
  switch (ue()) {
    case H3.browser:
      $r3(e2);
      break;
    case H3.reactNative:
      Rr3(e2);
      break;
    case H3.node:
      break;
  }
}
function $r3(e2) {
  !ne() && Ae3() && (window.addEventListener("online", () => e2(true)), window.addEventListener("offline", () => e2(false)));
}
function Rr3(e2) {
  ne() && typeof global < "u" && global != null && global.NetInfo && (global == null ? void 0 : global.NetInfo.addEventListener((t2) => e2(t2 == null ? void 0 : t2.isConnected)));
}
var Lt3 = {};
var Zi = class {
  static get(t2) {
    return Lt3[t2];
  }
  static set(t2, n2) {
    Lt3[t2] = n2;
  }
  static delete(t2) {
    delete Lt3[t2];
  }
};

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js
var import_events3 = __toESM(require_events());
var v2 = () => typeof WebSocket < "u" ? WebSocket : typeof global < "u" && typeof global.WebSocket < "u" ? global.WebSocket : typeof window < "u" && typeof window.WebSocket < "u" ? window.WebSocket : typeof self < "u" && typeof self.WebSocket < "u" ? self.WebSocket : require_browser();
var w = () => typeof WebSocket < "u" || typeof global < "u" && typeof global.WebSocket < "u" || typeof window < "u" && typeof window.WebSocket < "u" || typeof self < "u" && typeof self.WebSocket < "u";
var d3 = (r2) => r2.split("?")[0];
var h4 = 10;
var b = v2();
var f3 = class {
  constructor(e2) {
    if (this.url = e2, this.events = new import_events3.EventEmitter(), this.registering = false, !isWsUrl(e2)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e2}`);
    this.url = e2;
  }
  get connected() {
    return typeof this.socket < "u";
  }
  get connecting() {
    return this.registering;
  }
  on(e2, t2) {
    this.events.on(e2, t2);
  }
  once(e2, t2) {
    this.events.once(e2, t2);
  }
  off(e2, t2) {
    this.events.off(e2, t2);
  }
  removeListener(e2, t2) {
    this.events.removeListener(e2, t2);
  }
  async open(e2 = this.url) {
    await this.register(e2);
  }
  async close() {
    return new Promise((e2, t2) => {
      if (typeof this.socket > "u") {
        t2(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (n2) => {
        this.onClose(n2), e2();
      }, this.socket.close();
    });
  }
  async send(e2) {
    typeof this.socket > "u" && (this.socket = await this.register());
    try {
      this.socket.send(safeJsonStringify(e2));
    } catch (t2) {
      this.onError(e2.id, t2);
    }
  }
  register(e2 = this.url) {
    if (!isWsUrl(e2)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e2}`);
    if (this.registering) {
      const t2 = this.events.getMaxListeners();
      return (this.events.listenerCount("register_error") >= t2 || this.events.listenerCount("open") >= t2) && this.events.setMaxListeners(t2 + 1), new Promise((n2, s2) => {
        this.events.once("register_error", (o2) => {
          this.resetMaxListeners(), s2(o2);
        }), this.events.once("open", () => {
          if (this.resetMaxListeners(), typeof this.socket > "u") return s2(new Error("WebSocket connection is missing or invalid"));
          n2(this.socket);
        });
      });
    }
    return this.url = e2, this.registering = true, new Promise((t2, n2) => {
      const s2 = (0, esm_exports.isReactNative)() ? void 0 : { rejectUnauthorized: !isLocalhostUrl(e2) }, o2 = new b(e2, [], s2);
      w() ? o2.onerror = (i4) => {
        const a2 = i4;
        n2(this.emitError(a2.error));
      } : o2.on("error", (i4) => {
        n2(this.emitError(i4));
      }), o2.onopen = () => {
        this.onOpen(o2), t2(o2);
      };
    });
  }
  onOpen(e2) {
    e2.onmessage = (t2) => this.onPayload(t2), e2.onclose = (t2) => this.onClose(t2), this.socket = e2, this.registering = false, this.events.emit("open");
  }
  onClose(e2) {
    this.socket = void 0, this.registering = false, this.events.emit("close", e2);
  }
  onPayload(e2) {
    if (typeof e2.data > "u") return;
    const t2 = typeof e2.data == "string" ? safeJsonParse(e2.data) : e2.data;
    this.events.emit("payload", t2);
  }
  onError(e2, t2) {
    const n2 = this.parseError(t2), s2 = n2.message || n2.toString(), o2 = formatJsonRpcError(e2, s2);
    this.events.emit("payload", o2);
  }
  parseError(e2, t2 = this.url) {
    return parseConnectionError(e2, d3(t2), "WS");
  }
  resetMaxListeners() {
    this.events.getMaxListeners() > h4 && this.events.setMaxListeners(h4);
  }
  emitError(e2) {
    const t2 = this.parseError(new Error((e2 == null ? void 0 : e2.message) || `WebSocket connection failed for host: ${d3(this.url)}`));
    return this.events.emit("register_error", t2), t2;
  }
};

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/core/dist/index.es.js
var import_lodash = __toESM(require_lodash());
var import_window_getters2 = __toESM(require_cjs2());
var ye3 = "wc";
var De4 = 2;
var J4 = "core";
var A2 = `${ye3}@2:${J4}:`;
var Xe3 = { name: J4, logger: "error" };
var We4 = { database: ":memory:" };
var Ze3 = "crypto";
var me4 = "client_ed25519_seed";
var Qe2 = import_time4.ONE_DAY;
var et2 = "keychain";
var tt2 = "0.3";
var it4 = "messages";
var st2 = "0.3";
var be4 = import_time4.SIX_HOURS;
var rt4 = "publisher";
var nt3 = "irn";
var ot2 = "error";
var fe4 = "wss://relay.walletconnect.org";
var at2 = "relayer";
var v3 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var ct4 = "_subscription";
var C3 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var ht4 = 0.1;
var re2 = "2.18.0";
var M5 = { link_mode: "link_mode", relay: "relay" };
var lt4 = "0.3";
var ut4 = "WALLETCONNECT_CLIENT_ID";
var ve4 = "WALLETCONNECT_LINK_MODE_APPS";
var T = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var dt3 = "subscription";
var pt2 = "0.3";
var gt4 = import_time4.FIVE_SECONDS * 1e3;
var yt4 = "pairing";
var Dt3 = "0.3";
var V2 = { wc_pairingDelete: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 } } };
var j3 = { create: "pairing_create", expire: "pairing_expire", delete: "pairing_delete", ping: "pairing_ping" };
var R = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var mt2 = "history";
var bt3 = "0.3";
var ft4 = "expirer";
var x5 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var vt4 = "0.3";
var _t4 = "verify-api";
var Ss2 = "https://verify.walletconnect.com";
var Et4 = "https://verify.walletconnect.org";
var X = Et4;
var wt4 = `${X}/v3`;
var It4 = [Ss2, Et4];
var Tt4 = "echo";
var Ct2 = "https://echo.walletconnect.com";
var z3 = { pairing_started: "pairing_started", pairing_uri_validation_success: "pairing_uri_validation_success", pairing_uri_not_expired: "pairing_uri_not_expired", store_new_pairing: "store_new_pairing", subscribing_pairing_topic: "subscribing_pairing_topic", subscribe_pairing_topic_success: "subscribe_pairing_topic_success", existing_pairing: "existing_pairing", pairing_not_expired: "pairing_not_expired", emit_inactive_pairing: "emit_inactive_pairing", emit_session_proposal: "emit_session_proposal", subscribing_to_pairing_topic: "subscribing_to_pairing_topic" };
var $ = { no_wss_connection: "no_wss_connection", no_internet_connection: "no_internet_connection", malformed_pairing_uri: "malformed_pairing_uri", active_pairing_already_exists: "active_pairing_already_exists", subscribe_pairing_topic_failure: "subscribe_pairing_topic_failure", pairing_expired: "pairing_expired", proposal_expired: "proposal_expired", proposal_listener_not_found: "proposal_listener_not_found" };
var xs2 = { session_approve_started: "session_approve_started", proposal_not_expired: "proposal_not_expired", session_namespaces_validation_success: "session_namespaces_validation_success", create_session_topic: "create_session_topic", subscribing_session_topic: "subscribing_session_topic", subscribe_session_topic_success: "subscribe_session_topic_success", publishing_session_approve: "publishing_session_approve", session_approve_publish_success: "session_approve_publish_success", store_session: "store_session", publishing_session_settle: "publishing_session_settle", session_settle_publish_success: "session_settle_publish_success" };
var Os2 = { no_internet_connection: "no_internet_connection", no_wss_connection: "no_wss_connection", proposal_expired: "proposal_expired", subscribe_session_topic_failure: "subscribe_session_topic_failure", session_approve_publish_failure: "session_approve_publish_failure", session_settle_publish_failure: "session_settle_publish_failure", session_approve_namespace_validation_failure: "session_approve_namespace_validation_failure", proposal_not_found: "proposal_not_found" };
var As2 = { authenticated_session_approve_started: "authenticated_session_approve_started", authenticated_session_not_expired: "authenticated_session_not_expired", chains_caip2_compliant: "chains_caip2_compliant", chains_evm_compliant: "chains_evm_compliant", create_authenticated_session_topic: "create_authenticated_session_topic", cacaos_verified: "cacaos_verified", store_authenticated_session: "store_authenticated_session", subscribing_authenticated_session_topic: "subscribing_authenticated_session_topic", subscribe_authenticated_session_topic_success: "subscribe_authenticated_session_topic_success", publishing_authenticated_session_approve: "publishing_authenticated_session_approve", authenticated_session_approve_publish_success: "authenticated_session_approve_publish_success" };
var Ns2 = { no_internet_connection: "no_internet_connection", no_wss_connection: "no_wss_connection", missing_session_authenticate_request: "missing_session_authenticate_request", session_authenticate_request_expired: "session_authenticate_request_expired", chains_caip2_compliant_failure: "chains_caip2_compliant_failure", chains_evm_compliant_failure: "chains_evm_compliant_failure", invalid_cacao: "invalid_cacao", subscribe_authenticated_session_topic_failure: "subscribe_authenticated_session_topic_failure", authenticated_session_approve_publish_failure: "authenticated_session_approve_publish_failure", authenticated_session_pending_request_not_found: "authenticated_session_pending_request_not_found" };
var Pt4 = 0.1;
var St4 = "event-client";
var Rt4 = 86400;
var xt4 = "https://pulse.walletconnect.org/batch";
function zs2(o2, e2) {
  if (o2.length >= 255) throw new TypeError("Alphabet too long");
  for (var t2 = new Uint8Array(256), s2 = 0; s2 < t2.length; s2++) t2[s2] = 255;
  for (var i4 = 0; i4 < o2.length; i4++) {
    var r2 = o2.charAt(i4), n2 = r2.charCodeAt(0);
    if (t2[n2] !== 255) throw new TypeError(r2 + " is ambiguous");
    t2[n2] = i4;
  }
  var a2 = o2.length, c3 = o2.charAt(0), h6 = Math.log(a2) / Math.log(256), u3 = Math.log(256) / Math.log(a2);
  function d4(l3) {
    if (l3 instanceof Uint8Array || (ArrayBuffer.isView(l3) ? l3 = new Uint8Array(l3.buffer, l3.byteOffset, l3.byteLength) : Array.isArray(l3) && (l3 = Uint8Array.from(l3))), !(l3 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (l3.length === 0) return "";
    for (var g3 = 0, w3 = 0, b3 = 0, D3 = l3.length; b3 !== D3 && l3[b3] === 0; ) b3++, g3++;
    for (var P4 = (D3 - b3) * u3 + 1 >>> 0, f5 = new Uint8Array(P4); b3 !== D3; ) {
      for (var N4 = l3[b3], k6 = 0, O2 = P4 - 1; (N4 !== 0 || k6 < w3) && O2 !== -1; O2--, k6++) N4 += 256 * f5[O2] >>> 0, f5[O2] = N4 % a2 >>> 0, N4 = N4 / a2 >>> 0;
      if (N4 !== 0) throw new Error("Non-zero carry");
      w3 = k6, b3++;
    }
    for (var L3 = P4 - w3; L3 !== P4 && f5[L3] === 0; ) L3++;
    for (var ee2 = c3.repeat(g3); L3 < P4; ++L3) ee2 += o2.charAt(f5[L3]);
    return ee2;
  }
  function y5(l3) {
    if (typeof l3 != "string") throw new TypeError("Expected String");
    if (l3.length === 0) return new Uint8Array();
    var g3 = 0;
    if (l3[g3] !== " ") {
      for (var w3 = 0, b3 = 0; l3[g3] === c3; ) w3++, g3++;
      for (var D3 = (l3.length - g3) * h6 + 1 >>> 0, P4 = new Uint8Array(D3); l3[g3]; ) {
        var f5 = t2[l3.charCodeAt(g3)];
        if (f5 === 255) return;
        for (var N4 = 0, k6 = D3 - 1; (f5 !== 0 || N4 < b3) && k6 !== -1; k6--, N4++) f5 += a2 * P4[k6] >>> 0, P4[k6] = f5 % 256 >>> 0, f5 = f5 / 256 >>> 0;
        if (f5 !== 0) throw new Error("Non-zero carry");
        b3 = N4, g3++;
      }
      if (l3[g3] !== " ") {
        for (var O2 = D3 - b3; O2 !== D3 && P4[O2] === 0; ) O2++;
        for (var L3 = new Uint8Array(w3 + (D3 - O2)), ee2 = w3; O2 !== D3; ) L3[ee2++] = P4[O2++];
        return L3;
      }
    }
  }
  function m(l3) {
    var g3 = y5(l3);
    if (g3) return g3;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: d4, decodeUnsafe: y5, decode: m };
}
var Ls2 = zs2;
var $s2 = Ls2;
var Ot4 = (o2) => {
  if (o2 instanceof Uint8Array && o2.constructor.name === "Uint8Array") return o2;
  if (o2 instanceof ArrayBuffer) return new Uint8Array(o2);
  if (ArrayBuffer.isView(o2)) return new Uint8Array(o2.buffer, o2.byteOffset, o2.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var ks2 = (o2) => new TextEncoder().encode(o2);
var Us2 = (o2) => new TextDecoder().decode(o2);
var Fs2 = class {
  constructor(e2, t2, s2) {
    this.name = e2, this.prefix = t2, this.baseEncode = s2;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Ms2 = class {
  constructor(e2, t2, s2) {
    if (this.name = e2, this.prefix = t2, t2.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = t2.codePointAt(0), this.baseDecode = s2;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return At2(this, e2);
  }
};
var Ks2 = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return At2(this, e2);
  }
  decode(e2) {
    const t2 = e2[0], s2 = this.decoders[t2];
    if (s2) return s2.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var At2 = (o2, e2) => new Ks2({ ...o2.decoders || { [o2.prefix]: o2 }, ...e2.decoders || { [e2.prefix]: e2 } });
var Bs2 = class {
  constructor(e2, t2, s2, i4) {
    this.name = e2, this.prefix = t2, this.baseEncode = s2, this.baseDecode = i4, this.encoder = new Fs2(e2, t2, s2), this.decoder = new Ms2(e2, t2, i4);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var ne2 = ({ name: o2, prefix: e2, encode: t2, decode: s2 }) => new Bs2(o2, e2, t2, s2);
var W3 = ({ prefix: o2, name: e2, alphabet: t2 }) => {
  const { encode: s2, decode: i4 } = $s2(t2, e2);
  return ne2({ prefix: o2, name: e2, encode: s2, decode: (r2) => Ot4(i4(r2)) });
};
var Vs2 = (o2, e2, t2, s2) => {
  const i4 = {};
  for (let u3 = 0; u3 < e2.length; ++u3) i4[e2[u3]] = u3;
  let r2 = o2.length;
  for (; o2[r2 - 1] === "="; ) --r2;
  const n2 = new Uint8Array(r2 * t2 / 8 | 0);
  let a2 = 0, c3 = 0, h6 = 0;
  for (let u3 = 0; u3 < r2; ++u3) {
    const d4 = i4[o2[u3]];
    if (d4 === void 0) throw new SyntaxError(`Non-${s2} character`);
    c3 = c3 << t2 | d4, a2 += t2, a2 >= 8 && (a2 -= 8, n2[h6++] = 255 & c3 >> a2);
  }
  if (a2 >= t2 || 255 & c3 << 8 - a2) throw new SyntaxError("Unexpected end of data");
  return n2;
};
var js2 = (o2, e2, t2) => {
  const s2 = e2[e2.length - 1] === "=", i4 = (1 << t2) - 1;
  let r2 = "", n2 = 0, a2 = 0;
  for (let c3 = 0; c3 < o2.length; ++c3) for (a2 = a2 << 8 | o2[c3], n2 += 8; n2 > t2; ) n2 -= t2, r2 += e2[i4 & a2 >> n2];
  if (n2 && (r2 += e2[i4 & a2 << t2 - n2]), s2) for (; r2.length * t2 & 7; ) r2 += "=";
  return r2;
};
var _ = ({ name: o2, prefix: e2, bitsPerChar: t2, alphabet: s2 }) => ne2({ prefix: e2, name: o2, encode(i4) {
  return js2(i4, s2, t2);
}, decode(i4) {
  return Vs2(i4, s2, t2, o2);
} });
var qs2 = ne2({ prefix: "\0", name: "identity", encode: (o2) => Us2(o2), decode: (o2) => ks2(o2) });
var Gs2 = Object.freeze({ __proto__: null, identity: qs2 });
var Hs2 = _({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var Ys2 = Object.freeze({ __proto__: null, base2: Hs2 });
var Js2 = _({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Xs2 = Object.freeze({ __proto__: null, base8: Js2 });
var Ws2 = W3({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Zs2 = Object.freeze({ __proto__: null, base10: Ws2 });
var Qs2 = _({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var er4 = _({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var tr4 = Object.freeze({ __proto__: null, base16: Qs2, base16upper: er4 });
var ir4 = _({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var sr4 = _({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var rr4 = _({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var nr4 = _({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var or4 = _({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var ar4 = _({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var cr4 = _({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var hr4 = _({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var lr4 = _({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var ur3 = Object.freeze({ __proto__: null, base32: ir4, base32upper: sr4, base32pad: rr4, base32padupper: nr4, base32hex: or4, base32hexupper: ar4, base32hexpad: cr4, base32hexpadupper: hr4, base32z: lr4 });
var dr4 = W3({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var pr4 = W3({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var gr4 = Object.freeze({ __proto__: null, base36: dr4, base36upper: pr4 });
var yr4 = W3({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Dr3 = W3({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var mr4 = Object.freeze({ __proto__: null, base58btc: yr4, base58flickr: Dr3 });
var br4 = _({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var fr3 = _({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var vr4 = _({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var _r4 = _({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Er4 = Object.freeze({ __proto__: null, base64: br4, base64pad: fr3, base64url: vr4, base64urlpad: _r4 });
var Nt4 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var wr4 = Nt4.reduce((o2, e2, t2) => (o2[t2] = e2, o2), []);
var Ir4 = Nt4.reduce((o2, e2, t2) => (o2[e2.codePointAt(0)] = t2, o2), []);
function Tr4(o2) {
  return o2.reduce((e2, t2) => (e2 += wr4[t2], e2), "");
}
function Cr3(o2) {
  const e2 = [];
  for (const t2 of o2) {
    const s2 = Ir4[t2.codePointAt(0)];
    if (s2 === void 0) throw new Error(`Non-base256emoji character: ${t2}`);
    e2.push(s2);
  }
  return new Uint8Array(e2);
}
var Pr3 = ne2({ prefix: "🚀", name: "base256emoji", encode: Tr4, decode: Cr3 });
var Sr4 = Object.freeze({ __proto__: null, base256emoji: Pr3 });
var Rr4 = Lt4;
var zt4 = 128;
var xr4 = 127;
var Or4 = ~xr4;
var Ar4 = Math.pow(2, 31);
function Lt4(o2, e2, t2) {
  e2 = e2 || [], t2 = t2 || 0;
  for (var s2 = t2; o2 >= Ar4; ) e2[t2++] = o2 & 255 | zt4, o2 /= 128;
  for (; o2 & Or4; ) e2[t2++] = o2 & 255 | zt4, o2 >>>= 7;
  return e2[t2] = o2 | 0, Lt4.bytes = t2 - s2 + 1, e2;
}
var Nr4 = _e4;
var zr4 = 128;
var $t3 = 127;
function _e4(o2, s2) {
  var t2 = 0, s2 = s2 || 0, i4 = 0, r2 = s2, n2, a2 = o2.length;
  do {
    if (r2 >= a2) throw _e4.bytes = 0, new RangeError("Could not decode varint");
    n2 = o2[r2++], t2 += i4 < 28 ? (n2 & $t3) << i4 : (n2 & $t3) * Math.pow(2, i4), i4 += 7;
  } while (n2 >= zr4);
  return _e4.bytes = r2 - s2, t2;
}
var Lr4 = Math.pow(2, 7);
var $r4 = Math.pow(2, 14);
var kr4 = Math.pow(2, 21);
var Ur4 = Math.pow(2, 28);
var Fr3 = Math.pow(2, 35);
var Mr3 = Math.pow(2, 42);
var Kr3 = Math.pow(2, 49);
var Br4 = Math.pow(2, 56);
var Vr3 = Math.pow(2, 63);
var jr3 = function(o2) {
  return o2 < Lr4 ? 1 : o2 < $r4 ? 2 : o2 < kr4 ? 3 : o2 < Ur4 ? 4 : o2 < Fr3 ? 5 : o2 < Mr3 ? 6 : o2 < Kr3 ? 7 : o2 < Br4 ? 8 : o2 < Vr3 ? 9 : 10;
};
var qr3 = { encode: Rr4, decode: Nr4, encodingLength: jr3 };
var kt4 = qr3;
var Ut4 = (o2, e2, t2 = 0) => (kt4.encode(o2, e2, t2), e2);
var Ft4 = (o2) => kt4.encodingLength(o2);
var Ee4 = (o2, e2) => {
  const t2 = e2.byteLength, s2 = Ft4(o2), i4 = s2 + Ft4(t2), r2 = new Uint8Array(i4 + t2);
  return Ut4(o2, r2, 0), Ut4(t2, r2, s2), r2.set(e2, i4), new Gr3(o2, t2, e2, r2);
};
var Gr3 = class {
  constructor(e2, t2, s2, i4) {
    this.code = e2, this.size = t2, this.digest = s2, this.bytes = i4;
  }
};
var Mt3 = ({ name: o2, code: e2, encode: t2 }) => new Hr3(o2, e2, t2);
var Hr3 = class {
  constructor(e2, t2, s2) {
    this.name = e2, this.code = t2, this.encode = s2;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const t2 = this.encode(e2);
      return t2 instanceof Uint8Array ? Ee4(this.code, t2) : t2.then((s2) => Ee4(this.code, s2));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Kt2 = (o2) => async (e2) => new Uint8Array(await crypto.subtle.digest(o2, e2));
var Yr4 = Mt3({ name: "sha2-256", code: 18, encode: Kt2("SHA-256") });
var Jr4 = Mt3({ name: "sha2-512", code: 19, encode: Kt2("SHA-512") });
var Xr3 = Object.freeze({ __proto__: null, sha256: Yr4, sha512: Jr4 });
var Bt4 = 0;
var Wr4 = "identity";
var Vt2 = Ot4;
var Zr4 = (o2) => Ee4(Bt4, Vt2(o2));
var Qr3 = { code: Bt4, name: Wr4, encode: Vt2, digest: Zr4 };
var en3 = Object.freeze({ __proto__: null, identity: Qr3 });
new TextEncoder(), new TextDecoder();
var jt3 = { ...Gs2, ...Ys2, ...Xs2, ...Zs2, ...tr4, ...ur3, ...gr4, ...mr4, ...Er4, ...Sr4 };
({ ...Xr3, ...en3 });
function tn2(o2 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(o2) : new Uint8Array(o2);
}
function qt3(o2, e2, t2, s2) {
  return { name: o2, prefix: e2, encoder: { name: o2, prefix: e2, encode: t2 }, decoder: { decode: s2 } };
}
var Gt4 = qt3("utf8", "u", (o2) => "u" + new TextDecoder("utf8").decode(o2), (o2) => new TextEncoder().encode(o2.substring(1)));
var we4 = qt3("ascii", "a", (o2) => {
  let e2 = "a";
  for (let t2 = 0; t2 < o2.length; t2++) e2 += String.fromCharCode(o2[t2]);
  return e2;
}, (o2) => {
  o2 = o2.substring(1);
  const e2 = tn2(o2.length);
  for (let t2 = 0; t2 < o2.length; t2++) e2[t2] = o2.charCodeAt(t2);
  return e2;
});
var sn4 = { utf8: Gt4, "utf-8": Gt4, hex: jt3.base16, latin1: we4, ascii: we4, binary: we4, ...jt3 };
function rn3(o2, e2 = "utf8") {
  const t2 = sn4[e2];
  if (!t2) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(o2, "utf8") : t2.decoder.decode(`${t2.prefix}${o2}`);
}
var Ht3 = class {
  constructor(e2, t2) {
    this.core = e2, this.logger = t2, this.keychain = /* @__PURE__ */ new Map(), this.name = et2, this.version = tt2, this.initialized = false, this.storagePrefix = A2, this.init = async () => {
      if (!this.initialized) {
        const s2 = await this.getKeyChain();
        typeof s2 < "u" && (this.keychain = s2), this.initialized = true;
      }
    }, this.has = (s2) => (this.isInitialized(), this.keychain.has(s2)), this.set = async (s2, i4) => {
      this.isInitialized(), this.keychain.set(s2, i4), await this.persist();
    }, this.get = (s2) => {
      this.isInitialized();
      const i4 = this.keychain.get(s2);
      if (typeof i4 > "u") {
        const { message: r2 } = te3("NO_MATCHING_KEY", `${this.name}: ${s2}`);
        throw new Error(r2);
      }
      return i4;
    }, this.del = async (s2) => {
      this.isInitialized(), this.keychain.delete(s2), await this.persist();
    }, this.core = e2, this.logger = E(t2, this.name);
  }
  get context() {
    return y(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setKeyChain(e2) {
    await this.core.storage.setItem(this.storageKey, no3(e2));
  }
  async getKeyChain() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? ro3(e2) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Yt3 = class {
  constructor(e2, t2, s2) {
    this.core = e2, this.logger = t2, this.name = Ze3, this.randomSessionIdentifier = ni(), this.initialized = false, this.init = async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }, this.hasKeys = (i4) => (this.isInitialized(), this.keychain.has(i4)), this.getClientId = async () => {
      this.isInitialized();
      const i4 = await this.getClientSeed(), r2 = Po(i4);
      return Qe(r2.publicKey);
    }, this.generateKeyPair = () => {
      this.isInitialized();
      const i4 = ti();
      return this.setPrivateKey(i4.publicKey, i4.privateKey);
    }, this.signJWT = async (i4) => {
      this.isInitialized();
      const r2 = await this.getClientSeed(), n2 = Po(r2), a2 = this.randomSessionIdentifier, c3 = Qe2;
      return await Qo(a2, i4, c3, n2);
    }, this.generateSharedKey = (i4, r2, n2) => {
      this.isInitialized();
      const a2 = this.getPrivateKey(i4), c3 = ri(a2, r2);
      return this.setSymKey(c3, n2);
    }, this.setSymKey = async (i4, r2) => {
      this.isInitialized();
      const n2 = r2 || oi(i4);
      return await this.keychain.set(n2, i4), n2;
    }, this.deleteKeyPair = async (i4) => {
      this.isInitialized(), await this.keychain.del(i4);
    }, this.deleteSymKey = async (i4) => {
      this.isInitialized(), await this.keychain.del(i4);
    }, this.encode = async (i4, r2, n2) => {
      this.isInitialized();
      const a2 = rr3(n2), c3 = safeJsonStringify(r2);
      if (di(a2)) return ai(c3, n2 == null ? void 0 : n2.encoding);
      if (li(a2)) {
        const y5 = a2.senderPublicKey, m = a2.receiverPublicKey;
        i4 = await this.generateSharedKey(y5, m);
      }
      const h6 = this.getSymKey(i4), { type: u3, senderPublicKey: d4 } = a2;
      return ii({ type: u3, symKey: h6, message: c3, senderPublicKey: d4, encoding: n2 == null ? void 0 : n2.encoding });
    }, this.decode = async (i4, r2, n2) => {
      this.isInitialized();
      const a2 = fi(r2, n2);
      if (di(a2)) {
        const c3 = ui(r2, n2 == null ? void 0 : n2.encoding);
        return safeJsonParse(c3);
      }
      if (li(a2)) {
        const c3 = a2.receiverPublicKey, h6 = a2.senderPublicKey;
        i4 = await this.generateSharedKey(c3, h6);
      }
      try {
        const c3 = this.getSymKey(i4), h6 = ci({ symKey: c3, encoded: r2, encoding: n2 == null ? void 0 : n2.encoding });
        return safeJsonParse(h6);
      } catch (c3) {
        this.logger.error(`Failed to decode message from topic: '${i4}', clientId: '${await this.getClientId()}'`), this.logger.error(c3);
      }
    }, this.getPayloadType = (i4, r2 = At) => {
      const n2 = Fe({ encoded: i4, encoding: r2 });
      return fe3(n2.type);
    }, this.getPayloadSenderPublicKey = (i4, r2 = At) => {
      const n2 = Fe({ encoded: i4, encoding: r2 });
      return n2.senderPublicKey ? toString(n2.senderPublicKey, V) : void 0;
    }, this.core = e2, this.logger = E(t2, this.name), this.keychain = s2 || new Ht3(this.core, this.logger);
  }
  get context() {
    return y(this.logger);
  }
  async setPrivateKey(e2, t2) {
    return await this.keychain.set(e2, t2), e2;
  }
  getPrivateKey(e2) {
    return this.keychain.get(e2);
  }
  async getClientSeed() {
    let e2 = "";
    try {
      e2 = this.keychain.get(me4);
    } catch {
      e2 = ni(), await this.keychain.set(me4, e2);
    }
    return rn3(e2, "base16");
  }
  getSymKey(e2) {
    return this.keychain.get(e2);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Jt3 = class extends a {
  constructor(e2, t2) {
    super(e2, t2), this.logger = e2, this.core = t2, this.messages = /* @__PURE__ */ new Map(), this.name = it4, this.version = st2, this.initialized = false, this.storagePrefix = A2, this.init = async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const s2 = await this.getRelayerMessages();
          typeof s2 < "u" && (this.messages = s2), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (s2) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(s2);
        } finally {
          this.initialized = true;
        }
      }
    }, this.set = async (s2, i4) => {
      this.isInitialized();
      const r2 = si(i4);
      let n2 = this.messages.get(s2);
      return typeof n2 > "u" && (n2 = {}), typeof n2[r2] < "u" || (n2[r2] = i4, this.messages.set(s2, n2), await this.persist()), r2;
    }, this.get = (s2) => {
      this.isInitialized();
      let i4 = this.messages.get(s2);
      return typeof i4 > "u" && (i4 = {}), i4;
    }, this.has = (s2, i4) => {
      this.isInitialized();
      const r2 = this.get(s2), n2 = si(i4);
      return typeof r2[n2] < "u";
    }, this.del = async (s2) => {
      this.isInitialized(), this.messages.delete(s2), await this.persist();
    }, this.logger = E(e2, this.name), this.core = t2;
  }
  get context() {
    return y(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setRelayerMessages(e2) {
    await this.core.storage.setItem(this.storageKey, no3(e2));
  }
  async getRelayerMessages() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? ro3(e2) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var nn4 = Object.defineProperty;
var on3 = Object.defineProperties;
var an2 = Object.getOwnPropertyDescriptors;
var Xt3 = Object.getOwnPropertySymbols;
var cn2 = Object.prototype.hasOwnProperty;
var hn2 = Object.prototype.propertyIsEnumerable;
var Wt3 = (o2, e2, t2) => e2 in o2 ? nn4(o2, e2, { enumerable: true, configurable: true, writable: true, value: t2 }) : o2[e2] = t2;
var Zt2 = (o2, e2) => {
  for (var t2 in e2 || (e2 = {})) cn2.call(e2, t2) && Wt3(o2, t2, e2[t2]);
  if (Xt3) for (var t2 of Xt3(e2)) hn2.call(e2, t2) && Wt3(o2, t2, e2[t2]);
  return o2;
};
var Qt3 = (o2, e2) => on3(o2, an2(e2));
var ln2 = class extends g {
  constructor(e2, t2) {
    super(e2, t2), this.relayer = e2, this.logger = t2, this.events = new import_events4.EventEmitter(), this.name = rt4, this.queue = /* @__PURE__ */ new Map(), this.publishTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE), this.initialPublishTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND * 15), this.needsTransportRestart = false, this.publish = async (s2, i4, r2) => {
      var n2;
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: s2, message: i4, opts: r2 } });
      const a2 = (r2 == null ? void 0 : r2.ttl) || be4, c3 = yi(r2), h6 = (r2 == null ? void 0 : r2.prompt) || false, u3 = (r2 == null ? void 0 : r2.tag) || 0, d4 = (r2 == null ? void 0 : r2.id) || getBigIntRpcId().toString(), y5 = { topic: s2, message: i4, opts: { ttl: a2, relay: c3, prompt: h6, tag: u3, id: d4, attestation: r2 == null ? void 0 : r2.attestation } }, m = `Failed to publish payload, please try again. id:${d4} tag:${u3}`;
      try {
        const l3 = new Promise(async (g3) => {
          const w3 = ({ id: D3 }) => {
            y5.opts.id === D3 && (this.removeRequestFromQueue(D3), this.relayer.events.removeListener(v3.publish, w3), g3(y5));
          };
          this.relayer.events.on(v3.publish, w3);
          const b3 = ao3(new Promise((D3, P4) => {
            this.rpcPublish({ topic: s2, message: i4, ttl: a2, prompt: h6, tag: u3, id: d4, attestation: r2 == null ? void 0 : r2.attestation }).then(D3).catch((f5) => {
              this.logger.warn(f5, f5 == null ? void 0 : f5.message), P4(f5);
            });
          }), this.initialPublishTimeout, `Failed initial publish, retrying.... id:${d4} tag:${u3}`);
          try {
            await b3, this.events.removeListener(v3.publish, w3);
          } catch (D3) {
            this.queue.set(d4, Qt3(Zt2({}, y5), { attempt: 1 })), this.logger.warn(D3, D3 == null ? void 0 : D3.message);
          }
        });
        this.logger.trace({ type: "method", method: "publish", params: { id: d4, topic: s2, message: i4, opts: r2 } }), await ao3(l3, this.publishTimeout, m);
      } catch (l3) {
        if (this.logger.debug("Failed to Publish Payload"), this.logger.error(l3), (n2 = r2 == null ? void 0 : r2.internal) != null && n2.throwOnFailedPublish) throw l3;
      } finally {
        this.queue.delete(d4);
      }
    }, this.on = (s2, i4) => {
      this.events.on(s2, i4);
    }, this.once = (s2, i4) => {
      this.events.once(s2, i4);
    }, this.off = (s2, i4) => {
      this.events.off(s2, i4);
    }, this.removeListener = (s2, i4) => {
      this.events.removeListener(s2, i4);
    }, this.relayer = e2, this.logger = E(t2, this.name), this.registerEventListeners();
  }
  get context() {
    return y(this.logger);
  }
  async rpcPublish(e2) {
    var t2, s2, i4, r2;
    const { topic: n2, message: a2, ttl: c3 = be4, prompt: h6, tag: u3, id: d4, attestation: y5 } = e2, m = { method: mi(yi().protocol).publish, params: { topic: n2, message: a2, ttl: c3, prompt: h6, tag: u3, attestation: y5 }, id: d4 };
    ae((t2 = m.params) == null ? void 0 : t2.prompt) && ((s2 = m.params) == null || delete s2.prompt), ae((i4 = m.params) == null ? void 0 : i4.tag) && ((r2 = m.params) == null || delete r2.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: m });
    const l3 = await this.relayer.request(m);
    return this.relayer.events.emit(v3.publish, e2), this.logger.debug("Successfully Published Payload"), l3;
  }
  removeRequestFromQueue(e2) {
    this.queue.delete(e2);
  }
  checkQueue() {
    this.queue.forEach(async (e2, t2) => {
      const s2 = e2.attempt + 1;
      this.queue.set(t2, Qt3(Zt2({}, e2), { attempt: s2 }));
      const { topic: i4, message: r2, opts: n2, attestation: a2 } = e2;
      this.logger.warn({}, `Publisher: queue->publishing: ${e2.opts.id}, tag: ${e2.opts.tag}, attempt: ${s2}`), await this.rpcPublish({ topic: i4, message: r2, ttl: n2.ttl, prompt: n2.prompt, tag: n2.tag, id: n2.id, attestation: a2 }), this.logger.warn({}, `Publisher: queue->published: ${e2.opts.id}`);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(r.pulse, () => {
      if (this.needsTransportRestart) {
        this.needsTransportRestart = false, this.relayer.events.emit(v3.connection_stalled);
        return;
      }
      this.checkQueue();
    }), this.relayer.on(v3.message_ack, (e2) => {
      this.removeRequestFromQueue(e2.id.toString());
    });
  }
};
var un2 = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map(), this.set = (e2, t2) => {
      const s2 = this.get(e2);
      this.exists(e2, t2) || this.map.set(e2, [...s2, t2]);
    }, this.get = (e2) => this.map.get(e2) || [], this.exists = (e2, t2) => this.get(e2).includes(t2), this.delete = (e2, t2) => {
      if (typeof t2 > "u") {
        this.map.delete(e2);
        return;
      }
      if (!this.map.has(e2)) return;
      const s2 = this.get(e2);
      if (!this.exists(e2, t2)) return;
      const i4 = s2.filter((r2) => r2 !== t2);
      if (!i4.length) {
        this.map.delete(e2);
        return;
      }
      this.map.set(e2, i4);
    }, this.clear = () => {
      this.map.clear();
    };
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var dn2 = Object.defineProperty;
var pn2 = Object.defineProperties;
var gn4 = Object.getOwnPropertyDescriptors;
var ei2 = Object.getOwnPropertySymbols;
var yn4 = Object.prototype.hasOwnProperty;
var Dn2 = Object.prototype.propertyIsEnumerable;
var ti2 = (o2, e2, t2) => e2 in o2 ? dn2(o2, e2, { enumerable: true, configurable: true, writable: true, value: t2 }) : o2[e2] = t2;
var Z = (o2, e2) => {
  for (var t2 in e2 || (e2 = {})) yn4.call(e2, t2) && ti2(o2, t2, e2[t2]);
  if (ei2) for (var t2 of ei2(e2)) Dn2.call(e2, t2) && ti2(o2, t2, e2[t2]);
  return o2;
};
var Ie4 = (o2, e2) => pn2(o2, gn4(e2));
var ii2 = class extends d2 {
  constructor(e2, t2) {
    super(e2, t2), this.relayer = e2, this.logger = t2, this.subscriptions = /* @__PURE__ */ new Map(), this.topicMap = new un2(), this.events = new import_events4.EventEmitter(), this.name = dt3, this.version = pt2, this.pending = /* @__PURE__ */ new Map(), this.cached = [], this.initialized = false, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = A2, this.subscribeTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE), this.initialSubscribeTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND * 15), this.batchSubscribeTopicsLimit = 500, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId(), await this.restore()), this.initialized = true;
    }, this.subscribe = async (s2, i4) => {
      this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: s2, opts: i4 } });
      try {
        const r2 = yi(i4), n2 = { topic: s2, relay: r2, transportType: i4 == null ? void 0 : i4.transportType };
        this.pending.set(s2, n2);
        const a2 = await this.rpcSubscribe(s2, r2, i4);
        return typeof a2 == "string" && (this.onSubscribe(a2, n2), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: s2, opts: i4 } })), a2;
      } catch (r2) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(r2), r2;
      }
    }, this.unsubscribe = async (s2, i4) => {
      await this.restartToComplete(), this.isInitialized(), typeof (i4 == null ? void 0 : i4.id) < "u" ? await this.unsubscribeById(s2, i4.id, i4) : await this.unsubscribeByTopic(s2, i4);
    }, this.isSubscribed = async (s2) => {
      if (this.topics.includes(s2)) return true;
      const i4 = `${this.pendingSubscriptionWatchLabel}_${s2}`;
      return await new Promise((r2, n2) => {
        const a2 = new import_time4.Watch();
        a2.start(i4);
        const c3 = setInterval(() => {
          (!this.pending.has(s2) && this.topics.includes(s2) || this.cached.some((h6) => h6.topic === s2)) && (clearInterval(c3), a2.stop(i4), r2(true)), a2.elapsed(i4) >= gt4 && (clearInterval(c3), a2.stop(i4), n2(new Error("Subscription resolution timeout")));
        }, this.pollingInterval);
      }).catch(() => false);
    }, this.on = (s2, i4) => {
      this.events.on(s2, i4);
    }, this.once = (s2, i4) => {
      this.events.once(s2, i4);
    }, this.off = (s2, i4) => {
      this.events.off(s2, i4);
    }, this.removeListener = (s2, i4) => {
      this.events.removeListener(s2, i4);
    }, this.start = async () => {
      await this.onConnect();
    }, this.stop = async () => {
      await this.onDisconnect();
    }, this.restart = async () => {
      await this.restore(), await this.onRestart();
    }, this.checkPending = async () => {
      if (this.pending.size === 0 && (!this.initialized || !this.relayer.connected)) return;
      const s2 = [];
      this.pending.forEach((i4) => {
        s2.push(i4);
      }), await this.batchSubscribe(s2);
    }, this.registerEventListeners = () => {
      this.relayer.core.heartbeat.on(r.pulse, async () => {
        await this.checkPending();
      }), this.events.on(T.created, async (s2) => {
        const i4 = T.created;
        this.logger.info(`Emitting ${i4}`), this.logger.debug({ type: "event", event: i4, data: s2 }), await this.persist();
      }), this.events.on(T.deleted, async (s2) => {
        const i4 = T.deleted;
        this.logger.info(`Emitting ${i4}`), this.logger.debug({ type: "event", event: i4, data: s2 }), await this.persist();
      });
    }, this.relayer = e2, this.logger = E(t2, this.name), this.clientId = "";
  }
  get context() {
    return y(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  hasSubscription(e2, t2) {
    let s2 = false;
    try {
      s2 = this.getSubscription(e2).topic === t2;
    } catch {
    }
    return s2;
  }
  reset() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e2, t2) {
    const s2 = this.topicMap.get(e2);
    await Promise.all(s2.map(async (i4) => await this.unsubscribeById(e2, i4, t2)));
  }
  async unsubscribeById(e2, t2, s2) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t2, opts: s2 } });
    try {
      const i4 = yi(s2);
      await this.rpcUnsubscribe(e2, t2, i4);
      const r2 = de3("USER_DISCONNECTED", `${this.name}, ${e2}`);
      await this.onUnsubscribe(e2, t2, r2), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t2, opts: s2 } });
    } catch (i4) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(i4), i4;
    }
  }
  async rpcSubscribe(e2, t2, s2) {
    var i4;
    (s2 == null ? void 0 : s2.transportType) === M5.relay && await this.restartToComplete();
    const r2 = { method: mi(t2.protocol).subscribe, params: { topic: e2 } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: r2 });
    const n2 = (i4 = s2 == null ? void 0 : s2.internal) == null ? void 0 : i4.throwOnFailedPublish;
    try {
      const a2 = this.getSubscriptionId(e2);
      if ((s2 == null ? void 0 : s2.transportType) === M5.link_mode) return setTimeout(() => {
        (this.relayer.connected || this.relayer.connecting) && this.relayer.request(r2).catch((u3) => this.logger.warn(u3));
      }, (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND)), a2;
      const c3 = new Promise(async (u3) => {
        const d4 = (y5) => {
          y5.topic === e2 && (this.events.removeListener(T.created, d4), u3(y5.id));
        };
        this.events.on(T.created, d4);
        try {
          const y5 = await ao3(new Promise((m, l3) => {
            this.relayer.request(r2).catch((g3) => {
              this.logger.warn(g3, g3 == null ? void 0 : g3.message), l3(g3);
            }).then(m);
          }), this.initialSubscribeTimeout, `Subscribing to ${e2} failed, please try again`);
          this.events.removeListener(T.created, d4), u3(y5);
        } catch {
        }
      }), h6 = await ao3(c3, this.subscribeTimeout, `Subscribing to ${e2} failed, please try again`);
      if (!h6 && n2) throw new Error(`Subscribing to ${e2} failed, please try again`);
      return h6 ? a2 : null;
    } catch (a2) {
      if (this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(v3.connection_stalled), n2) throw a2;
    }
    return null;
  }
  async rpcBatchSubscribe(e2) {
    if (!e2.length) return;
    const t2 = e2[0].relay, s2 = { method: mi(t2.protocol).batchSubscribe, params: { topics: e2.map((i4) => i4.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s2 });
    try {
      await await ao3(new Promise((i4) => {
        this.relayer.request(s2).catch((r2) => this.logger.warn(r2)).then(i4);
      }), this.subscribeTimeout, "rpcBatchSubscribe failed, please try again");
    } catch {
      this.relayer.events.emit(v3.connection_stalled);
    }
  }
  async rpcBatchFetchMessages(e2) {
    if (!e2.length) return;
    const t2 = e2[0].relay, s2 = { method: mi(t2.protocol).batchFetchMessages, params: { topics: e2.map((r2) => r2.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s2 });
    let i4;
    try {
      i4 = await await ao3(new Promise((r2, n2) => {
        this.relayer.request(s2).catch((a2) => {
          this.logger.warn(a2), n2(a2);
        }).then(r2);
      }), this.subscribeTimeout, "rpcBatchFetchMessages failed, please try again");
    } catch {
      this.relayer.events.emit(v3.connection_stalled);
    }
    return i4;
  }
  rpcUnsubscribe(e2, t2, s2) {
    const i4 = { method: mi(s2.protocol).unsubscribe, params: { topic: e2, id: t2 } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i4 }), this.relayer.request(i4);
  }
  onSubscribe(e2, t2) {
    this.setSubscription(e2, Ie4(Z({}, t2), { id: e2 })), this.pending.delete(t2.topic);
  }
  onBatchSubscribe(e2) {
    e2.length && e2.forEach((t2) => {
      this.setSubscription(t2.id, Z({}, t2)), this.pending.delete(t2.topic);
    });
  }
  async onUnsubscribe(e2, t2, s2) {
    this.events.removeAllListeners(t2), this.hasSubscription(t2, e2) && this.deleteSubscription(t2, s2), await this.relayer.messages.del(e2);
  }
  async setRelayerSubscriptions(e2) {
    await this.relayer.core.storage.setItem(this.storageKey, e2);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e2, t2) {
    this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e2, subscription: t2 }), this.addSubscription(e2, t2);
  }
  addSubscription(e2, t2) {
    this.subscriptions.set(e2, Z({}, t2)), this.topicMap.set(t2.topic, e2), this.events.emit(T.created, t2);
  }
  getSubscription(e2) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e2 });
    const t2 = this.subscriptions.get(e2);
    if (!t2) {
      const { message: s2 } = te3("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(s2);
    }
    return t2;
  }
  deleteSubscription(e2, t2) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e2, reason: t2 });
    const s2 = this.getSubscription(e2);
    this.subscriptions.delete(e2), this.topicMap.delete(s2.topic, e2), this.events.emit(T.deleted, Ie4(Z({}, s2), { reason: t2 }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit(T.sync);
  }
  async onRestart() {
    if (this.cached.length) {
      const e2 = [...this.cached], t2 = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let s2 = 0; s2 < t2; s2++) {
        const i4 = e2.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchSubscribe(i4);
      }
    }
    this.events.emit(T.resubscribed);
  }
  async restore() {
    try {
      const e2 = await this.getRelayerSubscriptions();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.subscriptions.size) {
        const { message: t2 } = te3("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t2), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t2);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e2);
    }
  }
  async batchSubscribe(e2) {
    e2.length && (await this.rpcBatchSubscribe(e2), this.onBatchSubscribe(e2.map((t2) => Ie4(Z({}, t2), { id: this.getSubscriptionId(t2.topic) }))));
  }
  async batchFetchMessages(e2) {
    if (!e2.length) return;
    this.logger.trace(`Fetching batch messages for ${e2.length} subscriptions`);
    const t2 = await this.rpcBatchFetchMessages(e2);
    t2 && t2.messages && (await vo3((0, import_time4.toMiliseconds)(import_time4.ONE_SECOND)), await this.relayer.handleBatchMessageEvents(t2.messages));
  }
  async onConnect() {
    await this.restart(), this.reset();
  }
  onDisconnect() {
    this.onDisable();
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async restartToComplete() {
    !this.relayer.connected && !this.relayer.connecting && await this.relayer.transportOpen();
  }
  getSubscriptionId(e2) {
    return si(e2 + this.clientId);
  }
};
var mn4 = Object.defineProperty;
var si2 = Object.getOwnPropertySymbols;
var bn4 = Object.prototype.hasOwnProperty;
var fn2 = Object.prototype.propertyIsEnumerable;
var ri2 = (o2, e2, t2) => e2 in o2 ? mn4(o2, e2, { enumerable: true, configurable: true, writable: true, value: t2 }) : o2[e2] = t2;
var ni2 = (o2, e2) => {
  for (var t2 in e2 || (e2 = {})) bn4.call(e2, t2) && ri2(o2, t2, e2[t2]);
  if (si2) for (var t2 of si2(e2)) fn2.call(e2, t2) && ri2(o2, t2, e2[t2]);
  return o2;
};
var oi2 = class extends u2 {
  constructor(e2) {
    super(e2), this.protocol = "wc", this.version = 2, this.events = new import_events4.EventEmitter(), this.name = at2, this.transportExplicitlyClosed = false, this.initialized = false, this.connectionAttemptInProgress = false, this.hasExperiencedNetworkDisruption = false, this.heartBeatTimeout = (0, import_time4.toMiliseconds)(import_time4.THIRTY_SECONDS + import_time4.FIVE_SECONDS), this.requestsInFlight = [], this.connectTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND * 15), this.request = async (t2) => {
      var s2, i4;
      this.logger.debug("Publishing Request Payload");
      const r2 = t2.id || getBigIntRpcId().toString();
      await this.toEstablishConnection();
      try {
        this.logger.trace({ id: r2, method: t2.method, topic: (s2 = t2.params) == null ? void 0 : s2.topic }, "relayer.request - publishing...");
        const n2 = `${r2}:${((i4 = t2.params) == null ? void 0 : i4.tag) || ""}`;
        this.requestsInFlight.push(n2);
        const a2 = await this.provider.request(t2);
        return this.requestsInFlight = this.requestsInFlight.filter((c3) => c3 !== n2), a2;
      } catch (n2) {
        throw this.logger.debug(`Failed to Publish Request: ${r2}`), n2;
      }
    }, this.resetPingTimeout = () => {
      if (et()) try {
        clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(() => {
          var t2, s2, i4;
          this.logger.debug({}, "pingTimeout: Connection stalled, terminating..."), (i4 = (s2 = (t2 = this.provider) == null ? void 0 : t2.connection) == null ? void 0 : s2.socket) == null || i4.terminate();
        }, this.heartBeatTimeout);
      } catch (t2) {
        this.logger.warn(t2, t2 == null ? void 0 : t2.message);
      }
    }, this.onPayloadHandler = (t2) => {
      this.onProviderPayload(t2), this.resetPingTimeout();
    }, this.onConnectHandler = () => {
      this.logger.warn({}, "Relayer connected 🛜"), this.startPingTimeout(), this.events.emit(v3.connect);
    }, this.onDisconnectHandler = () => {
      this.logger.warn({}, "Relayer disconnected 🛑"), this.requestsInFlight = [], this.onProviderDisconnect();
    }, this.onProviderErrorHandler = (t2) => {
      this.logger.fatal(t2, `Fatal socket error: ${t2 == null ? void 0 : t2.message}`), this.events.emit(v3.error, t2), this.logger.fatal("Fatal socket error received, closing transport"), this.transportClose();
    }, this.registerProviderListeners = () => {
      this.provider.on(C3.payload, this.onPayloadHandler), this.provider.on(C3.connect, this.onConnectHandler), this.provider.on(C3.disconnect, this.onDisconnectHandler), this.provider.on(C3.error, this.onProviderErrorHandler);
    }, this.core = e2.core, this.logger = typeof e2.logger < "u" && typeof e2.logger != "string" ? E(e2.logger, this.name) : (0, import_pino.default)(k({ level: e2.logger || ot2 })), this.messages = new Jt3(this.logger, e2.core), this.subscriber = new ii2(this, this.logger), this.publisher = new ln2(this, this.logger), this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || fe4, this.projectId = e2.projectId, Wr3() ? this.packageName = Jr3() : zr3() && (this.bundleId = Jr3()), this.provider = {};
  }
  async init() {
    if (this.logger.trace("Initialized"), this.registerEventListeners(), await Promise.all([this.messages.init(), this.subscriber.init()]), this.initialized = true, this.subscriber.cached.length > 0) try {
      await this.transportOpen();
    } catch (e2) {
      this.logger.warn(e2, e2 == null ? void 0 : e2.message);
    }
  }
  get context() {
    return y(this.logger);
  }
  get connected() {
    var e2, t2, s2;
    return ((s2 = (t2 = (e2 = this.provider) == null ? void 0 : e2.connection) == null ? void 0 : t2.socket) == null ? void 0 : s2.readyState) === 1;
  }
  get connecting() {
    var e2, t2, s2;
    return ((s2 = (t2 = (e2 = this.provider) == null ? void 0 : e2.connection) == null ? void 0 : t2.socket) == null ? void 0 : s2.readyState) === 0;
  }
  async publish(e2, t2, s2) {
    this.isInitialized(), await this.publisher.publish(e2, t2, s2), await this.recordMessageEvent({ topic: e2, message: t2, publishedAt: Date.now(), transportType: M5.relay });
  }
  async subscribe(e2, t2) {
    var s2, i4, r2;
    this.isInitialized(), (!(t2 != null && t2.transportType) || (t2 == null ? void 0 : t2.transportType) === "relay") && await this.toEstablishConnection();
    const n2 = typeof ((s2 = t2 == null ? void 0 : t2.internal) == null ? void 0 : s2.throwOnFailedPublish) > "u" ? true : (i4 = t2 == null ? void 0 : t2.internal) == null ? void 0 : i4.throwOnFailedPublish;
    let a2 = ((r2 = this.subscriber.topicMap.get(e2)) == null ? void 0 : r2[0]) || "", c3;
    const h6 = (u3) => {
      u3.topic === e2 && (this.subscriber.off(T.created, h6), c3());
    };
    return await Promise.all([new Promise((u3) => {
      c3 = u3, this.subscriber.on(T.created, h6);
    }), new Promise(async (u3, d4) => {
      a2 = await this.subscriber.subscribe(e2, ni2({ internal: { throwOnFailedPublish: n2 } }, t2)).catch((y5) => {
        n2 && d4(y5);
      }) || a2, u3();
    })]), a2;
  }
  async unsubscribe(e2, t2) {
    this.isInitialized(), await this.subscriber.unsubscribe(e2, t2);
  }
  on(e2, t2) {
    this.events.on(e2, t2);
  }
  once(e2, t2) {
    this.events.once(e2, t2);
  }
  off(e2, t2) {
    this.events.off(e2, t2);
  }
  removeListener(e2, t2) {
    this.events.removeListener(e2, t2);
  }
  async transportDisconnect() {
    this.provider.disconnect && (this.hasExperiencedNetworkDisruption || this.connected) ? await ao3(this.provider.disconnect(), 2e3, "provider.disconnect()").catch(() => this.onProviderDisconnect()) : this.onProviderDisconnect();
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, await this.transportDisconnect();
  }
  async transportOpen(e2) {
    if (this.connectPromise ? (this.logger.debug({}, "Waiting for existing connection attempt to resolve..."), await this.connectPromise, this.logger.debug({}, "Existing connection attempt resolved")) : (this.connectPromise = new Promise(async (t2, s2) => {
      await this.connect(e2).then(t2).catch(s2).finally(() => {
        this.connectPromise = void 0;
      });
    }), await this.connectPromise), !this.connected) throw new Error(`Couldn't establish socket connection to the relay server: ${this.relayUrl}`);
  }
  async restartTransport(e2) {
    this.logger.debug({}, "Restarting transport..."), !this.connectionAttemptInProgress && (this.relayUrl = e2 || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());
  }
  async confirmOnlineStateOrThrow() {
    if (!await Yi()) throw new Error("No internet connection detected. Please restart your network and try again.");
  }
  async handleBatchMessageEvents(e2) {
    if ((e2 == null ? void 0 : e2.length) === 0) {
      this.logger.trace("Batch message events is empty. Ignoring...");
      return;
    }
    const t2 = e2.sort((s2, i4) => s2.publishedAt - i4.publishedAt);
    this.logger.debug(`Batch of ${t2.length} message events sorted`);
    for (const s2 of t2) try {
      await this.onMessageEvent(s2);
    } catch (i4) {
      this.logger.warn(i4, "Error while processing batch message event: " + (i4 == null ? void 0 : i4.message));
    }
    this.logger.trace(`Batch of ${t2.length} message events processed`);
  }
  async onLinkMessageEvent(e2, t2) {
    const { topic: s2 } = e2;
    if (!t2.sessionExists) {
      const i4 = ho3(import_time4.FIVE_MINUTES), r2 = { topic: s2, expiry: i4, relay: { protocol: "irn" }, active: false };
      await this.core.pairing.pairings.set(s2, r2);
    }
    this.events.emit(v3.message, e2), await this.recordMessageEvent(e2);
  }
  async connect(e2) {
    await this.confirmOnlineStateOrThrow(), e2 && e2 !== this.relayUrl && (this.relayUrl = e2, await this.transportDisconnect()), this.connectionAttemptInProgress = true, this.transportExplicitlyClosed = false;
    let t2 = 1;
    for (; t2 < 6; ) {
      try {
        this.logger.debug({}, `Connecting to ${this.relayUrl}, attempt: ${t2}...`), await this.createProvider(), await new Promise(async (s2, i4) => {
          const r2 = () => {
            i4(new Error("Connection interrupted while trying to subscribe"));
          };
          this.provider.once(C3.disconnect, r2), await ao3(new Promise((n2, a2) => {
            this.provider.connect().then(n2).catch(a2);
          }), this.connectTimeout, `Socket stalled when trying to connect to ${this.relayUrl}`).catch((n2) => {
            i4(n2);
          }).finally(() => {
            this.provider.off(C3.disconnect, r2), clearTimeout(this.reconnectTimeout), this.reconnectTimeout = void 0;
          }), await new Promise(async (n2, a2) => {
            const c3 = () => {
              a2(new Error("Connection interrupted while trying to subscribe"));
            };
            this.provider.once(C3.disconnect, c3), await this.subscriber.start().then(n2).catch(a2).finally(() => {
              this.provider.off(C3.disconnect, c3);
            });
          }), this.hasExperiencedNetworkDisruption = false, s2();
        });
      } catch (s2) {
        await this.subscriber.stop();
        const i4 = s2;
        this.logger.warn({}, i4.message), this.hasExperiencedNetworkDisruption = true;
      } finally {
        this.connectionAttemptInProgress = false;
      }
      if (this.connected) {
        this.logger.debug({}, `Connected to ${this.relayUrl} successfully on attempt: ${t2}`);
        break;
      }
      await new Promise((s2) => setTimeout(s2, (0, import_time4.toMiliseconds)(t2 * 1))), t2++;
    }
  }
  startPingTimeout() {
    var e2, t2, s2, i4, r2;
    if (et()) try {
      (t2 = (e2 = this.provider) == null ? void 0 : e2.connection) != null && t2.socket && ((r2 = (i4 = (s2 = this.provider) == null ? void 0 : s2.connection) == null ? void 0 : i4.socket) == null || r2.on("ping", () => {
        this.resetPingTimeout();
      })), this.resetPingTimeout();
    } catch (n2) {
      this.logger.warn(n2, n2 == null ? void 0 : n2.message);
    }
  }
  async createProvider() {
    this.provider.connection && this.unregisterProviderListeners();
    const e2 = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new o(new f3(Zr3({ sdkVersion: re2, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e2, useOnCloseEvent: true, bundleId: this.bundleId, packageName: this.packageName }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e2) {
    const { topic: t2, message: s2 } = e2;
    await this.messages.set(t2, s2);
  }
  async shouldIgnoreMessageEvent(e2) {
    const { topic: t2, message: s2 } = e2;
    if (!s2 || s2.length === 0) return this.logger.warn(`Ignoring invalid/empty message: ${s2}`), true;
    if (!await this.subscriber.isSubscribed(t2)) return this.logger.warn(`Ignoring message for non-subscribed topic ${t2}`), true;
    const i4 = this.messages.has(t2, s2);
    return i4 && this.logger.warn(`Ignoring duplicate message: ${s2}`), i4;
  }
  async onProviderPayload(e2) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e2 }), isJsonRpcRequest(e2)) {
      if (!e2.method.endsWith(ct4)) return;
      const t2 = e2.params, { topic: s2, message: i4, publishedAt: r2, attestation: n2 } = t2.data, a2 = { topic: s2, message: i4, publishedAt: r2, transportType: M5.relay, attestation: n2 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(ni2({ type: "event", event: t2.id }, a2)), this.events.emit(t2.id, a2), await this.acknowledgePayload(e2), await this.onMessageEvent(a2);
    } else isJsonRpcResponse(e2) && this.events.emit(v3.message_ack, e2);
  }
  async onMessageEvent(e2) {
    await this.shouldIgnoreMessageEvent(e2) || (this.events.emit(v3.message, e2), await this.recordMessageEvent(e2));
  }
  async acknowledgePayload(e2) {
    const t2 = formatJsonRpcResult(e2.id, true);
    await this.provider.connection.send(t2);
  }
  unregisterProviderListeners() {
    this.provider.off(C3.payload, this.onPayloadHandler), this.provider.off(C3.connect, this.onConnectHandler), this.provider.off(C3.disconnect, this.onDisconnectHandler), this.provider.off(C3.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);
  }
  async registerEventListeners() {
    let e2 = await Yi();
    Xi(async (t2) => {
      e2 !== t2 && (e2 = t2, t2 ? await this.transportOpen().catch((s2) => this.logger.error(s2, s2 == null ? void 0 : s2.message)) : (this.hasExperiencedNetworkDisruption = true, await this.transportDisconnect(), this.transportExplicitlyClosed = false));
    });
  }
  async onProviderDisconnect() {
    await this.subscriber.stop(), clearTimeout(this.pingTimeout), this.events.emit(v3.disconnect), this.connectionAttemptInProgress = false, !this.transportExplicitlyClosed && (this.reconnectTimeout || this.connectPromise || (this.reconnectTimeout = setTimeout(async () => {
      clearTimeout(this.reconnectTimeout), await this.transportOpen().catch((e2) => this.logger.error(e2, e2 == null ? void 0 : e2.message));
    }, (0, import_time4.toMiliseconds)(ht4))));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async toEstablishConnection() {
    await this.confirmOnlineStateOrThrow(), !this.connected && await this.transportOpen();
  }
};
var vn4 = Object.defineProperty;
var ai2 = Object.getOwnPropertySymbols;
var _n4 = Object.prototype.hasOwnProperty;
var En4 = Object.prototype.propertyIsEnumerable;
var ci2 = (o2, e2, t2) => e2 in o2 ? vn4(o2, e2, { enumerable: true, configurable: true, writable: true, value: t2 }) : o2[e2] = t2;
var hi2 = (o2, e2) => {
  for (var t2 in e2 || (e2 = {})) _n4.call(e2, t2) && ci2(o2, t2, e2[t2]);
  if (ai2) for (var t2 of ai2(e2)) En4.call(e2, t2) && ci2(o2, t2, e2[t2]);
  return o2;
};
var li2 = class extends p {
  constructor(e2, t2, s2, i4 = A2, r2 = void 0) {
    super(e2, t2, s2, i4), this.core = e2, this.logger = t2, this.name = s2, this.map = /* @__PURE__ */ new Map(), this.version = lt4, this.cached = [], this.initialized = false, this.storagePrefix = A2, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((n2) => {
        this.getKey && n2 !== null && !ae(n2) ? this.map.set(this.getKey(n2), n2) : Pi(n2) ? this.map.set(n2.id, n2) : Li(n2) && this.map.set(n2.topic, n2);
      }), this.cached = [], this.initialized = true);
    }, this.set = async (n2, a2) => {
      this.isInitialized(), this.map.has(n2) ? await this.update(n2, a2) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: n2, value: a2 }), this.map.set(n2, a2), await this.persist());
    }, this.get = (n2) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: n2 }), this.getData(n2)), this.getAll = (n2) => (this.isInitialized(), n2 ? this.values.filter((a2) => Object.keys(n2).every((c3) => (0, import_lodash.default)(a2[c3], n2[c3]))) : this.values), this.update = async (n2, a2) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: n2, update: a2 });
      const c3 = hi2(hi2({}, this.getData(n2)), a2);
      this.map.set(n2, c3), await this.persist();
    }, this.delete = async (n2, a2) => {
      this.isInitialized(), this.map.has(n2) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: n2, reason: a2 }), this.map.delete(n2), this.addToRecentlyDeleted(n2), await this.persist());
    }, this.logger = E(t2, this.name), this.storagePrefix = i4, this.getKey = r2;
  }
  get context() {
    return y(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  addToRecentlyDeleted(e2) {
    this.recentlyDeleted.push(e2), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
  }
  async setDataStore(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e2) {
    const t2 = this.map.get(e2);
    if (!t2) {
      if (this.recentlyDeleted.includes(e2)) {
        const { message: i4 } = te3("MISSING_OR_INVALID", `Record was recently deleted - ${this.name}: ${e2}`);
        throw this.logger.error(i4), new Error(i4);
      }
      const { message: s2 } = te3("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.error(s2), new Error(s2);
    }
    return t2;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e2 = await this.getDataStore();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.map.size) {
        const { message: t2 } = te3("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t2), new Error(t2);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var ui2 = class {
  constructor(e2, t2) {
    this.core = e2, this.logger = t2, this.name = yt4, this.version = Dt3, this.events = new import_events4.default(), this.initialized = false, this.storagePrefix = A2, this.ignoredPayloadTypes = [Ie3], this.registeredMethods = [], this.init = async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }, this.register = ({ methods: s2 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...s2])];
    }, this.create = async (s2) => {
      this.isInitialized();
      const i4 = ni(), r2 = await this.core.crypto.setSymKey(i4), n2 = ho3(import_time4.FIVE_MINUTES), a2 = { protocol: nt3 }, c3 = { topic: r2, expiry: n2, relay: a2, active: false, methods: s2 == null ? void 0 : s2.methods }, h6 = wi({ protocol: this.core.protocol, version: this.core.version, topic: r2, symKey: i4, relay: a2, expiryTimestamp: n2, methods: s2 == null ? void 0 : s2.methods });
      return this.events.emit(j3.create, c3), this.core.expirer.set(r2, n2), await this.pairings.set(r2, c3), await this.core.relayer.subscribe(r2, { transportType: s2 == null ? void 0 : s2.transportType }), { topic: r2, uri: h6 };
    }, this.pair = async (s2) => {
      this.isInitialized();
      const i4 = this.core.eventClient.createEvent({ properties: { topic: s2 == null ? void 0 : s2.uri, trace: [z3.pairing_started] } });
      this.isValidPair(s2, i4);
      const { topic: r2, symKey: n2, relay: a2, expiryTimestamp: c3, methods: h6 } = bi(s2.uri);
      i4.props.properties.topic = r2, i4.addTrace(z3.pairing_uri_validation_success), i4.addTrace(z3.pairing_uri_not_expired);
      let u3;
      if (this.pairings.keys.includes(r2)) {
        if (u3 = this.pairings.get(r2), i4.addTrace(z3.existing_pairing), u3.active) throw i4.setError($.active_pairing_already_exists), new Error(`Pairing already exists: ${r2}. Please try again with a new connection URI.`);
        i4.addTrace(z3.pairing_not_expired);
      }
      const d4 = c3 || ho3(import_time4.FIVE_MINUTES), y5 = { topic: r2, relay: a2, expiry: d4, active: false, methods: h6 };
      this.core.expirer.set(r2, d4), await this.pairings.set(r2, y5), i4.addTrace(z3.store_new_pairing), s2.activatePairing && await this.activate({ topic: r2 }), this.events.emit(j3.create, y5), i4.addTrace(z3.emit_inactive_pairing), this.core.crypto.keychain.has(r2) || await this.core.crypto.setSymKey(n2, r2), i4.addTrace(z3.subscribing_pairing_topic);
      try {
        await this.core.relayer.confirmOnlineStateOrThrow();
      } catch {
        i4.setError($.no_internet_connection);
      }
      try {
        await this.core.relayer.subscribe(r2, { relay: a2 });
      } catch (m) {
        throw i4.setError($.subscribe_pairing_topic_failure), m;
      }
      return i4.addTrace(z3.subscribe_pairing_topic_success), y5;
    }, this.activate = async ({ topic: s2 }) => {
      this.isInitialized();
      const i4 = ho3(import_time4.FIVE_MINUTES);
      this.core.expirer.set(s2, i4), await this.pairings.update(s2, { active: true, expiry: i4 });
    }, this.ping = async (s2) => {
      this.isInitialized(), await this.isValidPing(s2), this.logger.warn("ping() is deprecated and will be removed in the next major release.");
      const { topic: i4 } = s2;
      if (this.pairings.keys.includes(i4)) {
        const r2 = await this.sendRequest(i4, "wc_pairingPing", {}), { done: n2, resolve: a2, reject: c3 } = co3();
        this.events.once(go3("pairing_ping", r2), ({ error: h6 }) => {
          h6 ? c3(h6) : a2();
        }), await n2();
      }
    }, this.updateExpiry = async ({ topic: s2, expiry: i4 }) => {
      this.isInitialized(), await this.pairings.update(s2, { expiry: i4 });
    }, this.updateMetadata = async ({ topic: s2, metadata: i4 }) => {
      this.isInitialized(), await this.pairings.update(s2, { peerMetadata: i4 });
    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async (s2) => {
      this.isInitialized(), await this.isValidDisconnect(s2);
      const { topic: i4 } = s2;
      this.pairings.keys.includes(i4) && (await this.sendRequest(i4, "wc_pairingDelete", de3("USER_DISCONNECTED")), await this.deletePairing(i4));
    }, this.formatUriFromPairing = (s2) => {
      this.isInitialized();
      const { topic: i4, relay: r2, expiry: n2, methods: a2 } = s2, c3 = this.core.crypto.keychain.get(i4);
      return wi({ protocol: this.core.protocol, version: this.core.version, topic: i4, symKey: c3, relay: r2, expiryTimestamp: n2, methods: a2 });
    }, this.sendRequest = async (s2, i4, r2) => {
      const n2 = formatJsonRpcRequest(i4, r2), a2 = await this.core.crypto.encode(s2, n2), c3 = V2[i4].req;
      return this.core.history.set(s2, n2), this.core.relayer.publish(s2, a2, c3), n2.id;
    }, this.sendResult = async (s2, i4, r2) => {
      const n2 = formatJsonRpcResult(s2, r2), a2 = await this.core.crypto.encode(i4, n2), c3 = await this.core.history.get(i4, s2), h6 = V2[c3.request.method].res;
      await this.core.relayer.publish(i4, a2, h6), await this.core.history.resolve(n2);
    }, this.sendError = async (s2, i4, r2) => {
      const n2 = formatJsonRpcError(s2, r2), a2 = await this.core.crypto.encode(i4, n2), c3 = await this.core.history.get(i4, s2), h6 = V2[c3.request.method] ? V2[c3.request.method].res : V2.unregistered_method.res;
      await this.core.relayer.publish(i4, a2, h6), await this.core.history.resolve(n2);
    }, this.deletePairing = async (s2, i4) => {
      await this.core.relayer.unsubscribe(s2), await Promise.all([this.pairings.delete(s2, de3("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(s2), i4 ? Promise.resolve() : this.core.expirer.del(s2)]);
    }, this.cleanup = async () => {
      const s2 = this.pairings.getAll().filter((i4) => po3(i4.expiry));
      await Promise.all(s2.map((i4) => this.deletePairing(i4.topic)));
    }, this.onRelayEventRequest = (s2) => {
      const { topic: i4, payload: r2 } = s2;
      switch (r2.method) {
        case "wc_pairingPing":
          return this.onPairingPingRequest(i4, r2);
        case "wc_pairingDelete":
          return this.onPairingDeleteRequest(i4, r2);
        default:
          return this.onUnknownRpcMethodRequest(i4, r2);
      }
    }, this.onRelayEventResponse = async (s2) => {
      const { topic: i4, payload: r2 } = s2, n2 = (await this.core.history.get(i4, r2.id)).request.method;
      switch (n2) {
        case "wc_pairingPing":
          return this.onPairingPingResponse(i4, r2);
        default:
          return this.onUnknownRpcMethodResponse(n2);
      }
    }, this.onPairingPingRequest = async (s2, i4) => {
      const { id: r2 } = i4;
      try {
        this.isValidPing({ topic: s2 }), await this.sendResult(r2, s2, true), this.events.emit(j3.ping, { id: r2, topic: s2 });
      } catch (n2) {
        await this.sendError(r2, s2, n2), this.logger.error(n2);
      }
    }, this.onPairingPingResponse = (s2, i4) => {
      const { id: r2 } = i4;
      setTimeout(() => {
        isJsonRpcResult(i4) ? this.events.emit(go3("pairing_ping", r2), {}) : isJsonRpcError(i4) && this.events.emit(go3("pairing_ping", r2), { error: i4.error });
      }, 500);
    }, this.onPairingDeleteRequest = async (s2, i4) => {
      const { id: r2 } = i4;
      try {
        this.isValidDisconnect({ topic: s2 }), await this.deletePairing(s2), this.events.emit(j3.delete, { id: r2, topic: s2 });
      } catch (n2) {
        await this.sendError(r2, s2, n2), this.logger.error(n2);
      }
    }, this.onUnknownRpcMethodRequest = async (s2, i4) => {
      const { id: r2, method: n2 } = i4;
      try {
        if (this.registeredMethods.includes(n2)) return;
        const a2 = de3("WC_METHOD_UNSUPPORTED", n2);
        await this.sendError(r2, s2, a2), this.logger.error(a2);
      } catch (a2) {
        await this.sendError(r2, s2, a2), this.logger.error(a2);
      }
    }, this.onUnknownRpcMethodResponse = (s2) => {
      this.registeredMethods.includes(s2) || this.logger.error(de3("WC_METHOD_UNSUPPORTED", s2));
    }, this.isValidPair = (s2, i4) => {
      var r2;
      if (!Di(s2)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `pair() params: ${s2}`);
        throw i4.setError($.malformed_pairing_uri), new Error(a2);
      }
      if (!Ri(s2.uri)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `pair() uri: ${s2.uri}`);
        throw i4.setError($.malformed_pairing_uri), new Error(a2);
      }
      const n2 = bi(s2 == null ? void 0 : s2.uri);
      if (!((r2 = n2 == null ? void 0 : n2.relay) != null && r2.protocol)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", "pair() uri#relay-protocol");
        throw i4.setError($.malformed_pairing_uri), new Error(a2);
      }
      if (!(n2 != null && n2.symKey)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", "pair() uri#symKey");
        throw i4.setError($.malformed_pairing_uri), new Error(a2);
      }
      if (n2 != null && n2.expiryTimestamp && (0, import_time4.toMiliseconds)(n2 == null ? void 0 : n2.expiryTimestamp) < Date.now()) {
        i4.setError($.pairing_expired);
        const { message: a2 } = te3("EXPIRED", "pair() URI has expired. Please try again with a new connection URI.");
        throw new Error(a2);
      }
    }, this.isValidPing = async (s2) => {
      if (!Di(s2)) {
        const { message: r2 } = te3("MISSING_OR_INVALID", `ping() params: ${s2}`);
        throw new Error(r2);
      }
      const { topic: i4 } = s2;
      await this.isValidPairingTopic(i4);
    }, this.isValidDisconnect = async (s2) => {
      if (!Di(s2)) {
        const { message: r2 } = te3("MISSING_OR_INVALID", `disconnect() params: ${s2}`);
        throw new Error(r2);
      }
      const { topic: i4 } = s2;
      await this.isValidPairingTopic(i4);
    }, this.isValidPairingTopic = async (s2) => {
      if (!q(s2, false)) {
        const { message: i4 } = te3("MISSING_OR_INVALID", `pairing topic should be a string: ${s2}`);
        throw new Error(i4);
      }
      if (!this.pairings.keys.includes(s2)) {
        const { message: i4 } = te3("NO_MATCHING_KEY", `pairing topic doesn't exist: ${s2}`);
        throw new Error(i4);
      }
      if (po3(this.pairings.get(s2).expiry)) {
        await this.deletePairing(s2);
        const { message: i4 } = te3("EXPIRED", `pairing topic: ${s2}`);
        throw new Error(i4);
      }
    }, this.core = e2, this.logger = E(t2, this.name), this.pairings = new li2(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return y(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(v3.message, async (e2) => {
      const { topic: t2, message: s2, transportType: i4 } = e2;
      if (!this.pairings.keys.includes(t2) || i4 === M5.link_mode || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(s2))) return;
      const r2 = await this.core.crypto.decode(t2, s2);
      try {
        isJsonRpcRequest(r2) ? (this.core.history.set(t2, r2), this.onRelayEventRequest({ topic: t2, payload: r2 })) : isJsonRpcResponse(r2) && (await this.core.history.resolve(r2), await this.onRelayEventResponse({ topic: t2, payload: r2 }), this.core.history.delete(t2, r2.id));
      } catch (n2) {
        this.logger.error(n2);
      }
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(x5.expired, async (e2) => {
      const { topic: t2 } = lo3(e2.target);
      t2 && this.pairings.keys.includes(t2) && (await this.deletePairing(t2, true), this.events.emit(j3.expire, { topic: t2 }));
    });
  }
};
var di2 = class extends h3 {
  constructor(e2, t2) {
    super(e2, t2), this.core = e2, this.logger = t2, this.records = /* @__PURE__ */ new Map(), this.events = new import_events4.EventEmitter(), this.name = mt2, this.version = bt3, this.cached = [], this.initialized = false, this.storagePrefix = A2, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((s2) => this.records.set(s2.id, s2)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.set = (s2, i4, r2) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: s2, request: i4, chainId: r2 }), this.records.has(i4.id)) return;
      const n2 = { id: i4.id, topic: s2, request: { method: i4.method, params: i4.params || null }, chainId: r2, expiry: ho3(import_time4.THIRTY_DAYS) };
      this.records.set(n2.id, n2), this.persist(), this.events.emit(R.created, n2);
    }, this.resolve = async (s2) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: s2 }), !this.records.has(s2.id)) return;
      const i4 = await this.getRecord(s2.id);
      typeof i4.response > "u" && (i4.response = isJsonRpcError(s2) ? { error: s2.error } : { result: s2.result }, this.records.set(i4.id, i4), this.persist(), this.events.emit(R.updated, i4));
    }, this.get = async (s2, i4) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: s2, id: i4 }), await this.getRecord(i4)), this.delete = (s2, i4) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: i4 }), this.values.forEach((r2) => {
        if (r2.topic === s2) {
          if (typeof i4 < "u" && r2.id !== i4) return;
          this.records.delete(r2.id), this.events.emit(R.deleted, r2);
        }
      }), this.persist();
    }, this.exists = async (s2, i4) => (this.isInitialized(), this.records.has(i4) ? (await this.getRecord(i4)).topic === s2 : false), this.on = (s2, i4) => {
      this.events.on(s2, i4);
    }, this.once = (s2, i4) => {
      this.events.once(s2, i4);
    }, this.off = (s2, i4) => {
      this.events.off(s2, i4);
    }, this.removeListener = (s2, i4) => {
      this.events.removeListener(s2, i4);
    }, this.logger = E(t2, this.name);
  }
  get context() {
    return y(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e2 = [];
    return this.values.forEach((t2) => {
      if (typeof t2.response < "u") return;
      const s2 = { topic: t2.topic, request: formatJsonRpcRequest(t2.request.method, t2.request.params, t2.id), chainId: t2.chainId };
      return e2.push(s2);
    }), e2;
  }
  async setJsonRpcRecords(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e2) {
    this.isInitialized();
    const t2 = this.records.get(e2);
    if (!t2) {
      const { message: s2 } = te3("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(s2);
    }
    return t2;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(R.sync);
  }
  async restore() {
    try {
      const e2 = await this.getJsonRpcRecords();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.records.size) {
        const { message: t2 } = te3("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t2), new Error(t2);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e2);
    }
  }
  registerEventListeners() {
    this.events.on(R.created, (e2) => {
      const t2 = R.created;
      this.logger.info(`Emitting ${t2}`), this.logger.debug({ type: "event", event: t2, record: e2 });
    }), this.events.on(R.updated, (e2) => {
      const t2 = R.updated;
      this.logger.info(`Emitting ${t2}`), this.logger.debug({ type: "event", event: t2, record: e2 });
    }), this.events.on(R.deleted, (e2) => {
      const t2 = R.deleted;
      this.logger.info(`Emitting ${t2}`), this.logger.debug({ type: "event", event: t2, record: e2 });
    }), this.core.heartbeat.on(r.pulse, () => {
      this.cleanup();
    });
  }
  cleanup() {
    try {
      this.isInitialized();
      let e2 = false;
      this.records.forEach((t2) => {
        (0, import_time4.toMiliseconds)(t2.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t2.id}`), this.records.delete(t2.id), this.events.emit(R.deleted, t2, false), e2 = true);
      }), e2 && this.persist();
    } catch (e2) {
      this.logger.warn(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var pi2 = class extends x {
  constructor(e2, t2) {
    super(e2, t2), this.core = e2, this.logger = t2, this.expirations = /* @__PURE__ */ new Map(), this.events = new import_events4.EventEmitter(), this.name = ft4, this.version = vt4, this.cached = [], this.initialized = false, this.storagePrefix = A2, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((s2) => this.expirations.set(s2.target, s2)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.has = (s2) => {
      try {
        const i4 = this.formatTarget(s2);
        return typeof this.getExpiration(i4) < "u";
      } catch {
        return false;
      }
    }, this.set = (s2, i4) => {
      this.isInitialized();
      const r2 = this.formatTarget(s2), n2 = { target: r2, expiry: i4 };
      this.expirations.set(r2, n2), this.checkExpiry(r2, n2), this.events.emit(x5.created, { target: r2, expiration: n2 });
    }, this.get = (s2) => {
      this.isInitialized();
      const i4 = this.formatTarget(s2);
      return this.getExpiration(i4);
    }, this.del = (s2) => {
      if (this.isInitialized(), this.has(s2)) {
        const i4 = this.formatTarget(s2), r2 = this.getExpiration(i4);
        this.expirations.delete(i4), this.events.emit(x5.deleted, { target: i4, expiration: r2 });
      }
    }, this.on = (s2, i4) => {
      this.events.on(s2, i4);
    }, this.once = (s2, i4) => {
      this.events.once(s2, i4);
    }, this.off = (s2, i4) => {
      this.events.off(s2, i4);
    }, this.removeListener = (s2, i4) => {
      this.events.removeListener(s2, i4);
    }, this.logger = E(t2, this.name);
  }
  get context() {
    return y(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e2) {
    if (typeof e2 == "string") return uo3(e2);
    if (typeof e2 == "number") return fo3(e2);
    const { message: t2 } = te3("UNKNOWN_TYPE", `Target type: ${typeof e2}`);
    throw new Error(t2);
  }
  async setExpirations(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(x5.sync);
  }
  async restore() {
    try {
      const e2 = await this.getExpirations();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.expirations.size) {
        const { message: t2 } = te3("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t2), new Error(t2);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e2);
    }
  }
  getExpiration(e2) {
    const t2 = this.expirations.get(e2);
    if (!t2) {
      const { message: s2 } = te3("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.warn(s2), new Error(s2);
    }
    return t2;
  }
  checkExpiry(e2, t2) {
    const { expiry: s2 } = t2;
    (0, import_time4.toMiliseconds)(s2) - Date.now() <= 0 && this.expire(e2, t2);
  }
  expire(e2, t2) {
    this.expirations.delete(e2), this.events.emit(x5.expired, { target: e2, expiration: t2 });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e2, t2) => this.checkExpiry(t2, e2));
  }
  registerEventListeners() {
    this.core.heartbeat.on(r.pulse, () => this.checkExpirations()), this.events.on(x5.created, (e2) => {
      const t2 = x5.created;
      this.logger.info(`Emitting ${t2}`), this.logger.debug({ type: "event", event: t2, data: e2 }), this.persist();
    }), this.events.on(x5.expired, (e2) => {
      const t2 = x5.expired;
      this.logger.info(`Emitting ${t2}`), this.logger.debug({ type: "event", event: t2, data: e2 }), this.persist();
    }), this.events.on(x5.deleted, (e2) => {
      const t2 = x5.deleted;
      this.logger.info(`Emitting ${t2}`), this.logger.debug({ type: "event", event: t2, data: e2 }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var gi2 = class extends y3 {
  constructor(e2, t2, s2) {
    super(e2, t2, s2), this.core = e2, this.logger = t2, this.store = s2, this.name = _t4, this.verifyUrlV3 = wt4, this.storagePrefix = A2, this.version = De4, this.init = async () => {
      var i4;
      this.isDevEnv || (this.publicKey = await this.store.getItem(this.storeKey), this.publicKey && (0, import_time4.toMiliseconds)((i4 = this.publicKey) == null ? void 0 : i4.expiresAt) < Date.now() && (this.logger.debug("verify v2 public key expired"), await this.removePublicKey()));
    }, this.register = async (i4) => {
      if (!Ae3() || this.isDevEnv) return;
      const r2 = window.location.origin, { id: n2, decryptedId: a2 } = i4, c3 = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${r2}&id=${n2}&decryptedId=${a2}`;
      try {
        const h6 = (0, import_window_getters2.getDocument)(), u3 = this.startAbortTimer(import_time4.ONE_SECOND * 5), d4 = await new Promise((y5, m) => {
          const l3 = () => {
            window.removeEventListener("message", w3), h6.body.removeChild(g3), m("attestation aborted");
          };
          this.abortController.signal.addEventListener("abort", l3);
          const g3 = h6.createElement("iframe");
          g3.src = c3, g3.style.display = "none", g3.addEventListener("error", l3, { signal: this.abortController.signal });
          const w3 = (b3) => {
            if (b3.data && typeof b3.data == "string") try {
              const D3 = JSON.parse(b3.data);
              if (D3.type === "verify_attestation") {
                if (sn(D3.attestation).payload.id !== n2) return;
                clearInterval(u3), h6.body.removeChild(g3), this.abortController.signal.removeEventListener("abort", l3), window.removeEventListener("message", w3), y5(D3.attestation === null ? "" : D3.attestation);
              }
            } catch (D3) {
              this.logger.warn(D3);
            }
          };
          h6.body.appendChild(g3), window.addEventListener("message", w3, { signal: this.abortController.signal });
        });
        return this.logger.debug("jwt attestation", d4), d4;
      } catch (h6) {
        this.logger.warn(h6);
      }
      return "";
    }, this.resolve = async (i4) => {
      if (this.isDevEnv) return "";
      const { attestationId: r2, hash: n2, encryptedId: a2 } = i4;
      if (r2 === "") {
        this.logger.debug("resolve: attestationId is empty, skipping");
        return;
      }
      if (r2) {
        if (sn(r2).payload.id !== a2) return;
        const h6 = await this.isValidJwtAttestation(r2);
        if (h6) {
          if (!h6.isVerified) {
            this.logger.warn("resolve: jwt attestation: origin url not verified");
            return;
          }
          return h6;
        }
      }
      if (!n2) return;
      const c3 = this.getVerifyUrl(i4 == null ? void 0 : i4.verifyUrl);
      return this.fetchAttestation(n2, c3);
    }, this.fetchAttestation = async (i4, r2) => {
      this.logger.debug(`resolving attestation: ${i4} from url: ${r2}`);
      const n2 = this.startAbortTimer(import_time4.ONE_SECOND * 5), a2 = await fetch(`${r2}/attestation/${i4}?v2Supported=true`, { signal: this.abortController.signal });
      return clearTimeout(n2), a2.status === 200 ? await a2.json() : void 0;
    }, this.getVerifyUrl = (i4) => {
      let r2 = i4 || X;
      return It4.includes(r2) || (this.logger.info(`verify url: ${r2}, not included in trusted list, assigning default: ${X}`), r2 = X), r2;
    }, this.fetchPublicKey = async () => {
      try {
        this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);
        const i4 = this.startAbortTimer(import_time4.FIVE_SECONDS), r2 = await fetch(`${this.verifyUrlV3}/public-key`, { signal: this.abortController.signal });
        return clearTimeout(i4), await r2.json();
      } catch (i4) {
        this.logger.warn(i4);
      }
    }, this.persistPublicKey = async (i4) => {
      this.logger.debug("persisting public key to local storage", i4), await this.store.setItem(this.storeKey, i4), this.publicKey = i4;
    }, this.removePublicKey = async () => {
      this.logger.debug("removing verify v2 public key from storage"), await this.store.removeItem(this.storeKey), this.publicKey = void 0;
    }, this.isValidJwtAttestation = async (i4) => {
      const r2 = await this.getPublicKey();
      try {
        if (r2) return this.validateAttestation(i4, r2);
      } catch (a2) {
        this.logger.error(a2), this.logger.warn("error validating attestation");
      }
      const n2 = await this.fetchAndPersistPublicKey();
      try {
        if (n2) return this.validateAttestation(i4, n2);
      } catch (a2) {
        this.logger.error(a2), this.logger.warn("error validating attestation");
      }
    }, this.getPublicKey = async () => this.publicKey ? this.publicKey : await this.fetchAndPersistPublicKey(), this.fetchAndPersistPublicKey = async () => {
      if (this.fetchPromise) return await this.fetchPromise, this.publicKey;
      this.fetchPromise = new Promise(async (r2) => {
        const n2 = await this.fetchPublicKey();
        n2 && (await this.persistPublicKey(n2), r2(n2));
      });
      const i4 = await this.fetchPromise;
      return this.fetchPromise = void 0, i4;
    }, this.validateAttestation = (i4, r2) => {
      const n2 = gi(i4, r2.publicKey), a2 = { hasExpired: (0, import_time4.toMiliseconds)(n2.exp) < Date.now(), payload: n2 };
      if (a2.hasExpired) throw this.logger.warn("resolve: jwt attestation expired"), new Error("JWT attestation expired");
      return { origin: a2.payload.origin, isScam: a2.payload.isScam, isVerified: a2.payload.isVerified };
    }, this.logger = E(t2, this.name), this.abortController = new AbortController(), this.isDevEnv = Eo3(), this.init();
  }
  get storeKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//verify:public:key";
  }
  get context() {
    return y(this.logger);
  }
  startAbortTimer(e2) {
    return this.abortController = new AbortController(), setTimeout(() => this.abortController.abort(), (0, import_time4.toMiliseconds)(e2));
  }
};
var yi2 = class extends v {
  constructor(e2, t2) {
    super(e2, t2), this.projectId = e2, this.logger = t2, this.context = Tt4, this.registerDeviceToken = async (s2) => {
      const { clientId: i4, token: r2, notificationType: n2, enableEncrypted: a2 = false } = s2, c3 = `${Ct2}/${this.projectId}/clients`;
      await fetch(c3, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ client_id: i4, type: n2, token: r2, always_raw: a2 }) });
    }, this.logger = E(t2, this.context);
  }
};
var wn2 = Object.defineProperty;
var Di2 = Object.getOwnPropertySymbols;
var In4 = Object.prototype.hasOwnProperty;
var Tn4 = Object.prototype.propertyIsEnumerable;
var mi2 = (o2, e2, t2) => e2 in o2 ? wn2(o2, e2, { enumerable: true, configurable: true, writable: true, value: t2 }) : o2[e2] = t2;
var Q4 = (o2, e2) => {
  for (var t2 in e2 || (e2 = {})) In4.call(e2, t2) && mi2(o2, t2, e2[t2]);
  if (Di2) for (var t2 of Di2(e2)) Tn4.call(e2, t2) && mi2(o2, t2, e2[t2]);
  return o2;
};
var bi2 = class extends C2 {
  constructor(e2, t2, s2 = true) {
    super(e2, t2, s2), this.core = e2, this.logger = t2, this.context = St4, this.storagePrefix = A2, this.storageVersion = Pt4, this.events = /* @__PURE__ */ new Map(), this.shouldPersist = false, this.init = async () => {
      if (!Eo3()) try {
        const i4 = { eventId: wo3(), timestamp: Date.now(), domain: this.getAppDomain(), props: { event: "INIT", type: "", properties: { client_id: await this.core.crypto.getClientId(), user_agent: Yt2(this.core.relayer.protocol, this.core.relayer.version, re2) } } };
        await this.sendEvent([i4]);
      } catch (i4) {
        this.logger.warn(i4);
      }
    }, this.createEvent = (i4) => {
      const { event: r2 = "ERROR", type: n2 = "", properties: { topic: a2, trace: c3 } } = i4, h6 = wo3(), u3 = this.core.projectId || "", d4 = Date.now(), y5 = Q4({ eventId: h6, timestamp: d4, props: { event: r2, type: n2, properties: { topic: a2, trace: c3 } }, bundleId: u3, domain: this.getAppDomain() }, this.setMethods(h6));
      return this.telemetryEnabled && (this.events.set(h6, y5), this.shouldPersist = true), y5;
    }, this.getEvent = (i4) => {
      const { eventId: r2, topic: n2 } = i4;
      if (r2) return this.events.get(r2);
      const a2 = Array.from(this.events.values()).find((c3) => c3.props.properties.topic === n2);
      if (a2) return Q4(Q4({}, a2), this.setMethods(a2.eventId));
    }, this.deleteEvent = (i4) => {
      const { eventId: r2 } = i4;
      this.events.delete(r2), this.shouldPersist = true;
    }, this.setEventListeners = () => {
      this.core.heartbeat.on(r.pulse, async () => {
        this.shouldPersist && await this.persist(), this.events.forEach((i4) => {
          (0, import_time4.fromMiliseconds)(Date.now()) - (0, import_time4.fromMiliseconds)(i4.timestamp) > Rt4 && (this.events.delete(i4.eventId), this.shouldPersist = true);
        });
      });
    }, this.setMethods = (i4) => ({ addTrace: (r2) => this.addTrace(i4, r2), setError: (r2) => this.setError(i4, r2) }), this.addTrace = (i4, r2) => {
      const n2 = this.events.get(i4);
      n2 && (n2.props.properties.trace.push(r2), this.events.set(i4, n2), this.shouldPersist = true);
    }, this.setError = (i4, r2) => {
      const n2 = this.events.get(i4);
      n2 && (n2.props.type = r2, n2.timestamp = Date.now(), this.events.set(i4, n2), this.shouldPersist = true);
    }, this.persist = async () => {
      await this.core.storage.setItem(this.storageKey, Array.from(this.events.values())), this.shouldPersist = false;
    }, this.restore = async () => {
      try {
        const i4 = await this.core.storage.getItem(this.storageKey) || [];
        if (!i4.length) return;
        i4.forEach((r2) => {
          this.events.set(r2.eventId, Q4(Q4({}, r2), this.setMethods(r2.eventId)));
        });
      } catch (i4) {
        this.logger.warn(i4);
      }
    }, this.submit = async () => {
      if (!this.telemetryEnabled || this.events.size === 0) return;
      const i4 = [];
      for (const [r2, n2] of this.events) n2.props.type && i4.push(n2);
      if (i4.length !== 0) try {
        if ((await this.sendEvent(i4)).ok) for (const r2 of i4) this.events.delete(r2.eventId), this.shouldPersist = true;
      } catch (r2) {
        this.logger.warn(r2);
      }
    }, this.sendEvent = async (i4) => {
      const r2 = this.getAppDomain() ? "" : "&sp=desktop";
      return await fetch(`${xt4}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${re2}${r2}`, { method: "POST", body: JSON.stringify(i4) });
    }, this.getAppDomain = () => Yr3().url, this.logger = E(t2, this.context), this.telemetryEnabled = s2, s2 ? this.restore().then(async () => {
      await this.submit(), this.setEventListeners();
    }) : this.persist();
  }
  get storageKey() {
    return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + "//" + this.context;
  }
};
var Cn4 = Object.defineProperty;
var fi2 = Object.getOwnPropertySymbols;
var Pn3 = Object.prototype.hasOwnProperty;
var Sn3 = Object.prototype.propertyIsEnumerable;
var vi = (o2, e2, t2) => e2 in o2 ? Cn4(o2, e2, { enumerable: true, configurable: true, writable: true, value: t2 }) : o2[e2] = t2;
var _i = (o2, e2) => {
  for (var t2 in e2 || (e2 = {})) Pn3.call(e2, t2) && vi(o2, t2, e2[t2]);
  if (fi2) for (var t2 of fi2(e2)) Sn3.call(e2, t2) && vi(o2, t2, e2[t2]);
  return o2;
};
var oe2 = class _oe extends n {
  constructor(e2) {
    var t2;
    super(e2), this.protocol = ye3, this.version = De4, this.name = J4, this.events = new import_events4.EventEmitter(), this.initialized = false, this.on = (n2, a2) => this.events.on(n2, a2), this.once = (n2, a2) => this.events.once(n2, a2), this.off = (n2, a2) => this.events.off(n2, a2), this.removeListener = (n2, a2) => this.events.removeListener(n2, a2), this.dispatchEnvelope = ({ topic: n2, message: a2, sessionExists: c3 }) => {
      if (!n2 || !a2) return;
      const h6 = { topic: n2, message: a2, publishedAt: Date.now(), transportType: M5.link_mode };
      this.relayer.onLinkMessageEvent(h6, { sessionExists: c3 });
    }, this.projectId = e2 == null ? void 0 : e2.projectId, this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || fe4, this.customStoragePrefix = e2 != null && e2.customStoragePrefix ? `:${e2.customStoragePrefix}` : "";
    const s2 = k({ level: typeof (e2 == null ? void 0 : e2.logger) == "string" && e2.logger ? e2.logger : Xe3.logger, name: J4 }), { logger: i4, chunkLoggerController: r2 } = A({ opts: s2, maxSizeInBytes: e2 == null ? void 0 : e2.maxLogBlobSizeInBytes, loggerOverride: e2 == null ? void 0 : e2.logger });
    this.logChunkController = r2, (t2 = this.logChunkController) != null && t2.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async () => {
      var n2, a2;
      (n2 = this.logChunkController) != null && n2.downloadLogsBlobInBrowser && ((a2 = this.logChunkController) == null || a2.downloadLogsBlobInBrowser({ clientId: await this.crypto.getClientId() }));
    }), this.logger = E(i4, this.name), this.heartbeat = new i(), this.crypto = new Yt3(this, this.logger, e2 == null ? void 0 : e2.keychain), this.history = new di2(this, this.logger), this.expirer = new pi2(this, this.logger), this.storage = e2 != null && e2.storage ? e2.storage : new h(_i(_i({}, We4), e2 == null ? void 0 : e2.storageOptions)), this.relayer = new oi2({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new ui2(this, this.logger), this.verify = new gi2(this, this.logger, this.storage), this.echoClient = new yi2(this.projectId || "", this.logger), this.linkModeSupportedApps = [], this.eventClient = new bi2(this, this.logger, e2 == null ? void 0 : e2.telemetryEnabled);
  }
  static async init(e2) {
    const t2 = new _oe(e2);
    await t2.initialize();
    const s2 = await t2.crypto.getClientId();
    return await t2.storage.setItem(ut4, s2), t2;
  }
  get context() {
    return y(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async getLogsBlob() {
    var e2;
    return (e2 = this.logChunkController) == null ? void 0 : e2.logsToBlob({ clientId: await this.crypto.getClientId() });
  }
  async addLinkModeSupportedApp(e2) {
    this.linkModeSupportedApps.includes(e2) || (this.linkModeSupportedApps.push(e2), await this.storage.setItem(ve4, this.linkModeSupportedApps));
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.linkModeSupportedApps = await this.storage.getItem(ve4) || [], this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e2) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e2), this.logger.error(e2.message), e2;
    }
  }
};
var Rn4 = oe2;

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/sign-client/dist/index.es.js
var import_time5 = __toESM(require_cjs());
var import_events5 = __toESM(require_events());
var Ce5 = "wc";
var xe4 = 2;
var Le4 = "client";
var ye4 = `${Ce5}@${xe4}:${Le4}:`;
var we5 = { name: Le4, logger: "error", controller: false, relayUrl: "wss://relay.walletconnect.org" };
var De5 = "WALLETCONNECT_DEEPLINK_CHOICE";
var it5 = "proposal";
var rt5 = "Proposal expired";
var nt4 = "session";
var H4 = import_time5.SEVEN_DAYS;
var ot3 = "engine";
var v4 = { wc_sessionPropose: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1101 }, reject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1120 }, autoReject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1121 } }, wc_sessionSettle: { req: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1114 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1115 } }, wc_sessionAuthenticate: { req: { ttl: import_time5.ONE_HOUR, prompt: true, tag: 1116 }, res: { ttl: import_time5.ONE_HOUR, prompt: false, tag: 1117 }, reject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1118 }, autoReject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1119 } } };
var me5 = { min: import_time5.FIVE_MINUTES, max: import_time5.SEVEN_DAYS };
var L = { idle: "IDLE", active: "ACTIVE" };
var at3 = "request";
var ct5 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest", "wc_sessionAuthenticate"];
var lt5 = "wc";
var pt3 = "auth";
var ht5 = "authKeys";
var dt4 = "pairingTopics";
var ut5 = "requests";
var oe3 = `${lt5}@${1.5}:${pt3}:`;
var ae3 = `${oe3}:PUB_KEY`;
var ys2 = Object.defineProperty;
var ws2 = Object.defineProperties;
var ms2 = Object.getOwnPropertyDescriptors;
var gt5 = Object.getOwnPropertySymbols;
var _s3 = Object.prototype.hasOwnProperty;
var Es3 = Object.prototype.propertyIsEnumerable;
var yt5 = (q3, o2, e2) => o2 in q3 ? ys2(q3, o2, { enumerable: true, configurable: true, writable: true, value: e2 }) : q3[o2] = e2;
var I = (q3, o2) => {
  for (var e2 in o2 || (o2 = {})) _s3.call(o2, e2) && yt5(q3, e2, o2[e2]);
  if (gt5) for (var e2 of gt5(o2)) Es3.call(o2, e2) && yt5(q3, e2, o2[e2]);
  return q3;
};
var D = (q3, o2) => ws2(q3, ms2(o2));
var Rs2 = class extends M {
  constructor(o2) {
    super(o2), this.name = ot3, this.events = new import_events5.default(), this.initialized = false, this.requestQueue = { state: L.idle, queue: [] }, this.sessionRequestQueue = { state: L.idle, queue: [] }, this.requestQueueDelay = import_time5.ONE_SECOND, this.expectedPairingMethodMap = /* @__PURE__ */ new Map(), this.recentlyDeletedMap = /* @__PURE__ */ new Map(), this.recentlyDeletedLimit = 200, this.relayMessageCache = [], this.init = async () => {
      this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), await this.registerLinkModeListeners(), this.client.core.pairing.register({ methods: Object.keys(v4) }), this.initialized = true, setTimeout(() => {
        this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();
      }, (0, import_time5.toMiliseconds)(this.requestQueueDelay)));
    }, this.connect = async (e2) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      const t2 = D(I({}, e2), { requiredNamespaces: e2.requiredNamespaces || {}, optionalNamespaces: e2.optionalNamespaces || {} });
      await this.isValidConnect(t2);
      const { pairingTopic: s2, requiredNamespaces: i4, optionalNamespaces: r2, sessionProperties: n2, relays: a2 } = t2;
      let c3 = s2, h6, p3 = false;
      try {
        if (c3) {
          const E4 = this.client.core.pairing.pairings.get(c3);
          this.client.logger.warn("connect() with existing pairing topic is deprecated and will be removed in the next major release."), p3 = E4.active;
        }
      } catch (E4) {
        throw this.client.logger.error(`connect() -> pairing.get(${c3}) failed`), E4;
      }
      if (!c3 || !p3) {
        const { topic: E4, uri: S3 } = await this.client.core.pairing.create();
        c3 = E4, h6 = S3;
      }
      if (!c3) {
        const { message: E4 } = te3("NO_MATCHING_KEY", `connect() pairing topic: ${c3}`);
        throw new Error(E4);
      }
      const d4 = await this.client.core.crypto.generateKeyPair(), l3 = v4.wc_sessionPropose.req.ttl || import_time5.FIVE_MINUTES, w3 = ho3(l3), m = I({ requiredNamespaces: i4, optionalNamespaces: r2, relays: a2 ?? [{ protocol: nt3 }], proposer: { publicKey: d4, metadata: this.client.metadata }, expiryTimestamp: w3, pairingTopic: c3 }, n2 && { sessionProperties: n2 }), { reject: y5, resolve: _3, done: R3 } = co3(l3, rt5);
      this.events.once(go3("session_connect"), async ({ error: E4, session: S3 }) => {
        if (E4) y5(E4);
        else if (S3) {
          S3.self.publicKey = d4;
          const M7 = D(I({}, S3), { pairingTopic: m.pairingTopic, requiredNamespaces: m.requiredNamespaces, optionalNamespaces: m.optionalNamespaces, transportType: M5.relay });
          await this.client.session.set(S3.topic, M7), await this.setExpiry(S3.topic, S3.expiry), c3 && await this.client.core.pairing.updateMetadata({ topic: c3, metadata: S3.peer.metadata }), this.cleanupDuplicatePairings(M7), _3(M7);
        }
      });
      const V4 = await this.sendRequest({ topic: c3, method: "wc_sessionPropose", params: m, throwOnFailedPublish: true });
      return await this.setProposal(V4, I({ id: V4 }, m)), { uri: h6, approval: R3 };
    }, this.pair = async (e2) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        return await this.client.core.pairing.pair(e2);
      } catch (t2) {
        throw this.client.logger.error("pair() failed"), t2;
      }
    }, this.approve = async (e2) => {
      var t2, s2, i4;
      const r2 = this.client.core.eventClient.createEvent({ properties: { topic: (t2 = e2 == null ? void 0 : e2.id) == null ? void 0 : t2.toString(), trace: [xs2.session_approve_started] } });
      try {
        this.isInitialized(), await this.confirmOnlineStateOrThrow();
      } catch (N4) {
        throw r2.setError(Os2.no_internet_connection), N4;
      }
      try {
        await this.isValidProposalId(e2 == null ? void 0 : e2.id);
      } catch (N4) {
        throw this.client.logger.error(`approve() -> proposal.get(${e2 == null ? void 0 : e2.id}) failed`), r2.setError(Os2.proposal_not_found), N4;
      }
      try {
        await this.isValidApprove(e2);
      } catch (N4) {
        throw this.client.logger.error("approve() -> isValidApprove() failed"), r2.setError(Os2.session_approve_namespace_validation_failure), N4;
      }
      const { id: n2, relayProtocol: a2, namespaces: c3, sessionProperties: h6, sessionConfig: p3 } = e2, d4 = this.client.proposal.get(n2);
      this.client.core.eventClient.deleteEvent({ eventId: r2.eventId });
      const { pairingTopic: l3, proposer: w3, requiredNamespaces: m, optionalNamespaces: y5 } = d4;
      let _3 = (s2 = this.client.core.eventClient) == null ? void 0 : s2.getEvent({ topic: l3 });
      _3 || (_3 = (i4 = this.client.core.eventClient) == null ? void 0 : i4.createEvent({ type: xs2.session_approve_started, properties: { topic: l3, trace: [xs2.session_approve_started, xs2.session_namespaces_validation_success] } }));
      const R3 = await this.client.core.crypto.generateKeyPair(), V4 = w3.publicKey, E4 = await this.client.core.crypto.generateSharedKey(R3, V4), S3 = I(I({ relay: { protocol: a2 ?? "irn" }, namespaces: c3, controller: { publicKey: R3, metadata: this.client.metadata }, expiry: ho3(H4) }, h6 && { sessionProperties: h6 }), p3 && { sessionConfig: p3 }), M7 = M5.relay;
      _3.addTrace(xs2.subscribing_session_topic);
      try {
        await this.client.core.relayer.subscribe(E4, { transportType: M7 });
      } catch (N4) {
        throw _3.setError(Os2.subscribe_session_topic_failure), N4;
      }
      _3.addTrace(xs2.subscribe_session_topic_success);
      const W5 = D(I({}, S3), { topic: E4, requiredNamespaces: m, optionalNamespaces: y5, pairingTopic: l3, acknowledged: false, self: S3.controller, peer: { publicKey: w3.publicKey, metadata: w3.metadata }, controller: R3, transportType: M5.relay });
      await this.client.session.set(E4, W5), _3.addTrace(xs2.store_session);
      try {
        _3.addTrace(xs2.publishing_session_settle), await this.sendRequest({ topic: E4, method: "wc_sessionSettle", params: S3, throwOnFailedPublish: true }).catch((N4) => {
          throw _3 == null ? void 0 : _3.setError(Os2.session_settle_publish_failure), N4;
        }), _3.addTrace(xs2.session_settle_publish_success), _3.addTrace(xs2.publishing_session_approve), await this.sendResult({ id: n2, topic: l3, result: { relay: { protocol: a2 ?? "irn" }, responderPublicKey: R3 }, throwOnFailedPublish: true }).catch((N4) => {
          throw _3 == null ? void 0 : _3.setError(Os2.session_approve_publish_failure), N4;
        }), _3.addTrace(xs2.session_approve_publish_success);
      } catch (N4) {
        throw this.client.logger.error(N4), this.client.session.delete(E4, de3("USER_DISCONNECTED")), await this.client.core.relayer.unsubscribe(E4), N4;
      }
      return this.client.core.eventClient.deleteEvent({ eventId: _3.eventId }), await this.client.core.pairing.updateMetadata({ topic: l3, metadata: w3.metadata }), await this.client.proposal.delete(n2, de3("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: l3 }), await this.setExpiry(E4, ho3(H4)), { topic: E4, acknowledged: () => Promise.resolve(this.client.session.get(E4)) };
    }, this.reject = async (e2) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        await this.isValidReject(e2);
      } catch (r2) {
        throw this.client.logger.error("reject() -> isValidReject() failed"), r2;
      }
      const { id: t2, reason: s2 } = e2;
      let i4;
      try {
        i4 = this.client.proposal.get(t2).pairingTopic;
      } catch (r2) {
        throw this.client.logger.error(`reject() -> proposal.get(${t2}) failed`), r2;
      }
      i4 && (await this.sendError({ id: t2, topic: i4, error: s2, rpcOpts: v4.wc_sessionPropose.reject }), await this.client.proposal.delete(t2, de3("USER_DISCONNECTED")));
    }, this.update = async (e2) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        await this.isValidUpdate(e2);
      } catch (p3) {
        throw this.client.logger.error("update() -> isValidUpdate() failed"), p3;
      }
      const { topic: t2, namespaces: s2 } = e2, { done: i4, resolve: r2, reject: n2 } = co3(), a2 = payloadId(), c3 = getBigIntRpcId().toString(), h6 = this.client.session.get(t2).namespaces;
      return this.events.once(go3("session_update", a2), ({ error: p3 }) => {
        p3 ? n2(p3) : r2();
      }), await this.client.session.update(t2, { namespaces: s2 }), await this.sendRequest({ topic: t2, method: "wc_sessionUpdate", params: { namespaces: s2 }, throwOnFailedPublish: true, clientRpcId: a2, relayRpcId: c3 }).catch((p3) => {
        this.client.logger.error(p3), this.client.session.update(t2, { namespaces: h6 }), n2(p3);
      }), { acknowledged: i4 };
    }, this.extend = async (e2) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        await this.isValidExtend(e2);
      } catch (a2) {
        throw this.client.logger.error("extend() -> isValidExtend() failed"), a2;
      }
      const { topic: t2 } = e2, s2 = payloadId(), { done: i4, resolve: r2, reject: n2 } = co3();
      return this.events.once(go3("session_extend", s2), ({ error: a2 }) => {
        a2 ? n2(a2) : r2();
      }), await this.setExpiry(t2, ho3(H4)), this.sendRequest({ topic: t2, method: "wc_sessionExtend", params: {}, clientRpcId: s2, throwOnFailedPublish: true }).catch((a2) => {
        n2(a2);
      }), { acknowledged: i4 };
    }, this.request = async (e2) => {
      this.isInitialized();
      try {
        await this.isValidRequest(e2);
      } catch (w3) {
        throw this.client.logger.error("request() -> isValidRequest() failed"), w3;
      }
      const { chainId: t2, request: s2, topic: i4, expiry: r2 = v4.wc_sessionRequest.req.ttl } = e2, n2 = this.client.session.get(i4);
      (n2 == null ? void 0 : n2.transportType) === M5.relay && await this.confirmOnlineStateOrThrow();
      const a2 = payloadId(), c3 = getBigIntRpcId().toString(), { done: h6, resolve: p3, reject: d4 } = co3(r2, "Request expired. Please try again.");
      this.events.once(go3("session_request", a2), ({ error: w3, result: m }) => {
        w3 ? d4(w3) : p3(m);
      });
      const l3 = this.getAppLinkIfEnabled(n2.peer.metadata, n2.transportType);
      return l3 ? (await this.sendRequest({ clientRpcId: a2, relayRpcId: c3, topic: i4, method: "wc_sessionRequest", params: { request: D(I({}, s2), { expiryTimestamp: ho3(r2) }), chainId: t2 }, expiry: r2, throwOnFailedPublish: true, appLink: l3 }).catch((w3) => d4(w3)), this.client.events.emit("session_request_sent", { topic: i4, request: s2, chainId: t2, id: a2 }), await h6()) : await Promise.all([new Promise(async (w3) => {
        await this.sendRequest({ clientRpcId: a2, relayRpcId: c3, topic: i4, method: "wc_sessionRequest", params: { request: D(I({}, s2), { expiryTimestamp: ho3(r2) }), chainId: t2 }, expiry: r2, throwOnFailedPublish: true }).catch((m) => d4(m)), this.client.events.emit("session_request_sent", { topic: i4, request: s2, chainId: t2, id: a2 }), w3();
      }), new Promise(async (w3) => {
        var m;
        if (!((m = n2.sessionConfig) != null && m.disableDeepLink)) {
          const y5 = await mo3(this.client.core.storage, De5);
          await yo3({ id: a2, topic: i4, wcDeepLink: y5 });
        }
        w3();
      }), h6()]).then((w3) => w3[2]);
    }, this.respond = async (e2) => {
      this.isInitialized(), await this.isValidRespond(e2);
      const { topic: t2, response: s2 } = e2, { id: i4 } = s2, r2 = this.client.session.get(t2);
      r2.transportType === M5.relay && await this.confirmOnlineStateOrThrow();
      const n2 = this.getAppLinkIfEnabled(r2.peer.metadata, r2.transportType);
      isJsonRpcResult(s2) ? await this.sendResult({ id: i4, topic: t2, result: s2.result, throwOnFailedPublish: true, appLink: n2 }) : isJsonRpcError(s2) && await this.sendError({ id: i4, topic: t2, error: s2.error, appLink: n2 }), this.cleanupAfterResponse(e2);
    }, this.ping = async (e2) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow();
      try {
        await this.isValidPing(e2);
      } catch (s2) {
        throw this.client.logger.error("ping() -> isValidPing() failed"), s2;
      }
      const { topic: t2 } = e2;
      if (this.client.session.keys.includes(t2)) {
        const s2 = payloadId(), i4 = getBigIntRpcId().toString(), { done: r2, resolve: n2, reject: a2 } = co3();
        this.events.once(go3("session_ping", s2), ({ error: c3 }) => {
          c3 ? a2(c3) : n2();
        }), await Promise.all([this.sendRequest({ topic: t2, method: "wc_sessionPing", params: {}, throwOnFailedPublish: true, clientRpcId: s2, relayRpcId: i4 }), r2()]);
      } else this.client.core.pairing.pairings.keys.includes(t2) && (this.client.logger.warn("ping() on pairing topic is deprecated and will be removed in the next major release."), await this.client.core.pairing.ping({ topic: t2 }));
    }, this.emit = async (e2) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidEmit(e2);
      const { topic: t2, event: s2, chainId: i4 } = e2, r2 = getBigIntRpcId().toString(), n2 = payloadId();
      await this.sendRequest({ topic: t2, method: "wc_sessionEvent", params: { event: s2, chainId: i4 }, throwOnFailedPublish: true, relayRpcId: r2, clientRpcId: n2 });
    }, this.disconnect = async (e2) => {
      this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidDisconnect(e2);
      const { topic: t2 } = e2;
      if (this.client.session.keys.includes(t2)) await this.sendRequest({ topic: t2, method: "wc_sessionDelete", params: de3("USER_DISCONNECTED"), throwOnFailedPublish: true }), await this.deleteSession({ topic: t2, emitEvent: false });
      else if (this.client.core.pairing.pairings.keys.includes(t2)) await this.client.core.pairing.disconnect({ topic: t2 });
      else {
        const { message: s2 } = te3("MISMATCHED_TOPIC", `Session or pairing topic not found: ${t2}`);
        throw new Error(s2);
      }
    }, this.find = (e2) => (this.isInitialized(), this.client.session.getAll().filter((t2) => $i(t2, e2))), this.getPendingSessionRequests = () => this.client.pendingRequest.getAll(), this.authenticate = async (e2, t2) => {
      var s2;
      this.isInitialized(), this.isValidAuthenticate(e2);
      const i4 = t2 && this.client.core.linkModeSupportedApps.includes(t2) && ((s2 = this.client.metadata.redirect) == null ? void 0 : s2.linkMode), r2 = i4 ? M5.link_mode : M5.relay;
      r2 === M5.relay && await this.confirmOnlineStateOrThrow();
      const { chains: n2, statement: a2 = "", uri: c3, domain: h6, nonce: p3, type: d4, exp: l3, nbf: w3, methods: m = [], expiry: y5 } = e2, _3 = [...e2.resources || []], { topic: R3, uri: V4 } = await this.client.core.pairing.create({ methods: ["wc_sessionAuthenticate"], transportType: r2 });
      this.client.logger.info({ message: "Generated new pairing", pairing: { topic: R3, uri: V4 } });
      const E4 = await this.client.core.crypto.generateKeyPair(), S3 = oi(E4);
      if (await Promise.all([this.client.auth.authKeys.set(ae3, { responseTopic: S3, publicKey: E4 }), this.client.auth.pairingTopics.set(S3, { topic: S3, pairingTopic: R3 })]), await this.client.core.relayer.subscribe(S3, { transportType: r2 }), this.client.logger.info(`sending request to new pairing topic: ${R3}`), m.length > 0) {
        const { namespace: O2 } = Ye3(n2[0]);
        let T3 = ts(O2, "request", m);
        Me3(_3) && (T3 = ns(T3, _3.pop())), _3.push(T3);
      }
      const M7 = y5 && y5 > v4.wc_sessionAuthenticate.req.ttl ? y5 : v4.wc_sessionAuthenticate.req.ttl, W5 = { authPayload: { type: d4 ?? "caip122", chains: n2, statement: a2, aud: c3, domain: h6, version: "1", nonce: p3, iat: (/* @__PURE__ */ new Date()).toISOString(), exp: l3, nbf: w3, resources: _3 }, requester: { publicKey: E4, metadata: this.client.metadata }, expiryTimestamp: ho3(M7) }, N4 = { eip155: { chains: n2, methods: [.../* @__PURE__ */ new Set(["personal_sign", ...m])], events: ["chainChanged", "accountsChanged"] } }, Ve5 = { requiredNamespaces: {}, optionalNamespaces: N4, relays: [{ protocol: "irn" }], pairingTopic: R3, proposer: { publicKey: E4, metadata: this.client.metadata }, expiryTimestamp: ho3(v4.wc_sessionPropose.req.ttl) }, { done: mt4, resolve: Me5, reject: Ee6 } = co3(M7, "Request expired"), ce4 = async ({ error: O2, session: T3 }) => {
        if (this.events.off(go3("session_request", G3), Re5), O2) Ee6(O2);
        else if (T3) {
          T3.self.publicKey = E4, await this.client.session.set(T3.topic, T3), await this.setExpiry(T3.topic, T3.expiry), R3 && await this.client.core.pairing.updateMetadata({ topic: R3, metadata: T3.peer.metadata });
          const le5 = this.client.session.get(T3.topic);
          await this.deleteProposal(Z3), Me5({ session: le5 });
        }
      }, Re5 = async (O2) => {
        var T3, le5, ke5;
        if (await this.deletePendingAuthRequest(G3, { message: "fulfilled", code: 0 }), O2.error) {
          const te5 = de3("WC_METHOD_UNSUPPORTED", "wc_sessionAuthenticate");
          return O2.error.code === te5.code ? void 0 : (this.events.off(go3("session_connect"), ce4), Ee6(O2.error.message));
        }
        await this.deleteProposal(Z3), this.events.off(go3("session_connect"), ce4);
        const { cacaos: $e5, responder: j5 } = O2.result, Ie6 = [], Ke5 = [];
        for (const te5 of $e5) {
          await Yo3({ cacao: te5, projectId: this.client.core.projectId }) || (this.client.logger.error(te5, "Signature verification failed"), Ee6(de3("SESSION_SETTLEMENT_FAILED", "Signature verification failed")));
          const { p: fe6 } = te5, ve6 = Me3(fe6.resources), Ue5 = [On3(fe6.iss)], _t6 = ut3(fe6.iss);
          if (ve6) {
            const qe5 = rs(ve6), Et6 = os(ve6);
            Ie6.push(...qe5), Ue5.push(...Et6);
          }
          for (const qe5 of Ue5) Ke5.push(`${qe5}:${_t6}`);
        }
        const ee2 = await this.client.core.crypto.generateSharedKey(E4, j5.publicKey);
        let pe4;
        Ie6.length > 0 && (pe4 = { topic: ee2, acknowledged: true, self: { publicKey: E4, metadata: this.client.metadata }, peer: j5, controller: j5.publicKey, expiry: ho3(H4), requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: R3, namespaces: Ti([...new Set(Ie6)], [...new Set(Ke5)]), transportType: r2 }, await this.client.core.relayer.subscribe(ee2, { transportType: r2 }), await this.client.session.set(ee2, pe4), R3 && await this.client.core.pairing.updateMetadata({ topic: R3, metadata: j5.metadata }), pe4 = this.client.session.get(ee2)), (T3 = this.client.metadata.redirect) != null && T3.linkMode && (le5 = j5.metadata.redirect) != null && le5.linkMode && (ke5 = j5.metadata.redirect) != null && ke5.universal && t2 && (this.client.core.addLinkModeSupportedApp(j5.metadata.redirect.universal), this.client.session.update(ee2, { transportType: M5.link_mode })), Me5({ auths: $e5, session: pe4 });
      }, G3 = payloadId(), Z3 = payloadId();
      this.events.once(go3("session_connect"), ce4), this.events.once(go3("session_request", G3), Re5);
      let Se5;
      try {
        if (i4) {
          const O2 = formatJsonRpcRequest("wc_sessionAuthenticate", W5, G3);
          this.client.core.history.set(R3, O2);
          const T3 = await this.client.core.crypto.encode("", O2, { type: _e3, encoding: Qs });
          Se5 = Ei(t2, R3, T3);
        } else await Promise.all([this.sendRequest({ topic: R3, method: "wc_sessionAuthenticate", params: W5, expiry: e2.expiry, throwOnFailedPublish: true, clientRpcId: G3 }), this.sendRequest({ topic: R3, method: "wc_sessionPropose", params: Ve5, expiry: v4.wc_sessionPropose.req.ttl, throwOnFailedPublish: true, clientRpcId: Z3 })]);
      } catch (O2) {
        throw this.events.off(go3("session_connect"), ce4), this.events.off(go3("session_request", G3), Re5), O2;
      }
      return await this.setProposal(Z3, I({ id: Z3 }, Ve5)), await this.setAuthRequest(G3, { request: D(I({}, W5), { verifyContext: {} }), pairingTopic: R3, transportType: r2 }), { uri: Se5 ?? V4, response: mt4 };
    }, this.approveSessionAuthenticate = async (e2) => {
      const { id: t2, auths: s2 } = e2, i4 = this.client.core.eventClient.createEvent({ properties: { topic: t2.toString(), trace: [As2.authenticated_session_approve_started] } });
      try {
        this.isInitialized();
      } catch (y5) {
        throw i4.setError(Ns2.no_internet_connection), y5;
      }
      const r2 = this.getPendingAuthRequest(t2);
      if (!r2) throw i4.setError(Ns2.authenticated_session_pending_request_not_found), new Error(`Could not find pending auth request with id ${t2}`);
      const n2 = r2.transportType || M5.relay;
      n2 === M5.relay && await this.confirmOnlineStateOrThrow();
      const a2 = r2.requester.publicKey, c3 = await this.client.core.crypto.generateKeyPair(), h6 = oi(a2), p3 = { type: Ie3, receiverPublicKey: a2, senderPublicKey: c3 }, d4 = [], l3 = [];
      for (const y5 of s2) {
        if (!await Yo3({ cacao: y5, projectId: this.client.core.projectId })) {
          i4.setError(Ns2.invalid_cacao);
          const S3 = de3("SESSION_SETTLEMENT_FAILED", "Signature verification failed");
          throw await this.sendError({ id: t2, topic: h6, error: S3, encodeOpts: p3 }), new Error(S3.message);
        }
        i4.addTrace(As2.cacaos_verified);
        const { p: _3 } = y5, R3 = Me3(_3.resources), V4 = [On3(_3.iss)], E4 = ut3(_3.iss);
        if (R3) {
          const S3 = rs(R3), M7 = os(R3);
          d4.push(...S3), V4.push(...M7);
        }
        for (const S3 of V4) l3.push(`${S3}:${E4}`);
      }
      const w3 = await this.client.core.crypto.generateSharedKey(c3, a2);
      i4.addTrace(As2.create_authenticated_session_topic);
      let m;
      if ((d4 == null ? void 0 : d4.length) > 0) {
        m = { topic: w3, acknowledged: true, self: { publicKey: c3, metadata: this.client.metadata }, peer: { publicKey: a2, metadata: r2.requester.metadata }, controller: a2, expiry: ho3(H4), authentication: s2, requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: r2.pairingTopic, namespaces: Ti([...new Set(d4)], [...new Set(l3)]), transportType: n2 }, i4.addTrace(As2.subscribing_authenticated_session_topic);
        try {
          await this.client.core.relayer.subscribe(w3, { transportType: n2 });
        } catch (y5) {
          throw i4.setError(Ns2.subscribe_authenticated_session_topic_failure), y5;
        }
        i4.addTrace(As2.subscribe_authenticated_session_topic_success), await this.client.session.set(w3, m), i4.addTrace(As2.store_authenticated_session), await this.client.core.pairing.updateMetadata({ topic: r2.pairingTopic, metadata: r2.requester.metadata });
      }
      i4.addTrace(As2.publishing_authenticated_session_approve);
      try {
        await this.sendResult({ topic: h6, id: t2, result: { cacaos: s2, responder: { publicKey: c3, metadata: this.client.metadata } }, encodeOpts: p3, throwOnFailedPublish: true, appLink: this.getAppLinkIfEnabled(r2.requester.metadata, n2) });
      } catch (y5) {
        throw i4.setError(Ns2.authenticated_session_approve_publish_failure), y5;
      }
      return await this.client.auth.requests.delete(t2, { message: "fulfilled", code: 0 }), await this.client.core.pairing.activate({ topic: r2.pairingTopic }), this.client.core.eventClient.deleteEvent({ eventId: i4.eventId }), { session: m };
    }, this.rejectSessionAuthenticate = async (e2) => {
      this.isInitialized();
      const { id: t2, reason: s2 } = e2, i4 = this.getPendingAuthRequest(t2);
      if (!i4) throw new Error(`Could not find pending auth request with id ${t2}`);
      i4.transportType === M5.relay && await this.confirmOnlineStateOrThrow();
      const r2 = i4.requester.publicKey, n2 = await this.client.core.crypto.generateKeyPair(), a2 = oi(r2), c3 = { type: Ie3, receiverPublicKey: r2, senderPublicKey: n2 };
      await this.sendError({ id: t2, topic: a2, error: s2, encodeOpts: c3, rpcOpts: v4.wc_sessionAuthenticate.reject, appLink: this.getAppLinkIfEnabled(i4.requester.metadata, i4.transportType) }), await this.client.auth.requests.delete(t2, { message: "rejected", code: 0 }), await this.client.proposal.delete(t2, de3("USER_DISCONNECTED"));
    }, this.formatAuthMessage = (e2) => {
      this.isInitialized();
      const { request: t2, iss: s2 } = e2;
      return In3(t2, s2);
    }, this.processRelayMessageCache = () => {
      setTimeout(async () => {
        if (this.relayMessageCache.length !== 0) for (; this.relayMessageCache.length > 0; ) try {
          const e2 = this.relayMessageCache.shift();
          e2 && await this.onRelayMessage(e2);
        } catch (e2) {
          this.client.logger.error(e2);
        }
      }, 50);
    }, this.cleanupDuplicatePairings = async (e2) => {
      if (e2.pairingTopic) try {
        const t2 = this.client.core.pairing.pairings.get(e2.pairingTopic), s2 = this.client.core.pairing.pairings.getAll().filter((i4) => {
          var r2, n2;
          return ((r2 = i4.peerMetadata) == null ? void 0 : r2.url) && ((n2 = i4.peerMetadata) == null ? void 0 : n2.url) === e2.peer.metadata.url && i4.topic && i4.topic !== t2.topic;
        });
        if (s2.length === 0) return;
        this.client.logger.info(`Cleaning up ${s2.length} duplicate pairing(s)`), await Promise.all(s2.map((i4) => this.client.core.pairing.disconnect({ topic: i4.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
      } catch (t2) {
        this.client.logger.error(t2);
      }
    }, this.deleteSession = async (e2) => {
      var t2;
      const { topic: s2, expirerHasDeleted: i4 = false, emitEvent: r2 = true, id: n2 = 0 } = e2, { self: a2 } = this.client.session.get(s2);
      await this.client.core.relayer.unsubscribe(s2), await this.client.session.delete(s2, de3("USER_DISCONNECTED")), this.addToRecentlyDeleted(s2, "session"), this.client.core.crypto.keychain.has(a2.publicKey) && await this.client.core.crypto.deleteKeyPair(a2.publicKey), this.client.core.crypto.keychain.has(s2) && await this.client.core.crypto.deleteSymKey(s2), i4 || this.client.core.expirer.del(s2), this.client.core.storage.removeItem(De5).catch((c3) => this.client.logger.warn(c3)), this.getPendingSessionRequests().forEach((c3) => {
        c3.topic === s2 && this.deletePendingSessionRequest(c3.id, de3("USER_DISCONNECTED"));
      }), s2 === ((t2 = this.sessionRequestQueue.queue[0]) == null ? void 0 : t2.topic) && (this.sessionRequestQueue.state = L.idle), r2 && this.client.events.emit("session_delete", { id: n2, topic: s2 });
    }, this.deleteProposal = async (e2, t2) => {
      if (t2) try {
        const s2 = this.client.proposal.get(e2), i4 = this.client.core.eventClient.getEvent({ topic: s2.pairingTopic });
        i4 == null ? void 0 : i4.setError(Os2.proposal_expired);
      } catch {
      }
      await Promise.all([this.client.proposal.delete(e2, de3("USER_DISCONNECTED")), t2 ? Promise.resolve() : this.client.core.expirer.del(e2)]), this.addToRecentlyDeleted(e2, "proposal");
    }, this.deletePendingSessionRequest = async (e2, t2, s2 = false) => {
      await Promise.all([this.client.pendingRequest.delete(e2, t2), s2 ? Promise.resolve() : this.client.core.expirer.del(e2)]), this.addToRecentlyDeleted(e2, "request"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i4) => i4.id !== e2), s2 && (this.sessionRequestQueue.state = L.idle, this.client.events.emit("session_request_expire", { id: e2 }));
    }, this.deletePendingAuthRequest = async (e2, t2, s2 = false) => {
      await Promise.all([this.client.auth.requests.delete(e2, t2), s2 ? Promise.resolve() : this.client.core.expirer.del(e2)]);
    }, this.setExpiry = async (e2, t2) => {
      this.client.session.keys.includes(e2) && (this.client.core.expirer.set(e2, t2), await this.client.session.update(e2, { expiry: t2 }));
    }, this.setProposal = async (e2, t2) => {
      this.client.core.expirer.set(e2, ho3(v4.wc_sessionPropose.req.ttl)), await this.client.proposal.set(e2, t2);
    }, this.setAuthRequest = async (e2, t2) => {
      const { request: s2, pairingTopic: i4, transportType: r2 = M5.relay } = t2;
      this.client.core.expirer.set(e2, s2.expiryTimestamp), await this.client.auth.requests.set(e2, { authPayload: s2.authPayload, requester: s2.requester, expiryTimestamp: s2.expiryTimestamp, id: e2, pairingTopic: i4, verifyContext: s2.verifyContext, transportType: r2 });
    }, this.setPendingSessionRequest = async (e2) => {
      const { id: t2, topic: s2, params: i4, verifyContext: r2 } = e2, n2 = i4.request.expiryTimestamp || ho3(v4.wc_sessionRequest.req.ttl);
      this.client.core.expirer.set(t2, n2), await this.client.pendingRequest.set(t2, { id: t2, topic: s2, params: i4, verifyContext: r2 });
    }, this.sendRequest = async (e2) => {
      const { topic: t2, method: s2, params: i4, expiry: r2, relayRpcId: n2, clientRpcId: a2, throwOnFailedPublish: c3, appLink: h6 } = e2, p3 = formatJsonRpcRequest(s2, i4, a2);
      let d4;
      const l3 = !!h6;
      try {
        const y5 = l3 ? Qs : At;
        d4 = await this.client.core.crypto.encode(t2, p3, { encoding: y5 });
      } catch (y5) {
        throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${t2} failed`), y5;
      }
      let w3;
      if (ct5.includes(s2)) {
        const y5 = si(JSON.stringify(p3)), _3 = si(d4);
        w3 = await this.client.core.verify.register({ id: _3, decryptedId: y5 });
      }
      const m = v4[s2].req;
      if (m.attestation = w3, r2 && (m.ttl = r2), n2 && (m.id = n2), this.client.core.history.set(t2, p3), l3) {
        const y5 = Ei(h6, t2, d4);
        await global.Linking.openURL(y5, this.client.name);
      } else {
        const y5 = v4[s2].req;
        r2 && (y5.ttl = r2), n2 && (y5.id = n2), c3 ? (y5.internal = D(I({}, y5.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(t2, d4, y5)) : this.client.core.relayer.publish(t2, d4, y5).catch((_3) => this.client.logger.error(_3));
      }
      return p3.id;
    }, this.sendResult = async (e2) => {
      const { id: t2, topic: s2, result: i4, throwOnFailedPublish: r2, encodeOpts: n2, appLink: a2 } = e2, c3 = formatJsonRpcResult(t2, i4);
      let h6;
      const p3 = a2 && typeof (global == null ? void 0 : global.Linking) < "u";
      try {
        const l3 = p3 ? Qs : At;
        h6 = await this.client.core.crypto.encode(s2, c3, D(I({}, n2 || {}), { encoding: l3 }));
      } catch (l3) {
        throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s2} failed`), l3;
      }
      let d4;
      try {
        d4 = await this.client.core.history.get(s2, t2);
      } catch (l3) {
        throw this.client.logger.error(`sendResult() -> history.get(${s2}, ${t2}) failed`), l3;
      }
      if (p3) {
        const l3 = Ei(a2, s2, h6);
        await global.Linking.openURL(l3, this.client.name);
      } else {
        const l3 = v4[d4.request.method].res;
        r2 ? (l3.internal = D(I({}, l3.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(s2, h6, l3)) : this.client.core.relayer.publish(s2, h6, l3).catch((w3) => this.client.logger.error(w3));
      }
      await this.client.core.history.resolve(c3);
    }, this.sendError = async (e2) => {
      const { id: t2, topic: s2, error: i4, encodeOpts: r2, rpcOpts: n2, appLink: a2 } = e2, c3 = formatJsonRpcError(t2, i4);
      let h6;
      const p3 = a2 && typeof (global == null ? void 0 : global.Linking) < "u";
      try {
        const l3 = p3 ? Qs : At;
        h6 = await this.client.core.crypto.encode(s2, c3, D(I({}, r2 || {}), { encoding: l3 }));
      } catch (l3) {
        throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s2} failed`), l3;
      }
      let d4;
      try {
        d4 = await this.client.core.history.get(s2, t2);
      } catch (l3) {
        throw this.client.logger.error(`sendError() -> history.get(${s2}, ${t2}) failed`), l3;
      }
      if (p3) {
        const l3 = Ei(a2, s2, h6);
        await global.Linking.openURL(l3, this.client.name);
      } else {
        const l3 = n2 || v4[d4.request.method].res;
        this.client.core.relayer.publish(s2, h6, l3);
      }
      await this.client.core.history.resolve(c3);
    }, this.cleanup = async () => {
      const e2 = [], t2 = [];
      this.client.session.getAll().forEach((s2) => {
        let i4 = false;
        po3(s2.expiry) && (i4 = true), this.client.core.crypto.keychain.has(s2.topic) || (i4 = true), i4 && e2.push(s2.topic);
      }), this.client.proposal.getAll().forEach((s2) => {
        po3(s2.expiryTimestamp) && t2.push(s2.id);
      }), await Promise.all([...e2.map((s2) => this.deleteSession({ topic: s2 })), ...t2.map((s2) => this.deleteProposal(s2))]);
    }, this.onRelayEventRequest = async (e2) => {
      this.requestQueue.queue.push(e2), await this.processRequestsQueue();
    }, this.processRequestsQueue = async () => {
      if (this.requestQueue.state === L.active) {
        this.client.logger.info("Request queue already active, skipping...");
        return;
      }
      for (this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0; ) {
        this.requestQueue.state = L.active;
        const e2 = this.requestQueue.queue.shift();
        if (e2) try {
          await this.processRequest(e2);
        } catch (t2) {
          this.client.logger.warn(t2);
        }
      }
      this.requestQueue.state = L.idle;
    }, this.processRequest = async (e2) => {
      const { topic: t2, payload: s2, attestation: i4, transportType: r2, encryptedId: n2 } = e2, a2 = s2.method;
      if (!this.shouldIgnorePairingRequest({ topic: t2, requestMethod: a2 })) switch (a2) {
        case "wc_sessionPropose":
          return await this.onSessionProposeRequest({ topic: t2, payload: s2, attestation: i4, encryptedId: n2 });
        case "wc_sessionSettle":
          return await this.onSessionSettleRequest(t2, s2);
        case "wc_sessionUpdate":
          return await this.onSessionUpdateRequest(t2, s2);
        case "wc_sessionExtend":
          return await this.onSessionExtendRequest(t2, s2);
        case "wc_sessionPing":
          return await this.onSessionPingRequest(t2, s2);
        case "wc_sessionDelete":
          return await this.onSessionDeleteRequest(t2, s2);
        case "wc_sessionRequest":
          return await this.onSessionRequest({ topic: t2, payload: s2, attestation: i4, encryptedId: n2, transportType: r2 });
        case "wc_sessionEvent":
          return await this.onSessionEventRequest(t2, s2);
        case "wc_sessionAuthenticate":
          return await this.onSessionAuthenticateRequest({ topic: t2, payload: s2, attestation: i4, encryptedId: n2, transportType: r2 });
        default:
          return this.client.logger.info(`Unsupported request method ${a2}`);
      }
    }, this.onRelayEventResponse = async (e2) => {
      const { topic: t2, payload: s2, transportType: i4 } = e2, r2 = (await this.client.core.history.get(t2, s2.id)).request.method;
      switch (r2) {
        case "wc_sessionPropose":
          return this.onSessionProposeResponse(t2, s2, i4);
        case "wc_sessionSettle":
          return this.onSessionSettleResponse(t2, s2);
        case "wc_sessionUpdate":
          return this.onSessionUpdateResponse(t2, s2);
        case "wc_sessionExtend":
          return this.onSessionExtendResponse(t2, s2);
        case "wc_sessionPing":
          return this.onSessionPingResponse(t2, s2);
        case "wc_sessionRequest":
          return this.onSessionRequestResponse(t2, s2);
        case "wc_sessionAuthenticate":
          return this.onSessionAuthenticateResponse(t2, s2);
        default:
          return this.client.logger.info(`Unsupported response method ${r2}`);
      }
    }, this.onRelayEventUnknownPayload = (e2) => {
      const { topic: t2 } = e2, { message: s2 } = te3("MISSING_OR_INVALID", `Decoded payload on topic ${t2} is not identifiable as a JSON-RPC request or a response.`);
      throw new Error(s2);
    }, this.shouldIgnorePairingRequest = (e2) => {
      const { topic: t2, requestMethod: s2 } = e2, i4 = this.expectedPairingMethodMap.get(t2);
      return !i4 || i4.includes(s2) ? false : !!(i4.includes("wc_sessionAuthenticate") && this.client.events.listenerCount("session_authenticate") > 0);
    }, this.onSessionProposeRequest = async (e2) => {
      const { topic: t2, payload: s2, attestation: i4, encryptedId: r2 } = e2, { params: n2, id: a2 } = s2;
      try {
        const c3 = this.client.core.eventClient.getEvent({ topic: t2 });
        this.client.events.listenerCount("session_proposal") === 0 && (console.warn("No listener for session_proposal event"), c3 == null ? void 0 : c3.setError($.proposal_listener_not_found)), this.isValidConnect(I({}, s2.params));
        const h6 = n2.expiryTimestamp || ho3(v4.wc_sessionPropose.req.ttl), p3 = I({ id: a2, pairingTopic: t2, expiryTimestamp: h6 }, n2);
        await this.setProposal(a2, p3);
        const d4 = await this.getVerifyContext({ attestationId: i4, hash: si(JSON.stringify(s2)), encryptedId: r2, metadata: p3.proposer.metadata });
        c3 == null ? void 0 : c3.addTrace(z3.emit_session_proposal), this.client.events.emit("session_proposal", { id: a2, params: p3, verifyContext: d4 });
      } catch (c3) {
        await this.sendError({ id: a2, topic: t2, error: c3, rpcOpts: v4.wc_sessionPropose.autoReject }), this.client.logger.error(c3);
      }
    }, this.onSessionProposeResponse = async (e2, t2, s2) => {
      const { id: i4 } = t2;
      if (isJsonRpcResult(t2)) {
        const { result: r2 } = t2;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: r2 });
        const n2 = this.client.proposal.get(i4);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: n2 });
        const a2 = n2.proposer.publicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: a2 });
        const c3 = r2.responderPublicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: c3 });
        const h6 = await this.client.core.crypto.generateSharedKey(a2, c3);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", sessionTopic: h6 });
        const p3 = await this.client.core.relayer.subscribe(h6, { transportType: s2 });
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: p3 }), await this.client.core.pairing.activate({ topic: e2 });
      } else if (isJsonRpcError(t2)) {
        await this.client.proposal.delete(i4, de3("USER_DISCONNECTED"));
        const r2 = go3("session_connect");
        if (this.events.listenerCount(r2) === 0) throw new Error(`emitting ${r2} without any listeners, 954`);
        this.events.emit(go3("session_connect"), { error: t2.error });
      }
    }, this.onSessionSettleRequest = async (e2, t2) => {
      const { id: s2, params: i4 } = t2;
      try {
        this.isValidSessionSettleRequest(i4);
        const { relay: r2, controller: n2, expiry: a2, namespaces: c3, sessionProperties: h6, sessionConfig: p3 } = t2.params, d4 = D(I(I({ topic: e2, relay: r2, expiry: a2, namespaces: c3, acknowledged: true, pairingTopic: "", requiredNamespaces: {}, optionalNamespaces: {}, controller: n2.publicKey, self: { publicKey: "", metadata: this.client.metadata }, peer: { publicKey: n2.publicKey, metadata: n2.metadata } }, h6 && { sessionProperties: h6 }), p3 && { sessionConfig: p3 }), { transportType: M5.relay }), l3 = go3("session_connect");
        if (this.events.listenerCount(l3) === 0) throw new Error(`emitting ${l3} without any listeners 997`);
        this.events.emit(go3("session_connect"), { session: d4 }), await this.sendResult({ id: t2.id, topic: e2, result: true, throwOnFailedPublish: true });
      } catch (r2) {
        await this.sendError({ id: s2, topic: e2, error: r2 }), this.client.logger.error(r2);
      }
    }, this.onSessionSettleResponse = async (e2, t2) => {
      const { id: s2 } = t2;
      isJsonRpcResult(t2) ? (await this.client.session.update(e2, { acknowledged: true }), this.events.emit(go3("session_approve", s2), {})) : isJsonRpcError(t2) && (await this.client.session.delete(e2, de3("USER_DISCONNECTED")), this.events.emit(go3("session_approve", s2), { error: t2.error }));
    }, this.onSessionUpdateRequest = async (e2, t2) => {
      const { params: s2, id: i4 } = t2;
      try {
        const r2 = `${e2}_session_update`, n2 = Zi.get(r2);
        if (n2 && this.isRequestOutOfSync(n2, i4)) {
          this.client.logger.warn(`Discarding out of sync request - ${i4}`), this.sendError({ id: i4, topic: e2, error: de3("INVALID_UPDATE_REQUEST") });
          return;
        }
        this.isValidUpdate(I({ topic: e2 }, s2));
        try {
          Zi.set(r2, i4), await this.client.session.update(e2, { namespaces: s2.namespaces }), await this.sendResult({ id: i4, topic: e2, result: true, throwOnFailedPublish: true });
        } catch (a2) {
          throw Zi.delete(r2), a2;
        }
        this.client.events.emit("session_update", { id: i4, topic: e2, params: s2 });
      } catch (r2) {
        await this.sendError({ id: i4, topic: e2, error: r2 }), this.client.logger.error(r2);
      }
    }, this.isRequestOutOfSync = (e2, t2) => t2.toString().slice(0, -3) < e2.toString().slice(0, -3), this.onSessionUpdateResponse = (e2, t2) => {
      const { id: s2 } = t2, i4 = go3("session_update", s2);
      if (this.events.listenerCount(i4) === 0) throw new Error(`emitting ${i4} without any listeners`);
      isJsonRpcResult(t2) ? this.events.emit(go3("session_update", s2), {}) : isJsonRpcError(t2) && this.events.emit(go3("session_update", s2), { error: t2.error });
    }, this.onSessionExtendRequest = async (e2, t2) => {
      const { id: s2 } = t2;
      try {
        this.isValidExtend({ topic: e2 }), await this.setExpiry(e2, ho3(H4)), await this.sendResult({ id: s2, topic: e2, result: true, throwOnFailedPublish: true }), this.client.events.emit("session_extend", { id: s2, topic: e2 });
      } catch (i4) {
        await this.sendError({ id: s2, topic: e2, error: i4 }), this.client.logger.error(i4);
      }
    }, this.onSessionExtendResponse = (e2, t2) => {
      const { id: s2 } = t2, i4 = go3("session_extend", s2);
      if (this.events.listenerCount(i4) === 0) throw new Error(`emitting ${i4} without any listeners`);
      isJsonRpcResult(t2) ? this.events.emit(go3("session_extend", s2), {}) : isJsonRpcError(t2) && this.events.emit(go3("session_extend", s2), { error: t2.error });
    }, this.onSessionPingRequest = async (e2, t2) => {
      const { id: s2 } = t2;
      try {
        this.isValidPing({ topic: e2 }), await this.sendResult({ id: s2, topic: e2, result: true, throwOnFailedPublish: true }), this.client.events.emit("session_ping", { id: s2, topic: e2 });
      } catch (i4) {
        await this.sendError({ id: s2, topic: e2, error: i4 }), this.client.logger.error(i4);
      }
    }, this.onSessionPingResponse = (e2, t2) => {
      const { id: s2 } = t2, i4 = go3("session_ping", s2);
      if (this.events.listenerCount(i4) === 0) throw new Error(`emitting ${i4} without any listeners`);
      setTimeout(() => {
        isJsonRpcResult(t2) ? this.events.emit(go3("session_ping", s2), {}) : isJsonRpcError(t2) && this.events.emit(go3("session_ping", s2), { error: t2.error });
      }, 500);
    }, this.onSessionDeleteRequest = async (e2, t2) => {
      const { id: s2 } = t2;
      try {
        this.isValidDisconnect({ topic: e2, reason: t2.params }), Promise.all([new Promise((i4) => {
          this.client.core.relayer.once(v3.publish, async () => {
            i4(await this.deleteSession({ topic: e2, id: s2 }));
          });
        }), this.sendResult({ id: s2, topic: e2, result: true, throwOnFailedPublish: true }), this.cleanupPendingSentRequestsForTopic({ topic: e2, error: de3("USER_DISCONNECTED") })]).catch((i4) => this.client.logger.error(i4));
      } catch (i4) {
        this.client.logger.error(i4);
      }
    }, this.onSessionRequest = async (e2) => {
      var t2, s2, i4;
      const { topic: r2, payload: n2, attestation: a2, encryptedId: c3, transportType: h6 } = e2, { id: p3, params: d4 } = n2;
      try {
        await this.isValidRequest(I({ topic: r2 }, d4));
        const l3 = this.client.session.get(r2), w3 = await this.getVerifyContext({ attestationId: a2, hash: si(JSON.stringify(formatJsonRpcRequest("wc_sessionRequest", d4, p3))), encryptedId: c3, metadata: l3.peer.metadata, transportType: h6 }), m = { id: p3, topic: r2, params: d4, verifyContext: w3 };
        await this.setPendingSessionRequest(m), h6 === M5.link_mode && (t2 = l3.peer.metadata.redirect) != null && t2.universal && this.client.core.addLinkModeSupportedApp((s2 = l3.peer.metadata.redirect) == null ? void 0 : s2.universal), (i4 = this.client.signConfig) != null && i4.disableRequestQueue ? this.emitSessionRequest(m) : (this.addSessionRequestToSessionRequestQueue(m), this.processSessionRequestQueue());
      } catch (l3) {
        await this.sendError({ id: p3, topic: r2, error: l3 }), this.client.logger.error(l3);
      }
    }, this.onSessionRequestResponse = (e2, t2) => {
      const { id: s2 } = t2, i4 = go3("session_request", s2);
      if (this.events.listenerCount(i4) === 0) throw new Error(`emitting ${i4} without any listeners`);
      isJsonRpcResult(t2) ? this.events.emit(go3("session_request", s2), { result: t2.result }) : isJsonRpcError(t2) && this.events.emit(go3("session_request", s2), { error: t2.error });
    }, this.onSessionEventRequest = async (e2, t2) => {
      const { id: s2, params: i4 } = t2;
      try {
        const r2 = `${e2}_session_event_${i4.event.name}`, n2 = Zi.get(r2);
        if (n2 && this.isRequestOutOfSync(n2, s2)) {
          this.client.logger.info(`Discarding out of sync request - ${s2}`);
          return;
        }
        this.isValidEmit(I({ topic: e2 }, i4)), this.client.events.emit("session_event", { id: s2, topic: e2, params: i4 }), Zi.set(r2, s2);
      } catch (r2) {
        await this.sendError({ id: s2, topic: e2, error: r2 }), this.client.logger.error(r2);
      }
    }, this.onSessionAuthenticateResponse = (e2, t2) => {
      const { id: s2 } = t2;
      this.client.logger.trace({ type: "method", method: "onSessionAuthenticateResponse", topic: e2, payload: t2 }), isJsonRpcResult(t2) ? this.events.emit(go3("session_request", s2), { result: t2.result }) : isJsonRpcError(t2) && this.events.emit(go3("session_request", s2), { error: t2.error });
    }, this.onSessionAuthenticateRequest = async (e2) => {
      var t2;
      const { topic: s2, payload: i4, attestation: r2, encryptedId: n2, transportType: a2 } = e2;
      try {
        const { requester: c3, authPayload: h6, expiryTimestamp: p3 } = i4.params, d4 = await this.getVerifyContext({ attestationId: r2, hash: si(JSON.stringify(i4)), encryptedId: n2, metadata: c3.metadata, transportType: a2 }), l3 = { requester: c3, pairingTopic: s2, id: i4.id, authPayload: h6, verifyContext: d4, expiryTimestamp: p3 };
        await this.setAuthRequest(i4.id, { request: l3, pairingTopic: s2, transportType: a2 }), a2 === M5.link_mode && (t2 = c3.metadata.redirect) != null && t2.universal && this.client.core.addLinkModeSupportedApp(c3.metadata.redirect.universal), this.client.events.emit("session_authenticate", { topic: s2, params: i4.params, id: i4.id, verifyContext: d4 });
      } catch (c3) {
        this.client.logger.error(c3);
        const h6 = i4.params.requester.publicKey, p3 = await this.client.core.crypto.generateKeyPair(), d4 = this.getAppLinkIfEnabled(i4.params.requester.metadata, a2), l3 = { type: Ie3, receiverPublicKey: h6, senderPublicKey: p3 };
        await this.sendError({ id: i4.id, topic: s2, error: c3, encodeOpts: l3, rpcOpts: v4.wc_sessionAuthenticate.autoReject, appLink: d4 });
      }
    }, this.addSessionRequestToSessionRequestQueue = (e2) => {
      this.sessionRequestQueue.queue.push(e2);
    }, this.cleanupAfterResponse = (e2) => {
      this.deletePendingSessionRequest(e2.response.id, { message: "fulfilled", code: 0 }), setTimeout(() => {
        this.sessionRequestQueue.state = L.idle, this.processSessionRequestQueue();
      }, (0, import_time5.toMiliseconds)(this.requestQueueDelay));
    }, this.cleanupPendingSentRequestsForTopic = ({ topic: e2, error: t2 }) => {
      const s2 = this.client.core.history.pending;
      s2.length > 0 && s2.filter((i4) => i4.topic === e2 && i4.request.method === "wc_sessionRequest").forEach((i4) => {
        const r2 = i4.request.id, n2 = go3("session_request", r2);
        if (this.events.listenerCount(n2) === 0) throw new Error(`emitting ${n2} without any listeners`);
        this.events.emit(go3("session_request", i4.request.id), { error: t2 });
      });
    }, this.processSessionRequestQueue = () => {
      if (this.sessionRequestQueue.state === L.active) {
        this.client.logger.info("session request queue is already active.");
        return;
      }
      const e2 = this.sessionRequestQueue.queue[0];
      if (!e2) {
        this.client.logger.info("session request queue is empty.");
        return;
      }
      try {
        this.sessionRequestQueue.state = L.active, this.emitSessionRequest(e2);
      } catch (t2) {
        this.client.logger.error(t2);
      }
    }, this.emitSessionRequest = (e2) => {
      this.client.events.emit("session_request", e2);
    }, this.onPairingCreated = (e2) => {
      if (e2.methods && this.expectedPairingMethodMap.set(e2.topic, e2.methods), e2.active) return;
      const t2 = this.client.proposal.getAll().find((s2) => s2.pairingTopic === e2.topic);
      t2 && this.onSessionProposeRequest({ topic: e2.topic, payload: formatJsonRpcRequest("wc_sessionPropose", { requiredNamespaces: t2.requiredNamespaces, optionalNamespaces: t2.optionalNamespaces, relays: t2.relays, proposer: t2.proposer, sessionProperties: t2.sessionProperties }, t2.id) });
    }, this.isValidConnect = async (e2) => {
      if (!Di(e2)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(e2)}`);
        throw new Error(a2);
      }
      const { pairingTopic: t2, requiredNamespaces: s2, optionalNamespaces: i4, sessionProperties: r2, relays: n2 } = e2;
      if (ae(t2) || await this.isValidPairingTopic(t2), !Ci(n2, true)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `connect() relays: ${n2}`);
        throw new Error(a2);
      }
      !ae(s2) && qe3(s2) !== 0 && this.validateNamespaces(s2, "requiredNamespaces"), !ae(i4) && qe3(i4) !== 0 && this.validateNamespaces(i4, "optionalNamespaces"), ae(r2) || this.validateSessionProps(r2, "sessionProperties");
    }, this.validateNamespaces = (e2, t2) => {
      const s2 = ji(e2, "connect()", t2);
      if (s2) throw new Error(s2.message);
    }, this.isValidApprove = async (e2) => {
      if (!Di(e2)) throw new Error(te3("MISSING_OR_INVALID", `approve() params: ${e2}`).message);
      const { id: t2, namespaces: s2, relayProtocol: i4, sessionProperties: r2 } = e2;
      this.checkRecentlyDeleted(t2), await this.isValidProposalId(t2);
      const n2 = this.client.proposal.get(t2), a2 = Ir3(s2, "approve()");
      if (a2) throw new Error(a2.message);
      const c3 = Nr3(n2.requiredNamespaces, s2, "approve()");
      if (c3) throw new Error(c3.message);
      if (!q(i4, true)) {
        const { message: h6 } = te3("MISSING_OR_INVALID", `approve() relayProtocol: ${i4}`);
        throw new Error(h6);
      }
      ae(r2) || this.validateSessionProps(r2, "sessionProperties");
    }, this.isValidReject = async (e2) => {
      if (!Di(e2)) {
        const { message: i4 } = te3("MISSING_OR_INVALID", `reject() params: ${e2}`);
        throw new Error(i4);
      }
      const { id: t2, reason: s2 } = e2;
      if (this.checkRecentlyDeleted(t2), await this.isValidProposalId(t2), !Mi(s2)) {
        const { message: i4 } = te3("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(s2)}`);
        throw new Error(i4);
      }
    }, this.isValidSessionSettleRequest = (e2) => {
      if (!Di(e2)) {
        const { message: c3 } = te3("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${e2}`);
        throw new Error(c3);
      }
      const { relay: t2, controller: s2, namespaces: i4, expiry: r2 } = e2;
      if (!Ar3(t2)) {
        const { message: c3 } = te3("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
        throw new Error(c3);
      }
      const n2 = Bi(s2, "onSessionSettleRequest()");
      if (n2) throw new Error(n2.message);
      const a2 = Ir3(i4, "onSessionSettleRequest()");
      if (a2) throw new Error(a2.message);
      if (po3(r2)) {
        const { message: c3 } = te3("EXPIRED", "onSessionSettleRequest()");
        throw new Error(c3);
      }
    }, this.isValidUpdate = async (e2) => {
      if (!Di(e2)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `update() params: ${e2}`);
        throw new Error(a2);
      }
      const { topic: t2, namespaces: s2 } = e2;
      this.checkRecentlyDeleted(t2), await this.isValidSessionTopic(t2);
      const i4 = this.client.session.get(t2), r2 = Ir3(s2, "update()");
      if (r2) throw new Error(r2.message);
      const n2 = Nr3(i4.requiredNamespaces, s2, "update()");
      if (n2) throw new Error(n2.message);
    }, this.isValidExtend = async (e2) => {
      if (!Di(e2)) {
        const { message: s2 } = te3("MISSING_OR_INVALID", `extend() params: ${e2}`);
        throw new Error(s2);
      }
      const { topic: t2 } = e2;
      this.checkRecentlyDeleted(t2), await this.isValidSessionTopic(t2);
    }, this.isValidRequest = async (e2) => {
      if (!Di(e2)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `request() params: ${e2}`);
        throw new Error(a2);
      }
      const { topic: t2, request: s2, chainId: i4, expiry: r2 } = e2;
      this.checkRecentlyDeleted(t2), await this.isValidSessionTopic(t2);
      const { namespaces: n2 } = this.client.session.get(t2);
      if (!Fi(n2, i4)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `request() chainId: ${i4}`);
        throw new Error(a2);
      }
      if (!Vi(s2)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `request() ${JSON.stringify(s2)}`);
        throw new Error(a2);
      }
      if (!qi(n2, i4, s2.method)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `request() method: ${s2.method}`);
        throw new Error(a2);
      }
      if (r2 && !Ji(r2, me5)) {
        const { message: a2 } = te3("MISSING_OR_INVALID", `request() expiry: ${r2}. Expiry must be a number (in seconds) between ${me5.min} and ${me5.max}`);
        throw new Error(a2);
      }
    }, this.isValidRespond = async (e2) => {
      var t2;
      if (!Di(e2)) {
        const { message: r2 } = te3("MISSING_OR_INVALID", `respond() params: ${e2}`);
        throw new Error(r2);
      }
      const { topic: s2, response: i4 } = e2;
      try {
        await this.isValidSessionTopic(s2);
      } catch (r2) {
        throw (t2 = e2 == null ? void 0 : e2.response) != null && t2.id && this.cleanupAfterResponse(e2), r2;
      }
      if (!Hi(i4)) {
        const { message: r2 } = te3("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(i4)}`);
        throw new Error(r2);
      }
    }, this.isValidPing = async (e2) => {
      if (!Di(e2)) {
        const { message: s2 } = te3("MISSING_OR_INVALID", `ping() params: ${e2}`);
        throw new Error(s2);
      }
      const { topic: t2 } = e2;
      await this.isValidSessionOrPairingTopic(t2);
    }, this.isValidEmit = async (e2) => {
      if (!Di(e2)) {
        const { message: n2 } = te3("MISSING_OR_INVALID", `emit() params: ${e2}`);
        throw new Error(n2);
      }
      const { topic: t2, event: s2, chainId: i4 } = e2;
      await this.isValidSessionTopic(t2);
      const { namespaces: r2 } = this.client.session.get(t2);
      if (!Fi(r2, i4)) {
        const { message: n2 } = te3("MISSING_OR_INVALID", `emit() chainId: ${i4}`);
        throw new Error(n2);
      }
      if (!Ki(s2)) {
        const { message: n2 } = te3("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s2)}`);
        throw new Error(n2);
      }
      if (!Gi(r2, i4, s2.name)) {
        const { message: n2 } = te3("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s2)}`);
        throw new Error(n2);
      }
    }, this.isValidDisconnect = async (e2) => {
      if (!Di(e2)) {
        const { message: s2 } = te3("MISSING_OR_INVALID", `disconnect() params: ${e2}`);
        throw new Error(s2);
      }
      const { topic: t2 } = e2;
      await this.isValidSessionOrPairingTopic(t2);
    }, this.isValidAuthenticate = (e2) => {
      const { chains: t2, uri: s2, domain: i4, nonce: r2 } = e2;
      if (!Array.isArray(t2) || t2.length === 0) throw new Error("chains is required and must be a non-empty array");
      if (!q(s2, false)) throw new Error("uri is required parameter");
      if (!q(i4, false)) throw new Error("domain is required parameter");
      if (!q(r2, false)) throw new Error("nonce is required parameter");
      if ([...new Set(t2.map((a2) => Ye3(a2).namespace))].length > 1) throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");
      const { namespace: n2 } = Ye3(t2[0]);
      if (n2 !== "eip155") throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.");
    }, this.getVerifyContext = async (e2) => {
      const { attestationId: t2, hash: s2, encryptedId: i4, metadata: r2, transportType: n2 } = e2, a2 = { verified: { verifyUrl: r2.verifyUrl || X, validation: "UNKNOWN", origin: r2.url || "" } };
      try {
        if (n2 === M5.link_mode) {
          const h6 = this.getAppLinkIfEnabled(r2, n2);
          return a2.verified.validation = h6 && new URL(h6).origin === new URL(r2.url).origin ? "VALID" : "INVALID", a2;
        }
        const c3 = await this.client.core.verify.resolve({ attestationId: t2, hash: s2, encryptedId: i4, verifyUrl: r2.verifyUrl });
        c3 && (a2.verified.origin = c3.origin, a2.verified.isScam = c3.isScam, a2.verified.validation = c3.origin === new URL(r2.url).origin ? "VALID" : "INVALID");
      } catch (c3) {
        this.client.logger.warn(c3);
      }
      return this.client.logger.debug(`Verify context: ${JSON.stringify(a2)}`), a2;
    }, this.validateSessionProps = (e2, t2) => {
      Object.values(e2).forEach((s2) => {
        if (!q(s2, false)) {
          const { message: i4 } = te3("MISSING_OR_INVALID", `${t2} must be in Record<string, string> format. Received: ${JSON.stringify(s2)}`);
          throw new Error(i4);
        }
      });
    }, this.getPendingAuthRequest = (e2) => {
      const t2 = this.client.auth.requests.get(e2);
      return typeof t2 == "object" ? t2 : void 0;
    }, this.addToRecentlyDeleted = (e2, t2) => {
      if (this.recentlyDeletedMap.set(e2, t2), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {
        let s2 = 0;
        const i4 = this.recentlyDeletedLimit / 2;
        for (const r2 of this.recentlyDeletedMap.keys()) {
          if (s2++ >= i4) break;
          this.recentlyDeletedMap.delete(r2);
        }
      }
    }, this.checkRecentlyDeleted = (e2) => {
      const t2 = this.recentlyDeletedMap.get(e2);
      if (t2) {
        const { message: s2 } = te3("MISSING_OR_INVALID", `Record was recently deleted - ${t2}: ${e2}`);
        throw new Error(s2);
      }
    }, this.isLinkModeEnabled = (e2, t2) => {
      var s2, i4, r2, n2, a2, c3, h6, p3, d4;
      return !e2 || t2 !== M5.link_mode ? false : ((i4 = (s2 = this.client.metadata) == null ? void 0 : s2.redirect) == null ? void 0 : i4.linkMode) === true && ((n2 = (r2 = this.client.metadata) == null ? void 0 : r2.redirect) == null ? void 0 : n2.universal) !== void 0 && ((c3 = (a2 = this.client.metadata) == null ? void 0 : a2.redirect) == null ? void 0 : c3.universal) !== "" && ((h6 = e2 == null ? void 0 : e2.redirect) == null ? void 0 : h6.universal) !== void 0 && ((p3 = e2 == null ? void 0 : e2.redirect) == null ? void 0 : p3.universal) !== "" && ((d4 = e2 == null ? void 0 : e2.redirect) == null ? void 0 : d4.linkMode) === true && this.client.core.linkModeSupportedApps.includes(e2.redirect.universal) && typeof (global == null ? void 0 : global.Linking) < "u";
    }, this.getAppLinkIfEnabled = (e2, t2) => {
      var s2;
      return this.isLinkModeEnabled(e2, t2) ? (s2 = e2 == null ? void 0 : e2.redirect) == null ? void 0 : s2.universal : void 0;
    }, this.handleLinkModeMessage = ({ url: e2 }) => {
      if (!e2 || !e2.includes("wc_ev") || !e2.includes("topic")) return;
      const t2 = bo3(e2, "topic") || "", s2 = decodeURIComponent(bo3(e2, "wc_ev") || ""), i4 = this.client.session.keys.includes(t2);
      i4 && this.client.session.update(t2, { transportType: M5.link_mode }), this.client.core.dispatchEnvelope({ topic: t2, message: s2, sessionExists: i4 });
    }, this.registerLinkModeListeners = async () => {
      var e2;
      if (Eo3() || ne() && (e2 = this.client.metadata.redirect) != null && e2.linkMode) {
        const t2 = global == null ? void 0 : global.Linking;
        if (typeof t2 < "u") {
          t2.addEventListener("url", this.handleLinkModeMessage, this.client.name);
          const s2 = await t2.getInitialURL();
          s2 && setTimeout(() => {
            this.handleLinkModeMessage({ url: s2 });
          }, 50);
        }
      }
    };
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: o2 } = te3("NOT_INITIALIZED", this.name);
      throw new Error(o2);
    }
  }
  async confirmOnlineStateOrThrow() {
    await this.client.core.relayer.confirmOnlineStateOrThrow();
  }
  registerRelayerEvents() {
    this.client.core.relayer.on(v3.message, (o2) => {
      !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(o2) : this.onRelayMessage(o2);
    });
  }
  async onRelayMessage(o2) {
    const { topic: e2, message: t2, attestation: s2, transportType: i4 } = o2, { publicKey: r2 } = this.client.auth.authKeys.keys.includes(ae3) ? this.client.auth.authKeys.get(ae3) : { responseTopic: void 0, publicKey: void 0 }, n2 = await this.client.core.crypto.decode(e2, t2, { receiverPublicKey: r2, encoding: i4 === M5.link_mode ? Qs : At });
    try {
      isJsonRpcRequest(n2) ? (this.client.core.history.set(e2, n2), this.onRelayEventRequest({ topic: e2, payload: n2, attestation: s2, transportType: i4, encryptedId: si(t2) })) : isJsonRpcResponse(n2) ? (await this.client.core.history.resolve(n2), await this.onRelayEventResponse({ topic: e2, payload: n2, transportType: i4 }), this.client.core.history.delete(e2, n2.id)) : this.onRelayEventUnknownPayload({ topic: e2, payload: n2, transportType: i4 });
    } catch (a2) {
      this.client.logger.error(a2);
    }
  }
  registerExpirerEvents() {
    this.client.core.expirer.on(x5.expired, async (o2) => {
      const { topic: e2, id: t2 } = lo3(o2.target);
      if (t2 && this.client.pendingRequest.keys.includes(t2)) return await this.deletePendingSessionRequest(t2, te3("EXPIRED"), true);
      if (t2 && this.client.auth.requests.keys.includes(t2)) return await this.deletePendingAuthRequest(t2, te3("EXPIRED"), true);
      e2 ? this.client.session.keys.includes(e2) && (await this.deleteSession({ topic: e2, expirerHasDeleted: true }), this.client.events.emit("session_expire", { topic: e2 })) : t2 && (await this.deleteProposal(t2, true), this.client.events.emit("proposal_expire", { id: t2 }));
    });
  }
  registerPairingEvents() {
    this.client.core.pairing.events.on(j3.create, (o2) => this.onPairingCreated(o2)), this.client.core.pairing.events.on(j3.delete, (o2) => {
      this.addToRecentlyDeleted(o2.topic, "pairing");
    });
  }
  isValidPairingTopic(o2) {
    if (!q(o2, false)) {
      const { message: e2 } = te3("MISSING_OR_INVALID", `pairing topic should be a string: ${o2}`);
      throw new Error(e2);
    }
    if (!this.client.core.pairing.pairings.keys.includes(o2)) {
      const { message: e2 } = te3("NO_MATCHING_KEY", `pairing topic doesn't exist: ${o2}`);
      throw new Error(e2);
    }
    if (po3(this.client.core.pairing.pairings.get(o2).expiry)) {
      const { message: e2 } = te3("EXPIRED", `pairing topic: ${o2}`);
      throw new Error(e2);
    }
  }
  async isValidSessionTopic(o2) {
    if (!q(o2, false)) {
      const { message: e2 } = te3("MISSING_OR_INVALID", `session topic should be a string: ${o2}`);
      throw new Error(e2);
    }
    if (this.checkRecentlyDeleted(o2), !this.client.session.keys.includes(o2)) {
      const { message: e2 } = te3("NO_MATCHING_KEY", `session topic doesn't exist: ${o2}`);
      throw new Error(e2);
    }
    if (po3(this.client.session.get(o2).expiry)) {
      await this.deleteSession({ topic: o2 });
      const { message: e2 } = te3("EXPIRED", `session topic: ${o2}`);
      throw new Error(e2);
    }
    if (!this.client.core.crypto.keychain.has(o2)) {
      const { message: e2 } = te3("MISSING_OR_INVALID", `session topic does not exist in keychain: ${o2}`);
      throw await this.deleteSession({ topic: o2 }), new Error(e2);
    }
  }
  async isValidSessionOrPairingTopic(o2) {
    if (this.checkRecentlyDeleted(o2), this.client.session.keys.includes(o2)) await this.isValidSessionTopic(o2);
    else if (this.client.core.pairing.pairings.keys.includes(o2)) this.isValidPairingTopic(o2);
    else if (q(o2, false)) {
      const { message: e2 } = te3("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${o2}`);
      throw new Error(e2);
    } else {
      const { message: e2 } = te3("MISSING_OR_INVALID", `session or pairing topic should be a string: ${o2}`);
      throw new Error(e2);
    }
  }
  async isValidProposalId(o2) {
    if (!ki(o2)) {
      const { message: e2 } = te3("MISSING_OR_INVALID", `proposal id should be a number: ${o2}`);
      throw new Error(e2);
    }
    if (!this.client.proposal.keys.includes(o2)) {
      const { message: e2 } = te3("NO_MATCHING_KEY", `proposal id doesn't exist: ${o2}`);
      throw new Error(e2);
    }
    if (po3(this.client.proposal.get(o2).expiryTimestamp)) {
      await this.deleteProposal(o2);
      const { message: e2 } = te3("EXPIRED", `proposal id: ${o2}`);
      throw new Error(e2);
    }
  }
};
var Ss3 = class extends li2 {
  constructor(o2, e2) {
    super(o2, e2, it5, ye4), this.core = o2, this.logger = e2;
  }
};
var wt5 = class extends li2 {
  constructor(o2, e2) {
    super(o2, e2, nt4, ye4), this.core = o2, this.logger = e2;
  }
};
var Is2 = class extends li2 {
  constructor(o2, e2) {
    super(o2, e2, at3, ye4, (t2) => t2.id), this.core = o2, this.logger = e2;
  }
};
var fs2 = class extends li2 {
  constructor(o2, e2) {
    super(o2, e2, ht5, oe3, () => ae3), this.core = o2, this.logger = e2;
  }
};
var vs2 = class extends li2 {
  constructor(o2, e2) {
    super(o2, e2, dt4, oe3), this.core = o2, this.logger = e2;
  }
};
var qs3 = class extends li2 {
  constructor(o2, e2) {
    super(o2, e2, ut5, oe3, (t2) => t2.id), this.core = o2, this.logger = e2;
  }
};
var Ts2 = class {
  constructor(o2, e2) {
    this.core = o2, this.logger = e2, this.authKeys = new fs2(this.core, this.logger), this.pairingTopics = new vs2(this.core, this.logger), this.requests = new qs3(this.core, this.logger);
  }
  async init() {
    await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();
  }
};
var _e5 = class __e extends S {
  constructor(o2) {
    super(o2), this.protocol = Ce5, this.version = xe4, this.name = we5.name, this.events = new import_events5.EventEmitter(), this.on = (t2, s2) => this.events.on(t2, s2), this.once = (t2, s2) => this.events.once(t2, s2), this.off = (t2, s2) => this.events.off(t2, s2), this.removeListener = (t2, s2) => this.events.removeListener(t2, s2), this.removeAllListeners = (t2) => this.events.removeAllListeners(t2), this.connect = async (t2) => {
      try {
        return await this.engine.connect(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.pair = async (t2) => {
      try {
        return await this.engine.pair(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.approve = async (t2) => {
      try {
        return await this.engine.approve(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.reject = async (t2) => {
      try {
        return await this.engine.reject(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.update = async (t2) => {
      try {
        return await this.engine.update(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.extend = async (t2) => {
      try {
        return await this.engine.extend(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.request = async (t2) => {
      try {
        return await this.engine.request(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.respond = async (t2) => {
      try {
        return await this.engine.respond(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.ping = async (t2) => {
      try {
        return await this.engine.ping(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.emit = async (t2) => {
      try {
        return await this.engine.emit(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.disconnect = async (t2) => {
      try {
        return await this.engine.disconnect(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.find = (t2) => {
      try {
        return this.engine.find(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.getPendingSessionRequests = () => {
      try {
        return this.engine.getPendingSessionRequests();
      } catch (t2) {
        throw this.logger.error(t2.message), t2;
      }
    }, this.authenticate = async (t2, s2) => {
      try {
        return await this.engine.authenticate(t2, s2);
      } catch (i4) {
        throw this.logger.error(i4.message), i4;
      }
    }, this.formatAuthMessage = (t2) => {
      try {
        return this.engine.formatAuthMessage(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.approveSessionAuthenticate = async (t2) => {
      try {
        return await this.engine.approveSessionAuthenticate(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.rejectSessionAuthenticate = async (t2) => {
      try {
        return await this.engine.rejectSessionAuthenticate(t2);
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.name = (o2 == null ? void 0 : o2.name) || we5.name, this.metadata = (o2 == null ? void 0 : o2.metadata) || Yr3(), this.signConfig = o2 == null ? void 0 : o2.signConfig;
    const e2 = typeof (o2 == null ? void 0 : o2.logger) < "u" && typeof (o2 == null ? void 0 : o2.logger) != "string" ? o2.logger : (0, import_pino.default)(k({ level: (o2 == null ? void 0 : o2.logger) || we5.logger }));
    this.core = (o2 == null ? void 0 : o2.core) || new Rn4(o2), this.logger = E(e2, this.name), this.session = new wt5(this.core, this.logger), this.proposal = new Ss3(this.core, this.logger), this.pendingRequest = new Is2(this.core, this.logger), this.engine = new Rs2(this), this.auth = new Ts2(this.core, this.logger);
  }
  static async init(o2) {
    const e2 = new __e(o2);
    return await e2.initialize(), e2;
  }
  get context() {
    return y(this.logger);
  }
  get pairing() {
    return this.core.pairing.pairings;
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.auth.init(), await this.engine.init(), this.logger.info("SignClient Initialization Success"), setTimeout(() => {
        this.engine.processRelayMessageCache();
      }, (0, import_time5.toMiliseconds)(import_time5.ONE_SECOND));
    } catch (o2) {
      throw this.logger.info("SignClient Initialization Failure"), this.logger.error(o2.message), o2;
    }
  }
};

// node_modules/@walletconnect/universal-provider/dist/index.es.js
var import_events6 = __toESM(require_events());
var ne3 = "error";
var dt5 = "wss://relay.walletconnect.org";
var lt6 = "wc";
var vt5 = "universal_provider";
var ae4 = `${lt6}@2:${vt5}:`;
var oe4 = "https://rpc.walletconnect.org/v1/";
var w2 = "generic";
var ft5 = `${oe4}bundler`;
var f4 = { DEFAULT_CHAIN_CHANGED: "default_chain_changed" };
var j4 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function mt3() {
  this.__data__ = [], this.size = 0;
}
var gt6 = mt3;
function Pt5(r2, e2) {
  return r2 === e2 || r2 !== r2 && e2 !== e2;
}
var S2 = Pt5;
var $t4 = S2;
function bt4(r2, e2) {
  for (var t2 = r2.length; t2--; ) if ($t4(r2[t2][0], e2)) return t2;
  return -1;
}
var N3 = bt4;
var wt6 = N3;
var _t5 = Array.prototype;
var Ct4 = _t5.splice;
function yt6(r2) {
  var e2 = this.__data__, t2 = wt6(e2, r2);
  if (t2 < 0) return false;
  var s2 = e2.length - 1;
  return t2 == s2 ? e2.pop() : Ct4.call(e2, t2, 1), --this.size, true;
}
var It5 = yt6;
var Ot5 = N3;
function At3(r2) {
  var e2 = this.__data__, t2 = Ot5(e2, r2);
  return t2 < 0 ? void 0 : e2[t2][1];
}
var Ht4 = At3;
var Et5 = N3;
function jt4(r2) {
  return Et5(this.__data__, r2) > -1;
}
var St5 = jt4;
var Nt5 = N3;
function Tt5(r2, e2) {
  var t2 = this.__data__, s2 = Nt5(t2, r2);
  return s2 < 0 ? (++this.size, t2.push([r2, e2])) : t2[s2][1] = e2, this;
}
var Dt4 = Tt5;
var qt4 = gt6;
var Rt5 = It5;
var xt5 = Ht4;
var Lt5 = St5;
var Ut5 = Dt4;
function _2(r2) {
  var e2 = -1, t2 = r2 == null ? 0 : r2.length;
  for (this.clear(); ++e2 < t2; ) {
    var s2 = r2[e2];
    this.set(s2[0], s2[1]);
  }
}
_2.prototype.clear = qt4, _2.prototype.delete = Rt5, _2.prototype.get = xt5, _2.prototype.has = Lt5, _2.prototype.set = Ut5;
var T2 = _2;
var Mt4 = T2;
function Ft5() {
  this.__data__ = new Mt4(), this.size = 0;
}
var Gt5 = Ft5;
function zt5(r2) {
  var e2 = this.__data__, t2 = e2.delete(r2);
  return this.size = e2.size, t2;
}
var kt5 = zt5;
function Bt5(r2) {
  return this.__data__.get(r2);
}
var Vt3 = Bt5;
function Jt4(r2) {
  return this.__data__.has(r2);
}
var Kt3 = Jt4;
var Xt4 = typeof j4 == "object" && j4 && j4.Object === Object && j4;
var ce3 = Xt4;
var Wt4 = ce3;
var Yt4 = typeof self == "object" && self && self.Object === Object && self;
var Zt3 = Wt4 || Yt4 || Function("return this")();
var C4 = Zt3;
var Qt4 = C4;
var er5 = Qt4.Symbol;
var he4 = er5;
var pe3 = he4;
var ue2 = Object.prototype;
var tr5 = ue2.hasOwnProperty;
var rr5 = ue2.toString;
var H5 = pe3 ? pe3.toStringTag : void 0;
function sr5(r2) {
  var e2 = tr5.call(r2, H5), t2 = r2[H5];
  try {
    r2[H5] = void 0;
    var s2 = true;
  } catch {
  }
  var i4 = rr5.call(r2);
  return s2 && (e2 ? r2[H5] = t2 : delete r2[H5]), i4;
}
var ir5 = sr5;
var nr5 = Object.prototype;
var ar5 = nr5.toString;
function or5(r2) {
  return ar5.call(r2);
}
var cr5 = or5;
var de4 = he4;
var hr5 = ir5;
var pr5 = cr5;
var ur4 = "[object Null]";
var dr5 = "[object Undefined]";
var le4 = de4 ? de4.toStringTag : void 0;
function lr5(r2) {
  return r2 == null ? r2 === void 0 ? dr5 : ur4 : le4 && le4 in Object(r2) ? hr5(r2) : pr5(r2);
}
var D2 = lr5;
function vr5(r2) {
  var e2 = typeof r2;
  return r2 != null && (e2 == "object" || e2 == "function");
}
var $2 = vr5;
var fr4 = D2;
var mr5 = $2;
var gr5 = "[object AsyncFunction]";
var Pr4 = "[object Function]";
var $r5 = "[object GeneratorFunction]";
var br5 = "[object Proxy]";
function wr5(r2) {
  if (!mr5(r2)) return false;
  var e2 = fr4(r2);
  return e2 == Pr4 || e2 == $r5 || e2 == gr5 || e2 == br5;
}
var z4 = wr5;
var _r5 = C4;
var Cr4 = _r5["__core-js_shared__"];
var yr5 = Cr4;
var k5 = yr5;
var ve5 = function() {
  var r2 = /[^.]+$/.exec(k5 && k5.keys && k5.keys.IE_PROTO || "");
  return r2 ? "Symbol(src)_1." + r2 : "";
}();
function Ir5(r2) {
  return !!ve5 && ve5 in r2;
}
var Or5 = Ir5;
var Ar5 = Function.prototype;
var Hr4 = Ar5.toString;
function Er5(r2) {
  if (r2 != null) {
    try {
      return Hr4.call(r2);
    } catch {
    }
    try {
      return r2 + "";
    } catch {
    }
  }
  return "";
}
var jr4 = Er5;
var Sr5 = z4;
var Nr5 = Or5;
var Tr5 = $2;
var Dr4 = jr4;
var qr4 = /[\\^$.*+?()[\]{}|]/g;
var Rr5 = /^\[object .+?Constructor\]$/;
var xr5 = Function.prototype;
var Lr5 = Object.prototype;
var Ur5 = xr5.toString;
var Mr4 = Lr5.hasOwnProperty;
var Fr4 = RegExp("^" + Ur5.call(Mr4).replace(qr4, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
function Gr4(r2) {
  if (!Tr5(r2) || Nr5(r2)) return false;
  var e2 = Sr5(r2) ? Fr4 : Rr5;
  return e2.test(Dr4(r2));
}
var zr5 = Gr4;
function kr5(r2, e2) {
  return r2 == null ? void 0 : r2[e2];
}
var Br5 = kr5;
var Vr4 = zr5;
var Jr5 = Br5;
function Kr4(r2, e2) {
  var t2 = Jr5(r2, e2);
  return Vr4(t2) ? t2 : void 0;
}
var B2 = Kr4;
var Xr4 = B2;
var Wr5 = C4;
var Yr5 = Xr4(Wr5, "Map");
var fe5 = Yr5;
var Zr5 = B2;
var Qr4 = Zr5(Object, "create");
var q2 = Qr4;
var me6 = q2;
function es() {
  this.__data__ = me6 ? me6(null) : {}, this.size = 0;
}
var ts2 = es;
function rs2(r2) {
  var e2 = this.has(r2) && delete this.__data__[r2];
  return this.size -= e2 ? 1 : 0, e2;
}
var ss3 = rs2;
var is4 = q2;
var ns2 = "__lodash_hash_undefined__";
var as2 = Object.prototype;
var os2 = as2.hasOwnProperty;
function cs2(r2) {
  var e2 = this.__data__;
  if (is4) {
    var t2 = e2[r2];
    return t2 === ns2 ? void 0 : t2;
  }
  return os2.call(e2, r2) ? e2[r2] : void 0;
}
var hs2 = cs2;
var ps2 = q2;
var us2 = Object.prototype;
var ds2 = us2.hasOwnProperty;
function ls2(r2) {
  var e2 = this.__data__;
  return ps2 ? e2[r2] !== void 0 : ds2.call(e2, r2);
}
var vs3 = ls2;
var fs3 = q2;
var ms3 = "__lodash_hash_undefined__";
function gs2(r2, e2) {
  var t2 = this.__data__;
  return this.size += this.has(r2) ? 0 : 1, t2[r2] = fs3 && e2 === void 0 ? ms3 : e2, this;
}
var Ps2 = gs2;
var $s3 = ts2;
var bs2 = ss3;
var ws3 = hs2;
var _s4 = vs3;
var Cs2 = Ps2;
function y4(r2) {
  var e2 = -1, t2 = r2 == null ? 0 : r2.length;
  for (this.clear(); ++e2 < t2; ) {
    var s2 = r2[e2];
    this.set(s2[0], s2[1]);
  }
}
y4.prototype.clear = $s3, y4.prototype.delete = bs2, y4.prototype.get = ws3, y4.prototype.has = _s4, y4.prototype.set = Cs2;
var ys3 = y4;
var ge3 = ys3;
var Is3 = T2;
var Os3 = fe5;
function As3() {
  this.size = 0, this.__data__ = { hash: new ge3(), map: new (Os3 || Is3)(), string: new ge3() };
}
var Hs3 = As3;
function Es4(r2) {
  var e2 = typeof r2;
  return e2 == "string" || e2 == "number" || e2 == "symbol" || e2 == "boolean" ? r2 !== "__proto__" : r2 === null;
}
var js3 = Es4;
var Ss4 = js3;
function Ns3(r2, e2) {
  var t2 = r2.__data__;
  return Ss4(e2) ? t2[typeof e2 == "string" ? "string" : "hash"] : t2.map;
}
var R2 = Ns3;
var Ts3 = R2;
function Ds2(r2) {
  var e2 = Ts3(this, r2).delete(r2);
  return this.size -= e2 ? 1 : 0, e2;
}
var qs4 = Ds2;
var Rs3 = R2;
function xs3(r2) {
  return Rs3(this, r2).get(r2);
}
var Ls3 = xs3;
var Us3 = R2;
function Ms3(r2) {
  return Us3(this, r2).has(r2);
}
var Fs3 = Ms3;
var Gs3 = R2;
function zs3(r2, e2) {
  var t2 = Gs3(this, r2), s2 = t2.size;
  return t2.set(r2, e2), this.size += t2.size == s2 ? 0 : 1, this;
}
var ks3 = zs3;
var Bs3 = Hs3;
var Vs3 = qs4;
var Js3 = Ls3;
var Ks3 = Fs3;
var Xs3 = ks3;
function I2(r2) {
  var e2 = -1, t2 = r2 == null ? 0 : r2.length;
  for (this.clear(); ++e2 < t2; ) {
    var s2 = r2[e2];
    this.set(s2[0], s2[1]);
  }
}
I2.prototype.clear = Bs3, I2.prototype.delete = Vs3, I2.prototype.get = Js3, I2.prototype.has = Ks3, I2.prototype.set = Xs3;
var Ws3 = I2;
var Ys3 = T2;
var Zs3 = fe5;
var Qs3 = Ws3;
var ei3 = 200;
function ti3(r2, e2) {
  var t2 = this.__data__;
  if (t2 instanceof Ys3) {
    var s2 = t2.__data__;
    if (!Zs3 || s2.length < ei3 - 1) return s2.push([r2, e2]), this.size = ++t2.size, this;
    t2 = this.__data__ = new Qs3(s2);
  }
  return t2.set(r2, e2), this.size = t2.size, this;
}
var ri3 = ti3;
var si3 = T2;
var ii3 = Gt5;
var ni3 = kt5;
var ai3 = Vt3;
var oi3 = Kt3;
var ci3 = ri3;
function O(r2) {
  var e2 = this.__data__ = new si3(r2);
  this.size = e2.size;
}
O.prototype.clear = ii3, O.prototype.delete = ni3, O.prototype.get = ai3, O.prototype.has = oi3, O.prototype.set = ci3;
var hi3 = O;
var pi3 = B2;
var ui3 = function() {
  try {
    var r2 = pi3(Object, "defineProperty");
    return r2({}, "", {}), r2;
  } catch {
  }
}();
var Pe5 = ui3;
var $e4 = Pe5;
function di3(r2, e2, t2) {
  e2 == "__proto__" && $e4 ? $e4(r2, e2, { configurable: true, enumerable: true, value: t2, writable: true }) : r2[e2] = t2;
}
var V3 = di3;
var li3 = V3;
var vi2 = S2;
function fi3(r2, e2, t2) {
  (t2 !== void 0 && !vi2(r2[e2], t2) || t2 === void 0 && !(e2 in r2)) && li3(r2, e2, t2);
}
var be5 = fi3;
function mi3(r2) {
  return function(e2, t2, s2) {
    for (var i4 = -1, n2 = Object(e2), a2 = s2(e2), o2 = a2.length; o2--; ) {
      var c3 = a2[r2 ? o2 : ++i4];
      if (t2(n2[c3], c3, n2) === false) break;
    }
    return e2;
  };
}
var gi3 = mi3;
var Pi2 = gi3;
var $i2 = Pi2();
var bi3 = $i2;
var J5 = { exports: {} };
(function(r2, e2) {
  var t2 = C4, s2 = e2 && !e2.nodeType && e2, i4 = s2 && true && r2 && !r2.nodeType && r2, n2 = i4 && i4.exports === s2, a2 = n2 ? t2.Buffer : void 0, o2 = a2 ? a2.allocUnsafe : void 0;
  function c3(u3, d4) {
    if (d4) return u3.slice();
    var g3 = u3.length, l3 = o2 ? o2(g3) : new u3.constructor(g3);
    return u3.copy(l3), l3;
  }
  r2.exports = c3;
})(J5, J5.exports);
var wi2 = C4;
var _i2 = wi2.Uint8Array;
var Ci2 = _i2;
var we6 = Ci2;
function yi3(r2) {
  var e2 = new r2.constructor(r2.byteLength);
  return new we6(e2).set(new we6(r2)), e2;
}
var Ii = yi3;
var Oi = Ii;
function Ai(r2, e2) {
  var t2 = e2 ? Oi(r2.buffer) : r2.buffer;
  return new r2.constructor(t2, r2.byteOffset, r2.length);
}
var Hi2 = Ai;
function Ei3(r2, e2) {
  var t2 = -1, s2 = r2.length;
  for (e2 || (e2 = Array(s2)); ++t2 < s2; ) e2[t2] = r2[t2];
  return e2;
}
var ji2 = Ei3;
var Si = $2;
var _e6 = Object.create;
var Ni = /* @__PURE__ */ function() {
  function r2() {
  }
  return function(e2) {
    if (!Si(e2)) return {};
    if (_e6) return _e6(e2);
    r2.prototype = e2;
    var t2 = new r2();
    return r2.prototype = void 0, t2;
  };
}();
var Ti2 = Ni;
function Di3(r2, e2) {
  return function(t2) {
    return r2(e2(t2));
  };
}
var qi2 = Di3;
var Ri2 = qi2;
var xi = Ri2(Object.getPrototypeOf, Object);
var Ce6 = xi;
var Li2 = Object.prototype;
function Ui2(r2) {
  var e2 = r2 && r2.constructor, t2 = typeof e2 == "function" && e2.prototype || Li2;
  return r2 === t2;
}
var ye5 = Ui2;
var Mi2 = Ti2;
var Fi3 = Ce6;
var Gi2 = ye5;
function zi2(r2) {
  return typeof r2.constructor == "function" && !Gi2(r2) ? Mi2(Fi3(r2)) : {};
}
var ki2 = zi2;
function Bi2(r2) {
  return r2 != null && typeof r2 == "object";
}
var E3 = Bi2;
var Vi2 = D2;
var Ji2 = E3;
var Ki2 = "[object Arguments]";
function Xi2(r2) {
  return Ji2(r2) && Vi2(r2) == Ki2;
}
var Wi2 = Xi2;
var Ie5 = Wi2;
var Yi2 = E3;
var Oe3 = Object.prototype;
var Zi2 = Oe3.hasOwnProperty;
var Qi = Oe3.propertyIsEnumerable;
var en4 = Ie5(/* @__PURE__ */ function() {
  return arguments;
}()) ? Ie5 : function(r2) {
  return Yi2(r2) && Zi2.call(r2, "callee") && !Qi.call(r2, "callee");
};
var Ae4 = en4;
var tn3 = Array.isArray;
var He4 = tn3;
var rn4 = 9007199254740991;
function sn5(r2) {
  return typeof r2 == "number" && r2 > -1 && r2 % 1 == 0 && r2 <= rn4;
}
var Ee5 = sn5;
var nn5 = z4;
var an3 = Ee5;
function on4(r2) {
  return r2 != null && an3(r2.length) && !nn5(r2);
}
var K4 = on4;
var cn3 = K4;
var hn3 = E3;
function pn3(r2) {
  return hn3(r2) && cn3(r2);
}
var un3 = pn3;
var x6 = { exports: {} };
function dn3() {
  return false;
}
var ln3 = dn3;
(function(r2, e2) {
  var t2 = C4, s2 = ln3, i4 = e2 && !e2.nodeType && e2, n2 = i4 && true && r2 && !r2.nodeType && r2, a2 = n2 && n2.exports === i4, o2 = a2 ? t2.Buffer : void 0, c3 = o2 ? o2.isBuffer : void 0, u3 = c3 || s2;
  r2.exports = u3;
})(x6, x6.exports);
var vn5 = D2;
var fn3 = Ce6;
var mn5 = E3;
var gn5 = "[object Object]";
var Pn4 = Function.prototype;
var $n3 = Object.prototype;
var je4 = Pn4.toString;
var bn5 = $n3.hasOwnProperty;
var wn3 = je4.call(Object);
function _n5(r2) {
  if (!mn5(r2) || vn5(r2) != gn5) return false;
  var e2 = fn3(r2);
  if (e2 === null) return true;
  var t2 = bn5.call(e2, "constructor") && e2.constructor;
  return typeof t2 == "function" && t2 instanceof t2 && je4.call(t2) == wn3;
}
var Cn5 = _n5;
var yn5 = D2;
var In5 = Ee5;
var On4 = E3;
var An3 = "[object Arguments]";
var Hn4 = "[object Array]";
var En5 = "[object Boolean]";
var jn4 = "[object Date]";
var Sn4 = "[object Error]";
var Nn3 = "[object Function]";
var Tn5 = "[object Map]";
var Dn3 = "[object Number]";
var qn4 = "[object Object]";
var Rn5 = "[object RegExp]";
var xn4 = "[object Set]";
var Ln4 = "[object String]";
var Un4 = "[object WeakMap]";
var Mn4 = "[object ArrayBuffer]";
var Fn4 = "[object DataView]";
var Gn4 = "[object Float32Array]";
var zn4 = "[object Float64Array]";
var kn4 = "[object Int8Array]";
var Bn4 = "[object Int16Array]";
var Vn4 = "[object Int32Array]";
var Jn4 = "[object Uint8Array]";
var Kn4 = "[object Uint8ClampedArray]";
var Xn4 = "[object Uint16Array]";
var Wn4 = "[object Uint32Array]";
var p2 = {};
p2[Gn4] = p2[zn4] = p2[kn4] = p2[Bn4] = p2[Vn4] = p2[Jn4] = p2[Kn4] = p2[Xn4] = p2[Wn4] = true, p2[An3] = p2[Hn4] = p2[Mn4] = p2[En5] = p2[Fn4] = p2[jn4] = p2[Sn4] = p2[Nn3] = p2[Tn5] = p2[Dn3] = p2[qn4] = p2[Rn5] = p2[xn4] = p2[Ln4] = p2[Un4] = false;
function Yn4(r2) {
  return On4(r2) && In5(r2.length) && !!p2[yn5(r2)];
}
var Zn4 = Yn4;
function Qn4(r2) {
  return function(e2) {
    return r2(e2);
  };
}
var ea = Qn4;
var X2 = { exports: {} };
(function(r2, e2) {
  var t2 = ce3, s2 = e2 && !e2.nodeType && e2, i4 = s2 && true && r2 && !r2.nodeType && r2, n2 = i4 && i4.exports === s2, a2 = n2 && t2.process, o2 = function() {
    try {
      var c3 = i4 && i4.require && i4.require("util").types;
      return c3 || a2 && a2.binding && a2.binding("util");
    } catch {
    }
  }();
  r2.exports = o2;
})(X2, X2.exports);
var ta = Zn4;
var ra = ea;
var Se4 = X2.exports;
var Ne3 = Se4 && Se4.isTypedArray;
var sa = Ne3 ? ra(Ne3) : ta;
var Te5 = sa;
function ia(r2, e2) {
  if (!(e2 === "constructor" && typeof r2[e2] == "function") && e2 != "__proto__") return r2[e2];
}
var De6 = ia;
var na = V3;
var aa = S2;
var oa = Object.prototype;
var ca = oa.hasOwnProperty;
function ha(r2, e2, t2) {
  var s2 = r2[e2];
  (!(ca.call(r2, e2) && aa(s2, t2)) || t2 === void 0 && !(e2 in r2)) && na(r2, e2, t2);
}
var pa = ha;
var ua = pa;
var da = V3;
function la(r2, e2, t2, s2) {
  var i4 = !t2;
  t2 || (t2 = {});
  for (var n2 = -1, a2 = e2.length; ++n2 < a2; ) {
    var o2 = e2[n2], c3 = s2 ? s2(t2[o2], r2[o2], o2, t2, r2) : void 0;
    c3 === void 0 && (c3 = r2[o2]), i4 ? da(t2, o2, c3) : ua(t2, o2, c3);
  }
  return t2;
}
var va = la;
function fa(r2, e2) {
  for (var t2 = -1, s2 = Array(r2); ++t2 < r2; ) s2[t2] = e2(t2);
  return s2;
}
var ma = fa;
var ga = 9007199254740991;
var Pa = /^(?:0|[1-9]\d*)$/;
function $a(r2, e2) {
  var t2 = typeof r2;
  return e2 = e2 ?? ga, !!e2 && (t2 == "number" || t2 != "symbol" && Pa.test(r2)) && r2 > -1 && r2 % 1 == 0 && r2 < e2;
}
var qe4 = $a;
var ba = ma;
var wa = Ae4;
var _a6 = He4;
var Ca = x6.exports;
var ya = qe4;
var Ia = Te5;
var Oa = Object.prototype;
var Aa = Oa.hasOwnProperty;
function Ha(r2, e2) {
  var t2 = _a6(r2), s2 = !t2 && wa(r2), i4 = !t2 && !s2 && Ca(r2), n2 = !t2 && !s2 && !i4 && Ia(r2), a2 = t2 || s2 || i4 || n2, o2 = a2 ? ba(r2.length, String) : [], c3 = o2.length;
  for (var u3 in r2) (e2 || Aa.call(r2, u3)) && !(a2 && (u3 == "length" || i4 && (u3 == "offset" || u3 == "parent") || n2 && (u3 == "buffer" || u3 == "byteLength" || u3 == "byteOffset") || ya(u3, c3))) && o2.push(u3);
  return o2;
}
var Ea = Ha;
function ja(r2) {
  var e2 = [];
  if (r2 != null) for (var t2 in Object(r2)) e2.push(t2);
  return e2;
}
var Sa = ja;
var Na = $2;
var Ta = ye5;
var Da = Sa;
var qa = Object.prototype;
var Ra = qa.hasOwnProperty;
function xa(r2) {
  if (!Na(r2)) return Da(r2);
  var e2 = Ta(r2), t2 = [];
  for (var s2 in r2) s2 == "constructor" && (e2 || !Ra.call(r2, s2)) || t2.push(s2);
  return t2;
}
var La = xa;
var Ua = Ea;
var Ma = La;
var Fa = K4;
function Ga(r2) {
  return Fa(r2) ? Ua(r2, true) : Ma(r2);
}
var Re4 = Ga;
var za = va;
var ka = Re4;
function Ba(r2) {
  return za(r2, ka(r2));
}
var Va = Ba;
var xe5 = be5;
var Ja = J5.exports;
var Ka = Hi2;
var Xa = ji2;
var Wa = ki2;
var Le5 = Ae4;
var Ue4 = He4;
var Ya = un3;
var Za = x6.exports;
var Qa = z4;
var eo3 = $2;
var to3 = Cn5;
var ro4 = Te5;
var Me4 = De6;
var so3 = Va;
function io3(r2, e2, t2, s2, i4, n2, a2) {
  var o2 = Me4(r2, t2), c3 = Me4(e2, t2), u3 = a2.get(c3);
  if (u3) {
    xe5(r2, t2, u3);
    return;
  }
  var d4 = n2 ? n2(o2, c3, t2 + "", r2, e2, a2) : void 0, g3 = d4 === void 0;
  if (g3) {
    var l3 = Ue4(c3), F3 = !l3 && Za(c3), ee2 = !l3 && !F3 && ro4(c3);
    d4 = c3, l3 || F3 || ee2 ? Ue4(o2) ? d4 = o2 : Ya(o2) ? d4 = Xa(o2) : F3 ? (g3 = false, d4 = Ja(c3, true)) : ee2 ? (g3 = false, d4 = Ka(c3, true)) : d4 = [] : to3(c3) || Le5(c3) ? (d4 = o2, Le5(o2) ? d4 = so3(o2) : (!eo3(o2) || Qa(o2)) && (d4 = Wa(c3))) : g3 = false;
  }
  g3 && (a2.set(c3, d4), i4(d4, c3, s2, n2, a2), a2.delete(c3)), xe5(r2, t2, d4);
}
var no4 = io3;
var ao4 = hi3;
var oo3 = be5;
var co4 = bi3;
var ho4 = no4;
var po4 = $2;
var uo4 = Re4;
var lo4 = De6;
function Fe3(r2, e2, t2, s2, i4) {
  r2 !== e2 && co4(e2, function(n2, a2) {
    if (i4 || (i4 = new ao4()), po4(n2)) ho4(r2, e2, a2, t2, Fe3, s2, i4);
    else {
      var o2 = s2 ? s2(lo4(r2, a2), n2, a2 + "", r2, e2, i4) : void 0;
      o2 === void 0 && (o2 = n2), oo3(r2, a2, o2);
    }
  }, uo4);
}
var vo4 = Fe3;
function fo4(r2) {
  return r2;
}
var Ge4 = fo4;
function mo4(r2, e2, t2) {
  switch (t2.length) {
    case 0:
      return r2.call(e2);
    case 1:
      return r2.call(e2, t2[0]);
    case 2:
      return r2.call(e2, t2[0], t2[1]);
    case 3:
      return r2.call(e2, t2[0], t2[1], t2[2]);
  }
  return r2.apply(e2, t2);
}
var go4 = mo4;
var Po3 = go4;
var ze5 = Math.max;
function $o4(r2, e2, t2) {
  return e2 = ze5(e2 === void 0 ? r2.length - 1 : e2, 0), function() {
    for (var s2 = arguments, i4 = -1, n2 = ze5(s2.length - e2, 0), a2 = Array(n2); ++i4 < n2; ) a2[i4] = s2[e2 + i4];
    i4 = -1;
    for (var o2 = Array(e2 + 1); ++i4 < e2; ) o2[i4] = s2[i4];
    return o2[e2] = t2(a2), Po3(r2, this, o2);
  };
}
var bo4 = $o4;
function wo4(r2) {
  return function() {
    return r2;
  };
}
var _o4 = wo4;
var Co4 = _o4;
var ke4 = Pe5;
var yo4 = Ge4;
var Io4 = ke4 ? function(r2, e2) {
  return ke4(r2, "toString", { configurable: true, enumerable: false, value: Co4(e2), writable: true });
} : yo4;
var Oo4 = Io4;
var Ao4 = 800;
var Ho4 = 16;
var Eo4 = Date.now;
function jo4(r2) {
  var e2 = 0, t2 = 0;
  return function() {
    var s2 = Eo4(), i4 = Ho4 - (s2 - t2);
    if (t2 = s2, i4 > 0) {
      if (++e2 >= Ao4) return arguments[0];
    } else e2 = 0;
    return r2.apply(void 0, arguments);
  };
}
var So4 = jo4;
var No4 = Oo4;
var To4 = So4;
var Do4 = To4(No4);
var qo4 = Do4;
var Ro4 = Ge4;
var xo4 = bo4;
var Lo4 = qo4;
function Uo4(r2, e2) {
  return Lo4(xo4(r2, e2, Ro4), r2 + "");
}
var Mo4 = Uo4;
var Fo4 = S2;
var Go4 = K4;
var zo4 = qe4;
var ko4 = $2;
function Bo4(r2, e2, t2) {
  if (!ko4(t2)) return false;
  var s2 = typeof e2;
  return (s2 == "number" ? Go4(t2) && zo4(e2, t2.length) : s2 == "string" && e2 in t2) ? Fo4(t2[e2], r2) : false;
}
var Vo4 = Bo4;
var Jo4 = Mo4;
var Ko4 = Vo4;
function Xo(r2) {
  return Jo4(function(e2, t2) {
    var s2 = -1, i4 = t2.length, n2 = i4 > 1 ? t2[i4 - 1] : void 0, a2 = i4 > 2 ? t2[2] : void 0;
    for (n2 = r2.length > 3 && typeof n2 == "function" ? (i4--, n2) : void 0, a2 && Ko4(t2[0], t2[1], a2) && (n2 = i4 < 3 ? void 0 : n2, i4 = 1), e2 = Object(e2); ++s2 < i4; ) {
      var o2 = t2[s2];
      o2 && r2(e2, o2, s2, n2);
    }
    return e2;
  });
}
var Wo4 = Xo;
var Yo4 = vo4;
var Zo3 = Wo4;
var Qo2 = Zo3(function(r2, e2, t2) {
  Yo4(r2, e2, t2);
});
var ec2 = Qo2;
var tc = Object.defineProperty;
var rc = Object.defineProperties;
var sc = Object.getOwnPropertyDescriptors;
var Be3 = Object.getOwnPropertySymbols;
var ic = Object.prototype.hasOwnProperty;
var nc = Object.prototype.propertyIsEnumerable;
var Ve4 = (r2, e2, t2) => e2 in r2 ? tc(r2, e2, { enumerable: true, configurable: true, writable: true, value: t2 }) : r2[e2] = t2;
var L2 = (r2, e2) => {
  for (var t2 in e2 || (e2 = {})) ic.call(e2, t2) && Ve4(r2, t2, e2[t2]);
  if (Be3) for (var t2 of Be3(e2)) nc.call(e2, t2) && Ve4(r2, t2, e2[t2]);
  return r2;
};
var ac = (r2, e2) => rc(r2, sc(e2));
function v5(r2, e2, t2) {
  var s2;
  const i4 = Ye3(r2);
  return ((s2 = e2.rpcMap) == null ? void 0 : s2[i4.reference]) || `${oe4}?chainId=${i4.namespace}:${i4.reference}&projectId=${t2}`;
}
function b2(r2) {
  return r2.includes(":") ? r2.split(":")[1] : r2;
}
function Je3(r2) {
  return r2.map((e2) => `${e2.split(":")[0]}:${e2.split(":")[1]}`);
}
function oc(r2, e2) {
  const t2 = Object.keys(e2.namespaces).filter((i4) => i4.includes(r2));
  if (!t2.length) return [];
  const s2 = [];
  return t2.forEach((i4) => {
    const n2 = e2.namespaces[i4].accounts;
    s2.push(...n2);
  }), s2;
}
function W4(r2 = {}, e2 = {}) {
  const t2 = Ke4(r2), s2 = Ke4(e2);
  return ec2(t2, s2);
}
function Ke4(r2) {
  var e2, t2, s2, i4;
  const n2 = {};
  if (!qe3(r2)) return n2;
  for (const [a2, o2] of Object.entries(r2)) {
    const c3 = Tt3(a2) ? [a2] : o2.chains, u3 = o2.methods || [], d4 = o2.events || [], g3 = o2.rpcMap || {}, l3 = pr3(a2);
    n2[l3] = ac(L2(L2({}, n2[l3]), o2), { chains: Q3(c3, (e2 = n2[l3]) == null ? void 0 : e2.chains), methods: Q3(u3, (t2 = n2[l3]) == null ? void 0 : t2.methods), events: Q3(d4, (s2 = n2[l3]) == null ? void 0 : s2.events), rpcMap: L2(L2({}, g3), (i4 = n2[l3]) == null ? void 0 : i4.rpcMap) });
  }
  return n2;
}
function cc(r2) {
  return r2.includes(":") ? r2.split(":")[2] : r2;
}
function Xe4(r2) {
  const e2 = {};
  for (const [t2, s2] of Object.entries(r2)) {
    const i4 = s2.methods || [], n2 = s2.events || [], a2 = s2.accounts || [], o2 = Tt3(t2) ? [t2] : s2.chains ? s2.chains : Je3(s2.accounts);
    e2[t2] = { chains: o2, methods: i4, events: n2, accounts: a2 };
  }
  return e2;
}
function Y2(r2) {
  return typeof r2 == "number" ? r2 : r2.includes("0x") ? parseInt(r2, 16) : (r2 = r2.includes(":") ? r2.split(":")[1] : r2, isNaN(Number(r2)) ? r2 : Number(r2));
}
var We5 = {};
var h5 = (r2) => We5[r2];
var Z2 = (r2, e2) => {
  We5[r2] = e2;
};
var hc = class {
  constructor(e2) {
    this.name = "polkadot", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  setDefaultChain(e2, t2) {
    this.httpProviders[e2] || this.setHttpProvider(e2, t2), this.chainId = e2, this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${e2}`);
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]) || [] : [];
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      var s2;
      const i4 = b2(t2);
      e2[i4] = this.createHttpProvider(i4, (s2 = this.namespace.rpcMap) == null ? void 0 : s2[t2]);
    }), e2;
  }
  getHttpProvider() {
    const e2 = `${this.name}:${this.chainId}`, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(e2, this.namespace, this.client.core.projectId);
    if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
    return new o(new f(s2, h5("disableProviderPing")));
  }
};
var pc = Object.defineProperty;
var uc = Object.defineProperties;
var dc = Object.getOwnPropertyDescriptors;
var Ye4 = Object.getOwnPropertySymbols;
var lc = Object.prototype.hasOwnProperty;
var vc = Object.prototype.propertyIsEnumerable;
var Ze4 = (r2, e2, t2) => e2 in r2 ? pc(r2, e2, { enumerable: true, configurable: true, writable: true, value: t2 }) : r2[e2] = t2;
var Qe4 = (r2, e2) => {
  for (var t2 in e2 || (e2 = {})) lc.call(e2, t2) && Ze4(r2, t2, e2[t2]);
  if (Ye4) for (var t2 of Ye4(e2)) vc.call(e2, t2) && Ze4(r2, t2, e2[t2]);
  return r2;
};
var et3 = (r2, e2) => uc(r2, dc(e2));
var fc = class {
  constructor(e2) {
    this.name = "eip155", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());
  }
  async request(e2) {
    switch (e2.request.method) {
      case "eth_requestAccounts":
        return this.getAccounts();
      case "eth_accounts":
        return this.getAccounts();
      case "wallet_switchEthereumChain":
        return await this.handleSwitchChain(e2);
      case "eth_chainId":
        return parseInt(this.getDefaultChain());
      case "wallet_getCapabilities":
        return await this.getCapabilities(e2);
      case "wallet_getCallsStatus":
        return await this.getCallStatus(e2);
    }
    return this.namespace.methods.includes(e2.request.method) ? await this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  setDefaultChain(e2, t2) {
    this.httpProviders[e2] || this.setHttpProvider(parseInt(e2), t2), this.chainId = parseInt(e2), this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${e2}`);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId.toString();
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(`${this.name}:${e2}`, this.namespace, this.client.core.projectId);
    if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
    return new o(new f(s2, h5("disableProviderPing")));
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      var s2;
      const i4 = parseInt(b2(t2));
      e2[i4] = this.createHttpProvider(i4, (s2 = this.namespace.rpcMap) == null ? void 0 : s2[t2]);
    }), e2;
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? [...new Set(e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]))] : [];
  }
  getHttpProvider() {
    const e2 = this.chainId, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  async handleSwitchChain(e2) {
    var t2, s2;
    let i4 = e2.request.params ? (t2 = e2.request.params[0]) == null ? void 0 : t2.chainId : "0x0";
    i4 = i4.startsWith("0x") ? i4 : `0x${i4}`;
    const n2 = parseInt(i4, 16);
    if (this.isChainApproved(n2)) this.setDefaultChain(`${n2}`);
    else if (this.namespace.methods.includes("wallet_switchEthereumChain")) await this.client.request({ topic: e2.topic, request: { method: e2.request.method, params: [{ chainId: i4 }] }, chainId: (s2 = this.namespace.chains) == null ? void 0 : s2[0] }), this.setDefaultChain(`${n2}`);
    else throw new Error(`Failed to switch to chain 'eip155:${n2}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);
    return null;
  }
  isChainApproved(e2) {
    return this.namespace.chains.includes(`${this.name}:${e2}`);
  }
  async getCapabilities(e2) {
    var t2, s2, i4;
    const n2 = (s2 = (t2 = e2.request) == null ? void 0 : t2.params) == null ? void 0 : s2[0];
    if (!n2) throw new Error("Missing address parameter in `wallet_getCapabilities` request");
    const a2 = this.client.session.get(e2.topic), o2 = ((i4 = a2 == null ? void 0 : a2.sessionProperties) == null ? void 0 : i4.capabilities) || {};
    if (o2 != null && o2[n2]) return o2 == null ? void 0 : o2[n2];
    const c3 = await this.client.request(e2);
    try {
      await this.client.session.update(e2.topic, { sessionProperties: et3(Qe4({}, a2.sessionProperties || {}), { capabilities: et3(Qe4({}, o2 || {}), { [n2]: c3 }) }) });
    } catch (u3) {
      console.warn("Failed to update session with capabilities", u3);
    }
    return c3;
  }
  async getCallStatus(e2) {
    var t2, s2;
    const i4 = this.client.session.get(e2.topic), n2 = (t2 = i4.sessionProperties) == null ? void 0 : t2.bundler_name;
    if (n2) {
      const o2 = this.getBundlerUrl(e2.chainId, n2);
      try {
        return await this.getUserOperationReceipt(o2, e2);
      } catch (c3) {
        console.warn("Failed to fetch call status from bundler", c3, o2);
      }
    }
    const a2 = (s2 = i4.sessionProperties) == null ? void 0 : s2.bundler_url;
    if (a2) try {
      return await this.getUserOperationReceipt(a2, e2);
    } catch (o2) {
      console.warn("Failed to fetch call status from custom bundler", o2, a2);
    }
    if (this.namespace.methods.includes(e2.request.method)) return await this.client.request(e2);
    throw new Error("Fetching call status not approved by the wallet.");
  }
  async getUserOperationReceipt(e2, t2) {
    var s2;
    const i4 = new URL(e2), n2 = await fetch(i4, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(formatJsonRpcRequest("eth_getUserOperationReceipt", [(s2 = t2.request.params) == null ? void 0 : s2[0]])) });
    if (!n2.ok) throw new Error(`Failed to fetch user operation receipt - ${n2.status}`);
    return await n2.json();
  }
  getBundlerUrl(e2, t2) {
    return `${ft5}?projectId=${this.client.core.projectId}&chainId=${e2}&bundler=${t2}`;
  }
};
var mc = class {
  constructor(e2) {
    this.name = "solana", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  setDefaultChain(e2, t2) {
    this.httpProviders[e2] || this.setHttpProvider(e2, t2), this.chainId = e2, this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${e2}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? [...new Set(e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      var s2;
      const i4 = b2(t2);
      e2[i4] = this.createHttpProvider(i4, (s2 = this.namespace.rpcMap) == null ? void 0 : s2[t2]);
    }), e2;
  }
  getHttpProvider() {
    const e2 = `${this.name}:${this.chainId}`, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(e2, this.namespace, this.client.core.projectId);
    if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
    return new o(new f(s2, h5("disableProviderPing")));
  }
};
var gc = class {
  constructor(e2) {
    this.name = "cosmos", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  setDefaultChain(e2, t2) {
    this.httpProviders[e2] || this.setHttpProvider(e2, t2), this.chainId = e2, this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? [...new Set(e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      var s2;
      const i4 = b2(t2);
      e2[i4] = this.createHttpProvider(i4, (s2 = this.namespace.rpcMap) == null ? void 0 : s2[t2]);
    }), e2;
  }
  getHttpProvider() {
    const e2 = `${this.name}:${this.chainId}`, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(e2, this.namespace, this.client.core.projectId);
    if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
    return new o(new f(s2, h5("disableProviderPing")));
  }
};
var Pc = class {
  constructor(e2) {
    this.name = "algorand", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  setDefaultChain(e2, t2) {
    if (!this.httpProviders[e2]) {
      const s2 = t2 || v5(`${this.name}:${e2}`, this.namespace, this.client.core.projectId);
      if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
      this.setHttpProvider(e2, s2);
    }
    this.chainId = e2, this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? [...new Set(e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      var s2;
      e2[t2] = this.createHttpProvider(t2, (s2 = this.namespace.rpcMap) == null ? void 0 : s2[t2]);
    }), e2;
  }
  getHttpProvider() {
    const e2 = `${this.name}:${this.chainId}`, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(e2, this.namespace, this.client.core.projectId);
    return typeof s2 > "u" ? void 0 : new o(new f(s2, h5("disableProviderPing")));
  }
};
var $c = class {
  constructor(e2) {
    this.name = "cip34", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  setDefaultChain(e2, t2) {
    this.httpProviders[e2] || this.setHttpProvider(e2, t2), this.chainId = e2, this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? [...new Set(e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      const s2 = this.getCardanoRPCUrl(t2), i4 = b2(t2);
      e2[i4] = this.createHttpProvider(i4, s2);
    }), e2;
  }
  getHttpProvider() {
    const e2 = `${this.name}:${this.chainId}`, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  getCardanoRPCUrl(e2) {
    const t2 = this.namespace.rpcMap;
    if (t2) return t2[e2];
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || this.getCardanoRPCUrl(e2);
    if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
    return new o(new f(s2, h5("disableProviderPing")));
  }
};
var bc = class {
  constructor(e2) {
    this.name = "elrond", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  setDefaultChain(e2, t2) {
    this.httpProviders[e2] || this.setHttpProvider(e2, t2), this.chainId = e2, this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${e2}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? [...new Set(e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      var s2;
      const i4 = b2(t2);
      e2[i4] = this.createHttpProvider(i4, (s2 = this.namespace.rpcMap) == null ? void 0 : s2[t2]);
    }), e2;
  }
  getHttpProvider() {
    const e2 = `${this.name}:${this.chainId}`, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(e2, this.namespace, this.client.core.projectId);
    if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
    return new o(new f(s2, h5("disableProviderPing")));
  }
};
var wc = class {
  constructor(e2) {
    this.name = "multiversx", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  setDefaultChain(e2, t2) {
    this.httpProviders[e2] || this.setHttpProvider(e2, t2), this.chainId = e2, this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${e2}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? [...new Set(e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      var s2;
      const i4 = b2(t2);
      e2[i4] = this.createHttpProvider(i4, (s2 = this.namespace.rpcMap) == null ? void 0 : s2[t2]);
    }), e2;
  }
  getHttpProvider() {
    const e2 = `${this.name}:${this.chainId}`, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(e2, this.namespace, this.client.core.projectId);
    if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
    return new o(new f(s2, h5("disableProviderPing")));
  }
};
var _c = class {
  constructor(e2) {
    this.name = "near", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  setDefaultChain(e2, t2) {
    if (this.chainId = e2, !this.httpProviders[e2]) {
      const s2 = t2 || v5(`${this.name}:${e2}`, this.namespace);
      if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
      this.setHttpProvider(e2, s2);
    }
    this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]) || [] : [];
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      var s2;
      e2[t2] = this.createHttpProvider(t2, (s2 = this.namespace.rpcMap) == null ? void 0 : s2[t2]);
    }), e2;
  }
  getHttpProvider() {
    const e2 = `${this.name}:${this.chainId}`, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(e2, this.namespace);
    return typeof s2 > "u" ? void 0 : new o(new f(s2, h5("disableProviderPing")));
  }
};
var Cc = class {
  constructor(e2) {
    this.name = "tezos", this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace = Object.assign(this.namespace, e2);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider().request(e2.request);
  }
  setDefaultChain(e2, t2) {
    if (this.chainId = e2, !this.httpProviders[e2]) {
      const s2 = t2 || v5(`${this.name}:${e2}`, this.namespace);
      if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
      this.setHttpProvider(e2, s2);
    }
    this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]) || [] : [];
  }
  createHttpProviders() {
    const e2 = {};
    return this.namespace.chains.forEach((t2) => {
      e2[t2] = this.createHttpProvider(t2);
    }), e2;
  }
  getHttpProvider() {
    const e2 = `${this.name}:${this.chainId}`, t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(e2, this.namespace);
    return typeof s2 > "u" ? void 0 : new o(new f(s2));
  }
};
var yc = class {
  constructor(e2) {
    this.name = w2, this.namespace = e2.namespace, this.events = h5("events"), this.client = h5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(e2) {
    this.namespace.chains = [...new Set((this.namespace.chains || []).concat(e2.chains || []))], this.namespace.accounts = [...new Set((this.namespace.accounts || []).concat(e2.accounts || []))], this.namespace.methods = [...new Set((this.namespace.methods || []).concat(e2.methods || []))], this.namespace.events = [...new Set((this.namespace.events || []).concat(e2.events || []))], this.httpProviders = this.createHttpProviders();
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(e2) {
    return this.namespace.methods.includes(e2.request.method) ? this.client.request(e2) : this.getHttpProvider(e2.chainId).request(e2.request);
  }
  setDefaultChain(e2, t2) {
    this.httpProviders[e2] || this.setHttpProvider(e2, t2), this.chainId = e2, this.events.emit(f4.DEFAULT_CHAIN_CHANGED, `${this.name}:${e2}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const e2 = this.namespace.chains[0];
    if (!e2) throw new Error("ChainId not found");
    return e2.split(":")[1];
  }
  getAccounts() {
    const e2 = this.namespace.accounts;
    return e2 ? [...new Set(e2.filter((t2) => t2.split(":")[1] === this.chainId.toString()).map((t2) => t2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    var e2, t2;
    const s2 = {};
    return (t2 = (e2 = this.namespace) == null ? void 0 : e2.accounts) == null || t2.forEach((i4) => {
      const n2 = Ye3(i4);
      s2[`${n2.namespace}:${n2.reference}`] = this.createHttpProvider(i4);
    }), s2;
  }
  getHttpProvider(e2) {
    const t2 = this.httpProviders[e2];
    if (typeof t2 > "u") throw new Error(`JSON-RPC provider for ${e2} not found`);
    return t2;
  }
  setHttpProvider(e2, t2) {
    const s2 = this.createHttpProvider(e2, t2);
    s2 && (this.httpProviders[e2] = s2);
  }
  createHttpProvider(e2, t2) {
    const s2 = t2 || v5(e2, this.namespace, this.client.core.projectId);
    if (!s2) throw new Error(`No RPC url provided for chainId: ${e2}`);
    return new o(new f(s2, h5("disableProviderPing")));
  }
};
var Ic = Object.defineProperty;
var Oc = Object.defineProperties;
var Ac = Object.getOwnPropertyDescriptors;
var tt3 = Object.getOwnPropertySymbols;
var Hc = Object.prototype.hasOwnProperty;
var Ec = Object.prototype.propertyIsEnumerable;
var rt6 = (r2, e2, t2) => e2 in r2 ? Ic(r2, e2, { enumerable: true, configurable: true, writable: true, value: t2 }) : r2[e2] = t2;
var U2 = (r2, e2) => {
  for (var t2 in e2 || (e2 = {})) Hc.call(e2, t2) && rt6(r2, t2, e2[t2]);
  if (tt3) for (var t2 of tt3(e2)) Ec.call(e2, t2) && rt6(r2, t2, e2[t2]);
  return r2;
};
var Q5 = (r2, e2) => Oc(r2, Ac(e2));
var M6 = class _M {
  constructor(e2) {
    this.events = new import_events6.default(), this.rpcProviders = {}, this.shouldAbortPairingAttempt = false, this.maxPairingAttempts = 10, this.disableProviderPing = false, this.providerOpts = e2, this.logger = typeof (e2 == null ? void 0 : e2.logger) < "u" && typeof (e2 == null ? void 0 : e2.logger) != "string" ? e2.logger : (0, import_pino.default)(k({ level: (e2 == null ? void 0 : e2.logger) || ne3 })), this.disableProviderPing = (e2 == null ? void 0 : e2.disableProviderPing) || false;
  }
  static async init(e2) {
    const t2 = new _M(e2);
    return await t2.initialize(), t2;
  }
  async request(e2, t2, s2) {
    const [i4, n2] = this.validateChain(t2);
    if (!this.session) throw new Error("Please call connect() before request()");
    return await this.getProvider(i4).request({ request: U2({}, e2), chainId: `${i4}:${n2}`, topic: this.session.topic, expiry: s2 });
  }
  sendAsync(e2, t2, s2, i4) {
    const n2 = (/* @__PURE__ */ new Date()).getTime();
    this.request(e2, s2, i4).then((a2) => t2(null, formatJsonRpcResult(n2, a2))).catch((a2) => t2(a2, void 0));
  }
  async enable() {
    if (!this.client) throw new Error("Sign Client not initialized");
    return this.session || await this.connect({ namespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties }), await this.requestAccounts();
  }
  async disconnect() {
    var e2;
    if (!this.session) throw new Error("Please call connect() before enable()");
    await this.client.disconnect({ topic: (e2 = this.session) == null ? void 0 : e2.topic, reason: de3("USER_DISCONNECTED") }), await this.cleanup();
  }
  async connect(e2) {
    if (!this.client) throw new Error("Sign Client not initialized");
    if (this.setNamespaces(e2), await this.cleanupPendingPairings(), !e2.skipPairing) return await this.pair(e2.pairingTopic);
  }
  async authenticate(e2, t2) {
    if (!this.client) throw new Error("Sign Client not initialized");
    this.setNamespaces(e2), await this.cleanupPendingPairings();
    const { uri: s2, response: i4 } = await this.client.authenticate(e2, t2);
    s2 && (this.uri = s2, this.events.emit("display_uri", s2));
    const n2 = await i4();
    if (this.session = n2.session, this.session) {
      const a2 = Xe4(this.session.namespaces);
      this.namespaces = W4(this.namespaces, a2), this.persist("namespaces", this.namespaces), this.onConnect();
    }
    return n2;
  }
  on(e2, t2) {
    this.events.on(e2, t2);
  }
  once(e2, t2) {
    this.events.once(e2, t2);
  }
  removeListener(e2, t2) {
    this.events.removeListener(e2, t2);
  }
  off(e2, t2) {
    this.events.off(e2, t2);
  }
  get isWalletConnect() {
    return true;
  }
  async pair(e2) {
    this.shouldAbortPairingAttempt = false;
    let t2 = 0;
    do {
      if (this.shouldAbortPairingAttempt) throw new Error("Pairing aborted");
      if (t2 >= this.maxPairingAttempts) throw new Error("Max auto pairing attempts reached");
      const { uri: s2, approval: i4 } = await this.client.connect({ pairingTopic: e2, requiredNamespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties });
      s2 && (this.uri = s2, this.events.emit("display_uri", s2)), await i4().then((n2) => {
        this.session = n2;
        const a2 = Xe4(n2.namespaces);
        this.namespaces = W4(this.namespaces, a2), this.persist("namespaces", this.namespaces);
      }).catch((n2) => {
        if (n2.message !== rt5) throw n2;
        t2++;
      });
    } while (!this.session);
    return this.onConnect(), this.session;
  }
  setDefaultChain(e2, t2) {
    try {
      if (!this.session) return;
      const [s2, i4] = this.validateChain(e2), n2 = this.getProvider(s2);
      n2.name === w2 ? n2.setDefaultChain(`${s2}:${i4}`, t2) : n2.setDefaultChain(i4, t2);
    } catch (s2) {
      if (!/Please call connect/.test(s2.message)) throw s2;
    }
  }
  async cleanupPendingPairings(e2 = {}) {
    this.logger.info("Cleaning up inactive pairings...");
    const t2 = this.client.pairing.getAll();
    if ($e3(t2)) {
      for (const s2 of t2) e2.deletePairings ? this.client.core.expirer.set(s2.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(s2.topic);
      this.logger.info(`Inactive pairings cleared: ${t2.length}`);
    }
  }
  abortPairingAttempt() {
    this.shouldAbortPairingAttempt = true;
  }
  async checkStorage() {
    if (this.namespaces = await this.getFromStore("namespaces"), this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.client.session.length) {
      const e2 = this.client.session.keys.length - 1;
      this.session = this.client.session.get(this.client.session.keys[e2]), this.createProviders();
    }
  }
  async initialize() {
    this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();
  }
  async createClient() {
    this.client = this.providerOpts.client || await _e5.init({ core: this.providerOpts.core, logger: this.providerOpts.logger || ne3, relayUrl: this.providerOpts.relayUrl || dt5, projectId: this.providerOpts.projectId, metadata: this.providerOpts.metadata, storageOptions: this.providerOpts.storageOptions, storage: this.providerOpts.storage, name: this.providerOpts.name, customStoragePrefix: this.providerOpts.customStoragePrefix, telemetryEnabled: this.providerOpts.telemetryEnabled }), this.logger.trace("SignClient Initialized");
  }
  createProviders() {
    if (!this.client) throw new Error("Sign Client not initialized");
    if (!this.session) throw new Error("Session not initialized. Please call connect() before enable()");
    const e2 = [...new Set(Object.keys(this.session.namespaces).map((t2) => pr3(t2)))];
    Z2("client", this.client), Z2("events", this.events), Z2("disableProviderPing", this.disableProviderPing), e2.forEach((t2) => {
      if (!this.session) return;
      const s2 = oc(t2, this.session), i4 = Je3(s2), n2 = W4(this.namespaces, this.optionalNamespaces), a2 = Q5(U2({}, n2[t2]), { accounts: s2, chains: i4 });
      switch (t2) {
        case "eip155":
          this.rpcProviders[t2] = new fc({ namespace: a2 });
          break;
        case "algorand":
          this.rpcProviders[t2] = new Pc({ namespace: a2 });
          break;
        case "solana":
          this.rpcProviders[t2] = new mc({ namespace: a2 });
          break;
        case "cosmos":
          this.rpcProviders[t2] = new gc({ namespace: a2 });
          break;
        case "polkadot":
          this.rpcProviders[t2] = new hc({ namespace: a2 });
          break;
        case "cip34":
          this.rpcProviders[t2] = new $c({ namespace: a2 });
          break;
        case "elrond":
          this.rpcProviders[t2] = new bc({ namespace: a2 });
          break;
        case "multiversx":
          this.rpcProviders[t2] = new wc({ namespace: a2 });
          break;
        case "near":
          this.rpcProviders[t2] = new _c({ namespace: a2 });
          break;
        case "tezos":
          this.rpcProviders[t2] = new Cc({ namespace: a2 });
          break;
        default:
          this.rpcProviders[w2] ? this.rpcProviders[w2].updateNamespace(a2) : this.rpcProviders[w2] = new yc({ namespace: a2 });
      }
    });
  }
  registerEventListeners() {
    if (typeof this.client > "u") throw new Error("Sign Client is not initialized");
    this.client.on("session_ping", (e2) => {
      this.events.emit("session_ping", e2);
    }), this.client.on("session_event", (e2) => {
      const { params: t2 } = e2, { event: s2 } = t2;
      if (s2.name === "accountsChanged") {
        const i4 = s2.data;
        i4 && $e3(i4) && this.events.emit("accountsChanged", i4.map(cc));
      } else if (s2.name === "chainChanged") {
        const i4 = t2.chainId, n2 = t2.event.data, a2 = pr3(i4), o2 = Y2(i4) !== Y2(n2) ? `${a2}:${Y2(n2)}` : i4;
        this.onChainChanged(o2);
      } else this.events.emit(s2.name, s2.data);
      this.events.emit("session_event", e2);
    }), this.client.on("session_update", ({ topic: e2, params: t2 }) => {
      var s2;
      const { namespaces: i4 } = t2, n2 = (s2 = this.client) == null ? void 0 : s2.session.get(e2);
      this.session = Q5(U2({}, n2), { namespaces: i4 }), this.onSessionUpdate(), this.events.emit("session_update", { topic: e2, params: t2 });
    }), this.client.on("session_delete", async (e2) => {
      await this.cleanup(), this.events.emit("session_delete", e2), this.events.emit("disconnect", Q5(U2({}, de3("USER_DISCONNECTED")), { data: e2.topic }));
    }), this.on(f4.DEFAULT_CHAIN_CHANGED, (e2) => {
      this.onChainChanged(e2, true);
    });
  }
  getProvider(e2) {
    return this.rpcProviders[e2] || this.rpcProviders[w2];
  }
  onSessionUpdate() {
    Object.keys(this.rpcProviders).forEach((e2) => {
      var t2;
      this.getProvider(e2).updateNamespace((t2 = this.session) == null ? void 0 : t2.namespaces[e2]);
    });
  }
  setNamespaces(e2) {
    const { namespaces: t2, optionalNamespaces: s2, sessionProperties: i4 } = e2;
    t2 && Object.keys(t2).length && (this.namespaces = t2), s2 && Object.keys(s2).length && (this.optionalNamespaces = s2), this.sessionProperties = i4, this.persist("namespaces", t2), this.persist("optionalNamespaces", s2);
  }
  validateChain(e2) {
    const [t2, s2] = (e2 == null ? void 0 : e2.split(":")) || ["", ""];
    if (!this.namespaces || !Object.keys(this.namespaces).length) return [t2, s2];
    if (t2 && !Object.keys(this.namespaces || {}).map((a2) => pr3(a2)).includes(t2)) throw new Error(`Namespace '${t2}' is not configured. Please call connect() first with namespace config.`);
    if (t2 && s2) return [t2, s2];
    const i4 = pr3(Object.keys(this.namespaces)[0]), n2 = this.rpcProviders[i4].getDefaultChain();
    return [i4, n2];
  }
  async requestAccounts() {
    const [e2] = this.validateChain();
    return await this.getProvider(e2).requestAccounts();
  }
  onChainChanged(e2, t2 = false) {
    if (!this.namespaces) return;
    const [s2, i4] = this.validateChain(e2);
    i4 && (t2 || this.getProvider(s2).setDefaultChain(i4), this.namespaces[s2] ? this.namespaces[s2].defaultChain = i4 : this.namespaces[`${s2}:${i4}`] ? this.namespaces[`${s2}:${i4}`].defaultChain = i4 : this.namespaces[`${s2}:${i4}`] = { defaultChain: i4 }, this.persist("namespaces", this.namespaces), this.events.emit("chainChanged", i4));
  }
  onConnect() {
    this.createProviders(), this.events.emit("connect", { session: this.session });
  }
  async cleanup() {
    this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist("namespaces", void 0), this.persist("optionalNamespaces", void 0), this.persist("sessionProperties", void 0), await this.cleanupPendingPairings({ deletePairings: true });
  }
  persist(e2, t2) {
    this.client.core.storage.setItem(`${ae4}/${e2}`, t2);
  }
  async getFromStore(e2) {
    return await this.client.core.storage.getItem(`${ae4}/${e2}`);
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/AlertController.js
var state5 = proxy({
  message: "",
  variant: "info",
  open: false
});
var AlertController = {
  state: state5,
  subscribeKey(key2, callback) {
    return subscribeKey(state5, key2, callback);
  },
  open(message, variant) {
    const { debug } = OptionsController.state;
    const { shortMessage, longMessage } = message;
    if (debug) {
      state5.message = shortMessage;
      state5.variant = variant;
      state5.open = true;
    }
    if (longMessage) {
      console.error(typeof longMessage === "function" ? longMessage() : longMessage);
    }
  },
  close() {
    state5.open = false;
    state5.message = "";
    state5.variant = "info";
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/EventsController.js
var baseUrl2 = CoreHelperUtil.getAnalyticsUrl();
var api = new FetchUtil({ baseUrl: baseUrl2, clientId: null });
var excluded = ["MODAL_CREATED"];
var state6 = proxy({
  timestamp: Date.now(),
  reportedErrors: {},
  data: {
    type: "track",
    event: "MODAL_CREATED"
  }
});
var EventsController = {
  state: state6,
  subscribe(callback) {
    return subscribe(state6, () => callback(state6));
  },
  _getApiHeaders() {
    const { projectId, sdkType, sdkVersion } = OptionsController.state;
    return {
      "x-project-id": projectId,
      "x-sdk-type": sdkType,
      "x-sdk-version": sdkVersion || "html-wagmi-4.2.2"
    };
  },
  async _sendAnalyticsEvent(payload) {
    try {
      const address = AccountController.state.address;
      if (excluded.includes(payload.data.event) || typeof window === "undefined") {
        return;
      }
      await api.post({
        path: "/e",
        headers: EventsController._getApiHeaders(),
        body: {
          eventId: CoreHelperUtil.getUUID(),
          url: window.location.href,
          domain: window.location.hostname,
          timestamp: payload.timestamp,
          props: { ...payload.data, address }
        }
      });
      state6.reportedErrors["FORBIDDEN"] = false;
    } catch (err) {
      const isForbiddenError = err instanceof Error && err.cause instanceof Response && err.cause.status === ConstantsUtil.HTTP_STATUS_CODES.FORBIDDEN && !state6.reportedErrors["FORBIDDEN"];
      if (isForbiddenError) {
        AlertController.open({
          shortMessage: "Invalid App Configuration",
          longMessage: `Origin ${isSafe() ? window.origin : "uknown"} not found on Allowlist - update configuration on cloud.reown.com`
        }, "error");
        state6.reportedErrors["FORBIDDEN"] = true;
      }
    }
  },
  sendEvent(data) {
    var _a7;
    state6.timestamp = Date.now();
    state6.data = data;
    if ((_a7 = OptionsController.state.features) == null ? void 0 : _a7.analytics) {
      EventsController._sendAnalyticsEvent(state6);
    }
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/utils/MobileWallet.js
var MobileWalletUtil = {
  /**
   * Handles mobile wallet redirection for wallets that have Universal Links.
   *
   * @param {Object} properties - The properties object.
   * @param {string} properties.name - The name of the wallet.
   */
  handleSolanaDeeplinkRedirect(name) {
    if (ChainController.state.activeChain === ConstantsUtil.CHAIN.SOLANA) {
      const href = window.location.href;
      const encodedHref = encodeURIComponent(href);
      if (name === "Phantom" && !("phantom" in window)) {
        const protocol = href.startsWith("https") ? "https" : "http";
        const host = href.split("/")[2];
        const encodedRef = encodeURIComponent(`${protocol}://${host}`);
        window.location.href = `https://phantom.app/ul/browse/${encodedHref}?ref=${encodedRef}`;
      }
      if (name === "Coinbase Wallet" && !("coinbaseSolana" in window)) {
        window.location.href = `https://go.cb-w.com/dapp?cb_url=${encodedHref}`;
      }
    }
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/ThemeController.js
var state7 = proxy({
  themeMode: "dark",
  themeVariables: {},
  w3mThemeVariables: void 0
});
var ThemeController = {
  state: state7,
  subscribe(callback) {
    return subscribe(state7, () => callback(state7));
  },
  setThemeMode(themeMode) {
    state7.themeMode = themeMode;
    try {
      const authConnector = ConnectorController.getAuthConnector();
      if (authConnector) {
        const themeVariables = ThemeController.getSnapshot().themeVariables;
        authConnector.provider.syncTheme({
          themeMode,
          themeVariables,
          w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)
        });
      }
    } catch {
      console.info("Unable to sync theme to auth connector");
    }
  },
  setThemeVariables(themeVariables) {
    state7.themeVariables = { ...state7.themeVariables, ...themeVariables };
    try {
      const authConnector = ConnectorController.getAuthConnector();
      if (authConnector) {
        const themeVariablesSnapshot = ThemeController.getSnapshot().themeVariables;
        authConnector.provider.syncTheme({
          themeVariables: themeVariablesSnapshot,
          w3mThemeVariables: getW3mThemeVariables(state7.themeVariables, state7.themeMode)
        });
      }
    } catch {
      console.info("Unable to sync theme to auth connector");
    }
  },
  getSnapshot() {
    return snapshot(state7);
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/ConnectorController.js
var state8 = proxy({
  allConnectors: [],
  connectors: [],
  activeConnector: void 0,
  filterByNamespace: void 0
});
var ConnectorController = {
  state: state8,
  subscribe(callback) {
    return subscribe(state8, () => {
      callback(state8);
    });
  },
  subscribeKey(key2, callback) {
    return subscribeKey(state8, key2, callback);
  },
  setActiveConnector(connector) {
    if (connector) {
      state8.activeConnector = ref2(connector);
    }
  },
  setConnectors(connectors) {
    const newConnectors = connectors.filter((newConnector) => !state8.allConnectors.some((existingConnector) => existingConnector.id === newConnector.id && this.getConnectorName(existingConnector.name) === this.getConnectorName(newConnector.name) && existingConnector.chain === newConnector.chain));
    newConnectors.forEach((connector) => {
      if (connector.type !== "MULTI_CHAIN") {
        state8.allConnectors.push(ref2(connector));
      }
    });
    state8.connectors = this.mergeMultiChainConnectors(state8.allConnectors);
  },
  removeAdapter(namespace) {
    state8.allConnectors = state8.allConnectors.filter((connector) => connector.chain !== namespace);
    state8.connectors = this.mergeMultiChainConnectors(state8.allConnectors);
  },
  mergeMultiChainConnectors(connectors) {
    const connectorsByNameMap = this.generateConnectorMapByName(connectors);
    const mergedConnectors = [];
    connectorsByNameMap.forEach((keyConnectors) => {
      const firstItem = keyConnectors[0];
      const isAuthConnector = (firstItem == null ? void 0 : firstItem.id) === ConstantsUtil.CONNECTOR_ID.AUTH;
      if (keyConnectors.length > 1 && firstItem) {
        mergedConnectors.push({
          name: firstItem.name,
          imageUrl: firstItem.imageUrl,
          imageId: firstItem.imageId,
          connectors: [...keyConnectors],
          type: isAuthConnector ? "AUTH" : "MULTI_CHAIN",
          // These values are just placeholders, we don't use them in multi-chain connector select screen
          chain: "eip155",
          id: (firstItem == null ? void 0 : firstItem.id) || ""
        });
      } else if (firstItem) {
        mergedConnectors.push(firstItem);
      }
    });
    return mergedConnectors;
  },
  generateConnectorMapByName(connectors) {
    const connectorsByNameMap = /* @__PURE__ */ new Map();
    connectors.forEach((connector) => {
      const { name } = connector;
      const connectorName = this.getConnectorName(name);
      if (!connectorName) {
        return;
      }
      const connectorsByName = connectorsByNameMap.get(connectorName) || [];
      const haveSameConnector = connectorsByName.find((c3) => c3.chain === connector.chain);
      if (!haveSameConnector) {
        connectorsByName.push(connector);
      }
      connectorsByNameMap.set(connectorName, connectorsByName);
    });
    return connectorsByNameMap;
  },
  getConnectorName(name) {
    if (!name) {
      return name;
    }
    const nameOverrideMap = {
      "Trust Wallet": "Trust"
    };
    return nameOverrideMap[name] || name;
  },
  getUniqueConnectorsByName(connectors) {
    const uniqueConnectors = [];
    connectors.forEach((c3) => {
      if (!uniqueConnectors.find((uc2) => uc2.chain === c3.chain)) {
        uniqueConnectors.push(c3);
      }
    });
    return uniqueConnectors;
  },
  addConnector(connector) {
    var _a7, _b3, _c2;
    if (connector.id === ConstantsUtil.CONNECTOR_ID.AUTH) {
      const authConnector = connector;
      const optionsState = snapshot(OptionsController.state);
      const themeMode = ThemeController.getSnapshot().themeMode;
      const themeVariables = ThemeController.getSnapshot().themeVariables;
      (_b3 = (_a7 = authConnector == null ? void 0 : authConnector.provider) == null ? void 0 : _a7.syncDappData) == null ? void 0 : _b3.call(_a7, {
        metadata: optionsState.metadata,
        sdkVersion: optionsState.sdkVersion,
        projectId: optionsState.projectId,
        sdkType: optionsState.sdkType
      });
      (_c2 = authConnector == null ? void 0 : authConnector.provider) == null ? void 0 : _c2.syncTheme({
        themeMode,
        themeVariables,
        w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)
      });
      this.setConnectors([connector]);
    } else {
      this.setConnectors([connector]);
    }
  },
  getAuthConnector() {
    var _a7;
    const activeNamespace = ChainController.state.activeChain;
    const authConnector = state8.connectors.find((c3) => c3.id === ConstantsUtil.CONNECTOR_ID.AUTH);
    if (!authConnector) {
      return void 0;
    }
    if ((_a7 = authConnector == null ? void 0 : authConnector.connectors) == null ? void 0 : _a7.length) {
      const connector = authConnector.connectors.find((c3) => c3.chain === activeNamespace);
      return connector;
    }
    return authConnector;
  },
  getAnnouncedConnectorRdns() {
    return state8.connectors.filter((c3) => c3.type === "ANNOUNCED").map((c3) => {
      var _a7;
      return (_a7 = c3.info) == null ? void 0 : _a7.rdns;
    });
  },
  getConnector(id, rdns) {
    return state8.connectors.find((c3) => {
      var _a7;
      return c3.explorerId === id || ((_a7 = c3.info) == null ? void 0 : _a7.rdns) === rdns;
    });
  },
  syncIfAuthConnector(connector) {
    var _a7, _b3;
    if (connector.id !== "ID_AUTH") {
      return;
    }
    const authConnector = connector;
    const optionsState = snapshot(OptionsController.state);
    const themeMode = ThemeController.getSnapshot().themeMode;
    const themeVariables = ThemeController.getSnapshot().themeVariables;
    (_b3 = (_a7 = authConnector == null ? void 0 : authConnector.provider) == null ? void 0 : _a7.syncDappData) == null ? void 0 : _b3.call(_a7, {
      metadata: optionsState.metadata,
      sdkVersion: optionsState.sdkVersion,
      sdkType: optionsState.sdkType,
      projectId: optionsState.projectId
    });
    authConnector.provider.syncTheme({
      themeMode,
      themeVariables,
      w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)
    });
  },
  /**
   * Returns the connectors filtered by namespace.
   * @param namespace - The namespace to filter the connectors by.
   * @returns ConnectorWithProviders[].
   */
  getConnectorsByNamespace(namespace) {
    const namespaceConnectors = state8.allConnectors.filter((connector) => connector.chain === namespace);
    return this.mergeMultiChainConnectors(namespaceConnectors);
  },
  selectWalletConnector(wallet) {
    const connector = ConnectorController.getConnector(wallet.id, wallet.rdns);
    if (ChainController.state.activeChain === ConstantsUtil.CHAIN.SOLANA) {
      MobileWalletUtil.handleSolanaDeeplinkRedirect((connector == null ? void 0 : connector.name) || wallet.name || "");
    }
    if (connector) {
      RouterController.push("ConnectingExternal", { connector });
    } else {
      RouterController.push("ConnectingWalletConnect", { wallet });
    }
  },
  /**
   * Returns the connectors. If a namespace is provided, the connectors are filtered by namespace.
   * @param namespace - The namespace to filter the connectors by. If not provided, all connectors are returned.
   * @returns ConnectorWithProviders[].
   */
  getConnectors(namespace) {
    if (namespace) {
      return this.getConnectorsByNamespace(namespace);
    }
    return this.mergeMultiChainConnectors(state8.allConnectors);
  },
  /**
   * Sets the filter by namespace and updates the connectors.
   * @param namespace - The namespace to filter the connectors by.
   */
  setFilterByNamespace(namespace) {
    state8.filterByNamespace = namespace;
    state8.connectors = this.getConnectors(namespace);
  },
  clearNamespaceFilter() {
    state8.filterByNamespace = void 0;
    state8.connectors = this.getConnectors();
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/RouterController.js
var state9 = proxy({
  view: "Connect",
  history: ["Connect"],
  transactionStack: []
});
var RouterController = {
  state: state9,
  subscribeKey(key2, callback) {
    return subscribeKey(state9, key2, callback);
  },
  pushTransactionStack(action) {
    state9.transactionStack.push(action);
  },
  popTransactionStack(cancel) {
    var _a7, _b3;
    const action = state9.transactionStack.pop();
    if (!action) {
      return;
    }
    if (cancel) {
      this.goBack();
      (_a7 = action == null ? void 0 : action.onCancel) == null ? void 0 : _a7.call(action);
    } else {
      if (action.goBack) {
        this.goBack();
      } else if (action.replace) {
        const history = state9.history;
        const connectingSiweIndex = history.indexOf("ConnectingSiwe");
        if (connectingSiweIndex > 0) {
          this.goBackToIndex(connectingSiweIndex - 1);
        } else {
          ModalController.close();
          state9.history = [];
        }
      } else if (action.view) {
        this.reset(action.view);
      }
      (_b3 = action == null ? void 0 : action.onSuccess) == null ? void 0 : _b3.call(action);
    }
  },
  push(view, data) {
    if (view !== state9.view) {
      state9.view = view;
      state9.history.push(view);
      state9.data = data;
    }
  },
  reset(view, data) {
    state9.view = view;
    state9.history = [view];
    state9.data = data;
  },
  replace(view, data) {
    const lastView = state9.history.at(-1);
    const isSameView = lastView === view;
    if (!isSameView) {
      state9.view = view;
      state9.history[state9.history.length - 1] = view;
      state9.data = data;
    }
  },
  goBack() {
    const shouldReload = !ChainController.state.activeCaipAddress && this.state.view === "ConnectingFarcaster";
    if (state9.history.length > 1 && !state9.history.includes("UnsupportedChain")) {
      state9.history.pop();
      const [last] = state9.history.slice(-1);
      if (last) {
        state9.view = last;
      }
    } else {
      ModalController.close();
    }
    setTimeout(() => {
      var _a7, _b3, _c2;
      if (shouldReload) {
        AccountController.setFarcasterUrl(void 0, ChainController.state.activeChain);
        const authConnector = ConnectorController.getAuthConnector();
        (_a7 = authConnector == null ? void 0 : authConnector.provider) == null ? void 0 : _a7.reload();
        const optionsState = snapshot(OptionsController.state);
        (_c2 = (_b3 = authConnector == null ? void 0 : authConnector.provider) == null ? void 0 : _b3.syncDappData) == null ? void 0 : _c2.call(_b3, {
          metadata: optionsState.metadata,
          sdkVersion: optionsState.sdkVersion,
          projectId: optionsState.projectId,
          sdkType: optionsState.sdkType
        });
      }
    }, 100);
  },
  goBackToIndex(historyIndex) {
    if (state9.history.length > 1) {
      state9.history = state9.history.slice(0, historyIndex + 1);
      const [last] = state9.history.slice(-1);
      if (last) {
        state9.view = last;
      }
    }
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/SnackController.js
var DEFAULT_STATE = Object.freeze({
  message: "",
  variant: "success",
  svg: void 0,
  open: false,
  autoClose: true
});
var state10 = proxy({
  ...DEFAULT_STATE
});
var SnackController = {
  state: state10,
  subscribeKey(key2, callback) {
    return subscribeKey(state10, key2, callback);
  },
  showLoading(message, options = {}) {
    this._showMessage({ message, variant: "loading", ...options });
  },
  showSuccess(message) {
    this._showMessage({ message, variant: "success" });
  },
  showSvg(message, svg2) {
    this._showMessage({ message, svg: svg2 });
  },
  showError(message) {
    const errorMessage = CoreHelperUtil.parseError(message);
    this._showMessage({ message: errorMessage, variant: "error" });
  },
  hide() {
    state10.message = DEFAULT_STATE.message;
    state10.variant = DEFAULT_STATE.variant;
    state10.svg = DEFAULT_STATE.svg;
    state10.open = DEFAULT_STATE.open;
    state10.autoClose = DEFAULT_STATE.autoClose;
  },
  _showMessage({ message, svg: svg2, variant = "success", autoClose = DEFAULT_STATE.autoClose }) {
    if (state10.open) {
      state10.open = false;
      setTimeout(() => {
        state10.message = message;
        state10.variant = variant;
        state10.svg = svg2;
        state10.open = true;
        state10.autoClose = autoClose;
      }, 150);
    } else {
      state10.message = message;
      state10.variant = variant;
      state10.svg = svg2;
      state10.open = true;
      state10.autoClose = autoClose;
    }
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/utils/SIWXUtil.js
var SIWXUtil = {
  getSIWX() {
    return OptionsController.state.siwx;
  },
  async initializeIfEnabled() {
    var _a7;
    const siwx = OptionsController.state.siwx;
    const caipAddress = ChainController.getActiveCaipAddress();
    if (!(siwx && caipAddress)) {
      return;
    }
    const [namespace, chainId, address] = caipAddress.split(":");
    if (!ChainController.checkIfSupportedNetwork(namespace)) {
      return;
    }
    try {
      const sessions = await siwx.getSessions(`${namespace}:${chainId}`, address);
      if (sessions.length) {
        return;
      }
      await ModalController.open({
        view: "SIWXSignMessage"
      });
    } catch (error) {
      console.error("SIWXUtil:initializeIfEnabled", error);
      EventsController.sendEvent({
        type: "track",
        event: "SIWX_AUTH_ERROR",
        properties: this.getSIWXEventProperties()
      });
      await ((_a7 = ConnectionController._getClient()) == null ? void 0 : _a7.disconnect().catch(console.error));
      RouterController.reset("Connect");
      SnackController.showError("A problem occurred while trying initialize authentication");
    }
  },
  async requestSignMessage() {
    const siwx = OptionsController.state.siwx;
    const address = CoreHelperUtil.getPlainAddress(ChainController.getActiveCaipAddress());
    const network = ChainController.getActiveCaipNetwork();
    const client = ConnectionController._getClient();
    if (!siwx) {
      throw new Error("SIWX is not enabled");
    }
    if (!address) {
      throw new Error("No ActiveCaipAddress found");
    }
    if (!network) {
      throw new Error("No ActiveCaipNetwork or client found");
    }
    if (!client) {
      throw new Error("No ConnectionController client found");
    }
    try {
      const siwxMessage = await siwx.createMessage({
        chainId: network.caipNetworkId,
        accountAddress: address
      });
      const message = siwxMessage.toString();
      const connectorId = StorageUtil.getConnectedConnectorId(network.chainNamespace);
      if (connectorId === ConstantsUtil.CONNECTOR_ID.AUTH) {
        RouterController.pushTransactionStack({
          view: null,
          goBack: false,
          replace: true
        });
      }
      const signature2 = await client.signMessage(message);
      await siwx.addSession({
        data: siwxMessage,
        message,
        signature: signature2
      });
      ModalController.close();
      EventsController.sendEvent({
        type: "track",
        event: "SIWX_AUTH_SUCCESS",
        properties: this.getSIWXEventProperties()
      });
    } catch (error) {
      const properties = this.getSIWXEventProperties();
      if (!ModalController.state.open || RouterController.state.view === "ApproveTransaction") {
        await ModalController.open({
          view: "SIWXSignMessage"
        });
      }
      if (properties.isSmartAccount) {
        SnackController.showError("This application might not support Smart Accounts");
      } else {
        SnackController.showError("Signature declined");
      }
      EventsController.sendEvent({
        type: "track",
        event: "SIWX_AUTH_ERROR",
        properties
      });
      console.error("SWIXUtil:requestSignMessage", error);
    }
  },
  async cancelSignMessage() {
    var _a7;
    try {
      const siwx = this.getSIWX();
      const required = (_a7 = siwx == null ? void 0 : siwx.getRequired) == null ? void 0 : _a7.call(siwx);
      if (required) {
        await ConnectionController.disconnect();
      } else {
        ModalController.close();
      }
      RouterController.reset("Connect");
      EventsController.sendEvent({
        event: "CLICK_CANCEL_SIWX",
        type: "track",
        properties: this.getSIWXEventProperties()
      });
    } catch (error) {
      console.error("SIWXUtil:cancelSignMessage", error);
    }
  },
  async getSessions() {
    const siwx = OptionsController.state.siwx;
    const address = CoreHelperUtil.getPlainAddress(ChainController.getActiveCaipAddress());
    const network = ChainController.getActiveCaipNetwork();
    if (!(siwx && address && network)) {
      return [];
    }
    return siwx.getSessions(network.caipNetworkId, address);
  },
  async isSIWXCloseDisabled() {
    var _a7;
    const siwx = this.getSIWX();
    if (siwx) {
      const isApproveSignScreen = RouterController.state.view === "ApproveTransaction";
      const isSiwxSignMessage = RouterController.state.view === "SIWXSignMessage";
      if (isApproveSignScreen || isSiwxSignMessage) {
        return ((_a7 = siwx.getRequired) == null ? void 0 : _a7.call(siwx)) && (await this.getSessions()).length === 0;
      }
    }
    return false;
  },
  async universalProviderAuthenticate({ universalProvider, chains, methods }) {
    var _a7, _b3, _c2;
    const siwx = SIWXUtil.getSIWX();
    const namespaces = new Set(chains.map((chain) => chain.split(":")[0]));
    if (!siwx || namespaces.size !== 1 || !namespaces.has("eip155")) {
      return false;
    }
    const siwxMessage = await siwx.createMessage({
      chainId: ((_a7 = ChainController.getActiveCaipNetwork()) == null ? void 0 : _a7.caipNetworkId) || "",
      accountAddress: ""
    });
    const result = await universalProvider.authenticate({
      nonce: siwxMessage.nonce,
      domain: siwxMessage.domain,
      uri: siwxMessage.uri,
      exp: siwxMessage.expirationTime,
      iat: siwxMessage.issuedAt,
      nbf: siwxMessage.notBefore,
      requestId: siwxMessage.requestId,
      version: siwxMessage.version,
      resources: siwxMessage.resources,
      statement: siwxMessage.statement,
      chainId: siwxMessage.chainId,
      methods,
      // The first chainId is what is used for universal provider to build the message
      chains: [siwxMessage.chainId, ...chains.filter((chain) => chain !== siwxMessage.chainId)]
    });
    SnackController.showLoading("Authenticating...", { autoClose: false });
    AccountController.setConnectedWalletInfo({
      ...result.session.peer.metadata,
      name: result.session.peer.metadata.name,
      icon: (_b3 = result.session.peer.metadata.icons) == null ? void 0 : _b3[0]
    }, Array.from(namespaces)[0]);
    if ((_c2 = result == null ? void 0 : result.auths) == null ? void 0 : _c2.length) {
      const sessions = result.auths.map((cacao) => {
        const message = universalProvider.client.formatAuthMessage({
          request: cacao.p,
          iss: cacao.p.iss
        });
        return {
          data: {
            ...cacao.p,
            accountAddress: cacao.p.iss.split(":").slice(-1).join(""),
            chainId: cacao.p.iss.split(":").slice(2, 4).join(":"),
            uri: cacao.p.aud,
            version: cacao.p.version || siwxMessage.version,
            expirationTime: cacao.p.exp,
            issuedAt: cacao.p.iat,
            notBefore: cacao.p.nbf
          },
          message,
          signature: cacao.s.s,
          cacao
        };
      });
      try {
        await siwx.setSessions(sessions);
        EventsController.sendEvent({
          type: "track",
          event: "SIWX_AUTH_SUCCESS",
          properties: SIWXUtil.getSIWXEventProperties()
        });
      } catch (error) {
        console.error("SIWX:universalProviderAuth - failed to set sessions", error);
        EventsController.sendEvent({
          type: "track",
          event: "SIWX_AUTH_ERROR",
          properties: SIWXUtil.getSIWXEventProperties()
        });
        await universalProvider.disconnect().catch(console.error);
        throw error;
      } finally {
        SnackController.hide();
      }
    }
    return true;
  },
  getSIWXEventProperties() {
    var _a7;
    return {
      network: ((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId) || "",
      isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT
    };
  },
  async clearSessions() {
    const siwx = this.getSIWX();
    if (siwx) {
      await siwx.setSessions([]);
    }
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/TransactionsController.js
var state11 = proxy({
  transactions: [],
  coinbaseTransactions: {},
  transactionsByYear: {},
  lastNetworkInView: void 0,
  loading: false,
  empty: false,
  next: void 0
});
var TransactionsController = {
  state: state11,
  subscribe(callback) {
    return subscribe(state11, () => callback(state11));
  },
  setLastNetworkInView(lastNetworkInView) {
    state11.lastNetworkInView = lastNetworkInView;
  },
  async fetchTransactions(accountAddress, onramp) {
    var _a7;
    const { projectId } = OptionsController.state;
    if (!projectId || !accountAddress) {
      throw new Error("Transactions can't be fetched without a projectId and an accountAddress");
    }
    state11.loading = true;
    try {
      const response = await BlockchainApiController.fetchTransactions({
        account: accountAddress,
        projectId,
        cursor: state11.next,
        onramp,
        // Coinbase transaction history state updates require the latest data
        cache: onramp === "coinbase" ? "no-cache" : void 0,
        chainId: (_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId
      });
      const nonSpamTransactions = this.filterSpamTransactions(response.data);
      const sameChainTransactions = this.filterByConnectedChain(nonSpamTransactions);
      const filteredTransactions = [...state11.transactions, ...sameChainTransactions];
      state11.loading = false;
      if (onramp === "coinbase") {
        state11.coinbaseTransactions = this.groupTransactionsByYearAndMonth(state11.coinbaseTransactions, response.data);
      } else {
        state11.transactions = filteredTransactions;
        state11.transactionsByYear = this.groupTransactionsByYearAndMonth(state11.transactionsByYear, sameChainTransactions);
      }
      state11.empty = filteredTransactions.length === 0;
      state11.next = response.next ? response.next : void 0;
    } catch (error) {
      EventsController.sendEvent({
        type: "track",
        event: "ERROR_FETCH_TRANSACTIONS",
        properties: {
          address: accountAddress,
          projectId,
          cursor: state11.next,
          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT
        }
      });
      SnackController.showError("Failed to fetch transactions");
      state11.loading = false;
      state11.empty = true;
      state11.next = void 0;
    }
  },
  groupTransactionsByYearAndMonth(transactionsMap = {}, transactions = []) {
    const grouped = transactionsMap;
    transactions.forEach((transaction) => {
      const year = new Date(transaction.metadata.minedAt).getFullYear();
      const month = new Date(transaction.metadata.minedAt).getMonth();
      const yearTransactions = grouped[year] ?? {};
      const monthTransactions = yearTransactions[month] ?? [];
      const newMonthTransactions = monthTransactions.filter((tx) => tx.id !== transaction.id);
      grouped[year] = {
        ...yearTransactions,
        [month]: [...newMonthTransactions, transaction].sort((a2, b3) => new Date(b3.metadata.minedAt).getTime() - new Date(a2.metadata.minedAt).getTime())
      };
    });
    return grouped;
  },
  filterSpamTransactions(transactions) {
    return transactions.filter((transaction) => {
      const isAllSpam = transaction.transfers.every((transfer) => {
        var _a7;
        return ((_a7 = transfer.nft_info) == null ? void 0 : _a7.flags.is_spam) === true;
      });
      return !isAllSpam;
    });
  },
  filterByConnectedChain(transactions) {
    var _a7;
    const chainId = (_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId;
    const filteredTransactions = transactions.filter((transaction) => transaction.metadata.chain === chainId);
    return filteredTransactions;
  },
  clearCursor() {
    state11.next = void 0;
  },
  resetTransactions() {
    state11.transactions = [];
    state11.transactionsByYear = {};
    state11.lastNetworkInView = void 0;
    state11.loading = false;
    state11.empty = false;
    state11.next = void 0;
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/ConnectionController.js
var state12 = proxy({
  wcError: false,
  buffering: false,
  status: "disconnected"
});
var wcConnectionPromise;
var ConnectionController = {
  state: state12,
  subscribeKey(key2, callback) {
    return subscribeKey(state12, key2, callback);
  },
  _getClient() {
    return state12._client;
  },
  setClient(client) {
    state12._client = ref2(client);
  },
  async connectWalletConnect() {
    var _a7, _b3, _c2, _d;
    const namespaces = [...ChainController.state.chains.keys()];
    namespaces.forEach((namespace) => {
      StorageUtil.setConnectedConnectorId(namespace, ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT);
    });
    if (CoreHelperUtil.isTelegram() || CoreHelperUtil.isSafari() && CoreHelperUtil.isIos()) {
      if (wcConnectionPromise) {
        await wcConnectionPromise;
        wcConnectionPromise = void 0;
        return;
      }
      if (!CoreHelperUtil.isPairingExpired(state12 == null ? void 0 : state12.wcPairingExpiry)) {
        const link = state12.wcUri;
        state12.wcUri = link;
        return;
      }
      wcConnectionPromise = (_b3 = (_a7 = this._getClient()) == null ? void 0 : _a7.connectWalletConnect) == null ? void 0 : _b3.call(_a7).catch(() => void 0);
      this.state.status = "connecting";
      await wcConnectionPromise;
      wcConnectionPromise = void 0;
      state12.wcPairingExpiry = void 0;
      this.state.status = "connected";
    } else {
      await ((_d = (_c2 = this._getClient()) == null ? void 0 : _c2.connectWalletConnect) == null ? void 0 : _d.call(_c2));
    }
  },
  async connectExternal(options, chain, setChain = true) {
    var _a7, _b3;
    await ((_b3 = (_a7 = this._getClient()) == null ? void 0 : _a7.connectExternal) == null ? void 0 : _b3.call(_a7, options));
    if (setChain) {
      ChainController.setActiveNamespace(chain);
    }
  },
  async reconnectExternal(options) {
    var _a7, _b3;
    await ((_b3 = (_a7 = this._getClient()) == null ? void 0 : _a7.reconnectExternal) == null ? void 0 : _b3.call(_a7, options));
    const namespace = options.chain || ChainController.state.activeChain;
    if (namespace) {
      StorageUtil.setConnectedConnectorId(namespace, options.id);
    }
  },
  async setPreferredAccountType(accountType) {
    var _a7;
    ModalController.setLoading(true);
    const authConnector = ConnectorController.getAuthConnector();
    if (!authConnector) {
      return;
    }
    await (authConnector == null ? void 0 : authConnector.provider.setPreferredAccount(accountType));
    await this.reconnectExternal(authConnector);
    ModalController.setLoading(false);
    EventsController.sendEvent({
      type: "track",
      event: "SET_PREFERRED_ACCOUNT_TYPE",
      properties: {
        accountType,
        network: ((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId) || ""
      }
    });
  },
  async signMessage(message) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.signMessage(message);
  },
  parseUnits(value, decimals) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.parseUnits(value, decimals);
  },
  formatUnits(value, decimals) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.formatUnits(value, decimals);
  },
  async sendTransaction(args) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.sendTransaction(args);
  },
  async getCapabilities(params) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.getCapabilities(params);
  },
  async grantPermissions(params) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.grantPermissions(params);
  },
  async estimateGas(args) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.estimateGas(args);
  },
  async writeContract(args) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.writeContract(args);
  },
  async getEnsAddress(value) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.getEnsAddress(value);
  },
  async getEnsAvatar(value) {
    var _a7;
    return (_a7 = this._getClient()) == null ? void 0 : _a7.getEnsAvatar(value);
  },
  checkInstalled(ids) {
    var _a7, _b3;
    return ((_b3 = (_a7 = this._getClient()) == null ? void 0 : _a7.checkInstalled) == null ? void 0 : _b3.call(_a7, ids)) || false;
  },
  resetWcConnection() {
    state12.wcUri = void 0;
    state12.wcPairingExpiry = void 0;
    state12.wcLinking = void 0;
    state12.recentWallet = void 0;
    state12.status = "disconnected";
    TransactionsController.resetTransactions();
    StorageUtil.deleteWalletConnectDeepLink();
  },
  setUri(uri) {
    state12.wcUri = uri;
    state12.wcPairingExpiry = CoreHelperUtil.getPairingExpiry();
  },
  setWcLinking(wcLinking) {
    state12.wcLinking = wcLinking;
  },
  setWcError(wcError) {
    state12.wcError = wcError;
    state12.buffering = false;
  },
  setRecentWallet(wallet) {
    state12.recentWallet = wallet;
  },
  setBuffering(buffering) {
    state12.buffering = buffering;
  },
  setStatus(status) {
    state12.status = status;
  },
  async disconnect() {
    try {
      ModalController.setLoading(true);
      await SIWXUtil.clearSessions();
      await ChainController.disconnect();
      ModalController.setLoading(false);
    } catch (error) {
      throw new Error("Failed to disconnect");
    }
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/utils/SwapApiUtil.js
var SwapApiUtil = {
  async getTokenList() {
    var _a7;
    const caipNetwork = ChainController.state.activeCaipNetwork;
    const response = await BlockchainApiController.fetchSwapTokens({
      chainId: caipNetwork == null ? void 0 : caipNetwork.caipNetworkId,
      projectId: OptionsController.state.projectId
    });
    const tokens = ((_a7 = response == null ? void 0 : response.tokens) == null ? void 0 : _a7.map((token) => ({
      ...token,
      eip2612: false,
      quantity: {
        decimals: "0",
        numeric: "0"
      },
      price: 0,
      value: 0
    }))) || [];
    return tokens;
  },
  async fetchGasPrice() {
    var _a7, _b3;
    const projectId = OptionsController.state.projectId;
    const caipNetwork = ChainController.state.activeCaipNetwork;
    if (!caipNetwork) {
      return null;
    }
    try {
      switch (caipNetwork.chainNamespace) {
        case "solana":
          const lamportsPerSignature = (_b3 = await ((_a7 = ConnectionController) == null ? void 0 : _a7.estimateGas({ chainNamespace: "solana" }))) == null ? void 0 : _b3.toString();
          return {
            standard: lamportsPerSignature,
            fast: lamportsPerSignature,
            instant: lamportsPerSignature
          };
        case "eip155":
        default:
          return await BlockchainApiController.fetchGasPrice({
            projectId,
            chainId: caipNetwork.caipNetworkId
          });
      }
    } catch {
      return null;
    }
  },
  async fetchSwapAllowance({ tokenAddress, userAddress, sourceTokenAmount, sourceTokenDecimals }) {
    const projectId = OptionsController.state.projectId;
    const response = await BlockchainApiController.fetchSwapAllowance({
      projectId,
      tokenAddress,
      userAddress
    });
    if ((response == null ? void 0 : response.allowance) && sourceTokenAmount && sourceTokenDecimals) {
      const parsedValue = ConnectionController.parseUnits(sourceTokenAmount, sourceTokenDecimals) || 0;
      const hasAllowance = BigInt(response.allowance) >= parsedValue;
      return hasAllowance;
    }
    return false;
  },
  async getMyTokensWithBalance(forceUpdate) {
    const address = AccountController.state.address;
    const caipNetwork = ChainController.state.activeCaipNetwork;
    if (!address || !caipNetwork) {
      return [];
    }
    const response = await BlockchainApiController.getBalance(address, caipNetwork.caipNetworkId, forceUpdate);
    const balances = response.balances.filter((balance) => balance.quantity.decimals !== "0");
    AccountController.setTokenBalance(balances, ChainController.state.activeChain);
    return this.mapBalancesToSwapTokens(balances);
  },
  mapBalancesToSwapTokens(balances) {
    return (balances == null ? void 0 : balances.map((token) => ({
      ...token,
      address: (token == null ? void 0 : token.address) ? token.address : ChainController.getActiveNetworkTokenAddress(),
      decimals: parseInt(token.quantity.decimals, 10),
      logoUri: token.iconUrl,
      eip2612: false
    }))) || [];
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/utils/SwapCalculationUtil.js
var SwapCalculationUtil = {
  getGasPriceInEther(gas, gasPrice) {
    const totalGasCostInWei = gasPrice * gas;
    const totalGasCostInEther = Number(totalGasCostInWei) / 1e18;
    return totalGasCostInEther;
  },
  getGasPriceInUSD(networkPrice, gas, gasPrice) {
    const totalGasCostInEther = SwapCalculationUtil.getGasPriceInEther(gas, gasPrice);
    const networkPriceInUSD = NumberUtil.bigNumber(networkPrice);
    const gasCostInUSD = networkPriceInUSD.times(totalGasCostInEther);
    return gasCostInUSD.toNumber();
  },
  getPriceImpact({ sourceTokenAmount, sourceTokenPriceInUSD, toTokenPriceInUSD, toTokenAmount }) {
    const inputValue = NumberUtil.bigNumber(sourceTokenAmount).times(sourceTokenPriceInUSD);
    const outputValue = NumberUtil.bigNumber(toTokenAmount).times(toTokenPriceInUSD);
    const priceImpact = inputValue.minus(outputValue).div(inputValue).times(100);
    return priceImpact.toNumber();
  },
  getMaxSlippage(slippage, toTokenAmount) {
    const slippageToleranceDecimal = NumberUtil.bigNumber(slippage).div(100);
    const maxSlippageAmount = NumberUtil.multiply(toTokenAmount, slippageToleranceDecimal);
    return maxSlippageAmount.toNumber();
  },
  getProviderFee(sourceTokenAmount, feePercentage = 85e-4) {
    const providerFee = NumberUtil.bigNumber(sourceTokenAmount).times(feePercentage);
    return providerFee.toString();
  },
  isInsufficientNetworkTokenForGas(networkBalanceInUSD, gasPriceInUSD) {
    const gasPrice = gasPriceInUSD || "0";
    if (NumberUtil.bigNumber(networkBalanceInUSD).eq(0)) {
      return true;
    }
    return NumberUtil.bigNumber(NumberUtil.bigNumber(gasPrice)).gt(networkBalanceInUSD);
  },
  isInsufficientSourceTokenForSwap(sourceTokenAmount, sourceTokenAddress, balance) {
    var _a7, _b3;
    const sourceTokenBalance = (_b3 = (_a7 = balance == null ? void 0 : balance.find((token) => token.address === sourceTokenAddress)) == null ? void 0 : _a7.quantity) == null ? void 0 : _b3.numeric;
    const isInSufficientBalance = NumberUtil.bigNumber(sourceTokenBalance || "0").lt(sourceTokenAmount);
    return isInSufficientBalance;
  },
  getToTokenAmount({ sourceToken, toToken, sourceTokenPrice, toTokenPrice, sourceTokenAmount }) {
    if (sourceTokenAmount === "0") {
      return "0";
    }
    if (!sourceToken || !toToken) {
      return "0";
    }
    const sourceTokenDecimals = sourceToken.decimals;
    const sourceTokenPriceInUSD = sourceTokenPrice;
    const toTokenDecimals = toToken.decimals;
    const toTokenPriceInUSD = toTokenPrice;
    if (toTokenPriceInUSD <= 0) {
      return "0";
    }
    const providerFee = NumberUtil.bigNumber(sourceTokenAmount).times(85e-4);
    const adjustedSourceTokenAmount = NumberUtil.bigNumber(sourceTokenAmount).minus(providerFee);
    const sourceAmountInSmallestUnit = adjustedSourceTokenAmount.times(NumberUtil.bigNumber(10).pow(sourceTokenDecimals));
    const priceRatio = NumberUtil.bigNumber(sourceTokenPriceInUSD).div(toTokenPriceInUSD);
    const decimalDifference = sourceTokenDecimals - toTokenDecimals;
    const toTokenAmountInSmallestUnit = sourceAmountInSmallestUnit.times(priceRatio).div(NumberUtil.bigNumber(10).pow(decimalDifference));
    const toTokenAmount = toTokenAmountInSmallestUnit.div(NumberUtil.bigNumber(10).pow(toTokenDecimals));
    const amount = toTokenAmount.toFixed(toTokenDecimals).toString();
    return amount;
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/SwapController.js
var INITIAL_GAS_LIMIT = 15e4;
var TO_AMOUNT_DECIMALS = 6;
var initialState = {
  // Loading states
  initializing: false,
  initialized: false,
  loadingPrices: false,
  loadingQuote: false,
  loadingApprovalTransaction: false,
  loadingBuildTransaction: false,
  loadingTransaction: false,
  // Error states
  fetchError: false,
  // Approval & Swap transaction states
  approvalTransaction: void 0,
  swapTransaction: void 0,
  transactionError: void 0,
  // Input values
  sourceToken: void 0,
  sourceTokenAmount: "",
  sourceTokenPriceInUSD: 0,
  toToken: void 0,
  toTokenAmount: "",
  toTokenPriceInUSD: 0,
  networkPrice: "0",
  networkBalanceInUSD: "0",
  networkTokenSymbol: "",
  inputError: void 0,
  // Request values
  slippage: ConstantsUtil2.CONVERT_SLIPPAGE_TOLERANCE,
  // Tokens
  tokens: void 0,
  popularTokens: void 0,
  suggestedTokens: void 0,
  foundTokens: void 0,
  myTokensWithBalance: void 0,
  tokensPriceMap: {},
  // Calculations
  gasFee: "0",
  gasPriceInUSD: 0,
  priceImpact: void 0,
  maxSlippage: void 0,
  providerFee: void 0
};
var state13 = proxy(initialState);
var SwapController = {
  state: state13,
  subscribe(callback) {
    return subscribe(state13, () => callback(state13));
  },
  subscribeKey(key2, callback) {
    return subscribeKey(state13, key2, callback);
  },
  getParams() {
    var _a7, _b3, _c2, _d, _e7, _f, _g, _h;
    const caipAddress = ChainController.state.activeCaipAddress;
    const namespace = ChainController.state.activeChain;
    const address = CoreHelperUtil.getPlainAddress(caipAddress);
    const networkAddress = ChainController.getActiveNetworkTokenAddress();
    const connectorId = StorageUtil.getConnectedConnectorId(namespace);
    if (!address) {
      throw new Error("No address found to swap the tokens from.");
    }
    const invalidToToken = !((_a7 = state13.toToken) == null ? void 0 : _a7.address) || !((_b3 = state13.toToken) == null ? void 0 : _b3.decimals);
    const invalidSourceToken = !((_c2 = state13.sourceToken) == null ? void 0 : _c2.address) || !((_d = state13.sourceToken) == null ? void 0 : _d.decimals) || !NumberUtil.bigNumber(state13.sourceTokenAmount).gt(0);
    const invalidSourceTokenAmount = !state13.sourceTokenAmount;
    return {
      networkAddress,
      fromAddress: address,
      fromCaipAddress: caipAddress,
      sourceTokenAddress: (_e7 = state13.sourceToken) == null ? void 0 : _e7.address,
      toTokenAddress: (_f = state13.toToken) == null ? void 0 : _f.address,
      toTokenAmount: state13.toTokenAmount,
      toTokenDecimals: (_g = state13.toToken) == null ? void 0 : _g.decimals,
      sourceTokenAmount: state13.sourceTokenAmount,
      sourceTokenDecimals: (_h = state13.sourceToken) == null ? void 0 : _h.decimals,
      invalidToToken,
      invalidSourceToken,
      invalidSourceTokenAmount,
      availableToSwap: caipAddress && !invalidToToken && !invalidSourceToken && !invalidSourceTokenAmount,
      isAuthConnector: connectorId === ConstantsUtil.CONNECTOR_ID.AUTH
    };
  },
  setSourceToken(sourceToken) {
    if (!sourceToken) {
      state13.sourceToken = sourceToken;
      state13.sourceTokenAmount = "";
      state13.sourceTokenPriceInUSD = 0;
      return;
    }
    state13.sourceToken = sourceToken;
    this.setTokenPrice(sourceToken.address, "sourceToken");
  },
  setSourceTokenAmount(amount) {
    state13.sourceTokenAmount = amount;
  },
  setToToken(toToken) {
    if (!toToken) {
      state13.toToken = toToken;
      state13.toTokenAmount = "";
      state13.toTokenPriceInUSD = 0;
      return;
    }
    state13.toToken = toToken;
    this.setTokenPrice(toToken.address, "toToken");
  },
  setToTokenAmount(amount) {
    state13.toTokenAmount = amount ? NumberUtil.formatNumberToLocalString(amount, TO_AMOUNT_DECIMALS) : "";
  },
  async setTokenPrice(address, target) {
    let price = state13.tokensPriceMap[address] || 0;
    if (!price) {
      state13.loadingPrices = true;
      price = await this.getAddressPrice(address);
    }
    if (target === "sourceToken") {
      state13.sourceTokenPriceInUSD = price;
    } else if (target === "toToken") {
      state13.toTokenPriceInUSD = price;
    }
    if (state13.loadingPrices) {
      state13.loadingPrices = false;
    }
    if (this.getParams().availableToSwap) {
      this.swapTokens();
    }
  },
  switchTokens() {
    if (state13.initializing || !state13.initialized) {
      return;
    }
    const newSourceToken = state13.toToken ? { ...state13.toToken } : void 0;
    const newToToken = state13.sourceToken ? { ...state13.sourceToken } : void 0;
    const newSourceTokenAmount = newSourceToken && state13.toTokenAmount === "" ? "1" : state13.toTokenAmount;
    this.setSourceToken(newSourceToken);
    this.setToToken(newToToken);
    this.setSourceTokenAmount(newSourceTokenAmount);
    this.setToTokenAmount("");
    this.swapTokens();
  },
  resetState() {
    state13.myTokensWithBalance = initialState.myTokensWithBalance;
    state13.tokensPriceMap = initialState.tokensPriceMap;
    state13.initialized = initialState.initialized;
    state13.sourceToken = initialState.sourceToken;
    state13.sourceTokenAmount = initialState.sourceTokenAmount;
    state13.sourceTokenPriceInUSD = initialState.sourceTokenPriceInUSD;
    state13.toToken = initialState.toToken;
    state13.toTokenAmount = initialState.toTokenAmount;
    state13.toTokenPriceInUSD = initialState.toTokenPriceInUSD;
    state13.networkPrice = initialState.networkPrice;
    state13.networkTokenSymbol = initialState.networkTokenSymbol;
    state13.networkBalanceInUSD = initialState.networkBalanceInUSD;
    state13.inputError = initialState.inputError;
  },
  resetValues() {
    var _a7;
    const { networkAddress } = this.getParams();
    const networkToken = (_a7 = state13.tokens) == null ? void 0 : _a7.find((token) => token.address === networkAddress);
    this.setSourceToken(networkToken);
    this.setToToken(void 0);
  },
  getApprovalLoadingState() {
    return state13.loadingApprovalTransaction;
  },
  clearError() {
    state13.transactionError = void 0;
  },
  async initializeState() {
    if (state13.initializing) {
      return;
    }
    state13.initializing = true;
    if (!state13.initialized) {
      try {
        await this.fetchTokens();
        state13.initialized = true;
      } catch (error) {
        state13.initialized = false;
        SnackController.showError("Failed to initialize swap");
        RouterController.goBack();
      }
    }
    state13.initializing = false;
  },
  async fetchTokens() {
    var _a7;
    const { networkAddress } = this.getParams();
    await this.getTokenList();
    await this.getNetworkTokenPrice();
    await this.getMyTokensWithBalance();
    const networkToken = (_a7 = state13.tokens) == null ? void 0 : _a7.find((token) => token.address === networkAddress);
    if (networkToken) {
      state13.networkTokenSymbol = networkToken.symbol;
      this.setSourceToken(networkToken);
      this.setSourceTokenAmount("1");
    }
  },
  async getTokenList() {
    const tokens = await SwapApiUtil.getTokenList();
    state13.tokens = tokens;
    state13.popularTokens = tokens.sort((aTokenInfo, bTokenInfo) => {
      if (aTokenInfo.symbol < bTokenInfo.symbol) {
        return -1;
      }
      if (aTokenInfo.symbol > bTokenInfo.symbol) {
        return 1;
      }
      return 0;
    });
    state13.suggestedTokens = tokens.filter((token) => {
      if (ConstantsUtil2.SWAP_SUGGESTED_TOKENS.includes(token.symbol)) {
        return true;
      }
      return false;
    }, {});
  },
  async getAddressPrice(address) {
    var _a7, _b3;
    const existPrice = state13.tokensPriceMap[address];
    if (existPrice) {
      return existPrice;
    }
    const response = await BlockchainApiController.fetchTokenPrice({
      projectId: OptionsController.state.projectId,
      addresses: [address]
    });
    const fungibles = (response == null ? void 0 : response.fungibles) || [];
    const allTokens = [...state13.tokens || [], ...state13.myTokensWithBalance || []];
    const symbol = (_a7 = allTokens == null ? void 0 : allTokens.find((token) => token.address === address)) == null ? void 0 : _a7.symbol;
    const price = ((_b3 = fungibles.find((p3) => p3.symbol.toLowerCase() === (symbol == null ? void 0 : symbol.toLowerCase()))) == null ? void 0 : _b3.price) || 0;
    const priceAsFloat = parseFloat(price.toString());
    state13.tokensPriceMap[address] = priceAsFloat;
    return priceAsFloat;
  },
  async getNetworkTokenPrice() {
    var _a7;
    const { networkAddress } = this.getParams();
    const response = await BlockchainApiController.fetchTokenPrice({
      projectId: OptionsController.state.projectId,
      addresses: [networkAddress]
    }).catch(() => {
      SnackController.showError("Failed to fetch network token price");
      return { fungibles: [] };
    });
    const token = (_a7 = response.fungibles) == null ? void 0 : _a7[0];
    const price = (token == null ? void 0 : token.price.toString()) || "0";
    state13.tokensPriceMap[networkAddress] = parseFloat(price);
    state13.networkTokenSymbol = (token == null ? void 0 : token.symbol) || "";
    state13.networkPrice = price;
  },
  async getMyTokensWithBalance(forceUpdate) {
    const balances = await SwapApiUtil.getMyTokensWithBalance(forceUpdate);
    if (!balances) {
      return;
    }
    await this.getInitialGasPrice();
    this.setBalances(balances);
  },
  setBalances(balances) {
    const { networkAddress } = this.getParams();
    const caipNetwork = ChainController.state.activeCaipNetwork;
    if (!caipNetwork) {
      return;
    }
    const networkToken = balances.find((token) => token.address === networkAddress);
    balances.forEach((token) => {
      state13.tokensPriceMap[token.address] = token.price || 0;
    });
    state13.myTokensWithBalance = balances.filter((token) => token.address.startsWith(caipNetwork.caipNetworkId));
    state13.networkBalanceInUSD = networkToken ? NumberUtil.multiply(networkToken.quantity.numeric, networkToken.price).toString() : "0";
  },
  async getInitialGasPrice() {
    var _a7, _b3;
    const res = await SwapApiUtil.fetchGasPrice();
    if (!res) {
      return { gasPrice: null, gasPriceInUSD: null };
    }
    switch ((_b3 = (_a7 = ChainController.state) == null ? void 0 : _a7.activeCaipNetwork) == null ? void 0 : _b3.chainNamespace) {
      case "solana":
        state13.gasFee = res.standard ?? "0";
        state13.gasPriceInUSD = NumberUtil.multiply(res.standard, state13.networkPrice).div(1e9).toNumber();
        return {
          gasPrice: BigInt(state13.gasFee),
          gasPriceInUSD: Number(state13.gasPriceInUSD)
        };
      case "eip155":
      default:
        const value = res.standard ?? "0";
        const gasFee = BigInt(value);
        const gasLimit = BigInt(INITIAL_GAS_LIMIT);
        const gasPrice = SwapCalculationUtil.getGasPriceInUSD(state13.networkPrice, gasLimit, gasFee);
        state13.gasFee = value;
        state13.gasPriceInUSD = gasPrice;
        return { gasPrice: gasFee, gasPriceInUSD: gasPrice };
    }
  },
  // -- Swap -------------------------------------- //
  async swapTokens() {
    var _a7, _b3;
    const address = AccountController.state.address;
    const sourceToken = state13.sourceToken;
    const toToken = state13.toToken;
    const haveSourceTokenAmount = NumberUtil.bigNumber(state13.sourceTokenAmount).gt(0);
    if (!toToken || !sourceToken || state13.loadingPrices || !haveSourceTokenAmount) {
      return;
    }
    state13.loadingQuote = true;
    const amountDecimal = NumberUtil.bigNumber(state13.sourceTokenAmount).times(10 ** sourceToken.decimals).round(0);
    try {
      const quoteResponse = await BlockchainApiController.fetchSwapQuote({
        userAddress: address,
        projectId: OptionsController.state.projectId,
        from: sourceToken.address,
        to: toToken.address,
        gasPrice: state13.gasFee,
        amount: amountDecimal.toString()
      });
      state13.loadingQuote = false;
      const quoteToAmount = (_b3 = (_a7 = quoteResponse == null ? void 0 : quoteResponse.quotes) == null ? void 0 : _a7[0]) == null ? void 0 : _b3.toAmount;
      if (!quoteToAmount) {
        AlertController.open({
          shortMessage: "Incorrect amount",
          longMessage: "Please enter a valid amount"
        }, "error");
        return;
      }
      const toTokenAmount = NumberUtil.bigNumber(quoteToAmount).div(10 ** toToken.decimals).toString();
      this.setToTokenAmount(toTokenAmount);
      const isInsufficientToken = this.hasInsufficientToken(state13.sourceTokenAmount, sourceToken.address);
      if (isInsufficientToken) {
        state13.inputError = "Insufficient balance";
      } else {
        state13.inputError = void 0;
        this.setTransactionDetails();
      }
    } catch (error) {
      state13.loadingQuote = false;
      state13.inputError = "Insufficient balance";
    }
  },
  // -- Create Transactions -------------------------------------- //
  async getTransaction() {
    const { fromCaipAddress, availableToSwap } = this.getParams();
    const sourceToken = state13.sourceToken;
    const toToken = state13.toToken;
    if (!fromCaipAddress || !availableToSwap || !sourceToken || !toToken || state13.loadingQuote) {
      return void 0;
    }
    try {
      state13.loadingBuildTransaction = true;
      const hasAllowance = await SwapApiUtil.fetchSwapAllowance({
        userAddress: fromCaipAddress,
        tokenAddress: sourceToken.address,
        sourceTokenAmount: state13.sourceTokenAmount,
        sourceTokenDecimals: sourceToken.decimals
      });
      let transaction = void 0;
      if (hasAllowance) {
        transaction = await this.createSwapTransaction();
      } else {
        transaction = await this.createAllowanceTransaction();
      }
      state13.loadingBuildTransaction = false;
      state13.fetchError = false;
      return transaction;
    } catch (error) {
      RouterController.goBack();
      SnackController.showError("Failed to check allowance");
      state13.loadingBuildTransaction = false;
      state13.approvalTransaction = void 0;
      state13.swapTransaction = void 0;
      state13.fetchError = true;
      return void 0;
    }
  },
  async createAllowanceTransaction() {
    const { fromCaipAddress, fromAddress, sourceTokenAddress, toTokenAddress } = this.getParams();
    if (!fromCaipAddress || !toTokenAddress) {
      return void 0;
    }
    if (!sourceTokenAddress) {
      throw new Error("createAllowanceTransaction - No source token address found.");
    }
    try {
      const response = await BlockchainApiController.generateApproveCalldata({
        projectId: OptionsController.state.projectId,
        from: sourceTokenAddress,
        to: toTokenAddress,
        userAddress: fromCaipAddress
      });
      const gasLimit = await ConnectionController.estimateGas({
        address: fromAddress,
        to: CoreHelperUtil.getPlainAddress(response.tx.to),
        data: response.tx.data
      });
      const transaction = {
        data: response.tx.data,
        to: CoreHelperUtil.getPlainAddress(response.tx.from),
        gas: gasLimit,
        gasPrice: BigInt(response.tx.eip155.gasPrice),
        value: BigInt(response.tx.value),
        toAmount: state13.toTokenAmount
      };
      state13.swapTransaction = void 0;
      state13.approvalTransaction = {
        data: transaction.data,
        to: transaction.to,
        gas: transaction.gas ?? BigInt(0),
        gasPrice: transaction.gasPrice,
        value: transaction.value,
        toAmount: transaction.toAmount
      };
      return {
        data: transaction.data,
        to: transaction.to,
        gas: transaction.gas ?? BigInt(0),
        gasPrice: transaction.gasPrice,
        value: transaction.value,
        toAmount: transaction.toAmount
      };
    } catch (error) {
      RouterController.goBack();
      SnackController.showError("Failed to create approval transaction");
      state13.approvalTransaction = void 0;
      state13.swapTransaction = void 0;
      state13.fetchError = true;
      return void 0;
    }
  },
  async createSwapTransaction() {
    var _a7;
    const { networkAddress, fromCaipAddress, sourceTokenAmount } = this.getParams();
    const sourceToken = state13.sourceToken;
    const toToken = state13.toToken;
    if (!fromCaipAddress || !sourceTokenAmount || !sourceToken || !toToken) {
      return void 0;
    }
    const amount = (_a7 = ConnectionController.parseUnits(sourceTokenAmount, sourceToken.decimals)) == null ? void 0 : _a7.toString();
    try {
      const response = await BlockchainApiController.generateSwapCalldata({
        projectId: OptionsController.state.projectId,
        userAddress: fromCaipAddress,
        from: sourceToken.address,
        to: toToken.address,
        amount
      });
      const isSourceTokenIsNetworkToken = sourceToken.address === networkAddress;
      const gas = BigInt(response.tx.eip155.gas);
      const gasPrice = BigInt(response.tx.eip155.gasPrice);
      const transaction = {
        data: response.tx.data,
        to: CoreHelperUtil.getPlainAddress(response.tx.to),
        gas,
        gasPrice,
        value: isSourceTokenIsNetworkToken ? BigInt(amount ?? "0") : BigInt("0"),
        toAmount: state13.toTokenAmount
      };
      state13.gasPriceInUSD = SwapCalculationUtil.getGasPriceInUSD(state13.networkPrice, gas, gasPrice);
      state13.approvalTransaction = void 0;
      state13.swapTransaction = transaction;
      return transaction;
    } catch (error) {
      RouterController.goBack();
      SnackController.showError("Failed to create transaction");
      state13.approvalTransaction = void 0;
      state13.swapTransaction = void 0;
      state13.fetchError = true;
      return void 0;
    }
  },
  // -- Send Transactions --------------------------------- //
  async sendTransactionForApproval(data) {
    var _a7, _b3, _c2;
    const { fromAddress, isAuthConnector } = this.getParams();
    state13.loadingApprovalTransaction = true;
    const approveLimitMessage = `Approve limit increase in your wallet`;
    if (isAuthConnector) {
      RouterController.pushTransactionStack({
        view: null,
        goBack: true,
        onSuccess() {
          SnackController.showLoading(approveLimitMessage);
        }
      });
    } else {
      SnackController.showLoading(approveLimitMessage);
    }
    try {
      await ConnectionController.sendTransaction({
        address: fromAddress,
        to: data.to,
        data: data.data,
        gas: data.gas,
        gasPrice: BigInt(data.gasPrice),
        value: data.value,
        chainNamespace: "eip155"
      });
      await this.swapTokens();
      await this.getTransaction();
      state13.approvalTransaction = void 0;
      state13.loadingApprovalTransaction = false;
    } catch (err) {
      const error = err;
      state13.transactionError = error == null ? void 0 : error.shortMessage;
      state13.loadingApprovalTransaction = false;
      SnackController.showError((error == null ? void 0 : error.shortMessage) || "Transaction error");
      EventsController.sendEvent({
        type: "track",
        event: "SWAP_APPROVAL_ERROR",
        properties: {
          message: (error == null ? void 0 : error.shortMessage) || (error == null ? void 0 : error.message) || "Unknown",
          network: ((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId) || "",
          swapFromToken: ((_b3 = this.state.sourceToken) == null ? void 0 : _b3.symbol) || "",
          swapToToken: ((_c2 = this.state.toToken) == null ? void 0 : _c2.symbol) || "",
          swapFromAmount: this.state.sourceTokenAmount || "",
          swapToAmount: this.state.toTokenAmount || "",
          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT
        }
      });
    }
  },
  async sendTransactionForSwap(data) {
    var _a7, _b3, _c2, _d, _e7, _f, _g, _h, _i3, _j, _k, _l;
    if (!data) {
      return void 0;
    }
    const { fromAddress, toTokenAmount, isAuthConnector } = this.getParams();
    state13.loadingTransaction = true;
    const snackbarPendingMessage = `Swapping ${(_a7 = state13.sourceToken) == null ? void 0 : _a7.symbol} to ${NumberUtil.formatNumberToLocalString(toTokenAmount, 3)} ${(_b3 = state13.toToken) == null ? void 0 : _b3.symbol}`;
    const snackbarSuccessMessage = `Swapped ${(_c2 = state13.sourceToken) == null ? void 0 : _c2.symbol} to ${NumberUtil.formatNumberToLocalString(toTokenAmount, 3)} ${(_d = state13.toToken) == null ? void 0 : _d.symbol}`;
    if (isAuthConnector) {
      RouterController.pushTransactionStack({
        view: "Account",
        goBack: false,
        onSuccess() {
          SnackController.showLoading(snackbarPendingMessage);
          SwapController.resetState();
        }
      });
    } else {
      SnackController.showLoading("Confirm transaction in your wallet");
    }
    try {
      const forceUpdateAddresses = [(_e7 = state13.sourceToken) == null ? void 0 : _e7.address, (_f = state13.toToken) == null ? void 0 : _f.address].join(",");
      const transactionHash = await ConnectionController.sendTransaction({
        address: fromAddress,
        to: data.to,
        data: data.data,
        gas: data.gas,
        gasPrice: BigInt(data.gasPrice),
        value: data.value,
        chainNamespace: "eip155"
      });
      state13.loadingTransaction = false;
      SnackController.showSuccess(snackbarSuccessMessage);
      EventsController.sendEvent({
        type: "track",
        event: "SWAP_SUCCESS",
        properties: {
          network: ((_g = ChainController.state.activeCaipNetwork) == null ? void 0 : _g.caipNetworkId) || "",
          swapFromToken: ((_h = this.state.sourceToken) == null ? void 0 : _h.symbol) || "",
          swapToToken: ((_i3 = this.state.toToken) == null ? void 0 : _i3.symbol) || "",
          swapFromAmount: this.state.sourceTokenAmount || "",
          swapToAmount: this.state.toTokenAmount || "",
          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT
        }
      });
      SwapController.resetState();
      if (!isAuthConnector) {
        RouterController.replace("Account");
      }
      SwapController.getMyTokensWithBalance(forceUpdateAddresses);
      return transactionHash;
    } catch (err) {
      const error = err;
      state13.transactionError = error == null ? void 0 : error.shortMessage;
      state13.loadingTransaction = false;
      SnackController.showError((error == null ? void 0 : error.shortMessage) || "Transaction error");
      EventsController.sendEvent({
        type: "track",
        event: "SWAP_ERROR",
        properties: {
          message: (error == null ? void 0 : error.shortMessage) || (error == null ? void 0 : error.message) || "Unknown",
          network: ((_j = ChainController.state.activeCaipNetwork) == null ? void 0 : _j.caipNetworkId) || "",
          swapFromToken: ((_k = this.state.sourceToken) == null ? void 0 : _k.symbol) || "",
          swapToToken: ((_l = this.state.toToken) == null ? void 0 : _l.symbol) || "",
          swapFromAmount: this.state.sourceTokenAmount || "",
          swapToAmount: this.state.toTokenAmount || "",
          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT
        }
      });
      return void 0;
    }
  },
  // -- Checks -------------------------------------------- //
  hasInsufficientToken(sourceTokenAmount, sourceTokenAddress) {
    const isInsufficientSourceTokenForSwap = SwapCalculationUtil.isInsufficientSourceTokenForSwap(sourceTokenAmount, sourceTokenAddress, state13.myTokensWithBalance);
    let insufficientNetworkTokenForGas = true;
    if (AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT) {
      insufficientNetworkTokenForGas = false;
    } else {
      insufficientNetworkTokenForGas = SwapCalculationUtil.isInsufficientNetworkTokenForGas(state13.networkBalanceInUSD, state13.gasPriceInUSD);
    }
    return insufficientNetworkTokenForGas || isInsufficientSourceTokenForSwap;
  },
  // -- Calculations -------------------------------------- //
  setTransactionDetails() {
    const { toTokenAddress, toTokenDecimals } = this.getParams();
    if (!toTokenAddress || !toTokenDecimals) {
      return;
    }
    state13.gasPriceInUSD = SwapCalculationUtil.getGasPriceInUSD(state13.networkPrice, BigInt(state13.gasFee), BigInt(INITIAL_GAS_LIMIT));
    state13.priceImpact = SwapCalculationUtil.getPriceImpact({
      sourceTokenAmount: state13.sourceTokenAmount,
      sourceTokenPriceInUSD: state13.sourceTokenPriceInUSD,
      toTokenPriceInUSD: state13.toTokenPriceInUSD,
      toTokenAmount: state13.toTokenAmount
    });
    state13.maxSlippage = SwapCalculationUtil.getMaxSlippage(state13.slippage, state13.toTokenAmount);
    state13.providerFee = SwapCalculationUtil.getProviderFee(state13.sourceTokenAmount);
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/AccountController.js
var state14 = proxy({
  currentTab: 0,
  tokenBalance: [],
  smartAccountDeployed: false,
  addressLabels: /* @__PURE__ */ new Map(),
  allAccounts: []
});
var AccountController = {
  state: state14,
  replaceState(newState) {
    if (!newState) {
      return;
    }
    Object.assign(state14, ref2(newState));
  },
  subscribe(callback) {
    return ChainController.subscribeChainProp("accountState", (accountState2) => {
      if (accountState2) {
        return callback(accountState2);
      }
      return void 0;
    });
  },
  subscribeKey(property2, callback, chain) {
    let prev = void 0;
    return ChainController.subscribeChainProp("accountState", (accountState2) => {
      if (accountState2) {
        const nextValue = accountState2[property2];
        if (prev !== nextValue) {
          prev = nextValue;
          callback(nextValue);
        }
      }
    }, chain);
  },
  setStatus(status, chain) {
    ChainController.setAccountProp("status", status, chain);
  },
  getCaipAddress(chain) {
    return ChainController.getAccountProp("caipAddress", chain);
  },
  setCaipAddress(caipAddress, chain) {
    const newAddress = caipAddress ? CoreHelperUtil.getPlainAddress(caipAddress) : void 0;
    if (chain === ChainController.state.activeChain) {
      ChainController.state.activeCaipAddress = caipAddress;
    }
    ChainController.setAccountProp("caipAddress", caipAddress, chain);
    ChainController.setAccountProp("address", newAddress, chain);
  },
  setBalance(balance, balanceSymbol, chain) {
    ChainController.setAccountProp("balance", balance, chain);
    ChainController.setAccountProp("balanceSymbol", balanceSymbol, chain);
  },
  setProfileName(profileName, chain) {
    ChainController.setAccountProp("profileName", profileName, chain);
  },
  setProfileImage(profileImage, chain) {
    ChainController.setAccountProp("profileImage", profileImage, chain);
  },
  setUser(user) {
    state14.user = user;
  },
  setAddressExplorerUrl(explorerUrl, chain) {
    ChainController.setAccountProp("addressExplorerUrl", explorerUrl, chain);
  },
  setSmartAccountDeployed(isDeployed, chain) {
    ChainController.setAccountProp("smartAccountDeployed", isDeployed, chain);
  },
  setCurrentTab(currentTab) {
    ChainController.setAccountProp("currentTab", currentTab, ChainController.state.activeChain);
  },
  setTokenBalance(tokenBalance, chain) {
    if (tokenBalance) {
      ChainController.setAccountProp("tokenBalance", tokenBalance, chain);
    }
  },
  setShouldUpdateToAddress(address, chain) {
    ChainController.setAccountProp("shouldUpdateToAddress", address, chain);
  },
  setAllAccounts(accounts, namespace) {
    ChainController.setAccountProp("allAccounts", accounts, namespace);
  },
  addAddressLabel(address, label, chain) {
    const map = ChainController.getAccountProp("addressLabels", chain) || /* @__PURE__ */ new Map();
    map.set(address, label);
    ChainController.setAccountProp("addressLabels", map, chain);
  },
  removeAddressLabel(address, chain) {
    const map = ChainController.getAccountProp("addressLabels", chain) || /* @__PURE__ */ new Map();
    map.delete(address);
    ChainController.setAccountProp("addressLabels", map, chain);
  },
  setConnectedWalletInfo(connectedWalletInfo, chain) {
    ChainController.setAccountProp("connectedWalletInfo", connectedWalletInfo, chain, false);
  },
  setPreferredAccountType(preferredAccountType, chain) {
    ChainController.setAccountProp("preferredAccountType", preferredAccountType, chain);
  },
  setSocialProvider(socialProvider, chain) {
    if (socialProvider) {
      ChainController.setAccountProp("socialProvider", socialProvider, chain);
    }
  },
  setSocialWindow(socialWindow, chain) {
    ChainController.setAccountProp("socialWindow", socialWindow ? ref2(socialWindow) : void 0, chain);
  },
  setFarcasterUrl(farcasterUrl, chain) {
    ChainController.setAccountProp("farcasterUrl", farcasterUrl, chain);
  },
  async fetchTokenBalance(onError) {
    var _a7, _b3;
    state14.balanceLoading = true;
    const chainId = (_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId;
    const chain = (_b3 = ChainController.state.activeCaipNetwork) == null ? void 0 : _b3.chainNamespace;
    const caipAddress = ChainController.state.activeCaipAddress;
    const address = caipAddress ? CoreHelperUtil.getPlainAddress(caipAddress) : void 0;
    if (state14.lastRetry && !CoreHelperUtil.isAllowedRetry(state14.lastRetry, 30 * ConstantsUtil2.ONE_SEC_MS)) {
      state14.balanceLoading = false;
      return [];
    }
    try {
      if (address && chainId && chain) {
        const response = await BlockchainApiController.getBalance(address, chainId);
        const filteredBalances = response.balances.filter((balance) => balance.quantity.decimals !== "0");
        this.setTokenBalance(filteredBalances, chain);
        SwapController.setBalances(SwapApiUtil.mapBalancesToSwapTokens(response.balances));
        state14.lastRetry = void 0;
        state14.balanceLoading = false;
        return filteredBalances;
      }
    } catch (error) {
      state14.lastRetry = Date.now();
      onError == null ? void 0 : onError(error);
      SnackController.showError("Token Balance Unavailable");
    } finally {
      state14.balanceLoading = false;
    }
    return [];
  },
  resetAccount(chain) {
    ChainController.resetAccount(chain);
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/PublicStateController.js
var state15 = proxy({
  loading: false,
  open: false,
  selectedNetworkId: void 0,
  activeChain: void 0,
  initialized: false
});
var PublicStateController = {
  state: state15,
  subscribe(callback) {
    return subscribe(state15, () => callback(state15));
  },
  set(newState) {
    Object.assign(state15, { ...state15, ...newState });
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/ChainController.js
var accountState = {
  currentTab: 0,
  tokenBalance: [],
  smartAccountDeployed: false,
  addressLabels: /* @__PURE__ */ new Map(),
  allAccounts: []
};
var networkState = {
  supportsAllNetworks: true,
  smartAccountEnabledNetworks: []
};
var state16 = proxy({
  chains: proxyMap(),
  activeCaipAddress: void 0,
  activeChain: void 0,
  activeCaipNetwork: void 0,
  noAdapters: false,
  universalAdapter: {
    networkControllerClient: void 0,
    connectionControllerClient: void 0
  },
  isSwitchingNamespace: false
});
var ChainController = {
  state: state16,
  subscribe(callback) {
    return subscribe(state16, () => {
      callback(state16);
    });
  },
  subscribeKey(key2, callback) {
    return subscribeKey(state16, key2, callback);
  },
  subscribeChainProp(property2, callback, chain) {
    let prev = void 0;
    return subscribe(state16.chains, () => {
      var _a7;
      const activeChain = chain || state16.activeChain;
      if (activeChain) {
        const nextValue = (_a7 = state16.chains.get(activeChain)) == null ? void 0 : _a7[property2];
        if (prev !== nextValue) {
          prev = nextValue;
          callback(nextValue);
        }
      }
    });
  },
  initialize(adapters, caipNetworks, clients) {
    const { chainId: activeChainId, namespace: activeNamespace } = StorageUtil.getActiveNetworkProps();
    const activeCaipNetwork = caipNetworks == null ? void 0 : caipNetworks.find((network) => network.id.toString() === (activeChainId == null ? void 0 : activeChainId.toString()));
    const defaultAdapter = adapters.find((adapter) => (adapter == null ? void 0 : adapter.namespace) === activeNamespace);
    const adapterToActivate = defaultAdapter || (adapters == null ? void 0 : adapters[0]);
    const namespaces = /* @__PURE__ */ new Set([...(caipNetworks == null ? void 0 : caipNetworks.map((network) => network.chainNamespace)) ?? []]);
    if ((adapters == null ? void 0 : adapters.length) === 0 || !adapterToActivate) {
      state16.noAdapters = true;
    }
    if (!state16.noAdapters) {
      state16.activeChain = adapterToActivate == null ? void 0 : adapterToActivate.namespace;
      state16.activeCaipNetwork = activeCaipNetwork;
      if (state16.activeChain) {
        PublicStateController.set({ activeChain: adapterToActivate == null ? void 0 : adapterToActivate.namespace });
      }
    }
    namespaces.forEach((namespace) => {
      const namespaceNetworks = caipNetworks == null ? void 0 : caipNetworks.filter((network) => network.chainNamespace === namespace);
      ChainController.state.chains.set(namespace, {
        namespace,
        networkState,
        accountState,
        caipNetworks: namespaceNetworks ?? [],
        ...clients
      });
      this.setRequestedCaipNetworks(namespaceNetworks ?? [], namespace);
    });
  },
  removeAdapter(namespace) {
    var _a7, _b3;
    if (state16.activeChain === namespace) {
      const nextAdapter = Array.from(state16.chains.entries()).find(([chainNamespace]) => chainNamespace !== namespace);
      if (nextAdapter) {
        const caipNetwork = (_b3 = (_a7 = nextAdapter[1]) == null ? void 0 : _a7.caipNetworks) == null ? void 0 : _b3[0];
        if (caipNetwork) {
          this.setActiveCaipNetwork(caipNetwork);
        }
      }
    }
    state16.chains.delete(namespace);
  },
  addAdapter(adapter, { networkControllerClient, connectionControllerClient }, caipNetworks) {
    state16.chains.set(adapter.namespace, {
      namespace: adapter.namespace,
      networkState,
      accountState,
      caipNetworks,
      connectionControllerClient,
      networkControllerClient
    });
    this.setRequestedCaipNetworks((caipNetworks == null ? void 0 : caipNetworks.filter((caipNetwork) => caipNetwork.chainNamespace === adapter.namespace)) ?? [], adapter.namespace);
  },
  addNetwork(network) {
    var _a7;
    const chainAdapter = state16.chains.get(network.chainNamespace);
    if (chainAdapter) {
      const newNetworks = [...chainAdapter.caipNetworks || []];
      if (!((_a7 = chainAdapter.caipNetworks) == null ? void 0 : _a7.find((caipNetwork) => caipNetwork.id === network.id))) {
        newNetworks.push(network);
      }
      state16.chains.set(network.chainNamespace, { ...chainAdapter, caipNetworks: newNetworks });
      this.setRequestedCaipNetworks(newNetworks, network.chainNamespace);
    }
  },
  removeNetwork(namespace, networkId) {
    var _a7, _b3, _c2;
    const chainAdapter = state16.chains.get(namespace);
    if (chainAdapter) {
      const isActiveNetwork = ((_a7 = state16.activeCaipNetwork) == null ? void 0 : _a7.id) === networkId;
      const newCaipNetworksOfAdapter = [
        ...((_b3 = chainAdapter.caipNetworks) == null ? void 0 : _b3.filter((network) => network.id !== networkId)) || []
      ];
      if (isActiveNetwork && ((_c2 = chainAdapter == null ? void 0 : chainAdapter.caipNetworks) == null ? void 0 : _c2[0])) {
        this.setActiveCaipNetwork(chainAdapter.caipNetworks[0]);
      }
      state16.chains.set(namespace, { ...chainAdapter, caipNetworks: newCaipNetworksOfAdapter });
      this.setRequestedCaipNetworks(newCaipNetworksOfAdapter || [], namespace);
    }
  },
  setAdapterNetworkState(chain, props) {
    const chainAdapter = state16.chains.get(chain);
    if (chainAdapter) {
      chainAdapter.networkState = ref2({
        ...chainAdapter.networkState || networkState,
        ...props
      });
      state16.chains.set(chain, ref2(chainAdapter));
    }
  },
  setChainAccountData(chain, accountProps, _unknown = true) {
    if (!chain) {
      throw new Error("Chain is required to update chain account data");
    }
    const chainAdapter = state16.chains.get(chain);
    if (chainAdapter) {
      chainAdapter.accountState = ref2({
        ...chainAdapter.accountState || accountState,
        ...accountProps
      });
      state16.chains.set(chain, chainAdapter);
      if (state16.chains.size === 1 || state16.activeChain === chain) {
        if (accountProps.caipAddress) {
          state16.activeCaipAddress = accountProps.caipAddress;
        }
        AccountController.replaceState(chainAdapter.accountState);
      }
    }
  },
  // eslint-disable-next-line max-params
  setAccountProp(prop, value, chain, replaceState = true) {
    this.setChainAccountData(chain, {
      [prop]: value
    }, replaceState);
  },
  setActiveNamespace(chain) {
    var _a7, _b3;
    state16.activeChain = chain;
    const newAdapter = chain ? state16.chains.get(chain) : void 0;
    const caipNetwork = (_a7 = newAdapter == null ? void 0 : newAdapter.networkState) == null ? void 0 : _a7.caipNetwork;
    if ((caipNetwork == null ? void 0 : caipNetwork.id) && chain) {
      state16.activeCaipAddress = (_b3 = newAdapter == null ? void 0 : newAdapter.accountState) == null ? void 0 : _b3.caipAddress;
      state16.activeCaipNetwork = caipNetwork;
      StorageUtil.setActiveCaipNetworkId(caipNetwork == null ? void 0 : caipNetwork.caipNetworkId);
      PublicStateController.set({
        activeChain: chain,
        selectedNetworkId: caipNetwork == null ? void 0 : caipNetwork.caipNetworkId
      });
    }
  },
  setActiveCaipNetwork(caipNetwork) {
    var _a7, _b3, _c2;
    if (!caipNetwork) {
      return;
    }
    if (state16.activeChain !== caipNetwork.chainNamespace) {
      this.setIsSwitchingNamespace(true);
      ConnectorController.setFilterByNamespace(caipNetwork.chainNamespace);
    }
    const newAdapter = state16.chains.get(caipNetwork.chainNamespace);
    state16.activeChain = caipNetwork.chainNamespace;
    state16.activeCaipNetwork = caipNetwork;
    if ((_a7 = newAdapter == null ? void 0 : newAdapter.accountState) == null ? void 0 : _a7.address) {
      state16.activeCaipAddress = `${caipNetwork.chainNamespace}:${caipNetwork.id}:${(_b3 = newAdapter == null ? void 0 : newAdapter.accountState) == null ? void 0 : _b3.address}`;
    } else {
      state16.activeCaipAddress = void 0;
    }
    if (newAdapter) {
      AccountController.replaceState(newAdapter.accountState);
    }
    PublicStateController.set({
      activeChain: state16.activeChain,
      selectedNetworkId: (_c2 = state16.activeCaipNetwork) == null ? void 0 : _c2.caipNetworkId
    });
    StorageUtil.setActiveCaipNetworkId(caipNetwork.caipNetworkId);
    const isSupported = this.checkIfSupportedNetwork(caipNetwork.chainNamespace);
    if (!isSupported && !OptionsController.state.allowUnsupportedChain) {
      this.showUnsupportedChainUI();
    }
  },
  addCaipNetwork(caipNetwork) {
    var _a7;
    if (!caipNetwork) {
      return;
    }
    const chain = state16.chains.get(caipNetwork.chainNamespace);
    if (chain) {
      (_a7 = chain == null ? void 0 : chain.caipNetworks) == null ? void 0 : _a7.push(caipNetwork);
    }
  },
  async switchActiveNetwork(network) {
    var _a7;
    const activeAdapter = ChainController.state.chains.get(ChainController.state.activeChain);
    const unsupportedNetwork = !((_a7 = activeAdapter == null ? void 0 : activeAdapter.caipNetworks) == null ? void 0 : _a7.some((caipNetwork) => {
      var _a8;
      return caipNetwork.id === ((_a8 = state16.activeCaipNetwork) == null ? void 0 : _a8.id);
    }));
    if (unsupportedNetwork) {
      RouterController.goBack();
    }
    const networkControllerClient = this.getNetworkControllerClient(network.chainNamespace);
    if (networkControllerClient) {
      await networkControllerClient.switchCaipNetwork(network);
      EventsController.sendEvent({
        type: "track",
        event: "SWITCH_NETWORK",
        properties: { network: network.caipNetworkId }
      });
    }
  },
  getNetworkControllerClient(chainNamespace) {
    const chain = chainNamespace || state16.activeChain;
    const chainAdapter = state16.chains.get(chain);
    if (!chainAdapter) {
      throw new Error("Chain adapter not found");
    }
    if (!chainAdapter.networkControllerClient) {
      throw new Error("NetworkController client not set");
    }
    return chainAdapter.networkControllerClient;
  },
  getConnectionControllerClient(_chain) {
    const chain = _chain || state16.activeChain;
    if (!chain) {
      throw new Error("Chain is required to get connection controller client");
    }
    const chainAdapter = state16.chains.get(chain);
    if (!(chainAdapter == null ? void 0 : chainAdapter.connectionControllerClient)) {
      throw new Error("ConnectionController client not set");
    }
    return chainAdapter.connectionControllerClient;
  },
  getAccountProp(key2, _chain) {
    var _a7;
    let chain = state16.activeChain;
    if (_chain) {
      chain = _chain;
    }
    if (!chain) {
      return void 0;
    }
    const chainAccountState = (_a7 = state16.chains.get(chain)) == null ? void 0 : _a7.accountState;
    if (!chainAccountState) {
      return void 0;
    }
    return chainAccountState[key2];
  },
  getNetworkProp(key2, namespace) {
    var _a7;
    const chainNetworkState = (_a7 = state16.chains.get(namespace)) == null ? void 0 : _a7.networkState;
    if (!chainNetworkState) {
      return void 0;
    }
    return chainNetworkState[key2];
  },
  getRequestedCaipNetworks(chainToFilter) {
    const adapter = state16.chains.get(chainToFilter);
    const { approvedCaipNetworkIds = [], requestedCaipNetworks = [] } = (adapter == null ? void 0 : adapter.networkState) || {};
    const sortedNetworks = CoreHelperUtil.sortRequestedNetworks(approvedCaipNetworkIds, requestedCaipNetworks);
    return sortedNetworks;
  },
  getAllRequestedCaipNetworks() {
    const requestedCaipNetworks = [];
    state16.chains.forEach((chainAdapter) => {
      const caipNetworks = this.getRequestedCaipNetworks(chainAdapter.namespace);
      requestedCaipNetworks.push(...caipNetworks);
    });
    return requestedCaipNetworks;
  },
  setRequestedCaipNetworks(requestedCaipNetworks, chain) {
    this.setAdapterNetworkState(chain, { requestedCaipNetworks });
  },
  getAllApprovedCaipNetworkIds() {
    const approvedCaipNetworkIds = [];
    state16.chains.forEach((chainAdapter) => {
      const approvedIds = this.getApprovedCaipNetworkIds(chainAdapter.namespace);
      approvedCaipNetworkIds.push(...approvedIds);
    });
    return approvedCaipNetworkIds;
  },
  getActiveCaipNetwork() {
    return state16.activeCaipNetwork;
  },
  getActiveCaipAddress() {
    return state16.activeCaipAddress;
  },
  getApprovedCaipNetworkIds(namespace) {
    var _a7;
    const adapter = state16.chains.get(namespace);
    const approvedCaipNetworkIds = ((_a7 = adapter == null ? void 0 : adapter.networkState) == null ? void 0 : _a7.approvedCaipNetworkIds) || [];
    return approvedCaipNetworkIds;
  },
  async setApprovedCaipNetworksData(namespace) {
    const networkControllerClient = this.getNetworkControllerClient();
    const data = await (networkControllerClient == null ? void 0 : networkControllerClient.getApprovedCaipNetworksData());
    this.setAdapterNetworkState(namespace, {
      approvedCaipNetworkIds: data == null ? void 0 : data.approvedCaipNetworkIds,
      supportsAllNetworks: data == null ? void 0 : data.supportsAllNetworks
    });
  },
  checkIfSupportedNetwork(namespace) {
    const activeCaipNetwork = this.state.activeCaipNetwork;
    const requestedCaipNetworks = this.getRequestedCaipNetworks(namespace);
    if (!requestedCaipNetworks.length) {
      return true;
    }
    return requestedCaipNetworks == null ? void 0 : requestedCaipNetworks.some((network) => network.id === (activeCaipNetwork == null ? void 0 : activeCaipNetwork.id));
  },
  checkIfSupportedChainId(chainId) {
    if (!this.state.activeChain) {
      return true;
    }
    const requestedCaipNetworks = this.getRequestedCaipNetworks(this.state.activeChain);
    return requestedCaipNetworks == null ? void 0 : requestedCaipNetworks.some((network) => network.id === chainId);
  },
  // Smart Account Network Handlers
  setSmartAccountEnabledNetworks(smartAccountEnabledNetworks, chain) {
    this.setAdapterNetworkState(chain, { smartAccountEnabledNetworks });
  },
  checkIfSmartAccountEnabled() {
    var _a7;
    const networkId = NetworkUtil.caipNetworkIdToNumber((_a7 = state16.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId);
    const activeChain = this.state.activeChain;
    if (!activeChain || !networkId) {
      return false;
    }
    const smartAccountEnabledNetworks = this.getNetworkProp("smartAccountEnabledNetworks", activeChain);
    return Boolean(smartAccountEnabledNetworks == null ? void 0 : smartAccountEnabledNetworks.includes(Number(networkId)));
  },
  getActiveNetworkTokenAddress() {
    var _a7, _b3;
    const namespace = ((_a7 = this.state.activeCaipNetwork) == null ? void 0 : _a7.chainNamespace) || "eip155";
    const chainId = ((_b3 = this.state.activeCaipNetwork) == null ? void 0 : _b3.id) || 1;
    const address = ConstantsUtil2.NATIVE_TOKEN_ADDRESS[namespace];
    return `${namespace}:${chainId}:${address}`;
  },
  showUnsupportedChainUI() {
    ModalController.open({ view: "UnsupportedChain" });
  },
  checkIfNamesSupported() {
    const activeCaipNetwork = state16.activeCaipNetwork;
    return Boolean((activeCaipNetwork == null ? void 0 : activeCaipNetwork.chainNamespace) && ConstantsUtil2.NAMES_SUPPORTED_CHAIN_NAMESPACES.includes(activeCaipNetwork.chainNamespace));
  },
  resetNetwork(namespace) {
    this.setAdapterNetworkState(namespace, {
      approvedCaipNetworkIds: void 0,
      supportsAllNetworks: true,
      smartAccountEnabledNetworks: []
    });
  },
  resetAccount(chain) {
    const chainToWrite = chain;
    if (!chainToWrite) {
      throw new Error("Chain is required to set account prop");
    }
    this.state.activeCaipAddress = void 0;
    this.setChainAccountData(chainToWrite, ref2({
      smartAccountDeployed: false,
      currentTab: 0,
      caipAddress: void 0,
      address: void 0,
      balance: void 0,
      balanceSymbol: void 0,
      profileName: void 0,
      profileImage: void 0,
      addressExplorerUrl: void 0,
      tokenBalance: [],
      connectedWalletInfo: void 0,
      preferredAccountType: void 0,
      socialProvider: void 0,
      socialWindow: void 0,
      farcasterUrl: void 0,
      provider: void 0,
      allAccounts: []
    }));
  },
  async disconnect() {
    try {
      const disconnectResults = await Promise.allSettled(Array.from(state16.chains.entries()).map(async ([namespace, adapter]) => {
        var _a7;
        try {
          if ((_a7 = adapter.connectionControllerClient) == null ? void 0 : _a7.disconnect) {
            await adapter.connectionControllerClient.disconnect();
          }
          this.resetAccount(namespace);
          this.resetNetwork(namespace);
          StorageUtil.deleteConnectedConnectorId(namespace);
        } catch (error) {
          throw new Error(`Failed to disconnect chain ${namespace}: ${error.message}`);
        }
      }));
      ConnectionController.resetWcConnection();
      const failures = disconnectResults.filter((result) => result.status === "rejected");
      if (failures.length > 0) {
        throw new Error(failures.map((f5) => f5.reason.message).join(", "));
      }
      StorageUtil.deleteConnectedSocialProvider();
      ConnectionController.resetWcConnection();
      EventsController.sendEvent({
        type: "track",
        event: "DISCONNECT_SUCCESS"
      });
    } catch (error) {
      console.error(error.message || "Failed to disconnect chains");
      EventsController.sendEvent({
        type: "track",
        event: "DISCONNECT_ERROR",
        properties: {
          message: error.message || "Failed to disconnect chains"
        }
      });
    }
  },
  setIsSwitchingNamespace(isSwitchingNamespace) {
    state16.isSwitchingNamespace = isSwitchingNamespace;
  },
  getFirstCaipNetworkSupportsAuthConnector() {
    var _a7, _b3;
    const availableChains = [];
    let firstCaipNetwork = void 0;
    state16.chains.forEach((chain) => {
      if (ConstantsUtil.AUTH_CONNECTOR_SUPPORTED_CHAINS.find((ns3) => ns3 === chain.namespace)) {
        if (chain.namespace) {
          availableChains.push(chain.namespace);
        }
      }
    });
    if (availableChains.length > 0) {
      const firstAvailableChain = availableChains[0];
      firstCaipNetwork = firstAvailableChain ? (_b3 = (_a7 = state16.chains.get(firstAvailableChain)) == null ? void 0 : _a7.caipNetworks) == null ? void 0 : _b3[0] : void 0;
      return firstCaipNetwork;
    }
    return void 0;
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/ApiController.js
var baseUrl3 = CoreHelperUtil.getApiUrl();
var api2 = new FetchUtil({ baseUrl: baseUrl3, clientId: null });
var entries = "40";
var recommendedEntries = "4";
var imageCountToFetch = 20;
var state17 = proxy({
  page: 1,
  count: 0,
  featured: [],
  recommended: [],
  wallets: [],
  search: [],
  isAnalyticsEnabled: false,
  excludedRDNS: []
});
var ApiController = {
  state: state17,
  subscribeKey(key2, callback) {
    return subscribeKey(state17, key2, callback);
  },
  _getSdkProperties() {
    const { projectId, sdkType, sdkVersion } = OptionsController.state;
    return {
      projectId,
      st: sdkType || "appkit",
      sv: sdkVersion || "html-wagmi-4.2.2"
    };
  },
  _filterOutExtensions(wallets) {
    if (OptionsController.state.isUniversalProvider) {
      return wallets.filter((w3) => Boolean(w3.mobile_link || w3.desktop_link || w3.webapp_link));
    }
    return wallets;
  },
  async _fetchWalletImage(imageId) {
    const imageUrl = `${api2.baseUrl}/getWalletImage/${imageId}`;
    const blob = await api2.getBlob({ path: imageUrl, params: ApiController._getSdkProperties() });
    AssetController.setWalletImage(imageId, URL.createObjectURL(blob));
  },
  async _fetchNetworkImage(imageId) {
    const imageUrl = `${api2.baseUrl}/public/getAssetImage/${imageId}`;
    const blob = await api2.getBlob({ path: imageUrl, params: ApiController._getSdkProperties() });
    AssetController.setNetworkImage(imageId, URL.createObjectURL(blob));
  },
  async _fetchConnectorImage(imageId) {
    const imageUrl = `${api2.baseUrl}/public/getAssetImage/${imageId}`;
    const blob = await api2.getBlob({ path: imageUrl, params: ApiController._getSdkProperties() });
    AssetController.setConnectorImage(imageId, URL.createObjectURL(blob));
  },
  async _fetchCurrencyImage(countryCode) {
    const imageUrl = `${api2.baseUrl}/public/getCurrencyImage/${countryCode}`;
    const blob = await api2.getBlob({ path: imageUrl, params: ApiController._getSdkProperties() });
    AssetController.setCurrencyImage(countryCode, URL.createObjectURL(blob));
  },
  async _fetchTokenImage(symbol) {
    const imageUrl = `${api2.baseUrl}/public/getTokenImage/${symbol}`;
    const blob = await api2.getBlob({ path: imageUrl, params: ApiController._getSdkProperties() });
    AssetController.setTokenImage(symbol, URL.createObjectURL(blob));
  },
  async prefetchNetworkImages() {
    const requestedCaipNetworks = ChainController.getAllRequestedCaipNetworks();
    const ids = requestedCaipNetworks == null ? void 0 : requestedCaipNetworks.map(({ assets }) => assets == null ? void 0 : assets.imageId).filter(Boolean).filter((imageId) => !AssetUtil.getNetworkImageById(imageId));
    if (ids) {
      await Promise.allSettled(ids.map((id) => ApiController._fetchNetworkImage(id)));
    }
  },
  async fetchConnectorImages() {
    const { connectors } = ConnectorController.state;
    const ids = connectors.map(({ imageId }) => imageId).filter(Boolean);
    await Promise.allSettled(ids.map((id) => ApiController._fetchConnectorImage(id)));
  },
  async fetchCurrencyImages(currencies = []) {
    await Promise.allSettled(currencies.map((currency) => ApiController._fetchCurrencyImage(currency)));
  },
  async fetchTokenImages(tokens = []) {
    await Promise.allSettled(tokens.map((token) => ApiController._fetchTokenImage(token)));
  },
  async fetchFeaturedWallets() {
    const { featuredWalletIds } = OptionsController.state;
    if (featuredWalletIds == null ? void 0 : featuredWalletIds.length) {
      const { data } = await api2.get({
        path: "/getWallets",
        params: {
          ...ApiController._getSdkProperties(),
          page: "1",
          entries: (featuredWalletIds == null ? void 0 : featuredWalletIds.length) ? String(featuredWalletIds.length) : recommendedEntries,
          include: featuredWalletIds == null ? void 0 : featuredWalletIds.join(",")
        }
      });
      data.sort((a2, b3) => featuredWalletIds.indexOf(a2.id) - featuredWalletIds.indexOf(b3.id));
      const images = data.map((d4) => d4.image_id).filter(Boolean);
      await Promise.allSettled(images.map((id) => ApiController._fetchWalletImage(id)));
      state17.featured = data;
    }
  },
  async fetchRecommendedWallets() {
    var _a7;
    try {
      const { includeWalletIds, excludeWalletIds, featuredWalletIds } = OptionsController.state;
      const exclude = [...excludeWalletIds ?? [], ...featuredWalletIds ?? []].filter(Boolean);
      const { data, count } = await api2.get({
        path: "/getWallets",
        params: {
          ...ApiController._getSdkProperties(),
          page: "1",
          chains: (_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId,
          entries: recommendedEntries,
          include: includeWalletIds == null ? void 0 : includeWalletIds.join(","),
          exclude: exclude == null ? void 0 : exclude.join(",")
        }
      });
      const recent = StorageUtil.getRecentWallets();
      const recommendedImages = data.map((d4) => d4.image_id).filter(Boolean);
      const recentImages = recent.map((r2) => r2.image_id).filter(Boolean);
      await Promise.allSettled([...recommendedImages, ...recentImages].map((id) => ApiController._fetchWalletImage(id)));
      state17.recommended = data;
      state17.count = count ?? 0;
    } catch {
    }
  },
  async fetchWallets({ page }) {
    var _a7;
    const { includeWalletIds, excludeWalletIds, featuredWalletIds } = OptionsController.state;
    const exclude = [
      ...state17.recommended.map(({ id }) => id),
      ...excludeWalletIds ?? [],
      ...featuredWalletIds ?? []
    ].filter(Boolean);
    const { data, count } = await api2.get({
      path: "/getWallets",
      params: {
        ...ApiController._getSdkProperties(),
        page: String(page),
        entries,
        chains: (_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId,
        include: includeWalletIds == null ? void 0 : includeWalletIds.join(","),
        exclude: exclude.join(",")
      }
    });
    const images = data.slice(0, imageCountToFetch).map((w3) => w3.image_id).filter(Boolean);
    await Promise.allSettled(images.map((id) => ApiController._fetchWalletImage(id)));
    state17.wallets = CoreHelperUtil.uniqueBy([...state17.wallets, ...ApiController._filterOutExtensions(data)], "id");
    state17.count = count > state17.count ? count : state17.count;
    state17.page = page;
  },
  async initializeExcludedWalletRdns({ ids }) {
    var _a7;
    const { data } = await api2.get({
      path: "/getWallets",
      params: {
        ...ApiController._getSdkProperties(),
        page: "1",
        entries: String(ids.length),
        chains: (_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId,
        include: ids == null ? void 0 : ids.join(",")
      }
    });
    if (data) {
      data.forEach((wallet) => {
        if (wallet == null ? void 0 : wallet.rdns) {
          state17.excludedRDNS.push(wallet.rdns);
        }
      });
    }
  },
  async searchWallet({ search, badge }) {
    var _a7;
    const { includeWalletIds, excludeWalletIds } = OptionsController.state;
    state17.search = [];
    const { data } = await api2.get({
      path: "/getWallets",
      params: {
        ...ApiController._getSdkProperties(),
        page: "1",
        entries: "100",
        search: search == null ? void 0 : search.trim(),
        badge_type: badge,
        chains: (_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.caipNetworkId,
        include: includeWalletIds == null ? void 0 : includeWalletIds.join(","),
        exclude: excludeWalletIds == null ? void 0 : excludeWalletIds.join(",")
      }
    });
    EventsController.sendEvent({
      type: "track",
      event: "SEARCH_WALLET",
      properties: { badge: badge ?? "", search: search ?? "" }
    });
    const images = data.map((w3) => w3.image_id).filter(Boolean);
    await Promise.allSettled([
      ...images.map((id) => ApiController._fetchWalletImage(id)),
      CoreHelperUtil.wait(300)
    ]);
    state17.search = ApiController._filterOutExtensions(data);
  },
  prefetch() {
    if (state17.prefetchPromise) {
      return state17.prefetchPromise;
    }
    const promises = [
      ApiController.fetchFeaturedWallets(),
      ApiController.fetchRecommendedWallets(),
      ApiController.fetchConnectorImages(),
      ApiController.prefetchNetworkImages()
    ];
    state17.prefetchPromise = Promise.allSettled(promises);
    return state17.prefetchPromise;
  },
  prefetchAnalyticsConfig() {
    var _a7;
    if ((_a7 = OptionsController.state.features) == null ? void 0 : _a7.analytics) {
      ApiController.fetchAnalyticsConfig();
    }
  },
  async fetchAnalyticsConfig() {
    const { isAnalyticsEnabled } = await api2.get({
      path: "/getAnalyticsConfig",
      params: ApiController._getSdkProperties()
    });
    OptionsController.setFeatures({ analytics: isAnalyticsEnabled });
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/ModalController.js
var state18 = proxy({
  loading: false,
  open: false,
  shake: false
});
var ModalController = {
  state: state18,
  subscribe(callback) {
    return subscribe(state18, () => callback(state18));
  },
  subscribeKey(key2, callback) {
    return subscribeKey(state18, key2, callback);
  },
  async open(options) {
    await ApiController.prefetch();
    const caipAddress = ChainController.state.activeCaipAddress;
    const noAdapters = ChainController.state.noAdapters;
    if (options == null ? void 0 : options.view) {
      RouterController.reset(options.view);
    } else if (caipAddress) {
      RouterController.reset("Account");
    } else if (noAdapters && !CoreHelperUtil.isMobile()) {
      RouterController.reset("ConnectingWalletConnectBasic");
    } else {
      RouterController.reset("Connect");
    }
    state18.open = true;
    PublicStateController.set({ open: true });
    EventsController.sendEvent({
      type: "track",
      event: "MODAL_OPEN",
      properties: { connected: Boolean(caipAddress) }
    });
  },
  close() {
    const isEmbeddedEnabled = OptionsController.state.enableEmbedded;
    const connected = Boolean(ChainController.state.activeCaipAddress);
    state18.open = false;
    if (isEmbeddedEnabled) {
      if (connected) {
        RouterController.replace("Account");
      } else {
        RouterController.push("Connect");
      }
    } else {
      PublicStateController.set({ open: false });
    }
    EventsController.sendEvent({
      type: "track",
      event: "MODAL_CLOSE",
      properties: { connected }
    });
    ConnectorController.clearNamespaceFilter();
  },
  setLoading(loading) {
    state18.loading = loading;
    PublicStateController.set({ loading });
  },
  shake() {
    if (state18.shake) {
      return;
    }
    state18.shake = true;
    setTimeout(() => {
      state18.shake = false;
    }, 500);
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/OnRampController.js
var USDC_CURRENCY_DEFAULT = {
  id: "2b92315d-eab7-5bef-84fa-089a131333f5",
  name: "USD Coin",
  symbol: "USDC",
  networks: [
    {
      name: "ethereum-mainnet",
      display_name: "Ethereum",
      chain_id: "1",
      contract_address: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
    },
    {
      name: "polygon-mainnet",
      display_name: "Polygon",
      chain_id: "137",
      contract_address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
    }
  ]
};
var USD_CURRENCY_DEFAULT = {
  id: "USD",
  payment_method_limits: [
    {
      id: "card",
      min: "10.00",
      max: "7500.00"
    },
    {
      id: "ach_bank_account",
      min: "10.00",
      max: "25000.00"
    }
  ]
};
var defaultState = {
  providers: ONRAMP_PROVIDERS,
  selectedProvider: null,
  error: null,
  purchaseCurrency: USDC_CURRENCY_DEFAULT,
  paymentCurrency: USD_CURRENCY_DEFAULT,
  purchaseCurrencies: [USDC_CURRENCY_DEFAULT],
  paymentCurrencies: [],
  quotesLoading: false
};
var state19 = proxy(defaultState);
var OnRampController = {
  state: state19,
  subscribe(callback) {
    return subscribe(state19, () => callback(state19));
  },
  subscribeKey(key2, callback) {
    return subscribeKey(state19, key2, callback);
  },
  setSelectedProvider(provider) {
    if (provider && provider.name === "meld") {
      const currency = ChainController.state.activeChain === ConstantsUtil.CHAIN.SOLANA ? "SOL" : "USDC";
      const address = AccountController.state.address ?? "";
      const url = new URL(provider.url);
      url.searchParams.append("publicKey", MELD_PUBLIC_KEY);
      url.searchParams.append("destinationCurrencyCode", currency);
      url.searchParams.append("walletAddress", address);
      provider.url = url.toString();
    }
    state19.selectedProvider = provider;
  },
  setPurchaseCurrency(currency) {
    state19.purchaseCurrency = currency;
  },
  setPaymentCurrency(currency) {
    state19.paymentCurrency = currency;
  },
  setPurchaseAmount(amount) {
    this.state.purchaseAmount = amount;
  },
  setPaymentAmount(amount) {
    this.state.paymentAmount = amount;
  },
  async getAvailableCurrencies() {
    const options = await BlockchainApiController.getOnrampOptions();
    state19.purchaseCurrencies = options.purchaseCurrencies;
    state19.paymentCurrencies = options.paymentCurrencies;
    state19.paymentCurrency = options.paymentCurrencies[0] || USD_CURRENCY_DEFAULT;
    state19.purchaseCurrency = options.purchaseCurrencies[0] || USDC_CURRENCY_DEFAULT;
    await ApiController.fetchCurrencyImages(options.paymentCurrencies.map((currency) => currency.id));
    await ApiController.fetchTokenImages(options.purchaseCurrencies.map((currency) => currency.symbol));
  },
  async getQuote() {
    var _a7, _b3;
    state19.quotesLoading = true;
    try {
      const quote = await BlockchainApiController.getOnrampQuote({
        purchaseCurrency: state19.purchaseCurrency,
        paymentCurrency: state19.paymentCurrency,
        amount: ((_a7 = state19.paymentAmount) == null ? void 0 : _a7.toString()) || "0",
        network: (_b3 = state19.purchaseCurrency) == null ? void 0 : _b3.symbol
      });
      state19.quotesLoading = false;
      state19.purchaseAmount = Number(quote == null ? void 0 : quote.purchaseAmount.amount);
      return quote;
    } catch (error) {
      state19.error = error.message;
      state19.quotesLoading = false;
      return null;
    } finally {
      state19.quotesLoading = false;
    }
  },
  resetState() {
    state19.providers = ONRAMP_PROVIDERS;
    state19.selectedProvider = null;
    state19.error = null;
    state19.purchaseCurrency = USDC_CURRENCY_DEFAULT;
    state19.paymentCurrency = USD_CURRENCY_DEFAULT;
    state19.purchaseCurrencies = [USDC_CURRENCY_DEFAULT];
    state19.paymentCurrencies = [];
    state19.paymentAmount = void 0;
    state19.purchaseAmount = void 0;
    state19.quotesLoading = false;
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/SendController.js
var state20 = proxy({
  loading: false
});
var SendController = {
  state: state20,
  subscribe(callback) {
    return subscribe(state20, () => callback(state20));
  },
  subscribeKey(key2, callback) {
    return subscribeKey(state20, key2, callback);
  },
  setToken(token) {
    if (token) {
      state20.token = ref2(token);
    }
  },
  setTokenAmount(sendTokenAmount) {
    state20.sendTokenAmount = sendTokenAmount;
  },
  setReceiverAddress(receiverAddress) {
    state20.receiverAddress = receiverAddress;
  },
  setReceiverProfileImageUrl(receiverProfileImageUrl) {
    state20.receiverProfileImageUrl = receiverProfileImageUrl;
  },
  setReceiverProfileName(receiverProfileName) {
    state20.receiverProfileName = receiverProfileName;
  },
  setGasPrice(gasPrice) {
    state20.gasPrice = gasPrice;
  },
  setGasPriceInUsd(gasPriceInUSD) {
    state20.gasPriceInUSD = gasPriceInUSD;
  },
  setNetworkBalanceInUsd(networkBalanceInUSD) {
    state20.networkBalanceInUSD = networkBalanceInUSD;
  },
  setLoading(loading) {
    state20.loading = loading;
  },
  sendToken() {
    var _a7;
    switch ((_a7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _a7.chainNamespace) {
      case "eip155":
        this.sendEvmToken();
        return;
      case "solana":
        this.sendSolanaToken();
        return;
      default:
        throw new Error("Unsupported chain");
    }
  },
  sendEvmToken() {
    var _a7, _b3, _c2, _d, _e7;
    if (((_a7 = this.state.token) == null ? void 0 : _a7.address) && this.state.sendTokenAmount && this.state.receiverAddress) {
      EventsController.sendEvent({
        type: "track",
        event: "SEND_INITIATED",
        properties: {
          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,
          token: this.state.token.address,
          amount: this.state.sendTokenAmount,
          network: ((_b3 = ChainController.state.activeCaipNetwork) == null ? void 0 : _b3.caipNetworkId) || ""
        }
      });
      this.sendERC20Token({
        receiverAddress: this.state.receiverAddress,
        tokenAddress: this.state.token.address,
        sendTokenAmount: this.state.sendTokenAmount,
        decimals: this.state.token.quantity.decimals
      });
    } else if (this.state.receiverAddress && this.state.sendTokenAmount && this.state.gasPrice && ((_c2 = this.state.token) == null ? void 0 : _c2.quantity.decimals)) {
      EventsController.sendEvent({
        type: "track",
        event: "SEND_INITIATED",
        properties: {
          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,
          token: (_d = this.state.token) == null ? void 0 : _d.symbol,
          amount: this.state.sendTokenAmount,
          network: ((_e7 = ChainController.state.activeCaipNetwork) == null ? void 0 : _e7.caipNetworkId) || ""
        }
      });
      this.sendNativeToken({
        receiverAddress: this.state.receiverAddress,
        sendTokenAmount: this.state.sendTokenAmount,
        gasPrice: this.state.gasPrice,
        decimals: this.state.token.quantity.decimals
      });
    }
  },
  async fetchNetworkBalance() {
    const balances = await SwapApiUtil.getMyTokensWithBalance();
    if (!balances) {
      return;
    }
    const networkToken = balances.find((token) => token.address === ChainController.getActiveNetworkTokenAddress());
    if (!networkToken) {
      return;
    }
    state20.networkBalanceInUSD = networkToken ? NumberUtil.multiply(networkToken.quantity.numeric, networkToken.price).toString() : "0";
  },
  isInsufficientNetworkTokenForGas(networkBalanceInUSD, gasPriceInUSD) {
    const gasPrice = gasPriceInUSD || "0";
    if (NumberUtil.bigNumber(networkBalanceInUSD).eq(0)) {
      return true;
    }
    return NumberUtil.bigNumber(NumberUtil.bigNumber(gasPrice)).gt(networkBalanceInUSD);
  },
  hasInsufficientGasFunds() {
    let insufficientNetworkTokenForGas = true;
    if (AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT) {
      insufficientNetworkTokenForGas = false;
    } else if (state20.networkBalanceInUSD) {
      insufficientNetworkTokenForGas = this.isInsufficientNetworkTokenForGas(state20.networkBalanceInUSD, state20.gasPriceInUSD);
    }
    return insufficientNetworkTokenForGas;
  },
  async sendNativeToken(params) {
    var _a7, _b3, _c2, _d;
    RouterController.pushTransactionStack({
      view: "Account",
      goBack: false
    });
    const to4 = params.receiverAddress;
    const address = AccountController.state.address;
    const value = ConnectionController.parseUnits(params.sendTokenAmount.toString(), Number(params.decimals));
    const data = "0x";
    try {
      await ConnectionController.sendTransaction({
        chainNamespace: "eip155",
        to: to4,
        address,
        data,
        value: value ?? BigInt(0),
        gasPrice: params.gasPrice
      });
      SnackController.showSuccess("Transaction started");
      EventsController.sendEvent({
        type: "track",
        event: "SEND_SUCCESS",
        properties: {
          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,
          token: ((_a7 = this.state.token) == null ? void 0 : _a7.symbol) || "",
          amount: params.sendTokenAmount,
          network: ((_b3 = ChainController.state.activeCaipNetwork) == null ? void 0 : _b3.caipNetworkId) || ""
        }
      });
      this.resetSend();
    } catch (error) {
      EventsController.sendEvent({
        type: "track",
        event: "SEND_ERROR",
        properties: {
          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,
          token: ((_c2 = this.state.token) == null ? void 0 : _c2.symbol) || "",
          amount: params.sendTokenAmount,
          network: ((_d = ChainController.state.activeCaipNetwork) == null ? void 0 : _d.caipNetworkId) || ""
        }
      });
      SnackController.showError("Something went wrong");
    }
  },
  async sendERC20Token(params) {
    RouterController.pushTransactionStack({
      view: "Account",
      goBack: false
    });
    const amount = ConnectionController.parseUnits(params.sendTokenAmount.toString(), Number(params.decimals));
    try {
      if (AccountController.state.address && params.sendTokenAmount && params.receiverAddress && params.tokenAddress) {
        const tokenAddress = CoreHelperUtil.getPlainAddress(params.tokenAddress);
        await ConnectionController.writeContract({
          fromAddress: AccountController.state.address,
          tokenAddress,
          args: [params.receiverAddress, amount ?? BigInt(0)],
          method: "transfer",
          abi: ContractUtil.getERC20Abi(tokenAddress),
          chainNamespace: "eip155"
        });
        SnackController.showSuccess("Transaction started");
        this.resetSend();
      }
    } catch (error) {
      SnackController.showError("Something went wrong");
    }
  },
  sendSolanaToken() {
    if (!this.state.sendTokenAmount || !this.state.receiverAddress) {
      SnackController.showError("Please enter a valid amount and receiver address");
      return;
    }
    RouterController.pushTransactionStack({
      view: "Account",
      goBack: false
    });
    ConnectionController.sendTransaction({
      chainNamespace: "solana",
      to: this.state.receiverAddress,
      value: this.state.sendTokenAmount
    }).then(() => {
      this.resetSend();
      AccountController.fetchTokenBalance();
    }).catch((error) => {
      SnackController.showError("Failed to send transaction. Please try again.");
      console.error("SendController:sendToken - failed to send solana transaction", error);
    });
  },
  resetSend() {
    state20.token = void 0;
    state20.sendTokenAmount = void 0;
    state20.receiverAddress = void 0;
    state20.receiverProfileImageUrl = void 0;
    state20.receiverProfileName = void 0;
    state20.loading = false;
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/TooltipController.js
var state21 = proxy({
  message: "",
  open: false,
  triggerRect: {
    width: 0,
    height: 0,
    top: 0,
    left: 0
  },
  variant: "shade"
});
var TooltipController = {
  state: state21,
  subscribe(callback) {
    return subscribe(state21, () => callback(state21));
  },
  subscribeKey(key2, callback) {
    return subscribeKey(state21, key2, callback);
  },
  showTooltip({ message, triggerRect, variant }) {
    state21.open = true;
    state21.message = message;
    state21.triggerRect = triggerRect;
    state21.variant = variant;
  },
  hide() {
    state21.open = false;
    state21.message = "";
    state21.triggerRect = {
      width: 0,
      height: 0,
      top: 0,
      left: 0
    };
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/utils/EnsUtil.js
var SLIP44_MSB = 2147483648;
var EnsUtil = {
  convertEVMChainIdToCoinType(chainId) {
    if (chainId >= SLIP44_MSB) {
      throw new Error("Invalid chainId");
    }
    return (SLIP44_MSB | chainId) >>> 0;
  }
};

// node_modules/@reown/appkit-core/dist/esm/src/controllers/EnsController.js
var state22 = proxy({
  suggestions: [],
  loading: false
});
var EnsController = {
  state: state22,
  subscribe(callback) {
    return subscribe(state22, () => callback(state22));
  },
  subscribeKey(key2, callback) {
    return subscribeKey(state22, key2, callback);
  },
  async resolveName(name) {
    var _a7, _b3;
    try {
      return await BlockchainApiController.lookupEnsName(name);
    } catch (e2) {
      const error = e2;
      throw new Error(((_b3 = (_a7 = error == null ? void 0 : error.reasons) == null ? void 0 : _a7[0]) == null ? void 0 : _b3.description) || "Error resolving name");
    }
  },
  async isNameRegistered(name) {
    try {
      await BlockchainApiController.lookupEnsName(name);
      return true;
    } catch {
      return false;
    }
  },
  async getSuggestions(value) {
    try {
      state22.loading = true;
      state22.suggestions = [];
      const response = await BlockchainApiController.getEnsNameSuggestions(value);
      state22.suggestions = response.suggestions.map((suggestion) => ({
        ...suggestion,
        name: suggestion.name
      })) || [];
      return state22.suggestions;
    } catch (e2) {
      const errorMessage = this.parseEnsApiError(e2, "Error fetching name suggestions");
      throw new Error(errorMessage);
    } finally {
      state22.loading = false;
    }
  },
  async getNamesForAddress(address) {
    try {
      const network = ChainController.state.activeCaipNetwork;
      if (!network) {
        return [];
      }
      const response = await BlockchainApiController.reverseLookupEnsName({ address });
      return response;
    } catch (e2) {
      const errorMessage = this.parseEnsApiError(e2, "Error fetching names for address");
      throw new Error(errorMessage);
    }
  },
  async registerName(name) {
    const network = ChainController.state.activeCaipNetwork;
    if (!network) {
      throw new Error("Network not found");
    }
    const address = AccountController.state.address;
    const emailConnector = ConnectorController.getAuthConnector();
    if (!address || !emailConnector) {
      throw new Error("Address or auth connector not found");
    }
    state22.loading = true;
    try {
      const message = JSON.stringify({
        name,
        attributes: {},
        // Unix timestamp
        timestamp: Math.floor(Date.now() / 1e3)
      });
      RouterController.pushTransactionStack({
        view: "RegisterAccountNameSuccess",
        goBack: false,
        replace: true,
        onCancel() {
          state22.loading = false;
        }
      });
      const signature2 = await ConnectionController.signMessage(message);
      const networkId = network.id;
      if (!networkId) {
        throw new Error("Network not found");
      }
      const coinType = EnsUtil.convertEVMChainIdToCoinType(Number(networkId));
      await BlockchainApiController.registerEnsName({
        coinType,
        address,
        signature: signature2,
        message
      });
      AccountController.setProfileName(name, network.chainNamespace);
      RouterController.replace("RegisterAccountNameSuccess");
    } catch (e2) {
      const errorMessage = this.parseEnsApiError(e2, `Error registering name ${name}`);
      RouterController.replace("RegisterAccountName");
      throw new Error(errorMessage);
    } finally {
      state22.loading = false;
    }
  },
  validateName(name) {
    return /^[a-zA-Z0-9-]{4,}$/u.test(name);
  },
  parseEnsApiError(error, defaultError) {
    var _a7, _b3;
    const ensError = error;
    return ((_b3 = (_a7 = ensError == null ? void 0 : ensError.reasons) == null ? void 0 : _a7[0]) == null ? void 0 : _b3.description) || defaultError;
  }
};

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-alertbar/styles.js
var styles_default46 = css`
  :host {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-dark-glass-100);
    box-sizing: border-box;
    background-color: var(--wui-color-bg-325);
    box-shadow: 0px 0px 16px 0px rgba(0, 0, 0, 0.25);
  }

  wui-flex {
    width: 100%;
  }

  wui-text {
    word-break: break-word;
    flex: 1;
  }

  .close {
    cursor: pointer;
  }

  .icon-box {
    height: 40px;
    width: 40px;
    border-radius: var(--wui-border-radius-3xs);
    background-color: var(--local-icon-bg-value);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-alertbar/index.js
var __decorate46 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiAlertBar = class WuiAlertBar2 extends LitElement {
  constructor() {
    super(...arguments);
    this.message = "";
    this.backgroundColor = "accent-100";
    this.iconColor = "accent-100";
    this.icon = "info";
  }
  render() {
    this.style.cssText = `
      --local-icon-bg-value: var(--wui-color-${this.backgroundColor});
   `;
    return html`
      <wui-flex flexDirection="row" justifyContent="space-between" alignItems="center">
        <wui-flex columnGap="xs" flexDirection="row" alignItems="center">
          <wui-flex
            flexDirection="row"
            alignItems="center"
            justifyContent="center"
            class="icon-box"
          >
            <wui-icon color=${this.iconColor} size="md" name=${this.icon}></wui-icon>
          </wui-flex>
          <wui-text variant="small-500" color="bg-350" data-testid="wui-alertbar-text"
            >${this.message}</wui-text
          >
        </wui-flex>
        <wui-icon
          class="close"
          color="bg-350"
          size="sm"
          name="close"
          @click=${this.onClose}
        ></wui-icon>
      </wui-flex>
    `;
  }
  onClose() {
    AlertController.close();
  }
};
WuiAlertBar.styles = [resetStyles, styles_default46];
__decorate46([
  property()
], WuiAlertBar.prototype, "message", void 0);
__decorate46([
  property()
], WuiAlertBar.prototype, "backgroundColor", void 0);
__decorate46([
  property()
], WuiAlertBar.prototype, "iconColor", void 0);
__decorate46([
  property()
], WuiAlertBar.prototype, "icon", void 0);
WuiAlertBar = __decorate46([
  customElement("wui-alertbar")
], WuiAlertBar);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-tabs/styles.js
var styles_default47 = css`
  :host {
    display: inline-flex;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-3xl);
    padding: var(--wui-spacing-3xs);
    position: relative;
    height: 36px;
    min-height: 36px;
    overflow: hidden;
  }

  :host::before {
    content: '';
    position: absolute;
    pointer-events: none;
    top: 4px;
    left: 4px;
    display: block;
    width: var(--local-tab-width);
    height: 28px;
    border-radius: var(--wui-border-radius-3xl);
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    transform: translateX(calc(var(--local-tab) * var(--local-tab-width)));
    transition: transform var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color, opacity;
  }

  :host([data-type='flex'])::before {
    left: 3px;
    transform: translateX(calc((var(--local-tab) * 34px) + (var(--local-tab) * 4px)));
  }

  :host([data-type='flex']) {
    display: flex;
    padding: 0px 0px 0px 12px;
    gap: 4px;
  }

  :host([data-type='flex']) > button > wui-text {
    position: absolute;
    left: 18px;
    opacity: 0;
  }

  button[data-active='true'] > wui-icon,
  button[data-active='true'] > wui-text {
    color: var(--wui-color-fg-100);
  }

  button[data-active='false'] > wui-icon,
  button[data-active='false'] > wui-text {
    color: var(--wui-color-fg-200);
  }

  button[data-active='true']:disabled,
  button[data-active='false']:disabled {
    background-color: transparent;
    opacity: 0.5;
    cursor: not-allowed;
  }

  button[data-active='true']:disabled > wui-text {
    color: var(--wui-color-fg-200);
  }

  button[data-active='false']:disabled > wui-text {
    color: var(--wui-color-fg-300);
  }

  button > wui-icon,
  button > wui-text {
    pointer-events: none;
    transition: color var(--wui-e ase-out-power-1) var(--wui-duration-md);
    will-change: color;
  }

  button {
    width: var(--local-tab-width);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
  }

  :host([data-type='flex']) > button {
    width: 34px;
    position: relative;
    display: flex;
    justify-content: flex-start;
  }

  button:hover:enabled,
  button:active:enabled {
    background-color: transparent !important;
  }

  button:hover:enabled > wui-icon,
  button:active:enabled > wui-icon {
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-lg);
    color: var(--wui-color-fg-125);
  }

  button:hover:enabled > wui-text,
  button:active:enabled > wui-text {
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-lg);
    color: var(--wui-color-fg-125);
  }

  button {
    border-radius: var(--wui-border-radius-3xl);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-tabs/index.js
var __decorate47 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiTabs = class WuiTabs2 extends LitElement {
  constructor() {
    super(...arguments);
    this.tabs = [];
    this.onTabChange = () => null;
    this.buttons = [];
    this.disabled = false;
    this.localTabWidth = "100px";
    this.activeTab = 0;
    this.isDense = false;
  }
  render() {
    this.isDense = this.tabs.length > 3;
    this.style.cssText = `
      --local-tab: ${this.activeTab};
      --local-tab-width: ${this.localTabWidth};
    `;
    this.dataset["type"] = this.isDense ? "flex" : "block";
    return this.tabs.map((tab, index) => {
      var _a7;
      const isActive = index === this.activeTab;
      return html`
        <button
          ?disabled=${this.disabled}
          @click=${() => this.onTabClick(index)}
          data-active=${isActive}
          data-testid="tab-${(_a7 = tab.label) == null ? void 0 : _a7.toLowerCase()}"
        >
          ${this.iconTemplate(tab)}
          <wui-text variant="small-600" color="inherit"> ${tab.label} </wui-text>
        </button>
      `;
    });
  }
  firstUpdated() {
    if (this.shadowRoot && this.isDense) {
      this.buttons = [...this.shadowRoot.querySelectorAll("button")];
      setTimeout(() => {
        this.animateTabs(0, true);
      }, 0);
    }
  }
  iconTemplate(tab) {
    if (tab.icon) {
      return html`<wui-icon size="xs" color="inherit" name=${tab.icon}></wui-icon>`;
    }
    return null;
  }
  onTabClick(index) {
    if (this.buttons) {
      this.animateTabs(index, false);
    }
    this.activeTab = index;
    this.onTabChange(index);
  }
  animateTabs(index, initialAnimation) {
    const passiveBtn = this.buttons[this.activeTab];
    const activeBtn = this.buttons[index];
    const passiveBtnText = passiveBtn == null ? void 0 : passiveBtn.querySelector("wui-text");
    const activeBtnText = activeBtn == null ? void 0 : activeBtn.querySelector("wui-text");
    const activeBtnBounds = activeBtn == null ? void 0 : activeBtn.getBoundingClientRect();
    const activeBtnTextBounds = activeBtnText == null ? void 0 : activeBtnText.getBoundingClientRect();
    if (passiveBtn && passiveBtnText && !initialAnimation && index !== this.activeTab) {
      passiveBtnText.animate([{ opacity: 0 }], {
        duration: 50,
        easing: "ease",
        fill: "forwards"
      });
      passiveBtn.animate([{ width: `34px` }], {
        duration: 500,
        easing: "ease",
        fill: "forwards"
      });
    }
    if (activeBtn && activeBtnBounds && activeBtnTextBounds && activeBtnText) {
      if (index !== this.activeTab || initialAnimation) {
        this.localTabWidth = `${Math.round(activeBtnBounds.width + activeBtnTextBounds.width) + 6}px`;
        activeBtn.animate([{ width: `${activeBtnBounds.width + activeBtnTextBounds.width}px` }], {
          duration: initialAnimation ? 0 : 500,
          fill: "forwards",
          easing: "ease"
        });
        activeBtnText.animate([{ opacity: 1 }], {
          duration: initialAnimation ? 0 : 125,
          delay: initialAnimation ? 0 : 200,
          fill: "forwards",
          easing: "ease"
        });
      }
    }
  }
};
WuiTabs.styles = [resetStyles, elementStyles, styles_default47];
__decorate47([
  property({ type: Array })
], WuiTabs.prototype, "tabs", void 0);
__decorate47([
  property()
], WuiTabs.prototype, "onTabChange", void 0);
__decorate47([
  property({ type: Array })
], WuiTabs.prototype, "buttons", void 0);
__decorate47([
  property({ type: Boolean })
], WuiTabs.prototype, "disabled", void 0);
__decorate47([
  property()
], WuiTabs.prototype, "localTabWidth", void 0);
__decorate47([
  state()
], WuiTabs.prototype, "activeTab", void 0);
__decorate47([
  state()
], WuiTabs.prototype, "isDense", void 0);
WuiTabs = __decorate47([
  customElement("wui-tabs")
], WuiTabs);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-token-button/styles.js
var styles_default48 = css`
  :host {
    display: block;
  }

  :host > button {
    gap: var(--wui-spacing-xxs);
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-1xs);
    height: 40px;
    border-radius: var(--wui-border-radius-l);
    background: var(--wui-color-gray-glass-002);
    border-width: 0px;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
  }

  :host > button wui-image {
    width: 24px;
    height: 24px;
    border-radius: var(--wui-border-radius-s);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-token-button/index.js
var __decorate48 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiTokenButton = class WuiTokenButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.text = "";
  }
  render() {
    return html`
      <button>
        ${this.tokenTemplate()}
        <wui-text variant="paragraph-600" color="fg-100">${this.text}</wui-text>
      </button>
    `;
  }
  tokenTemplate() {
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc}></wui-image>`;
    }
    return html`
      <wui-icon-box
        size="sm"
        iconColor="fg-200"
        backgroundColor="fg-300"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `;
  }
};
WuiTokenButton.styles = [resetStyles, elementStyles, styles_default48];
__decorate48([
  property()
], WuiTokenButton.prototype, "imageSrc", void 0);
__decorate48([
  property()
], WuiTokenButton.prototype, "text", void 0);
WuiTokenButton = __decorate48([
  customElement("wui-token-button")
], WuiTokenButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-tooltip/styles.js
var styles_default49 = css`
  :host {
    display: block;
    padding: 9px var(--wui-spacing-s) 10px var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-xxs);

    color: var(--wui-color-bg-100);
    position: relative;
  }

  :host([data-variant='shade']) {
    background-color: var(--wui-color-bg-150);
    border: 1px solid var(--wui-color-gray-glass-005);
  }

  :host([data-variant='shade']) > wui-text {
    color: var(--wui-color-fg-150);
  }

  :host([data-variant='fill']) {
    background-color: var(--wui-color-fg-100);
    border: none;
  }

  wui-icon {
    position: absolute;
    width: 12px !important;
    height: 4px !important;
  }

  wui-icon[data-placement='top'] {
    bottom: 0px;
    left: 50%;
    transform: translate(-50%, 95%);
  }

  wui-icon[data-placement='bottom'] {
    top: 0;
    left: 50%;
    transform: translate(-50%, -95%) rotate(180deg);
  }

  wui-icon[data-placement='right'] {
    top: 50%;
    left: 0;
    transform: translate(-65%, -50%) rotate(90deg);
  }

  wui-icon[data-placement='left'] {
    top: 50%;
    right: 0%;
    transform: translate(65%, -50%) rotate(270deg);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-tooltip/index.js
var __decorate49 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiTooltip = class WuiTooltip2 extends LitElement {
  constructor() {
    super(...arguments);
    this.placement = "top";
    this.variant = "fill";
    this.message = "";
  }
  render() {
    this.dataset["variant"] = this.variant;
    return html`<wui-icon
        data-placement=${this.placement}
        color="fg-100"
        size="inherit"
        name=${this.variant === "fill" ? "cursor" : "cursorTransparent"}
      ></wui-icon>
      <wui-text color="inherit" variant="small-500">${this.message}</wui-text>`;
  }
};
WuiTooltip.styles = [resetStyles, elementStyles, styles_default49];
__decorate49([
  property()
], WuiTooltip.prototype, "placement", void 0);
__decorate49([
  property()
], WuiTooltip.prototype, "variant", void 0);
__decorate49([
  property()
], WuiTooltip.prototype, "message", void 0);
WuiTooltip = __decorate49([
  customElement("wui-tooltip")
], WuiTooltip);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-token-list-item/styles.js
var styles_default50 = css`
  :host {
    height: 60px;
    min-height: 60px;
  }

  :host > wui-flex {
    cursor: pointer;
    height: 100%;
    display: flex;
    column-gap: var(--wui-spacing-s);
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-l);
    width: 100%;
    background-color: transparent;
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
    transition:
      background-color var(--wui-ease-out-power-1) var(--wui-duration-lg),
      opacity var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: background-color, opacity;
  }

  @media (hover: hover) and (pointer: fine) {
    :host > wui-flex:hover {
      background-color: var(--wui-color-gray-glass-002);
    }

    :host > wui-flex:active {
      background-color: var(--wui-color-gray-glass-005);
    }
  }

  :host([disabled]) > wui-flex {
    opacity: 0.6;
  }

  :host([disabled]) > wui-flex:hover {
    background-color: transparent;
  }

  :host > wui-flex > wui-flex {
    flex: 1;
  }

  :host > wui-flex > wui-image,
  :host > wui-flex > .token-item-image-placeholder {
    width: 40px;
    max-width: 40px;
    height: 40px;
    border-radius: var(--wui-border-radius-3xl);
    position: relative;
  }

  :host > wui-flex > .token-item-image-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  :host > wui-flex > wui-image::after,
  :host > wui-flex > .token-item-image-placeholder::after {
    position: absolute;
    content: '';
    inset: 0;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
    border-radius: var(--wui-border-radius-l);
  }

  button > wui-icon-box[data-variant='square-blue'] {
    border-radius: var(--wui-border-radius-3xs);
    position: relative;
    border: none;
    width: 36px;
    height: 36px;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-token-list-item/index.js
var __decorate50 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiTokenListItem = class WuiTokenListItem2 extends LitElement {
  constructor() {
    super();
    this.observer = new IntersectionObserver(() => void 0);
    this.imageSrc = void 0;
    this.name = void 0;
    this.symbol = void 0;
    this.price = void 0;
    this.amount = void 0;
    this.visible = false;
    this.imageError = false;
    this.observer = new IntersectionObserver((entries2) => {
      entries2.forEach((entry) => {
        if (entry.isIntersecting) {
          this.visible = true;
        } else {
          this.visible = false;
        }
      });
    }, { threshold: 0.1 });
  }
  firstUpdated() {
    this.observer.observe(this);
  }
  disconnectedCallback() {
    this.observer.disconnect();
  }
  render() {
    var _a7;
    if (!this.visible) {
      return null;
    }
    const value = this.amount && this.price ? (_a7 = NumberUtil.multiply(this.price, this.amount)) == null ? void 0 : _a7.toFixed(3) : null;
    return html`
      <wui-flex alignItems="center">
        ${this.visualTemplate()}
        <wui-flex flexDirection="column" gap="3xs">
          <wui-flex justifyContent="space-between">
            <wui-text variant="paragraph-500" color="fg-100" lineClamp="1">${this.name}</wui-text>
            ${value ? html`
                  <wui-text variant="paragraph-500" color="fg-100">
                    $${UiHelperUtil.formatNumberToLocalString(value, 3)}
                  </wui-text>
                ` : null}
          </wui-flex>
          <wui-flex justifyContent="space-between">
            <wui-text variant="small-400" color="fg-200" lineClamp="1">${this.symbol}</wui-text>
            ${this.amount ? html`<wui-text variant="small-400" color="fg-200">
                  ${UiHelperUtil.formatNumberToLocalString(this.amount, 4)}
                </wui-text>` : null}
          </wui-flex>
        </wui-flex>
      </wui-flex>
    `;
  }
  visualTemplate() {
    if (this.imageError) {
      return html`<wui-flex class="token-item-image-placeholder">
        <wui-icon name="image" color="inherit"></wui-icon>
      </wui-flex>`;
    }
    if (this.imageSrc) {
      return html`<wui-image
        width="40"
        height="40"
        src=${this.imageSrc}
        @onLoadError=${this.imageLoadError}
      ></wui-image>`;
    }
    return null;
  }
  imageLoadError() {
    this.imageError = true;
  }
};
WuiTokenListItem.styles = [resetStyles, elementStyles, styles_default50];
__decorate50([
  property()
], WuiTokenListItem.prototype, "imageSrc", void 0);
__decorate50([
  property()
], WuiTokenListItem.prototype, "name", void 0);
__decorate50([
  property()
], WuiTokenListItem.prototype, "symbol", void 0);
__decorate50([
  property()
], WuiTokenListItem.prototype, "price", void 0);
__decorate50([
  property()
], WuiTokenListItem.prototype, "amount", void 0);
__decorate50([
  state()
], WuiTokenListItem.prototype, "visible", void 0);
__decorate50([
  state()
], WuiTokenListItem.prototype, "imageError", void 0);
WuiTokenListItem = __decorate50([
  customElement("wui-token-list-item")
], WuiTokenListItem);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-visual-thumbnail/styles.js
var styles_default51 = css`
  :host {
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--wui-icon-box-size-xl);
    height: var(--wui-icon-box-size-xl);
    box-shadow: 0 0 0 8px var(--wui-thumbnail-border);
    border-radius: var(--local-border-radius);
    overflow: hidden;
  }

  wui-icon {
    width: 32px;
    height: 32px;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-visual-thumbnail/index.js
var __decorate51 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiVisualThumbnail = class WuiVisualThumbnail2 extends LitElement {
  render() {
    this.style.cssText = `--local-border-radius: ${this.borderRadiusFull ? "1000px" : "20px"}; background-color: var(--wui-color-modal-bg);`;
    return html`${this.templateVisual()}`;
  }
  templateVisual() {
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc} alt=${this.alt ?? ""}></wui-image>`;
    }
    return html`<wui-icon
      data-parent-size="md"
      size="inherit"
      color="inherit"
      name="walletPlaceholder"
    ></wui-icon>`;
  }
};
WuiVisualThumbnail.styles = [resetStyles, styles_default51];
__decorate51([
  property()
], WuiVisualThumbnail.prototype, "imageSrc", void 0);
__decorate51([
  property()
], WuiVisualThumbnail.prototype, "alt", void 0);
__decorate51([
  property({ type: Boolean })
], WuiVisualThumbnail.prototype, "borderRadiusFull", void 0);
WuiVisualThumbnail = __decorate51([
  customElement("wui-visual-thumbnail")
], WuiVisualThumbnail);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-wallet-button/styles.js
var styles_default52 = css`
  @keyframes shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(3px);
    }
    50% {
      transform: translateX(-3px);
    }
    75% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(0);
    }
  }

  :host > button {
    min-width: 40px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    background-color: var(--wui-wallet-button-bg);
    column-gap: var(--wui-spacing-2xs);
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-gray-glass-002);
    height: var(--wui-spacing-3xl);
    padding: var(--wui-spacing-xs) var(--wui-spacing-m) var(--wui-spacing-xs) var(--wui-spacing-xs);
    box-shadow:
      0px 8px 22px -6px var(--wui-color-gray-glass-010),
      0px 14px 64px -4px var(--wui-color-gray-glass-010);
  }

  :host > button > wui-text {
    text-transform: capitalize;
  }

  :host > button > wui-image {
    height: 24px;
    width: 24px;
    border-radius: var(--wui-border-radius-s);
  }

  :host([data-error='true']) > button {
    animation: shake 250ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  }

  /* -- Disabled state --------------------------------------------------- */
  :host > button:disabled {
    cursor: default;
  }

  :host > button:disabled > wui-icon {
    filter: grayscale(1);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-wallet-button/index.js
var __decorate52 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiWalletButton = class WuiWalletButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.imageSrc = "";
    this.name = "";
    this.walletConnect = false;
    this.loading = false;
    this.error = false;
    this.disabled = false;
    this.shake = false;
  }
  render() {
    this.dataset["error"] = `${this.error}`;
    return html`
      <button ?disabled=${this.disabled}>
        ${this.leftViewTemplate()} ${this.rightViewTemplate()}
      </button>
    `;
  }
  leftViewTemplate() {
    if (this.error) {
      return html`<wui-icon-box
        icon="warningCircle"
        iconColor="error-100"
        backgroundColor="error-100"
        size="sm"
        iconSize="xs"
      ></wui-icon-box>`;
    }
    if (this.loading) {
      return html`<wui-loading-spinner size="md" color="fg-100"></wui-loading-spinner>`;
    }
    if (this.icon) {
      return html`<wui-icon size="xl" color="inherit" name=${this.icon}></wui-icon>`;
    }
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc} alt=${this.name}></wui-image>`;
    }
    return html`<wui-icon size="xl" color="fg-100" name="walletPlaceholder"></wui-icon>`;
  }
  rightViewTemplate() {
    return html`
      <wui-text variant="paragraph-500" color="fg-100">${this.name || "Unknown"} </wui-text>
    `;
  }
};
WuiWalletButton.styles = [resetStyles, elementStyles, styles_default52];
__decorate52([
  property()
], WuiWalletButton.prototype, "imageSrc", void 0);
__decorate52([
  property()
], WuiWalletButton.prototype, "name", void 0);
__decorate52([
  property({ type: Boolean })
], WuiWalletButton.prototype, "walletConnect", void 0);
__decorate52([
  property({ type: Boolean })
], WuiWalletButton.prototype, "icon", void 0);
__decorate52([
  property({ type: Boolean })
], WuiWalletButton.prototype, "loading", void 0);
__decorate52([
  property({ type: Boolean })
], WuiWalletButton.prototype, "error", void 0);
__decorate52([
  property({ type: Boolean })
], WuiWalletButton.prototype, "disabled", void 0);
__decorate52([
  property({ type: Boolean })
], WuiWalletButton.prototype, "shake", void 0);
WuiWalletButton = __decorate52([
  customElement("wui-wallet-button")
], WuiWalletButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-notice-card/styles.js
var styles_default53 = css`
  :host {
    display: block;
  }

  button {
    width: 100%;
    display: block;
    padding-top: var(--wui-spacing-l);
    padding-bottom: var(--wui-spacing-l);
    padding-left: var(--wui-spacing-s);
    padding-right: var(--wui-spacing-2l);
    border-radius: var(--wui-border-radius-s);
    background-color: var(--wui-color-accent-glass-010);
  }

  button:hover {
    background-color: var(--wui-color-accent-glass-015) !important;
  }

  button:active {
    background-color: var(--wui-color-accent-glass-020) !important;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-notice-card/index.js
var __decorate53 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiNoticeCard = class WuiNoticeCard2 extends LitElement {
  constructor() {
    super(...arguments);
    this.label = "";
    this.description = "";
    this.icon = "wallet";
  }
  render() {
    return html`
      <button>
        <wui-flex gap="m" alignItems="center" justifyContent="space-between">
          <wui-icon-box
            size="lg"
            iconcolor="accent-100"
            backgroundcolor="accent-100"
            icon=${this.icon}
            background="transparent"
          ></wui-icon-box>

          <wui-flex flexDirection="column" gap="3xs">
            <wui-text variant="paragraph-500" color="fg-100">${this.label}</wui-text>
            <wui-text variant="small-400" color="fg-200">${this.description}</wui-text>
          </wui-flex>

          <wui-icon size="md" color="fg-200" name="chevronRight"></wui-icon>
        </wui-flex>
      </button>
    `;
  }
};
WuiNoticeCard.styles = [resetStyles, elementStyles, styles_default53];
__decorate53([
  property()
], WuiNoticeCard.prototype, "label", void 0);
__decorate53([
  property()
], WuiNoticeCard.prototype, "description", void 0);
__decorate53([
  property()
], WuiNoticeCard.prototype, "icon", void 0);
WuiNoticeCard = __decorate53([
  customElement("wui-notice-card")
], WuiNoticeCard);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-accordion/styles.js
var styles_default54 = css`
  button {
    height: auto;
    position: relative;
    flex-direction: column;
    gap: var(--wui-spacing-s);
    padding: 17px 18px 17px var(--wui-spacing-m);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
  }

  .overflowedContent {
    width: 100%;
    overflow: hidden;
  }

  .overflowedContent[data-active='false']:after {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to top, var(--wui-color-bg-150), transparent);
    border-bottom-left-radius: var(--wui-border-radius-xs);
    border-bottom-right-radius: var(--wui-border-radius-xs);
  }

  .heightContent {
    max-height: 100px;
  }

  pre {
    text-align: left;
    white-space: pre-wrap;
    height: auto;
    overflow-x: auto;
    overflow-wrap: anywhere;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-accordion/index.js
var __decorate54 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var MAX_HEIGHT = 100;
var WuiListAccordion = class WuiListAccordion2 extends LitElement {
  constructor() {
    super(...arguments);
    this.textTitle = "";
    this.overflowedContent = "";
    this.toggled = false;
    this.enableAccordion = false;
    this.scrollElement = void 0;
    this.scrollHeightElement = 0;
  }
  updated(changedProperties) {
    super.updated(changedProperties);
    if (changedProperties.has("textTitle") || changedProperties.has("overflowedContent")) {
      setTimeout(() => {
        this.checkHeight();
      }, 1);
    }
  }
  checkHeight() {
    this.updateComplete.then(() => {
      var _a7, _b3;
      const heightElement = (_a7 = this.shadowRoot) == null ? void 0 : _a7.querySelector(".heightContent");
      const textElement = (_b3 = this.shadowRoot) == null ? void 0 : _b3.querySelector(".textContent");
      if (heightElement && textElement) {
        this.scrollElement = heightElement;
        const scrollHeight = textElement == null ? void 0 : textElement.scrollHeight;
        if (scrollHeight && scrollHeight > MAX_HEIGHT) {
          this.enableAccordion = true;
          this.scrollHeightElement = scrollHeight;
          this.requestUpdate();
        }
      }
    });
  }
  render() {
    return html`
      <button @click=${() => this.onClick()}>
        <wui-flex justifyContent="space-between" alignItems="center">
          <wui-text variant="paragraph-500" color="fg-100">${this.textTitle}</wui-text>
          ${this.chevronTemplate()}
        </wui-flex>
        <div
          data-active=${this.enableAccordion ? Boolean(this.toggled) : true}
          class="overflowedContent"
        >
          <div class="heightContent">
            <wui-text class="textContent" variant="paragraph-400" color="fg-200">
              <pre>${this.overflowedContent}</pre>
            </wui-text>
          </div>
        </div>
      </button>
    `;
  }
  onClick() {
    var _a7;
    const icon = (_a7 = this.shadowRoot) == null ? void 0 : _a7.querySelector("wui-icon");
    if (this.enableAccordion) {
      this.toggled = !this.toggled;
      this.requestUpdate();
      if (this.scrollElement) {
        this.scrollElement.animate([
          { maxHeight: this.toggled ? `${MAX_HEIGHT}px` : `${this.scrollHeightElement}px` },
          { maxHeight: this.toggled ? `${this.scrollHeightElement}px` : `${MAX_HEIGHT}px` }
        ], {
          duration: 300,
          fill: "forwards",
          easing: "ease"
        });
      }
      if (icon) {
        icon.animate([
          { transform: this.toggled ? `rotate(0deg)` : `rotate(180deg)` },
          { transform: this.toggled ? `rotate(180deg)` : `rotate(0deg)` }
        ], {
          duration: 300,
          fill: "forwards",
          easing: "ease"
        });
      }
    }
  }
  chevronTemplate() {
    if (this.enableAccordion) {
      return html` <wui-icon color="fg-100" size="sm" name="chevronBottom"></wui-icon>`;
    }
    return null;
  }
};
WuiListAccordion.styles = [resetStyles, elementStyles, styles_default54];
__decorate54([
  property()
], WuiListAccordion.prototype, "textTitle", void 0);
__decorate54([
  property()
], WuiListAccordion.prototype, "overflowedContent", void 0);
WuiListAccordion = __decorate54([
  customElement("wui-list-accordion")
], WuiListAccordion);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-content/styles.js
var styles_default55 = css`
  :host {
    display: flex;
    column-gap: var(--wui-spacing-s);
    padding: 17px 18px 17px var(--wui-spacing-m);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
  }

  wui-image {
    width: var(--wui-icon-size-lg);
    height: var(--wui-icon-size-lg);
    border-radius: var(--wui-border-radius-3xl);
  }

  wui-icon {
    width: var(--wui-icon-size-lg);
    height: var(--wui-icon-size-lg);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-content/index.js
var __decorate55 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListContent = class WuiListContent2 extends LitElement {
  constructor() {
    super(...arguments);
    this.imageSrc = void 0;
    this.textTitle = "";
    this.textValue = void 0;
  }
  render() {
    return html`
      <wui-flex justifyContent="space-between" alignItems="center">
        <wui-text variant="paragraph-500" color=${this.textValue ? "fg-200" : "fg-100"}>
          ${this.textTitle}
        </wui-text>
        ${this.templateContent()}
      </wui-flex>
    `;
  }
  templateContent() {
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc} alt=${this.textTitle}></wui-image>`;
    } else if (this.textValue) {
      return html` <wui-text variant="paragraph-400" color="fg-100"> ${this.textValue} </wui-text>`;
    }
    return html`<wui-icon size="inherit" color="fg-200" name="networkPlaceholder"></wui-icon>`;
  }
};
WuiListContent.styles = [resetStyles, elementStyles, styles_default55];
__decorate55([
  property()
], WuiListContent.prototype, "imageSrc", void 0);
__decorate55([
  property()
], WuiListContent.prototype, "textTitle", void 0);
__decorate55([
  property()
], WuiListContent.prototype, "textValue", void 0);
WuiListContent = __decorate55([
  customElement("wui-list-content")
], WuiListContent);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-network/styles.js
var styles_default56 = css`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 7px var(--wui-spacing-l) 7px var(--wui-spacing-xs);
    width: 100%;
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-md);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-100);
  }

  button > wui-text:nth-child(2) {
    display: flex;
    flex: 1;
  }

  button[data-transparent='true'] {
    pointer-events: none;
    background-color: transparent;
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-002);
  }

  button:active {
    background-color: var(--wui-color-gray-glass-005);
  }

  wui-image {
    width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
    border-radius: 100%;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-002);
    opacity: 0.5;
    cursor: not-allowed;
  }

  button:disabled > wui-tag {
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-300);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-network/index.js
var __decorate56 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListNetwork = class WuiListNetwork2 extends LitElement {
  constructor() {
    super(...arguments);
    this.imageSrc = "";
    this.name = "";
    this.disabled = false;
    this.selected = false;
    this.transparent = false;
  }
  render() {
    return html`
      <button data-transparent=${this.transparent} ?disabled=${this.disabled}>
        <wui-flex gap="s" alignItems="center">
          ${this.templateNetworkImage()}
          <wui-text variant="paragraph-500" color="inherit">${this.name}</wui-text></wui-flex
        >
        ${this.checkmarkTemplate()}
      </button>
    `;
  }
  checkmarkTemplate() {
    if (this.selected) {
      return html`<wui-icon size="sm" color="accent-100" name="checkmarkBold"></wui-icon>`;
    }
    return null;
  }
  templateNetworkImage() {
    if (this.imageSrc) {
      return html`<wui-image size="sm" src=${this.imageSrc} name=${this.name}></wui-image>`;
    }
    if (!this.imageSrc) {
      return html`<wui-network-image
        ?round=${true}
        size="md"
        name=${this.name}
      ></wui-network-image>`;
    }
    return null;
  }
};
WuiListNetwork.styles = [resetStyles, elementStyles, styles_default56];
__decorate56([
  property()
], WuiListNetwork.prototype, "imageSrc", void 0);
__decorate56([
  property()
], WuiListNetwork.prototype, "name", void 0);
__decorate56([
  property({ type: Boolean })
], WuiListNetwork.prototype, "disabled", void 0);
__decorate56([
  property({ type: Boolean })
], WuiListNetwork.prototype, "selected", void 0);
__decorate56([
  property({ type: Boolean })
], WuiListNetwork.prototype, "transparent", void 0);
WuiListNetwork = __decorate56([
  customElement("wui-list-network")
], WuiListNetwork);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-wallet-transaction/styles.js
var styles_default57 = css`
  :host {
    display: flex;
    flex-direction: column;
    gap: var(--wui-spacing-l);
    padding: 17px 18px 17px var(--wui-spacing-m);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
  }

  wui-image {
    width: var(--wui-icon-size-lg);
    height: var(--wui-icon-size-lg);
    border-radius: var(--wui-border-radius-3xl);
  }

  wui-icon {
    width: var(--wui-icon-size-lg);
    height: var(--wui-icon-size-lg);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-wallet-transaction/index.js
var __decorate57 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListWalletTransaction = class WuiListWalletTransaction2 extends LitElement {
  constructor() {
    super(...arguments);
    this.amount = "";
    this.networkCurreny = "";
    this.networkImageUrl = "";
    this.receiverAddress = "";
    this.addressExplorerUrl = "";
  }
  render() {
    return html`
      <wui-flex justifyContent="space-between" alignItems="center">
        <wui-text variant="paragraph-500" color="fg-200">Sending</wui-text>
        <wui-flex gap="xs" alignItems="center">
          <wui-text variant="paragraph-400" color="fg-100">
            ${this.amount} ${this.networkCurreny}
          </wui-text>
          ${this.templateNetworkVisual()}
        </wui-flex>
      </wui-flex>
      <wui-flex justifyContent="space-between" alignItems="center">
        <wui-text variant="paragraph-500" color="fg-200">To</wui-text>
        <wui-chip
          icon="externalLink"
          variant="shadeSmall"
          href=${this.addressExplorerUrl}
          title=${this.receiverAddress}
        ></wui-chip>
      </wui-flex>
    `;
  }
  templateNetworkVisual() {
    if (this.networkImageUrl) {
      return html`<wui-image src=${this.networkImageUrl} alt="Network Image"></wui-image>`;
    }
    return html`<wui-icon size="inherit" color="fg-200" name="networkPlaceholder"></wui-icon>`;
  }
};
WuiListWalletTransaction.styles = [resetStyles, elementStyles, styles_default57];
__decorate57([
  property()
], WuiListWalletTransaction.prototype, "amount", void 0);
__decorate57([
  property()
], WuiListWalletTransaction.prototype, "networkCurreny", void 0);
__decorate57([
  property()
], WuiListWalletTransaction.prototype, "networkImageUrl", void 0);
__decorate57([
  property()
], WuiListWalletTransaction.prototype, "receiverAddress", void 0);
__decorate57([
  property()
], WuiListWalletTransaction.prototype, "addressExplorerUrl", void 0);
WuiListWalletTransaction = __decorate57([
  customElement("wui-list-wallet-transaction")
], WuiListWalletTransaction);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-promo/styles.js
var styles_default58 = css`
  button {
    display: flex;
    gap: var(--wui-spacing-3xs);
    align-items: center;
    padding: 6.25px var(--wui-spacing-xs) 7.25px var(--wui-spacing-s);
    background-color: var(--wui-color-gray-glass-090);
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-060);
    transition: background-color var(--wui-duration-md) var(--wui-ease-inout-power-1);
    will-change: background-color;
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-gray-glass-080);
    }

    button:active:enabled {
      background-color: var(--wui-color-gray-glass-060);
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-promo/index.js
var __decorate58 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiPromo = class WuiPromo2 extends LitElement {
  constructor() {
    super(...arguments);
    this.text = "";
  }
  render() {
    return html`<button>
      <wui-text variant="small-600" color="bg-100">${this.text}</wui-text>
      <wui-icon color="bg-100" size="xs" name="arrowRight"></wui-icon>
    </button>`;
  }
};
WuiPromo.styles = [resetStyles, elementStyles, styles_default58];
__decorate58([
  property()
], WuiPromo.prototype, "text", void 0);
WuiPromo = __decorate58([
  customElement("wui-promo")
], WuiPromo);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-balance/styles.js
var styles_default59 = css`
  span {
    font-weight: 500;
    font-size: 40px;
    color: var(--wui-color-fg-100);
    line-height: 130%; /* 52px */
    letter-spacing: -1.6px;
    text-align: center;
  }

  .pennies {
    color: var(--wui-color-fg-200);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-balance/index.js
var __decorate59 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiBalance = class WuiBalance2 extends LitElement {
  constructor() {
    super(...arguments);
    this.dollars = "0";
    this.pennies = "00";
  }
  render() {
    return html`<span>$${this.dollars}<span class="pennies">.${this.pennies}</span></span>`;
  }
};
WuiBalance.styles = [resetStyles, styles_default59];
__decorate59([
  property()
], WuiBalance.prototype, "dollars", void 0);
__decorate59([
  property()
], WuiBalance.prototype, "pennies", void 0);
WuiBalance = __decorate59([
  customElement("wui-balance")
], WuiBalance);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-profile-button/styles.js
var styles_default60 = css`
  button {
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-002);
    padding: var(--wui-spacing-xs) var(--wui-spacing-s) var(--wui-spacing-xs) var(--wui-spacing-xs);
    position: relative;
  }

  wui-avatar {
    width: 32px;
    height: 32px;
    box-shadow: 0 0 0 0;
    outline: 3px solid var(--wui-color-gray-glass-005);
  }

  wui-icon-box,
  wui-image {
    width: 16px;
    height: 16px;
    border-radius: var(--wui-border-radius-3xl);
    position: absolute;
    left: 26px;
    top: 24px;
  }

  wui-image {
    outline: 2px solid var(--wui-color-bg-125);
  }

  wui-icon-box {
    outline: 2px solid var(--wui-color-bg-200);
    background-color: var(--wui-color-bg-250);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-profile-button/index.js
var __decorate60 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiProfileButton = class WuiProfileButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.networkSrc = void 0;
    this.avatarSrc = void 0;
    this.profileName = "";
    this.address = "";
    this.icon = "chevronBottom";
  }
  render() {
    return html`<button data-testid="wui-profile-button">
      <wui-flex gap="xs" alignItems="center">
        <wui-avatar
          .imageSrc=${this.avatarSrc}
          alt=${this.address}
          address=${this.address}
        ></wui-avatar>
        ${this.networkImageTemplate()}
        <wui-flex gap="xs" alignItems="center">
          <wui-text variant="large-600" color="fg-100">
            ${UiHelperUtil.getTruncateString({
      string: this.profileName || this.address,
      charsStart: this.profileName ? 18 : 4,
      charsEnd: this.profileName ? 0 : 4,
      truncate: this.profileName ? "end" : "middle"
    })}
          </wui-text>
          <wui-icon size="sm" color="fg-200" name=${this.icon}></wui-icon>
        </wui-flex>
      </wui-flex>
    </button>`;
  }
  networkImageTemplate() {
    if (this.networkSrc) {
      return html`<wui-image src=${this.networkSrc}></wui-image>`;
    }
    return html`
      <wui-icon-box
        size="xxs"
        iconColor="fg-200"
        backgroundColor="bg-100"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `;
  }
};
WuiProfileButton.styles = [resetStyles, elementStyles, styles_default60];
__decorate60([
  property()
], WuiProfileButton.prototype, "networkSrc", void 0);
__decorate60([
  property()
], WuiProfileButton.prototype, "avatarSrc", void 0);
__decorate60([
  property()
], WuiProfileButton.prototype, "profileName", void 0);
__decorate60([
  property()
], WuiProfileButton.prototype, "address", void 0);
__decorate60([
  property()
], WuiProfileButton.prototype, "icon", void 0);
WuiProfileButton = __decorate60([
  customElement("wui-profile-button")
], WuiProfileButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-profile-button-v2/styles.js
var styles_default61 = css`
  button {
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-002);
    padding: var(--wui-spacing-xs) var(--wui-spacing-s) var(--wui-spacing-xs) var(--wui-spacing-xs);
    position: relative;
  }

  wui-avatar {
    width: 32px;
    height: 32px;
    box-shadow: 0 0 0 0;
    outline: 3px solid var(--wui-color-gray-glass-005);
  }

  wui-icon-box,
  wui-image {
    width: 16px;
    height: 16px;
    border-radius: var(--wui-border-radius-3xl);
    position: absolute;
    left: 26px;
    top: 24px;
  }

  wui-image {
    outline: 2px solid var(--wui-color-bg-125);
  }

  wui-icon-box {
    outline: 2px solid var(--wui-color-bg-200);
    background-color: var(--wui-color-bg-250);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-profile-button-v2/index.js
var __decorate61 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiProfileButtonV2 = class WuiProfileButtonV22 extends LitElement {
  constructor() {
    super(...arguments);
    this.avatarSrc = void 0;
    this.profileName = "";
    this.address = "";
    this.icon = "mail";
  }
  render() {
    const namespace = ChainController.state.activeChain;
    const connectorId = StorageUtil.getConnectedConnectorId(namespace);
    const shouldShowIcon = connectorId === ConstantsUtil.CONNECTOR_ID.AUTH;
    return html`<button data-testid="wui-profile-button" @click=${this.handleClick}>
      <wui-flex gap="xs" alignItems="center">
        <wui-avatar
          .imageSrc=${this.avatarSrc}
          alt=${this.address}
          address=${this.address}
        ></wui-avatar>
        ${shouldShowIcon ? this.getIconTemplate(this.icon) : ""}
        <wui-flex gap="xs" alignItems="center">
          <wui-text variant="large-600" color="fg-100">
            ${UiHelperUtil.getTruncateString({
      string: this.profileName || this.address,
      charsStart: this.profileName ? 18 : 4,
      charsEnd: this.profileName ? 0 : 4,
      truncate: this.profileName ? "end" : "middle"
    })}
          </wui-text>
          <wui-icon size="sm" color="fg-200" name="copy" id="copy-address"></wui-icon>
        </wui-flex>
      </wui-flex>
    </button>`;
  }
  handleClick(event) {
    var _a7, _b3;
    if (event.target instanceof HTMLElement && event.target.id === "copy-address") {
      (_a7 = this.onCopyClick) == null ? void 0 : _a7.call(this, event);
      return;
    }
    (_b3 = this.onProfileClick) == null ? void 0 : _b3.call(this, event);
  }
  getIconTemplate(icon) {
    return html`
      <wui-icon-box
        size="xxs"
        iconColor="fg-200"
        backgroundColor="bg-100"
        icon="${icon || "networkPlaceholder"}"
      ></wui-icon-box>
    `;
  }
};
WuiProfileButtonV2.styles = [resetStyles, elementStyles, styles_default61];
__decorate61([
  property()
], WuiProfileButtonV2.prototype, "avatarSrc", void 0);
__decorate61([
  property()
], WuiProfileButtonV2.prototype, "profileName", void 0);
__decorate61([
  property()
], WuiProfileButtonV2.prototype, "address", void 0);
__decorate61([
  property()
], WuiProfileButtonV2.prototype, "icon", void 0);
__decorate61([
  property()
], WuiProfileButtonV2.prototype, "onProfileClick", void 0);
__decorate61([
  property()
], WuiProfileButtonV2.prototype, "onCopyClick", void 0);
WuiProfileButtonV2 = __decorate61([
  customElement("wui-profile-button-v2")
], WuiProfileButtonV2);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-chip-button/styles.js
var styles_default62 = css`
  button {
    border: none;
    border-radius: var(--wui-border-radius-3xl);
  }

  button[data-variant='main'] {
    background-color: var(--wui-color-accent-100);
    color: var(--wui-color-inverse-100);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='accent'] {
    background-color: var(--wui-color-accent-glass-010);
    color: var(--wui-color-accent-100);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  button[data-variant='gray'] {
    background-color: transparent;
    color: var(--wui-color-fg-200);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='shade'] {
    background-color: transparent;
    color: var(--wui-color-accent-100);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-size='sm'] {
    height: 32px;
    padding: 0 var(--wui-spacing-s);
  }

  button[data-size='md'] {
    height: 40px;
    padding: 0 var(--wui-spacing-l);
  }

  button[data-size='sm'] > wui-image {
    width: 16px;
    height: 16px;
  }

  button[data-size='md'] > wui-image {
    width: 24px;
    height: 24px;
  }

  button[data-size='sm'] > wui-icon {
    width: 12px;
    height: 12px;
  }

  button[data-size='md'] > wui-icon {
    width: 14px;
    height: 14px;
  }

  wui-image {
    border-radius: var(--wui-border-radius-3xl);
    overflow: hidden;
  }

  button.disabled > wui-icon,
  button.disabled > wui-image {
    filter: grayscale(1);
  }

  button[data-variant='main'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-accent-090);
  }

  button[data-variant='shade'] > wui-image,
  button[data-variant='gray'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  @media (hover: hover) and (pointer: fine) {
    button[data-variant='main']:focus-visible {
      background-color: var(--wui-color-accent-090);
    }

    button[data-variant='main']:hover:enabled {
      background-color: var(--wui-color-accent-090);
    }

    button[data-variant='main']:active:enabled {
      background-color: var(--wui-color-accent-080);
    }

    button[data-variant='accent']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }

    button[data-variant='accent']:active:enabled {
      background-color: var(--wui-color-accent-glass-020);
    }

    button[data-variant='shade']:focus-visible,
    button[data-variant='gray']:focus-visible,
    button[data-variant='shade']:hover,
    button[data-variant='gray']:hover {
      background-color: var(--wui-color-gray-glass-002);
    }

    button[data-variant='gray']:active,
    button[data-variant='shade']:active {
      background-color: var(--wui-color-gray-glass-005);
    }
  }

  button.disabled {
    color: var(--wui-color-gray-glass-020);
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    pointer-events: none;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-chip-button/index.js
var __decorate62 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiChipButton = class WuiChipButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "accent";
    this.imageSrc = "";
    this.disabled = false;
    this.icon = "externalLink";
    this.size = "md";
    this.text = "";
  }
  render() {
    const textVariant = this.size === "sm" ? "small-600" : "paragraph-600";
    return html`
      <button
        class=${this.disabled ? "disabled" : ""}
        data-variant=${this.variant}
        data-size=${this.size}
      >
        ${this.imageSrc ? html`<wui-image src=${this.imageSrc}></wui-image>` : null}
        <wui-text variant=${textVariant} color="inherit"> ${this.text} </wui-text>
        <wui-icon name=${this.icon} color="inherit" size="inherit"></wui-icon>
      </button>
    `;
  }
};
WuiChipButton.styles = [resetStyles, elementStyles, styles_default62];
__decorate62([
  property()
], WuiChipButton.prototype, "variant", void 0);
__decorate62([
  property()
], WuiChipButton.prototype, "imageSrc", void 0);
__decorate62([
  property({ type: Boolean })
], WuiChipButton.prototype, "disabled", void 0);
__decorate62([
  property()
], WuiChipButton.prototype, "icon", void 0);
__decorate62([
  property()
], WuiChipButton.prototype, "size", void 0);
__decorate62([
  property()
], WuiChipButton.prototype, "text", void 0);
WuiChipButton = __decorate62([
  customElement("wui-chip-button")
], WuiChipButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-compatible-network/styles.js
var styles_default63 = css`
  button {
    display: flex;
    gap: var(--wui-spacing-xl);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xxs);
    padding: var(--wui-spacing-m) var(--wui-spacing-s);
  }

  wui-text {
    width: 100%;
  }

  wui-flex {
    width: auto;
  }

  .network-icon {
    width: var(--wui-spacing-2l);
    height: var(--wui-spacing-2l);
    border-radius: calc(var(--wui-spacing-2l) / 2);
    overflow: hidden;
    box-shadow:
      0 0 0 3px var(--wui-color-gray-glass-002),
      0 0 0 3px var(--wui-color-modal-bg);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-compatible-network/index.js
var __decorate63 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiCompatibleNetwork = class WuiCompatibleNetwork2 extends LitElement {
  constructor() {
    super(...arguments);
    this.networkImages = [""];
    this.text = "";
  }
  render() {
    return html`
      <button>
        <wui-text variant="small-400" color="fg-200">${this.text}</wui-text>
        <wui-flex gap="3xs" alignItems="center">
          ${this.networksTemplate()}
          <wui-icon name="chevronRight" size="sm" color="fg-200"></wui-icon>
        </wui-flex>
      </button>
    `;
  }
  networksTemplate() {
    const slicedNetworks = this.networkImages.slice(0, 5);
    return html` <wui-flex class="networks">
      ${slicedNetworks == null ? void 0 : slicedNetworks.map((network) => html` <wui-flex class="network-icon"> <wui-image src=${network}></wui-image> </wui-flex>`)}
    </wui-flex>`;
  }
};
WuiCompatibleNetwork.styles = [resetStyles, elementStyles, styles_default63];
__decorate63([
  property({ type: Array })
], WuiCompatibleNetwork.prototype, "networkImages", void 0);
__decorate63([
  property()
], WuiCompatibleNetwork.prototype, "text", void 0);
WuiCompatibleNetwork = __decorate63([
  customElement("wui-compatible-network")
], WuiCompatibleNetwork);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-banner/styles.js
var styles_default64 = css`
  wui-flex {
    width: 100%;
    background-color: var(--wui-color-gray-glass-005);
    border-radius: var(--wui-border-radius-s);
    padding: var(--wui-spacing-1xs) var(--wui-spacing-s) var(--wui-spacing-1xs)
      var(--wui-spacing-1xs);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-banner/index.js
var __decorate64 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiBanner = class WuiBanner2 extends LitElement {
  constructor() {
    super(...arguments);
    this.icon = "externalLink";
    this.text = "";
  }
  render() {
    return html`
      <wui-flex gap="1xs" alignItems="center">
        <wui-icon-box
          size="sm"
          iconcolor="fg-200"
          backgroundcolor="fg-200"
          icon=${this.icon}
          background="transparent"
        ></wui-icon-box>
        <wui-text variant="small-400" color="fg-200">${this.text}</wui-text>
      </wui-flex>
    `;
  }
};
WuiBanner.styles = [resetStyles, elementStyles, styles_default64];
__decorate64([
  property()
], WuiBanner.prototype, "icon", void 0);
__decorate64([
  property()
], WuiBanner.prototype, "text", void 0);
WuiBanner = __decorate64([
  customElement("wui-banner")
], WuiBanner);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-banner-img/styles.js
var styles_default65 = css`
  wui-flex {
    width: 100%;
    background-color: var(--wui-color-gray-glass-005);
    border-radius: var(--wui-border-radius-m);
    padding: var(--wui-spacing-1xs) var(--wui-spacing-s) var(--wui-spacing-1xs)
      var(--wui-spacing-1xs);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-banner-img/index.js
var __decorate65 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiBannerImg = class WuiBannerImg2 extends LitElement {
  constructor() {
    super(...arguments);
    this.imageSrc = "";
    this.text = "";
    this.size = "";
  }
  render() {
    return html`
      <wui-flex gap="1xs" alignItems="center">
        <wui-avatar size=${this.size} imageSrc=${this.imageSrc}></wui-avatar>
        <wui-text variant="small-400" color="fg-200">${this.text}</wui-text>
      </wui-flex>
    `;
  }
};
WuiBannerImg.styles = [resetStyles, elementStyles, styles_default65];
__decorate65([
  property()
], WuiBannerImg.prototype, "imageSrc", void 0);
__decorate65([
  property()
], WuiBannerImg.prototype, "text", void 0);
__decorate65([
  property()
], WuiBannerImg.prototype, "size", void 0);
WuiBannerImg = __decorate65([
  customElement("wui-banner-img")
], WuiBannerImg);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-token/styles.js
var styles_default66 = css`
  button {
    padding: 6.5px var(--wui-spacing-l) 6.5px var(--wui-spacing-xs);
    display: flex;
    justify-content: space-between;
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
    background-color: var(--wui-color-gray-glass-002);
  }

  button[data-clickable='false'] {
    pointer-events: none;
    background-color: transparent;
  }

  wui-image,
  wui-icon {
    width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
  }

  wui-image {
    border-radius: var(--wui-border-radius-3xl);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-token/index.js
var __decorate66 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListToken = class WuiListToken2 extends LitElement {
  constructor() {
    super(...arguments);
    this.tokenName = "";
    this.tokenImageUrl = "";
    this.tokenValue = 0;
    this.tokenAmount = "0.0";
    this.tokenCurrency = "";
    this.clickable = false;
  }
  render() {
    return html`
      <button data-clickable=${String(this.clickable)}>
        <wui-flex gap="s" alignItems="center">
          ${this.visualTemplate()}
          <wui-flex flexDirection="column" justifyContent="spaceBetween">
            <wui-text variant="paragraph-500" color="fg-100">${this.tokenName}</wui-text>
            <wui-text variant="small-400" color="fg-200">
              ${UiHelperUtil.formatNumberToLocalString(this.tokenAmount, 4)} ${this.tokenCurrency}
            </wui-text>
          </wui-flex>
        </wui-flex>
        <wui-text variant="paragraph-500" color="fg-100">$${this.tokenValue.toFixed(2)}</wui-text>
      </button>
    `;
  }
  visualTemplate() {
    if (this.tokenName && this.tokenImageUrl) {
      return html`<wui-image alt=${this.tokenName} src=${this.tokenImageUrl}></wui-image>`;
    }
    return html`<wui-icon name="coinPlaceholder" color="fg-100"></wui-icon>`;
  }
};
WuiListToken.styles = [resetStyles, elementStyles, styles_default66];
__decorate66([
  property()
], WuiListToken.prototype, "tokenName", void 0);
__decorate66([
  property()
], WuiListToken.prototype, "tokenImageUrl", void 0);
__decorate66([
  property({ type: Number })
], WuiListToken.prototype, "tokenValue", void 0);
__decorate66([
  property()
], WuiListToken.prototype, "tokenAmount", void 0);
__decorate66([
  property()
], WuiListToken.prototype, "tokenCurrency", void 0);
__decorate66([
  property({ type: Boolean })
], WuiListToken.prototype, "clickable", void 0);
WuiListToken = __decorate66([
  customElement("wui-list-token")
], WuiListToken);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-description/styles.js
var styles_default67 = css`
  button {
    width: 100%;
    display: flex;
    gap: var(--wui-spacing-s);
    align-items: center;
    justify-content: flex-start;
    padding: var(--wui-spacing-s) var(--wui-spacing-m) var(--wui-spacing-s) var(--wui-spacing-s);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
  }

  wui-icon-box {
    width: var(--wui-spacing-2xl);
    height: var(--wui-spacing-2xl);
  }

  wui-flex {
    width: auto;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-description/index.js
var __decorate67 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListDescription = class WuiListDescription2 extends LitElement {
  constructor() {
    super(...arguments);
    this.icon = "card";
    this.text = "";
    this.description = "";
    this.tag = void 0;
    this.iconBackgroundColor = "accent-100";
    this.iconColor = "accent-100";
    this.disabled = false;
  }
  render() {
    return html`
      <button ?disabled=${this.disabled}>
        <wui-icon-box
          iconColor=${this.iconColor}
          backgroundColor=${this.iconBackgroundColor}
          size="inherit"
          icon=${this.icon}
          iconSize="md"
        ></wui-icon-box>
        <wui-flex flexDirection="column" justifyContent="spaceBetween">
          ${this.titleTemplate()}
          <wui-text variant="small-400" color="fg-200"> ${this.description}</wui-text></wui-flex
        >
      </button>
    `;
  }
  titleTemplate() {
    if (this.tag) {
      return html` <wui-flex alignItems="center" gap="xxs"
        ><wui-text variant="paragraph-500" color="fg-100">${this.text}</wui-text
        ><wui-tag tagType="main" size="md">${this.tag}</wui-tag>
      </wui-flex>`;
    }
    return html`<wui-text variant="paragraph-500" color="fg-100">${this.text}</wui-text>`;
  }
};
WuiListDescription.styles = [resetStyles, elementStyles, styles_default67];
__decorate67([
  property()
], WuiListDescription.prototype, "icon", void 0);
__decorate67([
  property()
], WuiListDescription.prototype, "text", void 0);
__decorate67([
  property()
], WuiListDescription.prototype, "description", void 0);
__decorate67([
  property()
], WuiListDescription.prototype, "tag", void 0);
__decorate67([
  property()
], WuiListDescription.prototype, "iconBackgroundColor", void 0);
__decorate67([
  property()
], WuiListDescription.prototype, "iconColor", void 0);
__decorate67([
  property({ type: Boolean })
], WuiListDescription.prototype, "disabled", void 0);
WuiListDescription = __decorate67([
  customElement("wui-list-description")
], WuiListDescription);

// node_modules/@reown/appkit-ui/dist/esm/src/utils/ConstantsUtil.js
var specialCharactersRegex = /[.*+?^${}()|[\]\\]/gu;
var numbersRegex = /[0-9,.]/u;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-input-amount/styles.js
var styles_default68 = css`
  :host {
    position: relative;
    display: inline-block;
  }

  input {
    background: transparent;
    width: 100%;
    height: auto;
    font-family: var(--wui-font-family);
    color: var(--wui-color-fg-100);

    font-feature-settings: 'case' on;
    font-size: 32px;
    font-weight: var(--wui-font-weight-light);
    caret-color: var(--wui-color-accent-100);
    line-height: 130%;
    letter-spacing: -1.28px;
    box-sizing: border-box;
    -webkit-appearance: none;
    -moz-appearance: textfield;
    padding: 0px;
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input::placeholder {
    color: var(--wui-color-fg-275);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-input-amount/index.js
var __decorate68 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiInputAmount = class WuiInputAmount2 extends LitElement {
  constructor() {
    super(...arguments);
    this.inputElementRef = createRef();
    this.disabled = false;
    this.value = "";
    this.placeholder = "0";
  }
  render() {
    var _a7;
    if (((_a7 = this.inputElementRef) == null ? void 0 : _a7.value) && this.value) {
      this.inputElementRef.value.value = this.value;
    }
    return html`<input
      ${ref(this.inputElementRef)}
      type="text"
      inputmode="decimal"
      pattern="[0-9,.]*"
      placeholder=${this.placeholder}
      ?disabled=${this.disabled}
      autofocus
      value=${this.value ?? ""}
      @input=${this.dispatchInputChangeEvent.bind(this)}
    /> `;
  }
  dispatchInputChangeEvent(e2) {
    var _a7, _b3;
    const inputChar = e2.data;
    if (inputChar && ((_a7 = this.inputElementRef) == null ? void 0 : _a7.value)) {
      if (inputChar === ",") {
        const inputValue = this.inputElementRef.value.value.replace(",", ".");
        this.inputElementRef.value.value = inputValue;
        this.value = `${this.value}${inputValue}`;
      } else if (!numbersRegex.test(inputChar)) {
        this.inputElementRef.value.value = this.value.replace(new RegExp(inputChar.replace(specialCharactersRegex, "\\$&"), "gu"), "");
      }
    }
    this.dispatchEvent(new CustomEvent("inputChange", {
      detail: (_b3 = this.inputElementRef.value) == null ? void 0 : _b3.value,
      bubbles: true,
      composed: true
    }));
  }
};
WuiInputAmount.styles = [resetStyles, elementStyles, styles_default68];
__decorate68([
  property({ type: Boolean })
], WuiInputAmount.prototype, "disabled", void 0);
__decorate68([
  property({ type: String })
], WuiInputAmount.prototype, "value", void 0);
__decorate68([
  property({ type: String })
], WuiInputAmount.prototype, "placeholder", void 0);
WuiInputAmount = __decorate68([
  customElement("wui-input-amount")
], WuiInputAmount);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-preview-item/styles.js
var styles_default69 = css`
  :host {
    display: flex;
    gap: var(--wui-spacing-xs);
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-002);
    background: var(--wui-color-gray-glass-002);
    padding: var(--wui-spacing-2xs) var(--wui-spacing-xs) var(--wui-spacing-2xs)
      var(--wui-spacing-s);
    align-items: center;
  }

  wui-avatar,
  wui-icon,
  wui-image {
    width: 32px;
    height: 32px;
    border: 1px solid var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-3xl);
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-002);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-preview-item/index.js
var __decorate69 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiPreviewItem = class WuiPreviewItem2 extends LitElement {
  constructor() {
    super(...arguments);
    this.text = "";
    this.address = "";
    this.isAddress = false;
  }
  render() {
    return html`<wui-text variant="large-500" color="fg-100">${this.text}</wui-text>
      ${this.imageTemplate()}`;
  }
  imageTemplate() {
    if (this.isAddress) {
      return html`<wui-avatar address=${this.address} .imageSrc=${this.imageSrc}></wui-avatar>`;
    } else if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc}></wui-image>`;
    }
    return html`<wui-icon size="inherit" color="fg-200" name="networkPlaceholder"></wui-icon>`;
  }
};
WuiPreviewItem.styles = [resetStyles, elementStyles, styles_default69];
__decorate69([
  property()
], WuiPreviewItem.prototype, "text", void 0);
__decorate69([
  property()
], WuiPreviewItem.prototype, "address", void 0);
__decorate69([
  property()
], WuiPreviewItem.prototype, "imageSrc", void 0);
__decorate69([
  property({ type: Boolean })
], WuiPreviewItem.prototype, "isAddress", void 0);
WuiPreviewItem = __decorate69([
  customElement("wui-preview-item")
], WuiPreviewItem);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-account/styles.js
var styles_default70 = css`
  button {
    padding: 6.5px var(--wui-spacing-l) 6.5px var(--wui-spacing-xs);
    display: flex;
    justify-content: space-between;
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
    background-color: var(--wui-color-gray-glass-002);
  }

  button[data-clickable='false'] {
    pointer-events: none;
    background-color: transparent;
  }

  wui-image {
    width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
    border-radius: var(--wui-border-radius-3xl);
  }

  wui-avatar {
    width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
    box-shadow: 0 0 0 0;
  }
  .address {
    color: var(--wui-color-fg-base-100);
  }
  .address-description {
    text-transform: capitalize;
    color: var(--wui-color-fg-base-200);
  }

  wui-icon-box {
    position: relative;
    right: 15px;
    top: 15px;
    border: 2px solid var(--wui-color-bg-150);
    background-color: var(--wui-color-bg-125);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-account/index.js
var __decorate70 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListAccount = class WuiListAccount2 extends LitElement {
  constructor() {
    super(...arguments);
    this.accountAddress = "";
    this.accountType = "";
    this.labels = AccountController.state.addressLabels;
    this.caipNetwork = ChainController.state.activeCaipNetwork;
    this.socialProvider = StorageUtil.getConnectedSocialProvider();
    this.balance = 0;
    this.fetchingBalance = true;
    this.shouldShowIcon = false;
    this.selected = false;
  }
  connectedCallback() {
    var _a7;
    super.connectedCallback();
    BlockchainApiController.getBalance(this.accountAddress, (_a7 = this.caipNetwork) == null ? void 0 : _a7.caipNetworkId).then((response) => {
      let total = this.balance;
      if (response.balances.length > 0) {
        total = response.balances.reduce((acc, balance) => acc + ((balance == null ? void 0 : balance.value) || 0), 0);
      }
      this.balance = total;
      this.fetchingBalance = false;
      this.requestUpdate();
    }).catch(() => {
      this.fetchingBalance = false;
      this.requestUpdate();
    });
  }
  render() {
    const label = this.getLabel();
    const namespace = ChainController.state.activeChain;
    const connectorId = StorageUtil.getConnectedConnectorId(namespace);
    this.shouldShowIcon = connectorId === ConstantsUtil.CONNECTOR_ID.AUTH;
    return html`
      <wui-flex
        flexDirection="row"
        justifyContent="space-between"
        .padding=${["0", "0", "s", "1xs"]}
      >
        <wui-flex gap="md" alignItems="center">
          <wui-avatar address=${this.accountAddress}></wui-avatar>
          ${this.shouldShowIcon ? html`<wui-icon-box
                size="sm"
                iconcolor="fg-200"
                backgroundcolor="fg-300"
                icon=${this.accountType === W3mFrameRpcConstants.ACCOUNT_TYPES.EOA ? this.socialProvider ?? "mail" : "lightbulb"}
                background="fg-300"
              ></wui-icon-box>` : html`<wui-flex .padding="${["0", "0", "0", "s"]}"></wui-flex>`}
          <wui-flex flexDirection="column">
            <wui-text class="address" variant="paragraph-500" color="fg-100"
              >${UiHelperUtil.getTruncateString({
      string: this.accountAddress,
      charsStart: 4,
      charsEnd: 6,
      truncate: "middle"
    })}</wui-text
            >
            <wui-text class="address-description" variant="small-400">${label}</wui-text></wui-flex
          >
        </wui-flex>
        <wui-flex gap="s" alignItems="center">
          <slot name="action"></slot>
          ${this.fetchingBalance ? html`<wui-loading-spinner size="sm" color="accent-100"></wui-loading-spinner>` : html` <wui-text variant="small-400">$${this.balance.toFixed(2)}</wui-text>`}
        </wui-flex>
      </wui-flex>
    `;
  }
  getLabel() {
    var _a7;
    let label = (_a7 = this.labels) == null ? void 0 : _a7.get(this.accountAddress);
    const namespace = ChainController.state.activeChain;
    const connectorId = StorageUtil.getConnectedConnectorId(namespace);
    if (!label && connectorId === ConstantsUtil.CONNECTOR_ID.AUTH) {
      label = `${this.accountType === "eoa" ? this.socialProvider ?? "Email" : "Smart"} Account`;
    } else if (!label) {
      label = "EOA";
    }
    return label;
  }
};
WuiListAccount.styles = [resetStyles, elementStyles, styles_default70];
__decorate70([
  property()
], WuiListAccount.prototype, "accountAddress", void 0);
__decorate70([
  property()
], WuiListAccount.prototype, "accountType", void 0);
__decorate70([
  property({ type: Boolean })
], WuiListAccount.prototype, "selected", void 0);
__decorate70([
  property({ type: Function })
], WuiListAccount.prototype, "onSelect", void 0);
WuiListAccount = __decorate70([
  customElement("wui-list-account")
], WuiListAccount);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-icon-button/styles.js
var styles_default71 = css`
  :host {
    position: relative;
  }

  button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 48px;
    width: 100%;
    background-color: var(--wui-color-accent-glass-010);
    border-radius: var(--wui-border-radius-xs);
    border: 1px solid var(--wui-color-accent-glass-010);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
  }

  wui-tooltip {
    padding: 7px var(--wui-spacing-s) 8px var(--wui-spacing-s);
    position: absolute;
    top: -8px;
    left: 50%;
    transform: translate(-50%, -100%);
    opacity: 0;
    display: none;
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }

    button:active:enabled {
      background-color: var(--wui-color-accent-glass-020);
    }
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-icon-button/index.js
var __decorate71 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiIconButton = class WuiIconButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.text = "";
    this.icon = "card";
  }
  render() {
    return html`<button>
      <wui-icon color="accent-100" name=${this.icon} size="lg"></wui-icon>
    </button>`;
  }
};
WuiIconButton.styles = [resetStyles, elementStyles, styles_default71];
__decorate71([
  property()
], WuiIconButton.prototype, "text", void 0);
__decorate71([
  property()
], WuiIconButton.prototype, "icon", void 0);
WuiIconButton = __decorate71([
  customElement("wui-icon-button")
], WuiIconButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-button/styles.js
var styles_default72 = css`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 16.5px var(--wui-spacing-l) 16.5px var(--wui-spacing-xs);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-100);
    justify-content: center;
    align-items: center;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-015);
    color: var(--wui-color-gray-glass-015);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-button/index.js
var __decorate72 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListButton = class WuiListButton2 extends LitElement {
  constructor() {
    super(...arguments);
    this.text = "";
    this.disabled = false;
    this.tabIdx = void 0;
  }
  render() {
    return html`
      <button ?disabled=${this.disabled} tabindex=${ifDefined(this.tabIdx)}>
        <wui-text align="center" variant="paragraph-500" color="inherit">${this.text}</wui-text>
      </button>
    `;
  }
};
WuiListButton.styles = [resetStyles, elementStyles, styles_default72];
__decorate72([
  property()
], WuiListButton.prototype, "text", void 0);
__decorate72([
  property({ type: Boolean })
], WuiListButton.prototype, "disabled", void 0);
__decorate72([
  property()
], WuiListButton.prototype, "tabIdx", void 0);
WuiListButton = __decorate72([
  customElement("wui-list-button")
], WuiListButton);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-social/styles.js
var styles_default73 = css`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 7px var(--wui-spacing-l) 7px var(--wui-spacing-xs);
    width: 100%;
    justify-content: flex-start;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-100);
  }

  wui-text {
    text-transform: capitalize;
  }

  wui-text[data-align='left'] {
    display: flex;
    flex: 1;
  }

  wui-text[data-align='center'] {
    display: flex;
    flex: 1;
    justify-content: center;
  }

  .invisible {
    opacity: 0;
    pointer-events: none;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-015);
    color: var(--wui-color-gray-glass-015);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-list-social/index.js
var __decorate73 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiListSocial = class WuiListSocial2 extends LitElement {
  constructor() {
    super(...arguments);
    this.logo = "google";
    this.name = "Continue with google";
    this.align = "left";
    this.disabled = false;
  }
  render() {
    return html`
      <button ?disabled=${this.disabled} tabindex=${ifDefined(this.tabIdx)}>
        <wui-logo logo=${this.logo}></wui-logo>
        <wui-text
          data-align=${this.align}
          variant="paragraph-500"
          color="inherit"
          align=${this.align}
          >${this.name}</wui-text
        >
        ${this.templatePlacement()}
      </button>
    `;
  }
  templatePlacement() {
    if (this.align === "center") {
      return html` <wui-logo class="invisible" logo=${this.logo}></wui-logo>`;
    }
    return null;
  }
};
WuiListSocial.styles = [resetStyles, elementStyles, styles_default73];
__decorate73([
  property()
], WuiListSocial.prototype, "logo", void 0);
__decorate73([
  property()
], WuiListSocial.prototype, "name", void 0);
__decorate73([
  property()
], WuiListSocial.prototype, "align", void 0);
__decorate73([
  property()
], WuiListSocial.prototype, "tabIdx", void 0);
__decorate73([
  property({ type: Boolean })
], WuiListSocial.prototype, "disabled", void 0);
WuiListSocial = __decorate73([
  customElement("wui-list-social")
], WuiListSocial);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-select/styles.js
var styles_default74 = css`
  button {
    display: block;
    display: flex;
    align-items: center;
    padding: var(--wui-spacing-xxs);
    gap: var(--wui-spacing-xxs);
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-md);
    border-radius: var(--wui-border-radius-xxs);
  }

  wui-image {
    border-radius: 100%;
    width: var(--wui-spacing-xl);
    height: var(--wui-spacing-xl);
  }

  wui-icon-box {
    width: var(--wui-spacing-xl);
    height: var(--wui-spacing-xl);
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-002);
  }

  button:active {
    background-color: var(--wui-color-gray-glass-005);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-select/index.js
var __decorate74 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiSelect = class WuiSelect2 extends LitElement {
  constructor() {
    super(...arguments);
    this.imageSrc = "";
  }
  render() {
    return html`<button>
      ${this.imageTemplate()}
      <wui-icon size="xs" color="fg-200" name="chevronBottom"></wui-icon>
    </button>`;
  }
  imageTemplate() {
    if (this.imageSrc) {
      return html`<wui-image src=${this.imageSrc} alt="select visual"></wui-image>`;
    }
    return html`<wui-icon-box
      size="xxs"
      iconColor="fg-200"
      backgroundColor="fg-100"
      background="opaque"
      icon="networkPlaceholder"
    ></wui-icon-box>`;
  }
};
WuiSelect.styles = [resetStyles, elementStyles, colorStyles, styles_default74];
__decorate74([
  property()
], WuiSelect.prototype, "imageSrc", void 0);
WuiSelect = __decorate74([
  customElement("wui-select")
], WuiSelect);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-checkbox/styles.js
var styles_default75 = css`
  label {
    display: flex;
    align-items: center;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    column-gap: var(--wui-spacing-1xs);
  }

  label > input[type='checkbox'] {
    height: 0;
    width: 0;
    opacity: 0;
    pointer-events: none;
    position: absolute;
  }

  label > span {
    width: var(--wui-spacing-xl);
    height: var(--wui-spacing-xl);
    min-width: var(--wui-spacing-xl);
    min-height: var(--wui-spacing-xl);
    border-radius: var(--wui-border-radius-3xs);
    border-width: 1px;
    border-style: solid;
    border-color: var(--wui-color-gray-glass-010);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: background-color;
  }

  label > span:hover,
  label > input[type='checkbox']:focus-visible + span {
    background-color: var(--wui-color-gray-glass-010);
  }

  label input[type='checkbox']:checked + span {
    background-color: var(--wui-color-blue-base-90);
  }

  label > span > wui-icon {
    opacity: 0;
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: opacity;
  }

  label > input[type='checkbox']:checked + span wui-icon {
    opacity: 1;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-checkbox/index.js
var __decorate75 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiCheckBox = class WuiCheckBox2 extends LitElement {
  constructor() {
    super(...arguments);
    this.inputElementRef = createRef();
    this.checked = void 0;
  }
  render() {
    return html`
      <label>
        <input
          ${ref(this.inputElementRef)}
          ?checked=${ifDefined(this.checked)}
          type="checkbox"
          @change=${this.dispatchChangeEvent}
        />
        <span>
          <wui-icon name="checkmarkBold" color="inverse-100" size="xxs"></wui-icon>
        </span>
        <slot></slot>
      </label>
    `;
  }
  dispatchChangeEvent() {
    var _a7;
    this.dispatchEvent(new CustomEvent("checkboxChange", {
      detail: (_a7 = this.inputElementRef.value) == null ? void 0 : _a7.checked,
      bubbles: true,
      composed: true
    }));
  }
};
WuiCheckBox.styles = [resetStyles, styles_default75];
__decorate75([
  property({ type: Boolean })
], WuiCheckBox.prototype, "checked", void 0);
WuiCheckBox = __decorate75([
  customElement("wui-checkbox")
], WuiCheckBox);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-switch/styles.js
var styles_default76 = css`
  :host {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  label {
    position: relative;
    display: inline-block;
    width: 32px;
    height: 22px;
  }

  input {
    width: 0;
    height: 0;
    opacity: 0;
  }

  span {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--wui-color-blue-100);
    border-width: 1px;
    border-style: solid;
    border-color: var(--wui-color-gray-glass-002);
    border-radius: 999px;
    transition:
      background-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      border-color var(--wui-ease-inout-power-1) var(--wui-duration-md);
    will-change: background-color, border-color;
  }

  span:before {
    position: absolute;
    content: '';
    height: 16px;
    width: 16px;
    left: 3px;
    top: 2px;
    background-color: var(--wui-color-inverse-100);
    transition: transform var(--wui-ease-inout-power-1) var(--wui-duration-lg);
    will-change: transform;
    border-radius: 50%;
  }

  input:checked + span {
    border-color: var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-blue-100);
  }

  input:not(:checked) + span {
    background-color: var(--wui-color-gray-glass-010);
  }

  input:checked + span:before {
    transform: translateX(calc(100% - 7px));
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-switch/index.js
var __decorate76 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiSwitch = class WuiSwitch2 extends LitElement {
  constructor() {
    super(...arguments);
    this.inputElementRef = createRef();
    this.checked = void 0;
  }
  render() {
    return html`
      <label>
        <input
          ${ref(this.inputElementRef)}
          type="checkbox"
          ?checked=${ifDefined(this.checked)}
          @change=${this.dispatchChangeEvent.bind(this)}
        />
        <span></span>
      </label>
    `;
  }
  dispatchChangeEvent() {
    var _a7;
    this.dispatchEvent(new CustomEvent("switchChange", {
      detail: (_a7 = this.inputElementRef.value) == null ? void 0 : _a7.checked,
      bubbles: true,
      composed: true
    }));
  }
};
WuiSwitch.styles = [resetStyles, elementStyles, colorStyles, styles_default76];
__decorate76([
  property({ type: Boolean })
], WuiSwitch.prototype, "checked", void 0);
WuiSwitch = __decorate76([
  customElement("wui-switch")
], WuiSwitch);

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-certified-switch/styles.js
var styles_default77 = css`
  :host {
    height: 100%;
  }

  button {
    display: flex;
    align-items: center;
    justify-content: center;
    column-gap: var(--wui-spacing-1xs);
    padding: var(--wui-spacing-xs) var(--wui-spacing-s);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
    cursor: pointer;
  }

  wui-switch {
    pointer-events: none;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-certified-switch/index.js
var __decorate77 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiCertifiedSwitch = class WuiCertifiedSwitch2 extends LitElement {
  constructor() {
    super(...arguments);
    this.checked = void 0;
  }
  render() {
    return html`
      <button>
        <wui-icon size="xl" name="walletConnectBrown"></wui-icon>
        <wui-switch ?checked=${ifDefined(this.checked)}></wui-switch>
      </button>
    `;
  }
};
WuiCertifiedSwitch.styles = [resetStyles, elementStyles, styles_default77];
__decorate77([
  property({ type: Boolean })
], WuiCertifiedSwitch.prototype, "checked", void 0);
WuiCertifiedSwitch = __decorate77([
  customElement("wui-certified-switch")
], WuiCertifiedSwitch);

// node_modules/@reown/appkit-ui/dist/esm/src/layout/wui-grid/styles.js
var styles_default78 = css`
  :host {
    display: grid;
    width: inherit;
    height: inherit;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/layout/wui-grid/index.js
var __decorate78 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiGrid = class WuiGrid2 extends LitElement {
  render() {
    this.style.cssText = `
      grid-template-rows: ${this.gridTemplateRows};
      grid-template-columns: ${this.gridTemplateColumns};
      justify-items: ${this.justifyItems};
      align-items: ${this.alignItems};
      justify-content: ${this.justifyContent};
      align-content: ${this.alignContent};
      column-gap: ${this.columnGap && `var(--wui-spacing-${this.columnGap})`};
      row-gap: ${this.rowGap && `var(--wui-spacing-${this.rowGap})`};
      gap: ${this.gap && `var(--wui-spacing-${this.gap})`};
      padding-top: ${this.padding && UiHelperUtil.getSpacingStyles(this.padding, 0)};
      padding-right: ${this.padding && UiHelperUtil.getSpacingStyles(this.padding, 1)};
      padding-bottom: ${this.padding && UiHelperUtil.getSpacingStyles(this.padding, 2)};
      padding-left: ${this.padding && UiHelperUtil.getSpacingStyles(this.padding, 3)};
      margin-top: ${this.margin && UiHelperUtil.getSpacingStyles(this.margin, 0)};
      margin-right: ${this.margin && UiHelperUtil.getSpacingStyles(this.margin, 1)};
      margin-bottom: ${this.margin && UiHelperUtil.getSpacingStyles(this.margin, 2)};
      margin-left: ${this.margin && UiHelperUtil.getSpacingStyles(this.margin, 3)};
    `;
    return html`<slot></slot>`;
  }
};
WuiGrid.styles = [resetStyles, styles_default78];
__decorate78([
  property()
], WuiGrid.prototype, "gridTemplateRows", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "gridTemplateColumns", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "justifyItems", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "alignItems", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "justifyContent", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "alignContent", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "columnGap", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "rowGap", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "gap", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "padding", void 0);
__decorate78([
  property()
], WuiGrid.prototype, "margin", void 0);
WuiGrid = __decorate78([
  customElement("wui-grid")
], WuiGrid);

// node_modules/@reown/appkit-ui/dist/esm/src/layout/wui-separator/styles.js
var styles_default79 = css`
  :host {
    position: relative;
    display: flex;
    width: 100%;
    height: 1px;
    background-color: var(--wui-color-gray-glass-005);
    justify-content: center;
    align-items: center;
  }

  :host > wui-text {
    position: absolute;
    padding: 0px 10px;
    background-color: var(--wui-color-modal-bg);
    transition: background-color var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: background-color;
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/layout/wui-separator/index.js
var __decorate79 = function(decorators, target, key2, desc2) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key2) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key2, desc2);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d4 = decorators[i4]) r2 = (c3 < 3 ? d4(r2) : c3 > 3 ? d4(target, key2, r2) : d4(target, key2)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key2, r2), r2;
};
var WuiSeparator = class WuiSeparator2 extends LitElement {
  constructor() {
    super(...arguments);
    this.text = "";
  }
  render() {
    return html`${this.template()}`;
  }
  template() {
    if (this.text) {
      return html`<wui-text variant="small-500" color="fg-200">${this.text}</wui-text>`;
    }
    return null;
  }
};
WuiSeparator.styles = [resetStyles, styles_default79];
__decorate79([
  property()
], WuiSeparator.prototype, "text", void 0);
WuiSeparator = __decorate79([
  customElement("wui-separator")
], WuiSeparator);

// node_modules/@reown/appkit-ui/dist/esm/src/utils/MathUtil.js
var MathUtil = {
  interpolate(inputRange, outputRange, value) {
    if (inputRange.length !== 2 || outputRange.length !== 2) {
      throw new Error("inputRange and outputRange must be an array of length 2");
    }
    const originalRangeMin = inputRange[0] || 0;
    const originalRangeMax = inputRange[1] || 0;
    const newRangeMin = outputRange[0] || 0;
    const newRangeMax = outputRange[1] || 0;
    if (value < originalRangeMin) {
      return newRangeMin;
    }
    if (value > originalRangeMax) {
      return newRangeMax;
    }
    return (newRangeMax - newRangeMin) / (originalRangeMax - originalRangeMin) * (value - originalRangeMin) + newRangeMin;
  }
};

// node_modules/@reown/appkit-ui/dist/esm/src/utils/TransactionUtil.js
var FLOAT_FIXED_VALUE = 3;
var plusTypes = ["receive", "deposit", "borrow", "claim"];
var minusTypes = ["withdraw", "repay", "burn"];
var TransactionUtil = {
  getTransactionGroupTitle(year, month) {
    const currentYear = DateUtil.getYear();
    const monthName = DateUtil.getMonthNameByIndex(month);
    const isCurrentYear = year === currentYear;
    const groupTitle = isCurrentYear ? monthName : `${monthName} ${year}`;
    return groupTitle;
  },
  getTransactionImages(transfers) {
    const [transfer, secondTransfer] = transfers;
    const isAllNFT = Boolean(transfer) && (transfers == null ? void 0 : transfers.every((item) => Boolean(item.nft_info)));
    const haveMultipleTransfers = (transfers == null ? void 0 : transfers.length) > 1;
    const haveTwoTransfers = (transfers == null ? void 0 : transfers.length) === 2;
    if (haveTwoTransfers && !isAllNFT) {
      return [this.getTransactionImage(transfer), this.getTransactionImage(secondTransfer)];
    }
    if (haveMultipleTransfers) {
      return transfers.map((item) => this.getTransactionImage(item));
    }
    return [this.getTransactionImage(transfer)];
  },
  getTransactionImage(transfer) {
    return {
      type: TransactionUtil.getTransactionTransferTokenType(transfer),
      url: TransactionUtil.getTransactionImageURL(transfer)
    };
  },
  getTransactionImageURL(transfer) {
    var _a7, _b3, _c2, _d, _e7;
    let imageURL = void 0;
    const isNFT = Boolean(transfer == null ? void 0 : transfer.nft_info);
    const isFungible = Boolean(transfer == null ? void 0 : transfer.fungible_info);
    if (transfer && isNFT) {
      imageURL = (_c2 = (_b3 = (_a7 = transfer == null ? void 0 : transfer.nft_info) == null ? void 0 : _a7.content) == null ? void 0 : _b3.preview) == null ? void 0 : _c2.url;
    } else if (transfer && isFungible) {
      imageURL = (_e7 = (_d = transfer == null ? void 0 : transfer.fungible_info) == null ? void 0 : _d.icon) == null ? void 0 : _e7.url;
    }
    return imageURL;
  },
  getTransactionTransferTokenType(transfer) {
    if (transfer == null ? void 0 : transfer.fungible_info) {
      return "FUNGIBLE";
    } else if (transfer == null ? void 0 : transfer.nft_info) {
      return "NFT";
    }
    return void 0;
  },
  getTransactionDescriptions(transaction) {
    var _a7, _b3, _c2;
    const type = (_a7 = transaction == null ? void 0 : transaction.metadata) == null ? void 0 : _a7.operationType;
    const transfers = transaction == null ? void 0 : transaction.transfers;
    const haveTransfer = ((_b3 = transaction == null ? void 0 : transaction.transfers) == null ? void 0 : _b3.length) > 0;
    const haveMultipleTransfers = ((_c2 = transaction == null ? void 0 : transaction.transfers) == null ? void 0 : _c2.length) > 1;
    const isFungible = haveTransfer && (transfers == null ? void 0 : transfers.every((transfer) => Boolean(transfer == null ? void 0 : transfer.fungible_info)));
    const [firstTransfer, secondTransfer] = transfers;
    let firstDescription = this.getTransferDescription(firstTransfer);
    let secondDescription = this.getTransferDescription(secondTransfer);
    if (!haveTransfer) {
      const isSendOrReceive = type === "send" || type === "receive";
      if (isSendOrReceive && isFungible) {
        firstDescription = UiHelperUtil.getTruncateString({
          string: transaction == null ? void 0 : transaction.metadata.sentFrom,
          charsStart: 4,
          charsEnd: 6,
          truncate: "middle"
        });
        secondDescription = UiHelperUtil.getTruncateString({
          string: transaction == null ? void 0 : transaction.metadata.sentTo,
          charsStart: 4,
          charsEnd: 6,
          truncate: "middle"
        });
        return [firstDescription, secondDescription];
      }
      return [transaction.metadata.status];
    }
    if (haveMultipleTransfers) {
      return transfers.map((item) => this.getTransferDescription(item));
    }
    let prefix = "";
    if (plusTypes.includes(type)) {
      prefix = "+";
    } else if (minusTypes.includes(type)) {
      prefix = "-";
    }
    firstDescription = prefix.concat(firstDescription);
    return [firstDescription];
  },
  getTransferDescription(transfer) {
    var _a7;
    let description = "";
    if (!transfer) {
      return description;
    }
    if (transfer == null ? void 0 : transfer.nft_info) {
      description = ((_a7 = transfer == null ? void 0 : transfer.nft_info) == null ? void 0 : _a7.name) || "-";
    } else if (transfer == null ? void 0 : transfer.fungible_info) {
      description = this.getFungibleTransferDescription(transfer) || "-";
    }
    return description;
  },
  getFungibleTransferDescription(transfer) {
    var _a7;
    if (!transfer) {
      return null;
    }
    const quantity = this.getQuantityFixedValue(transfer == null ? void 0 : transfer.quantity.numeric);
    const description = [quantity, (_a7 = transfer == null ? void 0 : transfer.fungible_info) == null ? void 0 : _a7.symbol].join(" ").trim();
    return description;
  },
  getQuantityFixedValue(value) {
    if (!value) {
      return null;
    }
    const parsedValue = parseFloat(value);
    return parsedValue.toFixed(FLOAT_FIXED_VALUE);
  }
};

export {
  proxy,
  subscribe,
  ref2 as ref,
  subscribeKey,
  DateUtil,
  NetworkUtil,
  NumberUtil,
  InputUtil,
  ConstantsUtil,
  NavigationUtil,
  ParseUtil,
  getW3mThemeVariables,
  isReownName,
  ConstantsUtil2,
  CoreHelperUtil,
  AssetController,
  AssetUtil,
  StorageUtil,
  OptionsController,
  BlockchainApiController,
  W3mFrameRpcConstants,
  W3mFrameHelpers,
  W3mFrameProvider,
  M6 as M,
  AlertController,
  EventsController,
  ThemeController,
  ConnectorController,
  RouterController,
  SnackController,
  SIWXUtil,
  TransactionsController,
  ConnectionController,
  SwapController,
  AccountController,
  PublicStateController,
  ChainController,
  ApiController,
  ModalController,
  OnRampController,
  SendController,
  TooltipController,
  EnsController,
  css,
  html,
  LitElement,
  swapInputMaskBottomSvg,
  swapInputMaskTopSvg,
  initializeTheming,
  setColorTheme,
  setThemeVariables,
  customElement,
  WuiCard,
  property,
  state,
  WuiIcon,
  WuiImage,
  WuiLoadingHexagon,
  WuiLoadingSpinner,
  WuiLoadingThumbnail,
  WuiShimmer,
  classMap,
  WuiText,
  WuiVisual,
  ifDefined,
  UiHelperUtil,
  WuiFlex,
  WuiAvatar,
  WuiIconBox,
  WuiAccountButton,
  WuiWalletImage,
  WuiAllWalletsImage,
  WuiButton,
  WuiCardSelectLoader,
  WuiNetworkImage,
  WuiCardSelect,
  WuiChip,
  WuiConnectButton,
  WuiCtaButton,
  WuiDetailsGroup,
  WuiDetailsGroupItem,
  WuiDropdownMenu,
  createRef,
  ref as ref2,
  WuiInputText,
  WuiEmailInput,
  WuiEnsInput,
  WuiIconLink,
  WuiInputElement,
  WuiInputNumeric,
  WuiLink,
  WuiListItem,
  WuiTransactionVisual,
  WuiTransactionListItem,
  WuiTransactionListItemLoader,
  WuiTag,
  WuiListWallet,
  WuiLogo,
  WuiLogoSelect,
  WuiNetworkButton,
  WuiOtp,
  WuiQrCode,
  WuiSearchBar,
  WuiSnackbar,
  WuiAlertBar,
  WuiTabs,
  WuiTokenButton,
  WuiTooltip,
  WuiTokenListItem,
  WuiVisualThumbnail,
  WuiWalletButton,
  WuiNoticeCard,
  WuiListAccordion,
  WuiListContent,
  WuiListNetwork,
  WuiListWalletTransaction,
  WuiPromo,
  WuiBalance,
  WuiProfileButton,
  WuiProfileButtonV2,
  WuiChipButton,
  WuiCompatibleNetwork,
  WuiBanner,
  WuiBannerImg,
  WuiListToken,
  WuiListDescription,
  WuiInputAmount,
  WuiPreviewItem,
  WuiListAccount,
  WuiIconButton,
  WuiListButton,
  WuiListSocial,
  WuiSelect,
  WuiCheckBox,
  WuiSwitch,
  WuiCertifiedSwitch,
  WuiGrid,
  WuiSeparator,
  MathUtil,
  TransactionUtil
};
/*! Bundled license information:

js-sha3/src/sha3.js:
  (**
   * [js-sha3]{@link https://github.com/emn178/js-sha3}
   *
   * @version 0.8.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2015-2018
   * @license MIT
   *)

@lit/reactive-element/development/css-tag.js:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/reactive-element.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/lit-html.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-element/development/lit-element.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/is-server.js:
  (**
   * @license
   * Copyright 2022 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/custom-element.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/property.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/state.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/event-options.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/base.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query-all.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query-async.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query-assigned-elements.js:
  (**
   * @license
   * Copyright 2021 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query-assigned-nodes.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directive.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/class-map.js:
  (**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/if-defined.js:
  (**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directive-helpers.js:
  (**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/async-directive.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/ref.js:
  (**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@walletconnect/relay-auth/dist/index.es.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@walletconnect/relay-auth/dist/index.es.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@walletconnect/utils/dist/index.es.js:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=chunk-BVI3Z4JS.js.map
